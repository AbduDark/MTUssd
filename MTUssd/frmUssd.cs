using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Printing;
using System.IO.Ports;
using System.Management;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Windows.Forms;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using MTUssd.My;
using MTUssd.SMS.Encoder;

namespace MTUssd;

[DesignerGenerated]
public class frmUssd : Form
{
	private IContainer components;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRefreshMissed")]
	private Button _btnRefreshMissed;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblPort6")]
	private Label _lblPort6;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblPort5")]
	private Label _lblPort5;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblPort4")]
	private Label _lblPort4;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblPort3")]
	private Label _lblPort3;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblPort2")]
	private Label _lblPort2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblPort1")]
	private Label _lblPort1;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnResetMissed")]
	private Button _btnResetMissed;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnGetSims")]
	private Button _btnGetSims;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRefresh")]
	private Button _btnRefresh;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRunUssd")]
	private Button _btnRunUssd;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtRet01")]
	private TextBox _txtRet01;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtRet02")]
	private TextBox _txtRet02;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtRet03")]
	private TextBox _txtRet03;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtRet06")]
	private TextBox _txtRet06;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtRet05")]
	private TextBox _txtRet05;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtRet04")]
	private TextBox _txtRet04;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRunUssd2")]
	private Button _btnRunUssd2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRunUssd3")]
	private Button _btnRunUssd3;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRunUssd4")]
	private Button _btnRunUssd4;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRunUssd5")]
	private Button _btnRunUssd5;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRunUssd6")]
	private Button _btnRunUssd6;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRunUssd7")]
	private Button _btnRunUssd7;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRunUssd8")]
	private Button _btnRunUssd8;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRunUssd9")]
	private Button _btnRunUssd9;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRunUssd10")]
	private Button _btnRunUssd10;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnClear")]
	private Button _btnClear;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRR")]
	private Button _btnRR;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnUssdReset")]
	private Button _btnUssdReset;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnClearSMS")]
	private Button _btnClearSMS;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnReadSms")]
	private Button _btnReadSms;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblNum6")]
	private Label _lblNum6;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblNum5")]
	private Label _lblNum5;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblNum4")]
	private Label _lblNum4;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblNum3")]
	private Label _lblNum3;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblNum2")]
	private Label _lblNum2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblNum1")]
	private Label _lblNum1;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRefreshEmpty")]
	private Button _btnRefreshEmpty;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnNumbers")]
	private Button _btnNumbers;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnGetOut")]
	private Button _btnGetOut;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnSaveOut")]
	private Button _btnSaveOut;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnNumbers2")]
	private Button _btnNumbers2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnNumbers3")]
	private Button _btnNumbers3;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRunUssdGG")]
	private Button _btnRunUssdGG;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnReplyBy")]
	private Button _btnReplyBy;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtReplyBy")]
	private TextBox _txtReplyBy;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtReplyBy2")]
	private TextBox _txtReplyBy2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnReplyBy2")]
	private Button _btnReplyBy2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnFawrySms")]
	private Button _btnFawrySms;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblBal6")]
	private Label _lblBal6;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblBal5")]
	private Label _lblBal5;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblBal4")]
	private Label _lblBal4;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblBal3")]
	private Label _lblBal3;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblBal2")]
	private Label _lblBal2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblBal1")]
	private Label _lblBal1;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtInfo")]
	private TextBox _txtInfo;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtEproc")]
	private TextBox _txtEproc;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtReplyBy3")]
	private TextBox _txtReplyBy3;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnReplyBy3")]
	private Button _btnReplyBy3;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblCard4")]
	private Label _lblCard4;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblCard5")]
	private Label _lblCard5;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblCard6")]
	private Label _lblCard6;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblCard3")]
	private Label _lblCard3;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblCard2")]
	private Label _lblCard2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblCard1")]
	private Label _lblCard1;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnApplyCards")]
	private Button _btnApplyCards;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnAddCards")]
	private Button _btnAddCards;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("cmbEvalue")]
	private ComboBox _cmbEvalue;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnApplyCards2")]
	private Button _btnApplyCards2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnDeSA")]
	private Button _btnDeSA;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnSA")]
	private Button _btnSA;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnReplyBy4")]
	private Button _btnReplyBy4;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnReplyBy5")]
	private Button _btnReplyBy5;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnReplyBy0")]
	private Button _btnReplyBy0;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnAddItems")]
	private Button _btnAddItems;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTransInv")]
	private Button _btnTransInv;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTransVal")]
	private Button _btnTransVal;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRunAll")]
	private Button _btnRunAll;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnGetBal")]
	private Button _btnGetBal;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRun02")]
	private Button _btnRun02;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("bt")]
	private Button _bt;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnNextItems")]
	private Button _btnNextItems;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnWorkID")]
	private Button _btnWorkID;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtMoney")]
	private TextBox _txtMoney;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnExnums")]
	private Button _btnExnums;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnGetBalMS")]
	private Button _btnGetBalMS;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTransTo")]
	private Button _btnTransTo;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTransFromMS")]
	private Button _btnTransFromMS;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnArrangIT")]
	private Button _btnArrangIT;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btn3G")]
	private Button _btn3G;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRunAuto")]
	private Button _btnRunAuto;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnVodaTrans")]
	private Button _btnVodaTrans;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtSpNum6")]
	private TextBox _txtSpNum6;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtSpNum5")]
	private TextBox _txtSpNum5;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtSpNum4")]
	private TextBox _txtSpNum4;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtSpNum3")]
	private TextBox _txtSpNum3;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtSpNum2")]
	private TextBox _txtSpNum2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtSpNum1")]
	private TextBox _txtSpNum1;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnCopyAll")]
	private Button _btnCopyAll;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTransAllMony")]
	private Button _btnTransAllMony;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnGetBalNM")]
	private Button _btnGetBalNM;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTransToA")]
	private Button _btnTransToA;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtMoneyMS2")]
	private TextBox _txtMoneyMS2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("VodaCashPAnel")]
	private TabPage _VodaCashPAnel;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnGetBal2")]
	private Button _btnGetBal2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblMain")]
	private Label _lblMain;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTransAllMn")]
	private Button _btnTransAllMn;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTransFromNm")]
	private Button _btnTransFromNm;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTransToNm")]
	private Button _btnTransToNm;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRun02Nm")]
	private Button _btnRun02Nm;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("TabPage8")]
	private TabPage _TabPage8;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lstNames")]
	private ListBox _lstNames;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lstNum")]
	private ListBox _lstNum;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRefreshMsg")]
	private Button _btnRefreshMsg;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnSendSms")]
	private Button _btnSendSms;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("Button1")]
	private Button _Button1;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtNumQry")]
	private TextBox _txtNumQry;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnQryQry")]
	private Button _btnQryQry;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnGetQry")]
	private Button _btnGetQry;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnSaveAS")]
	private Button _btnSaveAS;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnExport2")]
	private Button _btnExport2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnPast")]
	private Button _btnPast;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblSavePath3")]
	private Label _lblSavePath3;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnSaveAS3")]
	private Button _btnSaveAS3;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnExport3")]
	private Button _btnExport3;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOtransRun")]
	private Button _btnOtransRun;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOrngAccQry")]
	private Button _btnOrngAccQry;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnGetOrngBal")]
	private Button _btnGetOrngBal;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnGetOrngBalAcc")]
	private Button _btnGetOrngBalAcc;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnCancelTrans")]
	private Button _btnCancelTrans;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnVCChargeToSelf")]
	private Button _btnVCChargeToSelf;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnVCtransFrom3Dn")]
	private Button _btnVCtransFrom3Dn;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnVCtransFrom3Up")]
	private Button _btnVCtransFrom3Up;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnVC6")]
	private Button _btnVC6;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnSA3edhmR5")]
	private Button _btnSA3edhmR5;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnSA3edhmR4")]
	private Button _btnSA3edhmR4;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnSA3edhmR3")]
	private Button _btnSA3edhmR3;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnSA3edhmR2")]
	private Button _btnSA3edhmR2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnSA3edhmR1")]
	private Button _btnSA3edhmR1;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnSA3edhmRDell")]
	private Button _btnSA3edhmRDell;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnSA3edhmRAdd")]
	private Button _btnSA3edhmRAdd;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtSA3edhmNum")]
	private TextBox _txtSA3edhmNum;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnSA3edhmReg")]
	private Button _btnSA3edhmReg;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtSa3edhmV")]
	private TextBox _txtSa3edhmV;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnSA3edhmTrans")]
	private Button _btnSA3edhmTrans;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtSA3edhmReq")]
	private TextBox _txtSA3edhmReq;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnViewSa3edList")]
	private Button _btnViewSa3edList;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnSA3edhmCancel")]
	private Button _btnSA3edhmCancel;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnChkOK")]
	private Button _btnChkOK;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnGetVodaBal")]
	private Button _btnGetVodaBal;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnAutoVCnorm")]
	private Button _btnAutoVCnorm;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtTransNum2")]
	private TextBox _txtTransNum2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTransGiftAuto")]
	private Button _btnTransGiftAuto;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtCashNextMaster")]
	private TextBox _txtCashNextMaster;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblGifttotal6")]
	private Label _lblGifttotal6;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblGifttotal5")]
	private Label _lblGifttotal5;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblGifttotal4")]
	private Label _lblGifttotal4;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblGifttotal3")]
	private Label _lblGifttotal3;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblGifttotal2")]
	private Label _lblGifttotal2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblGifttotal1")]
	private Label _lblGifttotal1;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnAutoVCnormEC")]
	private Button _btnAutoVCnormEC;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtCashNextMasterEC")]
	private TextBox _txtCashNextMasterEC;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnGetBal2EC")]
	private Button _btnGetBal2EC;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnAutoVCnormCon")]
	private Button _btnAutoVCnormCon;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtCashNextMasterCon")]
	private TextBox _txtCashNextMasterCon;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnGetBal2Con")]
	private Button _btnGetBal2Con;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRunPower")]
	private Button _btnRunPower;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnAutoSendPower")]
	private Button _btnAutoSendPower;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnNextItemsP")]
	private Button _btnNextItemsP;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRunPowe2")]
	private Button _btnRunPowe2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("Button2")]
	private Button _Button2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTransValP")]
	private Button _btnTransValP;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnChangePass")]
	private Button _btnChangePass;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTransGiftAutoSpVal")]
	private Button _btnTransGiftAutoSpVal;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTransToNextMain")]
	private Button _btnTransToNextMain;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnAutoVC_Seres")]
	private Button _btnAutoVC_Seres;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTransGiftAutoNorm")]
	private Button _btnTransGiftAutoNorm;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRefreshComs")]
	private Button _btnRefreshComs;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnGetSimsGifts")]
	private Button _btnGetSimsGifts;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnGetInfo")]
	private Button _btnGetInfo;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnDlGifts")]
	private Button _btnDlGifts;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnAutoVC_Hez")]
	private Button _btnAutoVC_Hez;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnReplyBy7")]
	private Button _btnReplyBy7;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnReplyBy6")]
	private Button _btnReplyBy6;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnApply365")]
	private Button _btnApply365;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtTransNum2365")]
	private TextBox _txtTransNum2365;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtTransNum2365Gft")]
	private TextBox _txtTransNum2365Gft;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnApply36590")]
	private Button _btnApply36590;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTransGiftAutoSpVal365")]
	private Button _btnTransGiftAutoSpVal365;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnChangePassNew")]
	private Button _btnChangePassNew;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnAuto365")]
	private Button _btnAuto365;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnPrint")]
	private Button _btnPrint;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnPrinter")]
	private Button _btnPrinter;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("chAutoGooo")]
	private CheckBox _chAutoGooo;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("chAutoGooo2")]
	private CheckBox _chAutoGooo2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtTransNum2365_n")]
	private TextBox _txtTransNum2365_n;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTransGiftAutoNorm365")]
	private Button _btnTransGiftAutoNorm365;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnApply365Bakat")]
	private Button _btnApply365Bakat;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnGetVodaBal365")]
	private Button _btnGetVodaBal365;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnApply36590_f")]
	private Button _btnApply36590_f;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnDelTarfehy")]
	private Button _btnDelTarfehy;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnExchangeNN")]
	private Button _btnExchangeNN;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("chkAutoTransferNrm")]
	private CheckBox _chkAutoTransferNrm;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("chkAutoTransferCash")]
	private CheckBox _chkAutoTransferCash;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnChkNewSims")]
	private Button _btnChkNewSims;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnInvertSelection")]
	private Button _btnInvertSelection;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lbl05")]
	private Label _lbl05;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lbl30")]
	private Label _lbl30;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lbl25")]
	private Label _lbl25;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lbl20")]
	private Label _lbl20;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lbl15")]
	private Label _lbl15;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lbl10")]
	private Label _lbl10;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOnOut")]
	private Button _btnOnOut;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblONmc1")]
	private Label _lblONmc1;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtONorder1")]
	private TextBox _txtONorder1;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtONorder6")]
	private TextBox _txtONorder6;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblONmc6")]
	private Label _lblONmc6;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtONorder5")]
	private TextBox _txtONorder5;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblONmc5")]
	private Label _lblONmc5;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtONorder4")]
	private TextBox _txtONorder4;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblONmc4")]
	private Label _lblONmc4;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtONorder3")]
	private TextBox _txtONorder3;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblONmc3")]
	private Label _lblONmc3;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtONorder2")]
	private TextBox _txtONorder2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblONmc2")]
	private Label _lblONmc2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtQryOrder")]
	private TextBox _txtQryOrder;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnPic")]
	private Button _btnPic;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnAutoGet")]
	private Button _btnAutoGet;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnGetBal2ON")]
	private Button _btnGetBal2ON;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("gboxLock")]
	private GroupBox _gboxLock;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnLockNo")]
	private Button _btnLockNo;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnLockOK")]
	private Button _btnLockOK;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnAutoVC_SeresWtop")]
	private Button _btnAutoVC_SeresWtop;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnAutoVC_ChargePoints")]
	private Button _btnAutoVC_ChargePoints;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblNum8")]
	private TextBox _lblNum8;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblNum7")]
	private TextBox _lblNum7;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtOCchargeNum4")]
	private TextBox _txtOCchargeNum4;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtOCchargeNum3")]
	private TextBox _txtOCchargeNum3;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtOCchargeNum2")]
	private TextBox _txtOCchargeNum2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCExchange")]
	private Button _btnOCExchange;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCSeries")]
	private Button _btnOCSeries;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCfromMtoN")]
	private Button _btnOCfromMtoN;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCTopup")]
	private Button _btnOCTopup;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("Label74")]
	private Label _Label74;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtOCchargeNum1")]
	private TextBox _txtOCchargeNum1;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtOCNextMain")]
	private TextBox _txtOCNextMain;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtOCchargeNum6")]
	private TextBox _txtOCchargeNum6;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtOCchargeNum5")]
	private TextBox _txtOCchargeNum5;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("ckOCEditPass")]
	private CheckBox _ckOCEditPass;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCEditPass")]
	private Button _btnOCEditPass;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCGetBal")]
	private Button _btnOCGetBal;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("ckbtnOCTopup")]
	private CheckBox _ckbtnOCTopup;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblOCv20")]
	private Label _lblOCv20;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblOCv15")]
	private Label _lblOCv15;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblOCv10")]
	private Label _lblOCv10;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblOCv5")]
	private Label _lblOCv5;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("ckbtnOCSeries")]
	private CheckBox _ckbtnOCSeries;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnONtopup")]
	private Button _btnONtopup;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnONGift")]
	private Button _btnONGift;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnPrintRest")]
	private Button _btnPrintRest;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTayerEX")]
	private Button _btnTayerEX;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTayerSeries")]
	private Button _btnTayerSeries;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtTayerNextMain")]
	private TextBox _txtTayerNextMain;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTayerGetBal")]
	private Button _btnTayerGetBal;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTayerfromMtoN")]
	private Button _btnTayerfromMtoN;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("ckbtnOCGetBal")]
	private CheckBox _ckbtnOCGetBal;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTayerPullAllBals")]
	private Button _btnTayerPullAllBals;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("ckbtnOCMSeries")]
	private CheckBox _ckbtnOCMSeries;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCMSeries")]
	private Button _btnOCMSeries;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCMGetBal")]
	private Button _btnOCMGetBal;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCGetBal2")]
	private Button _btnOCGetBal2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnAddCodeToTayer")]
	private Button _btnAddCodeToTayer;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTayerKikOut")]
	private Button _btnTayerKikOut;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnMacro")]
	private Button _btnMacro;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("ckbtnMacro")]
	private CheckBox _ckbtnMacro;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lbl100")]
	private Label _lbl100;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lbl35")]
	private Label _lbl35;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lbl50")]
	private Label _lbl50;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lbl45")]
	private Label _lbl45;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lbl40")]
	private Label _lbl40;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTransGiftAutoSpValAll")]
	private Button _btnTransGiftAutoSpValAll;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnUp")]
	private Button _btnUp;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnSADwn")]
	private Button _btnSADwn;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnRun02NmDwl")]
	private Button _btnRun02NmDwl;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCTransferAll")]
	private Button _btnOCTransferAll;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("ckbtnOCTransferAll")]
	private CheckBox _ckbtnOCTransferAll;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("tabOCGifts")]
	private TabPage _tabOCGifts;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCGiftsCheck")]
	private Button _btnOCGiftsCheck;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("ckbtnOCGiftsCheck")]
	private CheckBox _ckbtnOCGiftsCheck;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCApply58")]
	private Button _btnOCApply58;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("ckbtnOCGiftsCheckConf")]
	private CheckBox _ckbtnOCGiftsCheckConf;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCGiftsCheckConf")]
	private Button _btnOCGiftsCheckConf;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnCC")]
	private Button _btnCC;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("ckbtnOCApply58")]
	private CheckBox _ckbtnOCApply58;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblOCv90")]
	private Label _lblOCv90;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblOCv85")]
	private Label _lblOCv85;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblOCv75")]
	private Label _lblOCv75;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblOCv65")]
	private Label _lblOCv65;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblOCv50")]
	private Label _lblOCv50;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblOCv45")]
	private Label _lblOCv45;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblOCv35")]
	private Label _lblOCv35;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblOCv25")]
	private Label _lblOCv25;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblOCvTotal")]
	private Label _lblOCvTotal;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblOCvsub")]
	private Label _lblOCvsub;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblOCvPlus")]
	private Label _lblOCvPlus;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblOCv100")]
	private Label _lblOCv100;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCTransferSame")]
	private Button _btnOCTransferSame;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCSeriesMT")]
	private Button _btnOCSeriesMT;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCFromMasterToAll")]
	private Button _btnOCFromMasterToAll;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCGetBalPAy")]
	private Button _btnOCGetBalPAy;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCGetBalPAy2")]
	private Button _btnOCGetBalPAy2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("ckbtnOCMSerieAccept")]
	private CheckBox _ckbtnOCMSerieAccept;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCMSerieAccept")]
	private Button _btnOCMSerieAccept;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtOCNumber")]
	private TextBox _txtOCNumber;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnClearOC")]
	private Button _btnClearOC;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnDelOnePre")]
	private Button _btnDelOnePre;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTayerCharge")]
	private Button _btnTayerCharge;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCMSeriesInput")]
	private Button _btnOCMSeriesInput;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCMSerieAcceptInput")]
	private Button _btnOCMSerieAcceptInput;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnVV")]
	private Button _btnVV;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("BtnOO")]
	private Button _BtnOO;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCTopUpMulti")]
	private Button _btnOCTopUpMulti;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnAddNumbersToOC")]
	private Button _btnAddNumbersToOC;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("lblOCMMain")]
	private TextBox _lblOCMMain;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("ckbtnTrans100")]
	private CheckBox _ckbtnTrans100;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTrans100")]
	private Button _btnTrans100;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("ckbtnTrans1000")]
	private CheckBox _ckbtnTrans1000;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTrans1000")]
	private Button _btnTrans1000;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("ckbtnTranstop")]
	private CheckBox _ckbtnTranstop;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTranstop")]
	private Button _btnTranstop;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("ckbtnGetNormalBal")]
	private CheckBox _ckbtnGetNormalBal;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnGetNormalBal")]
	private Button _btnGetNormalBal;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTal2aTransferFromOrange")]
	private Button _btnTal2aTransferFromOrange;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTal2aTransferVoda")]
	private Button _btnTal2aTransferVoda;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTal2aGetBal")]
	private Button _btnTal2aGetBal;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("ckbtnVodaAuto365")]
	private CheckBox _ckbtnVodaAuto365;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnVodaAuto365")]
	private Button _btnVodaAuto365;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnPrintstr")]
	private Button _btnPrintstr;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtOCchargeNumOne")]
	private TextBox _txtOCchargeNumOne;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCTopupOne")]
	private Button _btnOCTopupOne;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("ckbtnOCMAuto")]
	private CheckBox _ckbtnOCMAuto;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCMAuto")]
	private Button _btnOCMAuto;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnAutoVCnormECOne")]
	private Button _btnAutoVCnormECOne;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("ckbtnVodaCashFreeTransfer")]
	private CheckBox _ckbtnVodaCashFreeTransfer;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnVodaCashFreeTransfer")]
	private Button _btnVodaCashFreeTransfer;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnOCFreeTransfer")]
	private Button _btnOCFreeTransfer;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtOCTransferAll")]
	private TextBox _txtOCTransferAll;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnAddNumbersToOCsms")]
	private Button _btnAddNumbersToOCsms;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnClearOCsms")]
	private Button _btnClearOCsms;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtOCNumbersms")]
	private TextBox _txtOCNumbersms;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnSendSmsToNumber")]
	private Button _btnSendSmsToNumber;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btn2G")]
	private Button _btn2G;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtWebSign")]
	private TextBox _txtWebSign;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtWebQrySign")]
	private TextBox _txtWebQrySign;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnwebQry")]
	private Button _btnwebQry;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnSaveASqry")]
	private Button _btnSaveASqry;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnExport2qry")]
	private Button _btnExport2qry;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtNumberToAddinRobot")]
	private TextBox _txtNumberToAddinRobot;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnAutoES_Seres")]
	private Button _btnAutoES_Seres;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnECConvertTocash")]
	private Button _btnECConvertTocash;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnECRun777111")]
	private Button _btnECRun777111;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnVodaAuto3652")]
	private Button _btnVodaAuto3652;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btn365_90")]
	private Button _btn365_90;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btn365_901")]
	private Button _btn365_901;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnDoOfferWithdraw")]
	private Button _btnDoOfferWithdraw;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtDoOfferWithdraw2")]
	private TextBox _txtDoOfferWithdraw2;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("txtDoOfferWithdraw1")]
	private TextBox _txtDoOfferWithdraw1;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnTayerPullAllBalsMony")]
	private Button _btnTayerPullAllBalsMony;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btn365_9093")]
	private Button _btn365_9093;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnPrintOUT")]
	private Button _btnPrintOUT;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnFromMainToAll")]
	private Button _btnFromMainToAll;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btngboxSmsAdd")]
	private Button _btngboxSmsAdd;

	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[AccessedThroughProperty("btnCashKing")]
	private Button _btnCashKing;

	private string msgStat;

	private string msgSentNum;

	private string msgSentD;

	private string msgSentT;

	private string msgSrng;

	private int msgIndex;

	private int DataCodingSchem;

	private object SMSObject;

	private MTUssd.SMS.Encoder.SMS.ENUM_TP_DCS DataCodingScheme;

	private MTUssd.SMS.Encoder.SMS.ENUM_TP_VPF ValidPeriod;

	private string[] PDUCodes;

	private int FmaX;

	private int SMax;

	private int OutCount;

	private int TransPortNumber;

	private bool[] countedX;

	private cdataMysql objDataRemote;

	private Color RRcolor1;

	private Color RRcolor2;

	private Color RRcolor3;

	private bool EtsSystemAppled;

	private bool fawrySms;

	private bool cancelAllTheProcess;

	private CData objData;

	private CData objDataChg;

	private DataTable objDataTabletemp;

	private int CurrIndex;

	private string[,] StoredSa3ed_Nums;

	private int StoredSa3ed_Index;

	private int PassGiftValue;

	private int Pass365Value;

	private string[] PortsArray;

	private string[] NumbersArray;

	private bool FreezAddGift;

	private int AutoRes;

	private int OKhave50;

	private int LastGenNumber;

	private int retrychargenobalcount;

	private bool EEmosemove;

	private bool OCchargeprocessState;

	internal virtual Button btnRefreshMissed
	{
		[CompilerGenerated]
		get
		{
			return _btnRefreshMissed;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRefreshMissed_Click;
			Button button = _btnRefreshMissed;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRefreshMissed = value;
			button = _btnRefreshMissed;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtUssdc3")]
	internal virtual TextBox txtUssdc3
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtUssdc2")]
	internal virtual TextBox txtUssdc2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txt205")]
	internal virtual TextBox txt205
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("TimerSecAuto")]
	internal virtual System.Windows.Forms.Timer TimerSecAuto
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Label lblPort6
	{
		[CompilerGenerated]
		get
		{
			return _lblPort6;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			MouseEventHandler value2 = lblPort6_DoubleClick;
			Label label = _lblPort6;
			if (label != null)
			{
				label.MouseDoubleClick -= value2;
			}
			_lblPort6 = value;
			label = _lblPort6;
			if (label != null)
			{
				label.MouseDoubleClick += value2;
			}
		}
	}

	internal virtual Label lblPort5
	{
		[CompilerGenerated]
		get
		{
			return _lblPort5;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			MouseEventHandler value2 = lblPort5_DoubleClick;
			Label label = _lblPort5;
			if (label != null)
			{
				label.MouseDoubleClick -= value2;
			}
			_lblPort5 = value;
			label = _lblPort5;
			if (label != null)
			{
				label.MouseDoubleClick += value2;
			}
		}
	}

	internal virtual Label lblPort4
	{
		[CompilerGenerated]
		get
		{
			return _lblPort4;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			MouseEventHandler value2 = lblPort4_DoubleClick;
			Label label = _lblPort4;
			if (label != null)
			{
				label.MouseDoubleClick -= value2;
			}
			_lblPort4 = value;
			label = _lblPort4;
			if (label != null)
			{
				label.MouseDoubleClick += value2;
			}
		}
	}

	internal virtual Label lblPort3
	{
		[CompilerGenerated]
		get
		{
			return _lblPort3;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			MouseEventHandler value2 = lblPort3_DoubleClick;
			Label label = _lblPort3;
			if (label != null)
			{
				label.MouseDoubleClick -= value2;
			}
			_lblPort3 = value;
			label = _lblPort3;
			if (label != null)
			{
				label.MouseDoubleClick += value2;
			}
		}
	}

	internal virtual Label lblPort2
	{
		[CompilerGenerated]
		get
		{
			return _lblPort2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			MouseEventHandler value2 = lblPort2_DoubleClick;
			Label label = _lblPort2;
			if (label != null)
			{
				label.MouseDoubleClick -= value2;
			}
			_lblPort2 = value;
			label = _lblPort2;
			if (label != null)
			{
				label.MouseDoubleClick += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtUssd")]
	internal virtual TextBox txtUssd
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Label lblPort1
	{
		[CompilerGenerated]
		get
		{
			return _lblPort1;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			MouseEventHandler value2 = lblPort1_DoubleClick;
			Label label = _lblPort1;
			if (label != null)
			{
				label.MouseDoubleClick -= value2;
			}
			_lblPort1 = value;
			label = _lblPort1;
			if (label != null)
			{
				label.MouseDoubleClick += value2;
			}
		}
	}

	internal virtual Button btnResetMissed
	{
		[CompilerGenerated]
		get
		{
			return _btnResetMissed;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnResetMissed_Click;
			Button button = _btnResetMissed;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnResetMissed = value;
			button = _btnResetMissed;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnGetSims
	{
		[CompilerGenerated]
		get
		{
			return _btnGetSims;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnGetSims_Click;
			Button button = _btnGetSims;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnGetSims = value;
			button = _btnGetSims;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblProgress")]
	internal virtual Label lblProgress
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnRefresh
	{
		[CompilerGenerated]
		get
		{
			return _btnRefresh;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRefresh_Click;
			Button button = _btnRefresh;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRefresh = value;
			button = _btnRefresh;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnRunUssd
	{
		[CompilerGenerated]
		get
		{
			return _btnRunUssd;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRunUssd_Click;
			Button button = _btnRunUssd;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRunUssd = value;
			button = _btnRunUssd;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual TextBox txtRet01
	{
		[CompilerGenerated]
		get
		{
			return _txtRet01;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			MouseEventHandler value2 = EnableMouseMove;
			EventHandler value3 = txtRet01_TextChanged;
			TextBox textBox = _txtRet01;
			if (textBox != null)
			{
				textBox.MouseMove -= value2;
				textBox.TextChanged -= value3;
			}
			_txtRet01 = value;
			textBox = _txtRet01;
			if (textBox != null)
			{
				textBox.MouseMove += value2;
				textBox.TextChanged += value3;
			}
		}
	}

	internal virtual TextBox txtRet02
	{
		[CompilerGenerated]
		get
		{
			return _txtRet02;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			MouseEventHandler value2 = EnableMouseMove;
			EventHandler value3 = txtRet02_TextChanged;
			TextBox textBox = _txtRet02;
			if (textBox != null)
			{
				textBox.MouseMove -= value2;
				textBox.TextChanged -= value3;
			}
			_txtRet02 = value;
			textBox = _txtRet02;
			if (textBox != null)
			{
				textBox.MouseMove += value2;
				textBox.TextChanged += value3;
			}
		}
	}

	internal virtual TextBox txtRet03
	{
		[CompilerGenerated]
		get
		{
			return _txtRet03;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			MouseEventHandler value2 = EnableMouseMove;
			TextBox textBox = _txtRet03;
			if (textBox != null)
			{
				textBox.MouseMove -= value2;
			}
			_txtRet03 = value;
			textBox = _txtRet03;
			if (textBox != null)
			{
				textBox.MouseMove += value2;
			}
		}
	}

	internal virtual TextBox txtRet06
	{
		[CompilerGenerated]
		get
		{
			return _txtRet06;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			MouseEventHandler value2 = EnableMouseMove;
			TextBox textBox = _txtRet06;
			if (textBox != null)
			{
				textBox.MouseMove -= value2;
			}
			_txtRet06 = value;
			textBox = _txtRet06;
			if (textBox != null)
			{
				textBox.MouseMove += value2;
			}
		}
	}

	internal virtual TextBox txtRet05
	{
		[CompilerGenerated]
		get
		{
			return _txtRet05;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			MouseEventHandler value2 = EnableMouseMove;
			TextBox textBox = _txtRet05;
			if (textBox != null)
			{
				textBox.MouseMove -= value2;
			}
			_txtRet05 = value;
			textBox = _txtRet05;
			if (textBox != null)
			{
				textBox.MouseMove += value2;
			}
		}
	}

	internal virtual TextBox txtRet04
	{
		[CompilerGenerated]
		get
		{
			return _txtRet04;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			MouseEventHandler value2 = EnableMouseMove;
			TextBox textBox = _txtRet04;
			if (textBox != null)
			{
				textBox.MouseMove -= value2;
			}
			_txtRet04 = value;
			textBox = _txtRet04;
			if (textBox != null)
			{
				textBox.MouseMove += value2;
			}
		}
	}

	internal virtual Button btnRunUssd2
	{
		[CompilerGenerated]
		get
		{
			return _btnRunUssd2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRunUssd2_Click;
			Button button = _btnRunUssd2;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRunUssd2 = value;
			button = _btnRunUssd2;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnRunUssd3
	{
		[CompilerGenerated]
		get
		{
			return _btnRunUssd3;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRunUssd3_Click;
			Button button = _btnRunUssd3;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRunUssd3 = value;
			button = _btnRunUssd3;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnRunUssd4
	{
		[CompilerGenerated]
		get
		{
			return _btnRunUssd4;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRunUssd4_Click;
			Button button = _btnRunUssd4;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRunUssd4 = value;
			button = _btnRunUssd4;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtUssdc4")]
	internal virtual TextBox txtUssdc4
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtUssdc5")]
	internal virtual TextBox txtUssdc5
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnRunUssd5
	{
		[CompilerGenerated]
		get
		{
			return _btnRunUssd5;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRunUssd5_Click;
			Button button = _btnRunUssd5;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRunUssd5 = value;
			button = _btnRunUssd5;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtUssdc6")]
	internal virtual TextBox txtUssdc6
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnRunUssd6
	{
		[CompilerGenerated]
		get
		{
			return _btnRunUssd6;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRunUssd6_Click;
			Button button = _btnRunUssd6;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRunUssd6 = value;
			button = _btnRunUssd6;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtUssdc7")]
	internal virtual TextBox txtUssdc7
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnRunUssd7
	{
		[CompilerGenerated]
		get
		{
			return _btnRunUssd7;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRunUssd7_Click;
			Button button = _btnRunUssd7;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRunUssd7 = value;
			button = _btnRunUssd7;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtUssdc8")]
	internal virtual TextBox txtUssdc8
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnRunUssd8
	{
		[CompilerGenerated]
		get
		{
			return _btnRunUssd8;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRunUssd8_Click;
			Button button = _btnRunUssd8;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRunUssd8 = value;
			button = _btnRunUssd8;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtUssdc9")]
	internal virtual TextBox txtUssdc9
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnRunUssd9
	{
		[CompilerGenerated]
		get
		{
			return _btnRunUssd9;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRunUssd9_Click;
			Button button = _btnRunUssd9;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRunUssd9 = value;
			button = _btnRunUssd9;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtUssdc10")]
	internal virtual TextBox txtUssdc10
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnRunUssd10
	{
		[CompilerGenerated]
		get
		{
			return _btnRunUssd10;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRunUssd10_Click;
			Button button = _btnRunUssd10;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRunUssd10 = value;
			button = _btnRunUssd10;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnClear
	{
		[CompilerGenerated]
		get
		{
			return _btnClear;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnClear_Click;
			EventHandler value3 = btnClearOC_Click;
			Button button = _btnClear;
			if (button != null)
			{
				button.Click -= value2;
				button.Click -= value3;
			}
			_btnClear = value;
			button = _btnClear;
			if (button != null)
			{
				button.Click += value2;
				button.Click += value3;
			}
		}
	}

	internal virtual Button btnRR
	{
		[CompilerGenerated]
		get
		{
			return _btnRR;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRR_Click;
			Button button = _btnRR;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRR = value;
			button = _btnRR;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnUssdReset
	{
		[CompilerGenerated]
		get
		{
			return _btnUssdReset;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnUssdReset_Click;
			Button button = _btnUssdReset;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnUssdReset = value;
			button = _btnUssdReset;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnClearSMS
	{
		[CompilerGenerated]
		get
		{
			return _btnClearSMS;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnClearSMS_Click;
			Button button = _btnClearSMS;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnClearSMS = value;
			button = _btnClearSMS;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnReadSms
	{
		[CompilerGenerated]
		get
		{
			return _btnReadSms;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnReadSms_Click;
			Button button = _btnReadSms;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnReadSms = value;
			button = _btnReadSms;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Label lblNum6
	{
		[CompilerGenerated]
		get
		{
			return _lblNum6;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblNum6_Click;
			MouseEventHandler value3 = lblNum6_MouseDoubleClick;
			Label label = _lblNum6;
			if (label != null)
			{
				label.Click -= value2;
				label.MouseDoubleClick -= value3;
			}
			_lblNum6 = value;
			label = _lblNum6;
			if (label != null)
			{
				label.Click += value2;
				label.MouseDoubleClick += value3;
			}
		}
	}

	internal virtual Label lblNum5
	{
		[CompilerGenerated]
		get
		{
			return _lblNum5;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblNum5_Click;
			MouseEventHandler value3 = lblNum5_MouseDoubleClick;
			Label label = _lblNum5;
			if (label != null)
			{
				label.Click -= value2;
				label.MouseDoubleClick -= value3;
			}
			_lblNum5 = value;
			label = _lblNum5;
			if (label != null)
			{
				label.Click += value2;
				label.MouseDoubleClick += value3;
			}
		}
	}

	internal virtual Label lblNum4
	{
		[CompilerGenerated]
		get
		{
			return _lblNum4;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblNum4_Click;
			MouseEventHandler value3 = lblNum4_MouseDoubleClick;
			Label label = _lblNum4;
			if (label != null)
			{
				label.Click -= value2;
				label.MouseDoubleClick -= value3;
			}
			_lblNum4 = value;
			label = _lblNum4;
			if (label != null)
			{
				label.Click += value2;
				label.MouseDoubleClick += value3;
			}
		}
	}

	internal virtual Label lblNum3
	{
		[CompilerGenerated]
		get
		{
			return _lblNum3;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblNum3_Click;
			MouseEventHandler value3 = lblNum3_MouseDoubleClick;
			Label label = _lblNum3;
			if (label != null)
			{
				label.Click -= value2;
				label.MouseDoubleClick -= value3;
			}
			_lblNum3 = value;
			label = _lblNum3;
			if (label != null)
			{
				label.Click += value2;
				label.MouseDoubleClick += value3;
			}
		}
	}

	internal virtual Label lblNum2
	{
		[CompilerGenerated]
		get
		{
			return _lblNum2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblNum2_Click;
			MouseEventHandler value3 = lblNum2_MouseDoubleClick;
			Label label = _lblNum2;
			if (label != null)
			{
				label.Click -= value2;
				label.MouseDoubleClick -= value3;
			}
			_lblNum2 = value;
			label = _lblNum2;
			if (label != null)
			{
				label.Click += value2;
				label.MouseDoubleClick += value3;
			}
		}
	}

	internal virtual Label lblNum1
	{
		[CompilerGenerated]
		get
		{
			return _lblNum1;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblNum1_Click;
			MouseEventHandler value3 = lblNum1_MouseDoubleClick;
			Label label = _lblNum1;
			if (label != null)
			{
				label.Click -= value2;
				label.MouseDoubleClick -= value3;
			}
			_lblNum1 = value;
			label = _lblNum1;
			if (label != null)
			{
				label.Click += value2;
				label.MouseDoubleClick += value3;
			}
		}
	}

	[field: AccessedThroughProperty("ckBox")]
	internal virtual CheckBox ckBox
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnRefreshEmpty
	{
		[CompilerGenerated]
		get
		{
			return _btnRefreshEmpty;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRefreshEmpty_Click;
			Button button = _btnRefreshEmpty;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRefreshEmpty = value;
			button = _btnRefreshEmpty;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnNumbers
	{
		[CompilerGenerated]
		get
		{
			return _btnNumbers;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnNumbers_Click;
			Button button = _btnNumbers;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnNumbers = value;
			button = _btnNumbers;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("ckME")]
	internal virtual CheckBox ckME
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnGetOut
	{
		[CompilerGenerated]
		get
		{
			return _btnGetOut;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnGetOut_Click;
			Button button = _btnGetOut;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnGetOut = value;
			button = _btnGetOut;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnSaveOut
	{
		[CompilerGenerated]
		get
		{
			return _btnSaveOut;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnSaveOut_Click;
			Button button = _btnSaveOut;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnSaveOut = value;
			button = _btnSaveOut;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnNumbers2
	{
		[CompilerGenerated]
		get
		{
			return _btnNumbers2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnNumbers2_Click;
			Button button = _btnNumbers2;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnNumbers2 = value;
			button = _btnNumbers2;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnNumbers3
	{
		[CompilerGenerated]
		get
		{
			return _btnNumbers3;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnNumbers3_Click;
			Button button = _btnNumbers3;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnNumbers3 = value;
			button = _btnNumbers3;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtLoopS")]
	internal virtual TextBox txtLoopS
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtLoopF")]
	internal virtual TextBox txtLoopF
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnRunUssdGG
	{
		[CompilerGenerated]
		get
		{
			return _btnRunUssdGG;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRunUssdGG_Click;
			Button button = _btnRunUssdGG;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRunUssdGG = value;
			button = _btnRunUssdGG;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnReplyBy
	{
		[CompilerGenerated]
		get
		{
			return _btnReplyBy;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnReplyBy_Click;
			Button button = _btnReplyBy;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnReplyBy = value;
			button = _btnReplyBy;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual TextBox txtReplyBy
	{
		[CompilerGenerated]
		get
		{
			return _txtReplyBy;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = txtReplyBy_TextChanged;
			TextBox textBox = _txtReplyBy;
			if (textBox != null)
			{
				textBox.TextChanged -= value2;
			}
			_txtReplyBy = value;
			textBox = _txtReplyBy;
			if (textBox != null)
			{
				textBox.TextChanged += value2;
			}
		}
	}

	internal virtual TextBox txtReplyBy2
	{
		[CompilerGenerated]
		get
		{
			return _txtReplyBy2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = txtReplyBy2_TextChanged;
			TextBox textBox = _txtReplyBy2;
			if (textBox != null)
			{
				textBox.TextChanged -= value2;
			}
			_txtReplyBy2 = value;
			textBox = _txtReplyBy2;
			if (textBox != null)
			{
				textBox.TextChanged += value2;
			}
		}
	}

	internal virtual Button btnReplyBy2
	{
		[CompilerGenerated]
		get
		{
			return _btnReplyBy2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnReplyBy2_Click;
			Button button = _btnReplyBy2;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnReplyBy2 = value;
			button = _btnReplyBy2;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnFawrySms
	{
		[CompilerGenerated]
		get
		{
			return _btnFawrySms;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnFawrySms_Click;
			Button button = _btnFawrySms;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnFawrySms = value;
			button = _btnFawrySms;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Label lblBal6
	{
		[CompilerGenerated]
		get
		{
			return _lblBal6;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblBal6_TextChanged;
			Label label = _lblBal6;
			if (label != null)
			{
				label.TextChanged -= value2;
			}
			_lblBal6 = value;
			label = _lblBal6;
			if (label != null)
			{
				label.TextChanged += value2;
			}
		}
	}

	internal virtual Label lblBal5
	{
		[CompilerGenerated]
		get
		{
			return _lblBal5;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblBal5_TextChanged;
			Label label = _lblBal5;
			if (label != null)
			{
				label.TextChanged -= value2;
			}
			_lblBal5 = value;
			label = _lblBal5;
			if (label != null)
			{
				label.TextChanged += value2;
			}
		}
	}

	internal virtual Label lblBal4
	{
		[CompilerGenerated]
		get
		{
			return _lblBal4;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblBal4_TextChanged;
			Label label = _lblBal4;
			if (label != null)
			{
				label.TextChanged -= value2;
			}
			_lblBal4 = value;
			label = _lblBal4;
			if (label != null)
			{
				label.TextChanged += value2;
			}
		}
	}

	internal virtual Label lblBal3
	{
		[CompilerGenerated]
		get
		{
			return _lblBal3;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblBal3_TextChanged;
			Label label = _lblBal3;
			if (label != null)
			{
				label.TextChanged -= value2;
			}
			_lblBal3 = value;
			label = _lblBal3;
			if (label != null)
			{
				label.TextChanged += value2;
			}
		}
	}

	internal virtual Label lblBal2
	{
		[CompilerGenerated]
		get
		{
			return _lblBal2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblBal2_TextChanged;
			Label label = _lblBal2;
			if (label != null)
			{
				label.TextChanged -= value2;
			}
			_lblBal2 = value;
			label = _lblBal2;
			if (label != null)
			{
				label.TextChanged += value2;
			}
		}
	}

	internal virtual Label lblBal1
	{
		[CompilerGenerated]
		get
		{
			return _lblBal1;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblBal1_Click;
			EventHandler value3 = lblBal1_TextChanged;
			Label label = _lblBal1;
			if (label != null)
			{
				label.Click -= value2;
				label.TextChanged -= value3;
			}
			_lblBal1 = value;
			label = _lblBal1;
			if (label != null)
			{
				label.Click += value2;
				label.TextChanged += value3;
			}
		}
	}

	internal virtual TextBox txtInfo
	{
		[CompilerGenerated]
		get
		{
			return _txtInfo;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			MouseEventHandler value2 = EnableMouseMove;
			TextBox textBox = _txtInfo;
			if (textBox != null)
			{
				textBox.MouseMove -= value2;
			}
			_txtInfo = value;
			textBox = _txtInfo;
			if (textBox != null)
			{
				textBox.MouseMove += value2;
			}
		}
	}

	internal virtual TextBox txtEproc
	{
		[CompilerGenerated]
		get
		{
			return _txtEproc;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = txtEproc_LostFocus;
			TextBox textBox = _txtEproc;
			if (textBox != null)
			{
				textBox.LostFocus -= value2;
			}
			_txtEproc = value;
			textBox = _txtEproc;
			if (textBox != null)
			{
				textBox.LostFocus += value2;
			}
		}
	}

	internal virtual TextBox txtReplyBy3
	{
		[CompilerGenerated]
		get
		{
			return _txtReplyBy3;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = txtReplyBy3_TextChanged;
			TextBox textBox = _txtReplyBy3;
			if (textBox != null)
			{
				textBox.TextChanged -= value2;
			}
			_txtReplyBy3 = value;
			textBox = _txtReplyBy3;
			if (textBox != null)
			{
				textBox.TextChanged += value2;
			}
		}
	}

	internal virtual Button btnReplyBy3
	{
		[CompilerGenerated]
		get
		{
			return _btnReplyBy3;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnReplyBy3_Click;
			Button button = _btnReplyBy3;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnReplyBy3 = value;
			button = _btnReplyBy3;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Label lblCard4
	{
		[CompilerGenerated]
		get
		{
			return _lblCard4;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblCard4_Click;
			Label label = _lblCard4;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblCard4 = value;
			label = _lblCard4;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lblCard5
	{
		[CompilerGenerated]
		get
		{
			return _lblCard5;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblCard5_Click;
			Label label = _lblCard5;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblCard5 = value;
			label = _lblCard5;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lblCard6
	{
		[CompilerGenerated]
		get
		{
			return _lblCard6;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblCard6_Click;
			Label label = _lblCard6;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblCard6 = value;
			label = _lblCard6;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lblCard3
	{
		[CompilerGenerated]
		get
		{
			return _lblCard3;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblCard3_Click;
			Label label = _lblCard3;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblCard3 = value;
			label = _lblCard3;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lblCard2
	{
		[CompilerGenerated]
		get
		{
			return _lblCard2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblCard2_Click;
			Label label = _lblCard2;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblCard2 = value;
			label = _lblCard2;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lblCard1
	{
		[CompilerGenerated]
		get
		{
			return _lblCard1;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblCard1_DoubleClick;
			EventHandler value3 = lblCard1_Click;
			Label label = _lblCard1;
			if (label != null)
			{
				label.DoubleClick -= value2;
				label.Click -= value3;
			}
			_lblCard1 = value;
			label = _lblCard1;
			if (label != null)
			{
				label.DoubleClick += value2;
				label.Click += value3;
			}
		}
	}

	internal virtual Button btnApplyCards
	{
		[CompilerGenerated]
		get
		{
			return _btnApplyCards;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnApplyCards_Click;
			Button button = _btnApplyCards;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnApplyCards = value;
			button = _btnApplyCards;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("ckCards")]
	internal virtual CheckBox ckCards
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnAddCards
	{
		[CompilerGenerated]
		get
		{
			return _btnAddCards;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnAddCards_Click;
			Button button = _btnAddCards;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnAddCards = value;
			button = _btnAddCards;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblCardsQty")]
	internal virtual Label lblCardsQty
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual ComboBox cmbEvalue
	{
		[CompilerGenerated]
		get
		{
			return _cmbEvalue;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = cmbEvalue_SelectedIndexChanged;
			ComboBox comboBox = _cmbEvalue;
			if (comboBox != null)
			{
				comboBox.SelectedIndexChanged -= value2;
			}
			_cmbEvalue = value;
			comboBox = _cmbEvalue;
			if (comboBox != null)
			{
				comboBox.SelectedIndexChanged += value2;
			}
		}
	}

	[field: AccessedThroughProperty("chkCh1")]
	internal virtual CheckBox chkCh1
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkCh2")]
	internal virtual CheckBox chkCh2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkCh3")]
	internal virtual CheckBox chkCh3
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkCh4")]
	internal virtual CheckBox chkCh4
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkCh5")]
	internal virtual CheckBox chkCh5
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkCh6")]
	internal virtual CheckBox chkCh6
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtChSS")]
	internal virtual TextBox txtChSS
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnApplyCards2
	{
		[CompilerGenerated]
		get
		{
			return _btnApplyCards2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnApplyCards2_Click;
			Button button = _btnApplyCards2;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnApplyCards2 = value;
			button = _btnApplyCards2;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnDeSA
	{
		[CompilerGenerated]
		get
		{
			return _btnDeSA;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnDeSA_Click;
			Button button = _btnDeSA;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnDeSA = value;
			button = _btnDeSA;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnSA
	{
		[CompilerGenerated]
		get
		{
			return _btnSA;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnSA_Click;
			Button button = _btnSA;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnSA = value;
			button = _btnSA;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("chkIgnorSms")]
	internal virtual CheckBox chkIgnorSms
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("RBEts")]
	internal virtual RadioButton RBEts
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("RBVoda")]
	internal virtual RadioButton RBVoda
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkSlowRead")]
	internal virtual CheckBox chkSlowRead
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtReplyBy4")]
	internal virtual TextBox txtReplyBy4
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnReplyBy4
	{
		[CompilerGenerated]
		get
		{
			return _btnReplyBy4;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnReplyBy4_Click;
			Button button = _btnReplyBy4;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnReplyBy4 = value;
			button = _btnReplyBy4;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtReplyBy5")]
	internal virtual TextBox txtReplyBy5
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnReplyBy5
	{
		[CompilerGenerated]
		get
		{
			return _btnReplyBy5;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnReplyBy5_Click;
			Button button = _btnReplyBy5;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnReplyBy5 = value;
			button = _btnReplyBy5;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtReplyBy0")]
	internal virtual TextBox txtReplyBy0
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnReplyBy0
	{
		[CompilerGenerated]
		get
		{
			return _btnReplyBy0;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnReplyBy0_Click;
			Button button = _btnReplyBy0;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnReplyBy0 = value;
			button = _btnReplyBy0;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("MainTC")]
	internal virtual TabControl MainTC
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("TabPage1")]
	internal virtual TabPage TabPage1
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("TabPage2")]
	internal virtual TabPage TabPage2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("TabPage3")]
	internal virtual TabPage TabPage3
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("TabPage4")]
	internal virtual TabPage TabPage4
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnAddItems
	{
		[CompilerGenerated]
		get
		{
			return _btnAddItems;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnAddItems_Click;
			Button button = _btnAddItems;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnAddItems = value;
			button = _btnAddItems;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("TabPage5")]
	internal virtual TabPage TabPage5
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtPass")]
	internal virtual TextBox txtPass
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label2")]
	internal virtual Label Label2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtwait")]
	internal virtual TextBox txtwait
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label1")]
	internal virtual Label Label1
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label3")]
	internal virtual Label Label3
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtWorkID")]
	internal virtual TextBox txtWorkID
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnTransInv
	{
		[CompilerGenerated]
		get
		{
			return _btnTransInv;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTransInv_Click;
			Button button = _btnTransInv;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTransInv = value;
			button = _btnTransInv;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label9")]
	internal virtual Label Label9
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtTransNum")]
	internal virtual TextBox txtTransNum
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnTransVal
	{
		[CompilerGenerated]
		get
		{
			return _btnTransVal;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTransVal_Click;
			Button button = _btnTransVal;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTransVal = value;
			button = _btnTransVal;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnRunAll
	{
		[CompilerGenerated]
		get
		{
			return _btnRunAll;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRunAll_Click;
			Button button = _btnRunAll;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRunAll = value;
			button = _btnRunAll;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnGetBal
	{
		[CompilerGenerated]
		get
		{
			return _btnGetBal;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnGetBal_Click;
			Button button = _btnGetBal;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnGetBal = value;
			button = _btnGetBal;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnRun02
	{
		[CompilerGenerated]
		get
		{
			return _btnRun02;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRun02_Click;
			Button button = _btnRun02;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRun02 = value;
			button = _btnRun02;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button bt
	{
		[CompilerGenerated]
		get
		{
			return _bt;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = bt_Click;
			Button button = _bt;
			if (button != null)
			{
				button.Click -= value2;
			}
			_bt = value;
			button = _bt;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnNextItems
	{
		[CompilerGenerated]
		get
		{
			return _btnNextItems;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnNextItems_Click;
			Button button = _btnNextItems;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnNextItems = value;
			button = _btnNextItems;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnWorkID
	{
		[CompilerGenerated]
		get
		{
			return _btnWorkID;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnWorkID_Click;
			Button button = _btnWorkID;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnWorkID = value;
			button = _btnWorkID;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label8")]
	internal virtual Label Label8
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtTransMoney")]
	internal virtual TextBox txtTransMoney
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label6")]
	internal virtual Label Label6
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtQtyDone")]
	internal virtual TextBox txtQtyDone
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label5")]
	internal virtual Label Label5
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtMoney
	{
		[CompilerGenerated]
		get
		{
			return _txtMoney;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtMoney_KeyPress;
			TextBox textBox = _txtMoney;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtMoney = value;
			textBox = _txtMoney;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtEnumsVC")]
	internal virtual TextBox txtEnumsVC
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnExnums
	{
		[CompilerGenerated]
		get
		{
			return _btnExnums;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnExnums_Click;
			Button button = _btnExnums;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnExnums = value;
			button = _btnExnums;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lstNumbers")]
	internal virtual ListBox lstNumbers
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("TabPage6")]
	internal virtual TabPage TabPage6
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnGetBalMS
	{
		[CompilerGenerated]
		get
		{
			return _btnGetBalMS;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnGetBalMS_Click;
			Button button = _btnGetBalMS;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnGetBalMS = value;
			button = _btnGetBalMS;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnTransTo
	{
		[CompilerGenerated]
		get
		{
			return _btnTransTo;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTransTo_Click;
			Button button = _btnTransTo;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTransTo = value;
			button = _btnTransTo;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnTransFromMS
	{
		[CompilerGenerated]
		get
		{
			return _btnTransFromMS;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTransFromMS_Click;
			Button button = _btnTransFromMS;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTransFromMS = value;
			button = _btnTransFromMS;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label4")]
	internal virtual Label Label4
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtLoopSVC")]
	internal virtual TextBox txtLoopSVC
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtLoopFVC")]
	internal virtual TextBox txtLoopFVC
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMS01")]
	internal virtual TextBox txtMS01
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label7")]
	internal virtual Label Label7
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnArrangIT
	{
		[CompilerGenerated]
		get
		{
			return _btnArrangIT;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnArrangIT_Click;
			Button button = _btnArrangIT;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnArrangIT = value;
			button = _btnArrangIT;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btn3G
	{
		[CompilerGenerated]
		get
		{
			return _btn3G;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btn3G_Click;
			Button button = _btn3G;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btn3G = value;
			button = _btn3G;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label10")]
	internal virtual Label Label10
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtPassMs")]
	internal virtual TextBox txtPassMs
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnRunAuto
	{
		[CompilerGenerated]
		get
		{
			return _btnRunAuto;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRunAuto_Click;
			Button button = _btnRunAuto;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRunAuto = value;
			button = _btnRunAuto;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("chkStop")]
	internal virtual CheckBox chkStop
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnVodaTrans
	{
		[CompilerGenerated]
		get
		{
			return _btnVodaTrans;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnVodaTrans_Click;
			Button button = _btnVodaTrans;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnVodaTrans = value;
			button = _btnVodaTrans;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual TextBox txtSpNum6
	{
		[CompilerGenerated]
		get
		{
			return _txtSpNum6;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = [SpecialName] [DebuggerHidden] (object a0, EventArgs a1) =>
			{
				txtSpNum6_MouseDoubleClick(RuntimeHelpers.GetObjectValue(a0), (MouseEventArgs)a1);
			};
			TextBox textBox = _txtSpNum6;
			if (textBox != null)
			{
				textBox.DoubleClick -= value2;
			}
			_txtSpNum6 = value;
			textBox = _txtSpNum6;
			if (textBox != null)
			{
				textBox.DoubleClick += value2;
			}
		}
	}

	internal virtual TextBox txtSpNum5
	{
		[CompilerGenerated]
		get
		{
			return _txtSpNum5;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = [SpecialName] [DebuggerHidden] (object a0, EventArgs a1) =>
			{
				txtSpNum5_MouseDoubleClick(RuntimeHelpers.GetObjectValue(a0), (MouseEventArgs)a1);
			};
			TextBox textBox = _txtSpNum5;
			if (textBox != null)
			{
				textBox.DoubleClick -= value2;
			}
			_txtSpNum5 = value;
			textBox = _txtSpNum5;
			if (textBox != null)
			{
				textBox.DoubleClick += value2;
			}
		}
	}

	internal virtual TextBox txtSpNum4
	{
		[CompilerGenerated]
		get
		{
			return _txtSpNum4;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = [SpecialName] [DebuggerHidden] (object a0, EventArgs a1) =>
			{
				txtSpNum4_MouseDoubleClick(RuntimeHelpers.GetObjectValue(a0), (MouseEventArgs)a1);
			};
			TextBox textBox = _txtSpNum4;
			if (textBox != null)
			{
				textBox.DoubleClick -= value2;
			}
			_txtSpNum4 = value;
			textBox = _txtSpNum4;
			if (textBox != null)
			{
				textBox.DoubleClick += value2;
			}
		}
	}

	internal virtual TextBox txtSpNum3
	{
		[CompilerGenerated]
		get
		{
			return _txtSpNum3;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = [SpecialName] [DebuggerHidden] (object a0, EventArgs a1) =>
			{
				txtSpNum3_MouseDoubleClick(RuntimeHelpers.GetObjectValue(a0), (MouseEventArgs)a1);
			};
			TextBox textBox = _txtSpNum3;
			if (textBox != null)
			{
				textBox.DoubleClick -= value2;
			}
			_txtSpNum3 = value;
			textBox = _txtSpNum3;
			if (textBox != null)
			{
				textBox.DoubleClick += value2;
			}
		}
	}

	internal virtual TextBox txtSpNum2
	{
		[CompilerGenerated]
		get
		{
			return _txtSpNum2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = txtSpNum2_TextChanged;
			EventHandler value3 = [SpecialName] [DebuggerHidden] (object a0, EventArgs a1) =>
			{
				txtSpNum2_MouseDoubleClick(RuntimeHelpers.GetObjectValue(a0), (MouseEventArgs)a1);
			};
			TextBox textBox = _txtSpNum2;
			if (textBox != null)
			{
				textBox.TextChanged -= value2;
				textBox.DoubleClick -= value3;
			}
			_txtSpNum2 = value;
			textBox = _txtSpNum2;
			if (textBox != null)
			{
				textBox.TextChanged += value2;
				textBox.DoubleClick += value3;
			}
		}
	}

	[field: AccessedThroughProperty("Label11")]
	internal virtual Label Label11
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtSpNum1
	{
		[CompilerGenerated]
		get
		{
			return _txtSpNum1;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = [SpecialName] [DebuggerHidden] (object a0, EventArgs a1) =>
			{
				txtSpNum1_MouseDoubleClick(RuntimeHelpers.GetObjectValue(a0), (MouseEventArgs)a1);
			};
			TextBox textBox = _txtSpNum1;
			if (textBox != null)
			{
				textBox.DoubleClick -= value2;
			}
			_txtSpNum1 = value;
			textBox = _txtSpNum1;
			if (textBox != null)
			{
				textBox.DoubleClick += value2;
			}
		}
	}

	internal virtual Button btnCopyAll
	{
		[CompilerGenerated]
		get
		{
			return _btnCopyAll;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnCopyAll_Click;
			Button button = _btnCopyAll;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnCopyAll = value;
			button = _btnCopyAll;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnTransAllMony
	{
		[CompilerGenerated]
		get
		{
			return _btnTransAllMony;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTransAllMony_Click;
			Button button = _btnTransAllMony;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTransAllMony = value;
			button = _btnTransAllMony;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblGifts01")]
	internal virtual Label lblGifts01
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblGifts02")]
	internal virtual Label lblGifts02
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblGifts03")]
	internal virtual Label lblGifts03
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblGifts04")]
	internal virtual Label lblGifts04
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblGifts05")]
	internal virtual Label lblGifts05
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblGifts06")]
	internal virtual Label lblGifts06
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkPay")]
	internal virtual CheckBox chkPay
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnGetBalNM
	{
		[CompilerGenerated]
		get
		{
			return _btnGetBalNM;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnGetBalNM_Click;
			Button button = _btnGetBalNM;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnGetBalNM = value;
			button = _btnGetBalNM;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtTotalTransVal")]
	internal virtual TextBox txtTotalTransVal
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnTransToA
	{
		[CompilerGenerated]
		get
		{
			return _btnTransToA;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTransToA_Click;
			Button button = _btnTransToA;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTransToA = value;
			button = _btnTransToA;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label12")]
	internal virtual Label Label12
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtGftLmt")]
	internal virtual TextBox txtGftLmt
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMS02")]
	internal virtual TextBox txtMS02
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMoneyMS6")]
	internal virtual TextBox txtMoneyMS6
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMoneyMS5")]
	internal virtual TextBox txtMoneyMS5
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMoneyMS4")]
	internal virtual TextBox txtMoneyMS4
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMoneyMS3")]
	internal virtual TextBox txtMoneyMS3
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtMoneyMS2
	{
		[CompilerGenerated]
		get
		{
			return _txtMoneyMS2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			MouseEventHandler value2 = txtMoneyMS2_MouseDoubleClick;
			TextBox textBox = _txtMoneyMS2;
			if (textBox != null)
			{
				textBox.MouseDoubleClick -= value2;
			}
			_txtMoneyMS2 = value;
			textBox = _txtMoneyMS2;
			if (textBox != null)
			{
				textBox.MouseDoubleClick += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label13")]
	internal virtual Label Label13
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label19")]
	internal virtual Label Label19
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label18")]
	internal virtual Label Label18
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label17")]
	internal virtual Label Label17
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label16")]
	internal virtual Label Label16
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label15")]
	internal virtual Label Label15
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TabPage VodaCashPAnel
	{
		[CompilerGenerated]
		get
		{
			return _VodaCashPAnel;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			MouseEventHandler value2 = EnableMouseMove;
			TabPage tabPage = _VodaCashPAnel;
			if (tabPage != null)
			{
				tabPage.MouseMove -= value2;
			}
			_VodaCashPAnel = value;
			tabPage = _VodaCashPAnel;
			if (tabPage != null)
			{
				tabPage.MouseMove += value2;
			}
		}
	}

	internal virtual Button btnGetBal2
	{
		[CompilerGenerated]
		get
		{
			return _btnGetBal2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnGetBal_Click;
			Button button = _btnGetBal2;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnGetBal2 = value;
			button = _btnGetBal2;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Label lblMain
	{
		[CompilerGenerated]
		get
		{
			return _lblMain;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblMain_Click;
			EventHandler value3 = lblMain_DoubleClick;
			EventHandler value4 = lblMain_TextChanged;
			Label label = _lblMain;
			if (label != null)
			{
				label.Click -= value2;
				label.DoubleClick -= value3;
				label.TextChanged -= value4;
			}
			_lblMain = value;
			label = _lblMain;
			if (label != null)
			{
				label.Click += value2;
				label.DoubleClick += value3;
				label.TextChanged += value4;
			}
		}
	}

	internal virtual Button btnTransAllMn
	{
		[CompilerGenerated]
		get
		{
			return _btnTransAllMn;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTransAllMn_Click;
			Button button = _btnTransAllMn;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTransAllMn = value;
			button = _btnTransAllMn;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtMonyMn")]
	internal virtual TextBox txtMonyMn
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnTransFromNm
	{
		[CompilerGenerated]
		get
		{
			return _btnTransFromNm;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTransFromNm_Click;
			Button button = _btnTransFromNm;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTransFromNm = value;
			button = _btnTransFromNm;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnTransToNm
	{
		[CompilerGenerated]
		get
		{
			return _btnTransToNm;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTransToNm_Click;
			Button button = _btnTransToNm;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTransToNm = value;
			button = _btnTransToNm;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label21")]
	internal virtual Label Label21
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnRun02Nm
	{
		[CompilerGenerated]
		get
		{
			return _btnRun02Nm;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRun02_Click;
			Button button = _btnRun02Nm;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRun02Nm = value;
			button = _btnRun02Nm;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual TabPage TabPage8
	{
		[CompilerGenerated]
		get
		{
			return _TabPage8;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = TabPage8_Click;
			TabPage tabPage = _TabPage8;
			if (tabPage != null)
			{
				tabPage.Click -= value2;
			}
			_TabPage8 = value;
			tabPage = _TabPage8;
			if (tabPage != null)
			{
				tabPage.Click += value2;
			}
		}
	}

	internal virtual ListBox lstNames
	{
		[CompilerGenerated]
		get
		{
			return _lstNames;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lstNames_SelectedIndexChanged;
			MouseEventHandler value3 = lstNames_MouseClick;
			ListBox listBox = _lstNames;
			if (listBox != null)
			{
				listBox.SelectedIndexChanged -= value2;
				listBox.MouseClick -= value3;
			}
			_lstNames = value;
			listBox = _lstNames;
			if (listBox != null)
			{
				listBox.SelectedIndexChanged += value2;
				listBox.MouseClick += value3;
			}
		}
	}

	internal virtual ListBox lstNum
	{
		[CompilerGenerated]
		get
		{
			return _lstNum;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			MouseEventHandler value2 = lstNum_MouseClick;
			ListBox listBox = _lstNum;
			if (listBox != null)
			{
				listBox.MouseClick -= value2;
			}
			_lstNum = value;
			listBox = _lstNum;
			if (listBox != null)
			{
				listBox.MouseClick += value2;
			}
		}
	}

	internal virtual Button btnRefreshMsg
	{
		[CompilerGenerated]
		get
		{
			return _btnRefreshMsg;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRefreshMsg_Click;
			Button button = _btnRefreshMsg;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRefreshMsg = value;
			button = _btnRefreshMsg;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtEnote")]
	internal virtual TextBox txtEnote
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtSvrName")]
	internal virtual TextBox txtSvrName
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtSrvMsg")]
	internal virtual TextBox txtSrvMsg
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMobnum")]
	internal virtual TextBox txtMobnum
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnSendSms
	{
		[CompilerGenerated]
		get
		{
			return _btnSendSms;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnSendSms_Click;
			Button button = _btnSendSms;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnSendSms = value;
			button = _btnSendSms;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button Button1
	{
		[CompilerGenerated]
		get
		{
			return _Button1;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = Button1_Click;
			Button button = _Button1;
			if (button != null)
			{
				button.Click -= value2;
			}
			_Button1 = value;
			button = _Button1;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("TabPage9")]
	internal virtual TabPage TabPage9
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtNumQry
	{
		[CompilerGenerated]
		get
		{
			return _txtNumQry;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = txtNumQry_TextChanged;
			KeyPressEventHandler value3 = txtNumQry_KeyPress;
			TextBox textBox = _txtNumQry;
			if (textBox != null)
			{
				textBox.TextChanged -= value2;
				textBox.KeyPress -= value3;
			}
			_txtNumQry = value;
			textBox = _txtNumQry;
			if (textBox != null)
			{
				textBox.TextChanged += value2;
				textBox.KeyPress += value3;
			}
		}
	}

	[field: AccessedThroughProperty("TabPage10")]
	internal virtual TabPage TabPage10
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("dataViewGridQryChrg")]
	internal virtual DataGridView dataViewGridQryChrg
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("dataViewGridQryBal")]
	internal virtual DataGridView dataViewGridQryBal
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label22")]
	internal virtual Label Label22
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label20")]
	internal virtual Label Label20
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnQryQry
	{
		[CompilerGenerated]
		get
		{
			return _btnQryQry;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnQryQry_Click;
			Button button = _btnQryQry;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnQryQry = value;
			button = _btnQryQry;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblQryTotal")]
	internal virtual Label lblQryTotal
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lstQryBal")]
	internal virtual ListBox lstQryBal
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lstQryNumbers")]
	internal virtual ListBox lstQryNumbers
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtEnumsVCQry")]
	internal virtual TextBox txtEnumsVCQry
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnGetQry
	{
		[CompilerGenerated]
		get
		{
			return _btnGetQry;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnGetQry_Click;
			Button button = _btnGetQry;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnGetQry = value;
			button = _btnGetQry;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("SFD")]
	internal virtual SaveFileDialog SFD
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblSavePath")]
	internal virtual Label lblSavePath
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnSaveAS
	{
		[CompilerGenerated]
		get
		{
			return _btnSaveAS;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnSaveAS_Click;
			Button button = _btnSaveAS;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnSaveAS = value;
			button = _btnSaveAS;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnExport2
	{
		[CompilerGenerated]
		get
		{
			return _btnExport2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnExport2_Click;
			Button button = _btnExport2;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnExport2 = value;
			button = _btnExport2;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnPast
	{
		[CompilerGenerated]
		get
		{
			return _btnPast;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnPast_Click;
			Button button = _btnPast;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnPast = value;
			button = _btnPast;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("tabOrngInv")]
	internal virtual TabPage tabOrngInv
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Label lblSavePath3
	{
		[CompilerGenerated]
		get
		{
			return _lblSavePath3;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblSavePath3_Click;
			Label label = _lblSavePath3;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblSavePath3 = value;
			label = _lblSavePath3;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Button btnSaveAS3
	{
		[CompilerGenerated]
		get
		{
			return _btnSaveAS3;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnSaveAS3_Click;
			Button button = _btnSaveAS3;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnSaveAS3 = value;
			button = _btnSaveAS3;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnExport3
	{
		[CompilerGenerated]
		get
		{
			return _btnExport3;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnExport3_Click;
			Button button = _btnExport3;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnExport3 = value;
			button = _btnExport3;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnOtransRun
	{
		[CompilerGenerated]
		get
		{
			return _btnOtransRun;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOtransRun_Click;
			Button button = _btnOtransRun;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOtransRun = value;
			button = _btnOtransRun;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label30")]
	internal virtual Label Label30
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOTotalTransQ")]
	internal virtual TextBox txtOTotalTransQ
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label25")]
	internal virtual Label Label25
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOtotalTrans")]
	internal virtual TextBox txtOtotalTrans
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOtransRem")]
	internal virtual TextBox txtOtransRem
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOtransMP")]
	internal virtual TextBox txtOtransMP
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOtransACC")]
	internal virtual TextBox txtOtransACC
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOtransTN")]
	internal virtual TextBox txtOtransTN
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label29")]
	internal virtual Label Label29
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label28")]
	internal virtual Label Label28
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label27")]
	internal virtual Label Label27
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label26")]
	internal virtual Label Label26
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnOrngAccQry
	{
		[CompilerGenerated]
		get
		{
			return _btnOrngAccQry;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOrngAccQry_Click;
			Button button = _btnOrngAccQry;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOrngAccQry = value;
			button = _btnOrngAccQry;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnGetOrngBal
	{
		[CompilerGenerated]
		get
		{
			return _btnGetOrngBal;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnGetOrngBal_Click;
			Button button = _btnGetOrngBal;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnGetOrngBal = value;
			button = _btnGetOrngBal;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnGetOrngBalAcc
	{
		[CompilerGenerated]
		get
		{
			return _btnGetOrngBalAcc;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnGetOrngBalAcc_Click;
			Button button = _btnGetOrngBalAcc;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnGetOrngBalAcc = value;
			button = _btnGetOrngBalAcc;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtMoneyMS6Dly")]
	internal virtual TextBox txtMoneyMS6Dly
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMoneyMS5Dly")]
	internal virtual TextBox txtMoneyMS5Dly
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMoneyMS4Dly")]
	internal virtual TextBox txtMoneyMS4Dly
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMoneyMS3Dly")]
	internal virtual TextBox txtMoneyMS3Dly
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label31")]
	internal virtual Label Label31
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtNextPortNum")]
	internal virtual TextBox txtNextPortNum
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtRemTimeVC")]
	internal virtual TextBox txtRemTimeVC
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnCancelTrans
	{
		[CompilerGenerated]
		get
		{
			return _btnCancelTrans;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnCancelTrans_Click;
			Button button = _btnCancelTrans;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnCancelTrans = value;
			button = _btnCancelTrans;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("dataViewGrid")]
	internal virtual DataGridView dataViewGrid
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnVCChargeToSelf
	{
		[CompilerGenerated]
		get
		{
			return _btnVCChargeToSelf;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnVCChargeToSelf_Click;
			Button button = _btnVCChargeToSelf;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnVCChargeToSelf = value;
			button = _btnVCChargeToSelf;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnVCtransFrom3Dn
	{
		[CompilerGenerated]
		get
		{
			return _btnVCtransFrom3Dn;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnVCtransFrom3Dn_Click;
			Button button = _btnVCtransFrom3Dn;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnVCtransFrom3Dn = value;
			button = _btnVCtransFrom3Dn;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnVCtransFrom3Up
	{
		[CompilerGenerated]
		get
		{
			return _btnVCtransFrom3Up;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnVCtransFrom3Up_Click;
			Button button = _btnVCtransFrom3Up;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnVCtransFrom3Up = value;
			button = _btnVCtransFrom3Up;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnVC6
	{
		[CompilerGenerated]
		get
		{
			return _btnVC6;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnVC6_Click;
			Button button = _btnVC6;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnVC6 = value;
			button = _btnVC6;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtLoopSvc2")]
	internal virtual TextBox txtLoopSvc2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtLoopFvc2")]
	internal virtual TextBox txtLoopFvc2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkAutoDell")]
	internal virtual CheckBox chkAutoDell
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("TabPage12")]
	internal virtual TabPage TabPage12
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnSA3edhmR5
	{
		[CompilerGenerated]
		get
		{
			return _btnSA3edhmR5;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnReplyBy5_Click;
			Button button = _btnSA3edhmR5;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnSA3edhmR5 = value;
			button = _btnSA3edhmR5;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnSA3edhmR4
	{
		[CompilerGenerated]
		get
		{
			return _btnSA3edhmR4;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnReplyBy4_Click;
			Button button = _btnSA3edhmR4;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnSA3edhmR4 = value;
			button = _btnSA3edhmR4;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnSA3edhmR3
	{
		[CompilerGenerated]
		get
		{
			return _btnSA3edhmR3;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnReplyBy3_Click;
			Button button = _btnSA3edhmR3;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnSA3edhmR3 = value;
			button = _btnSA3edhmR3;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnSA3edhmR2
	{
		[CompilerGenerated]
		get
		{
			return _btnSA3edhmR2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnReplyBy2_Click;
			Button button = _btnSA3edhmR2;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnSA3edhmR2 = value;
			button = _btnSA3edhmR2;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnSA3edhmR1
	{
		[CompilerGenerated]
		get
		{
			return _btnSA3edhmR1;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnReplyBy_Click;
			Button button = _btnSA3edhmR1;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnSA3edhmR1 = value;
			button = _btnSA3edhmR1;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnSA3edhmRDell
	{
		[CompilerGenerated]
		get
		{
			return _btnSA3edhmRDell;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnSA3edhmRDell_Click;
			Button button = _btnSA3edhmRDell;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnSA3edhmRDell = value;
			button = _btnSA3edhmRDell;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnSA3edhmRAdd
	{
		[CompilerGenerated]
		get
		{
			return _btnSA3edhmRAdd;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnSA3edhmRAdd_Click;
			Button button = _btnSA3edhmRAdd;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnSA3edhmRAdd = value;
			button = _btnSA3edhmRAdd;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual TextBox txtSA3edhmNum
	{
		[CompilerGenerated]
		get
		{
			return _txtSA3edhmNum;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtSA3edhmNum_KeyPress;
			TextBox textBox = _txtSA3edhmNum;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtSA3edhmNum = value;
			textBox = _txtSA3edhmNum;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	internal virtual Button btnSA3edhmReg
	{
		[CompilerGenerated]
		get
		{
			return _btnSA3edhmReg;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnSA3edhmReg_Click;
			Button button = _btnSA3edhmReg;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnSA3edhmReg = value;
			button = _btnSA3edhmReg;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label36")]
	internal virtual Label Label36
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label35")]
	internal virtual Label Label35
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtSa3edhmV
	{
		[CompilerGenerated]
		get
		{
			return _txtSa3edhmV;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtSa3edhmV_KeyPress;
			TextBox textBox = _txtSa3edhmV;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtSa3edhmV = value;
			textBox = _txtSa3edhmV;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	internal virtual Button btnSA3edhmTrans
	{
		[CompilerGenerated]
		get
		{
			return _btnSA3edhmTrans;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnSA3edhmTrans_Click;
			Button button = _btnSA3edhmTrans;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnSA3edhmTrans = value;
			button = _btnSA3edhmTrans;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual TextBox txtSA3edhmReq
	{
		[CompilerGenerated]
		get
		{
			return _txtSA3edhmReq;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtSA3edhmReq_KeyPress;
			TextBox textBox = _txtSA3edhmReq;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtSA3edhmReq = value;
			textBox = _txtSA3edhmReq;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	internal virtual Button btnViewSa3edList
	{
		[CompilerGenerated]
		get
		{
			return _btnViewSa3edList;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnViewSa3edList_Click;
			Button button = _btnViewSa3edList;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnViewSa3edList = value;
			button = _btnViewSa3edList;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnSA3edhmCancel
	{
		[CompilerGenerated]
		get
		{
			return _btnSA3edhmCancel;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnSA3edhmCancel_Click;
			Button button = _btnSA3edhmCancel;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnSA3edhmCancel = value;
			button = _btnSA3edhmCancel;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnChkOK
	{
		[CompilerGenerated]
		get
		{
			return _btnChkOK;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnChkOK_Click;
			Button button = _btnChkOK;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnChkOK = value;
			button = _btnChkOK;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnGetVodaBal
	{
		[CompilerGenerated]
		get
		{
			return _btnGetVodaBal;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnGetBalNM_Click;
			Button button = _btnGetVodaBal;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnGetVodaBal = value;
			button = _btnGetVodaBal;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("ODfile")]
	internal virtual OpenFileDialog ODfile
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblGiftV1")]
	internal virtual Label lblGiftV1
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblGiftV2")]
	internal virtual Label lblGiftV2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblGiftV3")]
	internal virtual Label lblGiftV3
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblGiftV4")]
	internal virtual Label lblGiftV4
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblGiftV5")]
	internal virtual Label lblGiftV5
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblGiftV6")]
	internal virtual Label lblGiftV6
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnAutoVCnorm
	{
		[CompilerGenerated]
		get
		{
			return _btnAutoVCnorm;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnAutoVCnorm_Click;
			Button button = _btnAutoVCnorm;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnAutoVCnorm = value;
			button = _btnAutoVCnorm;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label14")]
	internal virtual Label Label14
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtTransNum2
	{
		[CompilerGenerated]
		get
		{
			return _txtTransNum2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			TextBox textBox = _txtTransNum2;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtTransNum2 = value;
			textBox = _txtTransNum2;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	internal virtual Button btnTransGiftAuto
	{
		[CompilerGenerated]
		get
		{
			return _btnTransGiftAuto;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnTransGiftAuto_Click;
			Button button = _btnTransGiftAuto;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTransGiftAuto = value;
			button = _btnTransGiftAuto;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual TextBox txtCashNextMaster
	{
		[CompilerGenerated]
		get
		{
			return _txtCashNextMaster;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			MouseEventHandler value2 = txtCashNextMaster_MouseDoubleClick;
			KeyPressEventHandler value3 = txtTransNum2365_n_KeyPress;
			TextBox textBox = _txtCashNextMaster;
			if (textBox != null)
			{
				textBox.MouseDoubleClick -= value2;
				textBox.KeyPress -= value3;
			}
			_txtCashNextMaster = value;
			textBox = _txtCashNextMaster;
			if (textBox != null)
			{
				textBox.MouseDoubleClick += value2;
				textBox.KeyPress += value3;
			}
		}
	}

	internal virtual Label lblGifttotal6
	{
		[CompilerGenerated]
		get
		{
			return _lblGifttotal6;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblGifttotal6_DoubleClick;
			Label label = _lblGifttotal6;
			if (label != null)
			{
				label.DoubleClick -= value2;
			}
			_lblGifttotal6 = value;
			label = _lblGifttotal6;
			if (label != null)
			{
				label.DoubleClick += value2;
			}
		}
	}

	internal virtual Label lblGifttotal5
	{
		[CompilerGenerated]
		get
		{
			return _lblGifttotal5;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblGifttotal5_DoubleClick;
			Label label = _lblGifttotal5;
			if (label != null)
			{
				label.DoubleClick -= value2;
			}
			_lblGifttotal5 = value;
			label = _lblGifttotal5;
			if (label != null)
			{
				label.DoubleClick += value2;
			}
		}
	}

	internal virtual Label lblGifttotal4
	{
		[CompilerGenerated]
		get
		{
			return _lblGifttotal4;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblGifttotal4_DoubleClick;
			Label label = _lblGifttotal4;
			if (label != null)
			{
				label.DoubleClick -= value2;
			}
			_lblGifttotal4 = value;
			label = _lblGifttotal4;
			if (label != null)
			{
				label.DoubleClick += value2;
			}
		}
	}

	internal virtual Label lblGifttotal3
	{
		[CompilerGenerated]
		get
		{
			return _lblGifttotal3;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblGifttotal3_DoubleClick;
			Label label = _lblGifttotal3;
			if (label != null)
			{
				label.DoubleClick -= value2;
			}
			_lblGifttotal3 = value;
			label = _lblGifttotal3;
			if (label != null)
			{
				label.DoubleClick += value2;
			}
		}
	}

	internal virtual Label lblGifttotal2
	{
		[CompilerGenerated]
		get
		{
			return _lblGifttotal2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblGifttotal2_DoubleClick;
			Label label = _lblGifttotal2;
			if (label != null)
			{
				label.DoubleClick -= value2;
			}
			_lblGifttotal2 = value;
			label = _lblGifttotal2;
			if (label != null)
			{
				label.DoubleClick += value2;
			}
		}
	}

	internal virtual Label lblGifttotal1
	{
		[CompilerGenerated]
		get
		{
			return _lblGifttotal1;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblGifttotal1_DoubleClick;
			Label label = _lblGifttotal1;
			if (label != null)
			{
				label.DoubleClick -= value2;
			}
			_lblGifttotal1 = value;
			label = _lblGifttotal1;
			if (label != null)
			{
				label.DoubleClick += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label37")]
	internal virtual Label Label37
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label24")]
	internal virtual Label Label24
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("TabPage7")]
	internal virtual TabPage TabPage7
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblMainEC")]
	internal virtual Label lblMainEC
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label42")]
	internal virtual Label Label42
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label39")]
	internal virtual Label Label39
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label40")]
	internal virtual Label Label40
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnAutoVCnormEC
	{
		[CompilerGenerated]
		get
		{
			return _btnAutoVCnormEC;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnAutoVCnormEC_Click;
			Button button = _btnAutoVCnormEC;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnAutoVCnormEC = value;
			button = _btnAutoVCnormEC;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual TextBox txtCashNextMasterEC
	{
		[CompilerGenerated]
		get
		{
			return _txtCashNextMasterEC;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			KeyPressEventHandler value3 = txtTransNum2365_n_KeyPress;
			TextBox textBox = _txtCashNextMasterEC;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
				textBox.KeyPress -= value3;
			}
			_txtCashNextMasterEC = value;
			textBox = _txtCashNextMasterEC;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
				textBox.KeyPress += value3;
			}
		}
	}

	[field: AccessedThroughProperty("txtMonyMnEC")]
	internal virtual TextBox txtMonyMnEC
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnGetBal2EC
	{
		[CompilerGenerated]
		get
		{
			return _btnGetBal2EC;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnGetBal2EC_Click;
			Button button = _btnGetBal2EC;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnGetBal2EC = value;
			button = _btnGetBal2EC;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label38")]
	internal virtual Label Label38
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtPassEC")]
	internal virtual TextBox txtPassEC
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("TabPage13")]
	internal virtual TabPage TabPage13
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label41")]
	internal virtual Label Label41
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label43")]
	internal virtual Label Label43
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnAutoVCnormCon
	{
		[CompilerGenerated]
		get
		{
			return _btnAutoVCnormCon;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnAutoVCnormCon_Click;
			Button button = _btnAutoVCnormCon;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnAutoVCnormCon = value;
			button = _btnAutoVCnormCon;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label44")]
	internal virtual Label Label44
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtTransNum2Con")]
	internal virtual TextBox txtTransNum2Con
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtCashNextMasterCon
	{
		[CompilerGenerated]
		get
		{
			return _txtCashNextMasterCon;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			TextBox textBox = _txtCashNextMasterCon;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtCashNextMasterCon = value;
			textBox = _txtCashNextMasterCon;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblMainCon")]
	internal virtual Label lblMainCon
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label46")]
	internal virtual Label Label46
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMonyMnCon")]
	internal virtual TextBox txtMonyMnCon
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnGetBal2Con
	{
		[CompilerGenerated]
		get
		{
			return _btnGetBal2Con;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnGetBal_Click;
			Button button = _btnGetBal2Con;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnGetBal2Con = value;
			button = _btnGetBal2Con;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblCorrectNumber")]
	internal virtual Label lblCorrectNumber
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtArrayOut")]
	internal virtual TextBox txtArrayOut
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("TabPage14")]
	internal virtual TabPage TabPage14
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtUssdP1")]
	internal virtual TextBox txtUssdP1
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnRunPower
	{
		[CompilerGenerated]
		get
		{
			return _btnRunPower;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnRunPower_Click;
			Button button = _btnRunPower;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRunPower = value;
			button = _btnRunPower;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnAutoSendPower
	{
		[CompilerGenerated]
		get
		{
			return _btnAutoSendPower;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnAutoSendPower_Click;
			Button button = _btnAutoSendPower;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnAutoSendPower = value;
			button = _btnAutoSendPower;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lstNumbersP")]
	internal virtual ListBox lstNumbersP
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtEnumsVCP")]
	internal virtual TextBox txtEnumsVCP
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnNextItemsP
	{
		[CompilerGenerated]
		get
		{
			return _btnNextItemsP;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnNextItemsP_Click;
			Button button = _btnNextItemsP;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnNextItemsP = value;
			button = _btnNextItemsP;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label45")]
	internal virtual Label Label45
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtQtyDoneP")]
	internal virtual TextBox txtQtyDoneP
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtLoopSVCP")]
	internal virtual TextBox txtLoopSVCP
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtLoopFVCP")]
	internal virtual TextBox txtLoopFVCP
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label47")]
	internal virtual Label Label47
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtTransNumP")]
	internal virtual TextBox txtTransNumP
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtTempxxp")]
	internal virtual TextBox txtTempxxp
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtUssdP2")]
	internal virtual TextBox txtUssdP2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnRunPowe2
	{
		[CompilerGenerated]
		get
		{
			return _btnRunPowe2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnRunPowe2_Click;
			Button button = _btnRunPowe2;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRunPowe2 = value;
			button = _btnRunPowe2;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtReplyPower")]
	internal virtual TextBox txtReplyPower
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button Button2
	{
		[CompilerGenerated]
		get
		{
			return _Button2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = Button2_Click;
			Button button = _Button2;
			if (button != null)
			{
				button.Click -= value2;
			}
			_Button2 = value;
			button = _Button2;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtTotalTransValP")]
	internal virtual TextBox txtTotalTransValP
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnTransValP
	{
		[CompilerGenerated]
		get
		{
			return _btnTransValP;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnTransValP_Click;
			Button button = _btnTransValP;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTransValP = value;
			button = _btnTransValP;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label48")]
	internal virtual Label Label48
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtTransMoneyP")]
	internal virtual TextBox txtTransMoneyP
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnChangePass
	{
		[CompilerGenerated]
		get
		{
			return _btnChangePass;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnChangePass_Click;
			Button button = _btnChangePass;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnChangePass = value;
			button = _btnChangePass;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label50")]
	internal virtual Label Label50
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOldPass")]
	internal virtual TextBox txtOldPass
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label49")]
	internal virtual Label Label49
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtNewPass")]
	internal virtual TextBox txtNewPass
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckTrans")]
	internal virtual CheckBox ckTrans
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtCHS")]
	internal virtual TextBox txtCHS
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkimpsms")]
	internal virtual CheckBox chkimpsms
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtLoopSSD")]
	internal virtual TextBox txtLoopSSD
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtLoopFSD")]
	internal virtual TextBox txtLoopFSD
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnTransGiftAutoSpVal
	{
		[CompilerGenerated]
		get
		{
			return _btnTransGiftAutoSpVal;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnTransGiftAutoSpVal_Click;
			Button button = _btnTransGiftAutoSpVal;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTransGiftAutoSpVal = value;
			button = _btnTransGiftAutoSpVal;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnTransToNextMain
	{
		[CompilerGenerated]
		get
		{
			return _btnTransToNextMain;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnTransToNextMain_Click;
			Button button = _btnTransToNextMain;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTransToNextMain = value;
			button = _btnTransToNextMain;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtVCForceMony")]
	internal virtual TextBox txtVCForceMony
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label51")]
	internal virtual Label Label51
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnAutoVC_Seres
	{
		[CompilerGenerated]
		get
		{
			return _btnAutoVC_Seres;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnAutoVC_Seres_Click;
			Button button = _btnAutoVC_Seres;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnAutoVC_Seres = value;
			button = _btnAutoVC_Seres;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("chkChargeOnSame")]
	internal virtual CheckBox chkChargeOnSame
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("cknull")]
	internal virtual CheckBox cknull
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkTransferAllNormalVoda")]
	internal virtual CheckBox chkTransferAllNormalVoda
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnTransGiftAutoNorm
	{
		[CompilerGenerated]
		get
		{
			return _btnTransGiftAutoNorm;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnTransGiftAutoNorm_Click;
			Button button = _btnTransGiftAutoNorm;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTransGiftAutoNorm = value;
			button = _btnTransGiftAutoNorm;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnRefreshComs
	{
		[CompilerGenerated]
		get
		{
			return _btnRefreshComs;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnRefreshComs_Click;
			Button button = _btnRefreshComs;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRefreshComs = value;
			button = _btnRefreshComs;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("chkRefref")]
	internal virtual CheckBox chkRefref
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnGetSimsGifts
	{
		[CompilerGenerated]
		get
		{
			return _btnGetSimsGifts;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnGetSimsGifts_Click;
			Button button = _btnGetSimsGifts;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnGetSimsGifts = value;
			button = _btnGetSimsGifts;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnGetInfo
	{
		[CompilerGenerated]
		get
		{
			return _btnGetInfo;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnGetInfo_Click;
			Button button = _btnGetInfo;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnGetInfo = value;
			button = _btnGetInfo;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("BDatedel")]
	internal virtual DateTimePicker BDatedel
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnDlGifts
	{
		[CompilerGenerated]
		get
		{
			return _btnDlGifts;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnDlGifts_Click;
			Button button = _btnDlGifts;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnDlGifts = value;
			button = _btnDlGifts;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnAutoVC_Hez
	{
		[CompilerGenerated]
		get
		{
			return _btnAutoVC_Hez;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnAutoVC_Hez_Click;
			Button button = _btnAutoVC_Hez;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnAutoVC_Hez = value;
			button = _btnAutoVC_Hez;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("chkSqn")]
	internal virtual CheckBox chkSqn
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkAutoRes")]
	internal virtual CheckBox chkAutoRes
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtReplyBy7")]
	internal virtual TextBox txtReplyBy7
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnReplyBy7
	{
		[CompilerGenerated]
		get
		{
			return _btnReplyBy7;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnReplyBy7_Click;
			Button button = _btnReplyBy7;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnReplyBy7 = value;
			button = _btnReplyBy7;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtReplyBy6")]
	internal virtual TextBox txtReplyBy6
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnReplyBy6
	{
		[CompilerGenerated]
		get
		{
			return _btnReplyBy6;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnReplyBy6_Click;
			Button button = _btnReplyBy6;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnReplyBy6 = value;
			button = _btnReplyBy6;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("tab365")]
	internal virtual TabPage tab365
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckUse910")]
	internal virtual CheckBox ckUse910
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnApply365
	{
		[CompilerGenerated]
		get
		{
			return _btnApply365;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnApply365_Click;
			Button button = _btnApply365;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnApply365 = value;
			button = _btnApply365;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("chkChargeOnSame365")]
	internal virtual CheckBox chkChargeOnSame365
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label52")]
	internal virtual Label Label52
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label53")]
	internal virtual Label Label53
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtTransNum2365
	{
		[CompilerGenerated]
		get
		{
			return _txtTransNum2365;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			TextBox textBox = _txtTransNum2365;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtTransNum2365 = value;
			textBox = _txtTransNum2365;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtMonyMn365")]
	internal virtual TextBox txtMonyMn365
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label54")]
	internal virtual Label Label54
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtTransNum2365Gft
	{
		[CompilerGenerated]
		get
		{
			return _txtTransNum2365Gft;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			TextBox textBox = _txtTransNum2365Gft;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtTransNum2365Gft = value;
			textBox = _txtTransNum2365Gft;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtLoopSSD365")]
	internal virtual TextBox txtLoopSSD365
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtLoopFSD365")]
	internal virtual TextBox txtLoopFSD365
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnApply36590
	{
		[CompilerGenerated]
		get
		{
			return _btnApply36590;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnApply36590_Click;
			Button button = _btnApply36590;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnApply36590 = value;
			button = _btnApply36590;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtVCForceMony365")]
	internal virtual TextBox txtVCForceMony365
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnTransGiftAutoSpVal365
	{
		[CompilerGenerated]
		get
		{
			return _btnTransGiftAutoSpVal365;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnTransGiftAutoSpVal365_Click;
			Button button = _btnTransGiftAutoSpVal365;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTransGiftAutoSpVal365 = value;
			button = _btnTransGiftAutoSpVal365;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtGetgft365")]
	internal virtual TextBox txtGetgft365
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkUse365inprcss")]
	internal virtual CheckBox chkUse365inprcss
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnChangePassNew
	{
		[CompilerGenerated]
		get
		{
			return _btnChangePassNew;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnChangePassNew_Click;
			Button button = _btnChangePassNew;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnChangePassNew = value;
			button = _btnChangePassNew;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnAuto365
	{
		[CompilerGenerated]
		get
		{
			return _btnAuto365;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnAuto365_Click;
			Button button = _btnAuto365;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnAuto365 = value;
			button = _btnAuto365;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("tabPrint")]
	internal virtual TabPage tabPrint
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnPrint
	{
		[CompilerGenerated]
		get
		{
			return _btnPrint;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnPrint_Click;
			Button button = _btnPrint;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnPrint = value;
			button = _btnPrint;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("GroupBox5")]
	internal virtual GroupBox GroupBox5
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtBar_tn")]
	internal virtual TextBox txtBar_tn
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label58")]
	internal virtual Label Label58
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtBar_tk")]
	internal virtual TextBox txtBar_tk
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label59")]
	internal virtual Label Label59
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtBar_H")]
	internal virtual TextBox txtBar_H
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtBar_y")]
	internal virtual TextBox txtBar_y
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtBar_x")]
	internal virtual TextBox txtBar_x
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label60")]
	internal virtual Label Label60
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label61")]
	internal virtual Label Label61
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label62")]
	internal virtual Label Label62
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("GroupBox1")]
	internal virtual GroupBox GroupBox1
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtW")]
	internal virtual TextBox txtW
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtH")]
	internal virtual TextBox txtH
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtHn")]
	internal virtual TextBox txtHn
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label55")]
	internal virtual Label Label55
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label56")]
	internal virtual Label Label56
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label57")]
	internal virtual Label Label57
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("cmbPrinter")]
	internal virtual TextBox cmbPrinter
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnPrinter
	{
		[CompilerGenerated]
		get
		{
			return _btnPrinter;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnPrinter_Click;
			Button button = _btnPrinter;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnPrinter = value;
			button = _btnPrinter;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("chkInDB")]
	internal virtual CheckBox chkInDB
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chbeep")]
	internal virtual CheckBox chbeep
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual CheckBox chAutoGooo
	{
		[CompilerGenerated]
		get
		{
			return _chAutoGooo;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _chAutoGooo;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_chAutoGooo = value;
			checkBox = _chAutoGooo;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	internal virtual CheckBox chAutoGooo2
	{
		[CompilerGenerated]
		get
		{
			return _chAutoGooo2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _chAutoGooo2;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_chAutoGooo2 = value;
			checkBox = _chAutoGooo2;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	[field: AccessedThroughProperty("chkFast365")]
	internal virtual CheckBox chkFast365
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkAuto365EXE")]
	internal virtual CheckBox chkAuto365EXE
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkApply365")]
	internal virtual CheckBox chkApply365
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chk250int")]
	internal virtual CheckBox chk250int
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkAuto365Trans")]
	internal virtual CheckBox chkAuto365Trans
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkDelSms")]
	internal virtual CheckBox chkDelSms
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkReadsms")]
	internal virtual CheckBox chkReadsms
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkNoCharge50")]
	internal virtual CheckBox chkNoCharge50
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("tab365_2")]
	internal virtual TabPage tab365_2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkApply365Trans")]
	internal virtual CheckBox chkApply365Trans
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtTransNum2365_n
	{
		[CompilerGenerated]
		get
		{
			return _txtTransNum2365_n;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			TextBox textBox = _txtTransNum2365_n;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtTransNum2365_n = value;
			textBox = _txtTransNum2365_n;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label63")]
	internal virtual Label Label63
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnTransGiftAutoNorm365
	{
		[CompilerGenerated]
		get
		{
			return _btnTransGiftAutoNorm365;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnTransGiftAutoNorm365_Click;
			Button button = _btnTransGiftAutoNorm365;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTransGiftAutoNorm365 = value;
			button = _btnTransGiftAutoNorm365;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtVCForceMony365_n")]
	internal virtual TextBox txtVCForceMony365_n
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkTransferAllNormalVoda365")]
	internal virtual CheckBox chkTransferAllNormalVoda365
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkApply365Bakat")]
	internal virtual CheckBox chkApply365Bakat
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnApply365Bakat
	{
		[CompilerGenerated]
		get
		{
			return _btnApply365Bakat;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnApply365Bakat_Click;
			Button button = _btnApply365Bakat;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnApply365Bakat = value;
			button = _btnApply365Bakat;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtLoopSSD365_2")]
	internal virtual TextBox txtLoopSSD365_2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtLoopFSD365_2")]
	internal virtual TextBox txtLoopFSD365_2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtLoopSSD365Gft")]
	internal virtual TextBox txtLoopSSD365Gft
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtLoopFSD365Gft")]
	internal virtual TextBox txtLoopFSD365Gft
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnGetVodaBal365
	{
		[CompilerGenerated]
		get
		{
			return _btnGetVodaBal365;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnGetBalNM_Click;
			Button button = _btnGetVodaBal365;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnGetVodaBal365 = value;
			button = _btnGetVodaBal365;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtGetgft365_2")]
	internal virtual TextBox txtGetgft365_2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkAuto365EXE_f")]
	internal virtual CheckBox chkAuto365EXE_f
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtGetgft365_f")]
	internal virtual TextBox txtGetgft365_f
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnApply36590_f
	{
		[CompilerGenerated]
		get
		{
			return _btnApply36590_f;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnApply36590_f_Click;
			Button button = _btnApply36590_f;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnApply36590_f = value;
			button = _btnApply36590_f;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtLoopSSD365_f")]
	internal virtual TextBox txtLoopSSD365_f
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtLoopFSD365_f")]
	internal virtual TextBox txtLoopFSD365_f
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkTransGiftAutoSpVal365")]
	internal virtual CheckBox chkTransGiftAutoSpVal365
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkUse365inprcss10")]
	internal virtual CheckBox chkUse365inprcss10
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkNewWallet")]
	internal virtual CheckBox chkNewWallet
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("TabControl1")]
	internal virtual TabControl TabControl1
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("TabPage15")]
	internal virtual TabPage TabPage15
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("TabPage16")]
	internal virtual TabPage TabPage16
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtDelayInSC")]
	internal virtual TextBox txtDelayInSC
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnDelTarfehy
	{
		[CompilerGenerated]
		get
		{
			return _btnDelTarfehy;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnDelTarfehy_Click;
			Button button = _btnDelTarfehy;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnDelTarfehy = value;
			button = _btnDelTarfehy;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnExchangeNN
	{
		[CompilerGenerated]
		get
		{
			return _btnExchangeNN;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnExchangeNN_Click;
			Button button = _btnExchangeNN;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnExchangeNN = value;
			button = _btnExchangeNN;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual CheckBox chkAutoTransferNrm
	{
		[CompilerGenerated]
		get
		{
			return _chkAutoTransferNrm;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _chkAutoTransferNrm;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_chkAutoTransferNrm = value;
			checkBox = _chkAutoTransferNrm;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	internal virtual CheckBox chkAutoTransferCash
	{
		[CompilerGenerated]
		get
		{
			return _chkAutoTransferCash;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _chkAutoTransferCash;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_chkAutoTransferCash = value;
			checkBox = _chkAutoTransferCash;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	[field: AccessedThroughProperty("chkTransGift")]
	internal virtual CheckBox chkTransGift
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkGetgift")]
	internal virtual CheckBox chkGetgift
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnChkNewSims
	{
		[CompilerGenerated]
		get
		{
			return _btnChkNewSims;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnChkNewSims_Click;
			Button button = _btnChkNewSims;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnChkNewSims = value;
			button = _btnChkNewSims;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("GroupBox2")]
	internal virtual GroupBox GroupBox2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtInfoT")]
	internal virtual TextBox txtInfoT
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtInfoY")]
	internal virtual TextBox txtInfoY
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtInfoX")]
	internal virtual TextBox txtInfoX
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label66")]
	internal virtual Label Label66
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label68")]
	internal virtual Label Label68
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnInvertSelection
	{
		[CompilerGenerated]
		get
		{
			return _btnInvertSelection;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnInvertSelection_Click;
			Button button = _btnInvertSelection;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnInvertSelection = value;
			button = _btnInvertSelection;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("chkSafeMode")]
	internal virtual CheckBox chkSafeMode
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblChargeDone1")]
	internal virtual Label lblChargeDone1
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblChargeDone2")]
	internal virtual Label lblChargeDone2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblChargeDone3")]
	internal virtual Label lblChargeDone3
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblChargeDone4")]
	internal virtual Label lblChargeDone4
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblChargeDone5")]
	internal virtual Label lblChargeDone5
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblChargeDone6")]
	internal virtual Label lblChargeDone6
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("tabON")]
	internal virtual TabPage tabON
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Label lbl05
	{
		[CompilerGenerated]
		get
		{
			return _lbl05;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lbl05_Click;
			Label label = _lbl05;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lbl05 = value;
			label = _lbl05;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lbl30
	{
		[CompilerGenerated]
		get
		{
			return _lbl30;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lbl05_Click;
			Label label = _lbl30;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lbl30 = value;
			label = _lbl30;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lbl25
	{
		[CompilerGenerated]
		get
		{
			return _lbl25;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lbl05_Click;
			Label label = _lbl25;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lbl25 = value;
			label = _lbl25;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lbl20
	{
		[CompilerGenerated]
		get
		{
			return _lbl20;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lbl05_Click;
			Label label = _lbl20;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lbl20 = value;
			label = _lbl20;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lbl15
	{
		[CompilerGenerated]
		get
		{
			return _lbl15;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lbl05_Click;
			Label label = _lbl15;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lbl15 = value;
			label = _lbl15;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lbl10
	{
		[CompilerGenerated]
		get
		{
			return _lbl10;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lbl05_Click;
			Label label = _lbl10;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lbl10 = value;
			label = _lbl10;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("ckTransP")]
	internal virtual CheckBox ckTransP
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtTransP")]
	internal virtual TextBox txtTransP
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckOnOut")]
	internal virtual CheckBox ckOnOut
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnOnOut
	{
		[CompilerGenerated]
		get
		{
			return _btnOnOut;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOnOut_Click;
			Button button = _btnOnOut;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOnOut = value;
			button = _btnOnOut;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label64")]
	internal virtual Label Label64
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOnValue")]
	internal virtual TextBox txtOnValue
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Label lblONmc1
	{
		[CompilerGenerated]
		get
		{
			return _lblONmc1;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblONmc1_Click;
			Label label = _lblONmc1;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblONmc1 = value;
			label = _lblONmc1;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblONnum1")]
	internal virtual Label lblONnum1
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtONorder1
	{
		[CompilerGenerated]
		get
		{
			return _txtONorder1;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtONorder1_KeyPress;
			TextBox textBox = _txtONorder1;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtONorder1 = value;
			textBox = _txtONorder1;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblONed")]
	internal virtual Label lblONed
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblONv1")]
	internal virtual Label lblONv1
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblONnum6")]
	internal virtual Label lblONnum6
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtONorder6
	{
		[CompilerGenerated]
		get
		{
			return _txtONorder6;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtONorder6_KeyPress;
			TextBox textBox = _txtONorder6;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtONorder6 = value;
			textBox = _txtONorder6;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblONv6")]
	internal virtual Label lblONv6
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Label lblONmc6
	{
		[CompilerGenerated]
		get
		{
			return _lblONmc6;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblONmc1_Click;
			Label label = _lblONmc6;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblONmc6 = value;
			label = _lblONmc6;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblONnum5")]
	internal virtual Label lblONnum5
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtONorder5
	{
		[CompilerGenerated]
		get
		{
			return _txtONorder5;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtONorder5_KeyPress;
			TextBox textBox = _txtONorder5;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtONorder5 = value;
			textBox = _txtONorder5;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblONv5")]
	internal virtual Label lblONv5
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Label lblONmc5
	{
		[CompilerGenerated]
		get
		{
			return _lblONmc5;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblONmc1_Click;
			Label label = _lblONmc5;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblONmc5 = value;
			label = _lblONmc5;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblONnum4")]
	internal virtual Label lblONnum4
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtONorder4
	{
		[CompilerGenerated]
		get
		{
			return _txtONorder4;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtONorder4_KeyPress;
			TextBox textBox = _txtONorder4;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtONorder4 = value;
			textBox = _txtONorder4;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblONv4")]
	internal virtual Label lblONv4
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Label lblONmc4
	{
		[CompilerGenerated]
		get
		{
			return _lblONmc4;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblONmc1_Click;
			Label label = _lblONmc4;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblONmc4 = value;
			label = _lblONmc4;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblONnum3")]
	internal virtual Label lblONnum3
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtONorder3
	{
		[CompilerGenerated]
		get
		{
			return _txtONorder3;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtONorder3_KeyPress;
			TextBox textBox = _txtONorder3;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtONorder3 = value;
			textBox = _txtONorder3;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblONv3")]
	internal virtual Label lblONv3
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Label lblONmc3
	{
		[CompilerGenerated]
		get
		{
			return _lblONmc3;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblONmc1_Click;
			Label label = _lblONmc3;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblONmc3 = value;
			label = _lblONmc3;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblONnum2")]
	internal virtual Label lblONnum2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtONorder2
	{
		[CompilerGenerated]
		get
		{
			return _txtONorder2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtONorder2_KeyPress;
			TextBox textBox = _txtONorder2;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtONorder2 = value;
			textBox = _txtONorder2;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblONv2")]
	internal virtual Label lblONv2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Label lblONmc2
	{
		[CompilerGenerated]
		get
		{
			return _lblONmc2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblONmc1_Click;
			Label label = _lblONmc2;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblONmc2 = value;
			label = _lblONmc2;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual TextBox txtQryOrder
	{
		[CompilerGenerated]
		get
		{
			return _txtQryOrder;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtQryOrder_KeyPress;
			MouseEventHandler value3 = txtQryOrder_MouseDoubleClick;
			TextBox textBox = _txtQryOrder;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
				textBox.MouseDoubleClick -= value3;
			}
			_txtQryOrder = value;
			textBox = _txtQryOrder;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
				textBox.MouseDoubleClick += value3;
			}
		}
	}

	[field: AccessedThroughProperty("lblONnumQ")]
	internal virtual Label lblONnumQ
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblONvQ")]
	internal virtual Label lblONvQ
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblONmcQ")]
	internal virtual Label lblONmcQ
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnPic
	{
		[CompilerGenerated]
		get
		{
			return _btnPic;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnPic_Click;
			Button button = _btnPic;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnPic = value;
			button = _btnPic;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnAutoGet
	{
		[CompilerGenerated]
		get
		{
			return _btnAutoGet;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnAutoGet_Click;
			Button button = _btnAutoGet;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnAutoGet = value;
			button = _btnAutoGet;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnGetBal2ON
	{
		[CompilerGenerated]
		get
		{
			return _btnGetBal2ON;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnGetBal_Click;
			Button button = _btnGetBal2ON;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnGetBal2ON = value;
			button = _btnGetBal2ON;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual GroupBox gboxLock
	{
		[CompilerGenerated]
		get
		{
			return _gboxLock;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = gboxLock_Enter;
			GroupBox groupBox = _gboxLock;
			if (groupBox != null)
			{
				groupBox.Enter -= value2;
			}
			_gboxLock = value;
			groupBox = _gboxLock;
			if (groupBox != null)
			{
				groupBox.Enter += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label65")]
	internal virtual Label Label65
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label67")]
	internal virtual Label Label67
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnLockNo
	{
		[CompilerGenerated]
		get
		{
			return _btnLockNo;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnLockNo_Click;
			Button button = _btnLockNo;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnLockNo = value;
			button = _btnLockNo;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnLockOK
	{
		[CompilerGenerated]
		get
		{
			return _btnLockOK;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnLockOK_Click;
			Button button = _btnLockOK;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnLockOK = value;
			button = _btnLockOK;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("ckbtnChangePassNew")]
	internal virtual CheckBox ckbtnChangePassNew
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckbtnChangePass")]
	internal virtual CheckBox ckbtnChangePass
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("TabPage17")]
	internal virtual TabPage TabPage17
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkAutoMain")]
	internal virtual CheckBox chkAutoMain
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnAutoVC_SeresWtop
	{
		[CompilerGenerated]
		get
		{
			return _btnAutoVC_SeresWtop;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnAutoVC_SeresWtop_Click;
			Button button = _btnAutoVC_SeresWtop;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnAutoVC_SeresWtop = value;
			button = _btnAutoVC_SeresWtop;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("tabpoints")]
	internal virtual TabPage tabpoints
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnAutoVC_ChargePoints
	{
		[CompilerGenerated]
		get
		{
			return _btnAutoVC_ChargePoints;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnAutoVC_ChargePoints_Click;
			Button button = _btnAutoVC_ChargePoints;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnAutoVC_ChargePoints = value;
			button = _btnAutoVC_ChargePoints;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label69")]
	internal virtual Label Label69
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblMainPoints")]
	internal virtual Label lblMainPoints
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label71")]
	internal virtual Label Label71
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtPointsValue")]
	internal virtual TextBox txtPointsValue
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox lblNum8
	{
		[CompilerGenerated]
		get
		{
			return _lblNum8;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			TextBox textBox = _lblNum8;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_lblNum8 = value;
			textBox = _lblNum8;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	internal virtual TextBox lblNum7
	{
		[CompilerGenerated]
		get
		{
			return _lblNum7;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			TextBox textBox = _lblNum7;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_lblNum7 = value;
			textBox = _lblNum7;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtPointsF")]
	internal virtual TextBox txtPointsF
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtPointsS")]
	internal virtual TextBox txtPointsS
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkCh8")]
	internal virtual CheckBox chkCh8
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("chkCh7")]
	internal virtual CheckBox chkCh7
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtRet07")]
	internal virtual TextBox txtRet07
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtRet08")]
	internal virtual TextBox txtRet08
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckPrint")]
	internal virtual CheckBox ckPrint
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("tabOcash")]
	internal virtual TabPage tabOcash
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtOCchargeNum4
	{
		[CompilerGenerated]
		get
		{
			return _txtOCchargeNum4;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			TextBox textBox = _txtOCchargeNum4;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtOCchargeNum4 = value;
			textBox = _txtOCchargeNum4;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	internal virtual TextBox txtOCchargeNum3
	{
		[CompilerGenerated]
		get
		{
			return _txtOCchargeNum3;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			TextBox textBox = _txtOCchargeNum3;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtOCchargeNum3 = value;
			textBox = _txtOCchargeNum3;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	internal virtual TextBox txtOCchargeNum2
	{
		[CompilerGenerated]
		get
		{
			return _txtOCchargeNum2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			TextBox textBox = _txtOCchargeNum2;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtOCchargeNum2 = value;
			textBox = _txtOCchargeNum2;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	internal virtual Button btnOCExchange
	{
		[CompilerGenerated]
		get
		{
			return _btnOCExchange;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCExchange_Click;
			Button button = _btnOCExchange;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCExchange = value;
			button = _btnOCExchange;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnOCSeries
	{
		[CompilerGenerated]
		get
		{
			return _btnOCSeries;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCSeries_Click;
			Button button = _btnOCSeries;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCSeries = value;
			button = _btnOCSeries;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtOCTopValue")]
	internal virtual TextBox txtOCTopValue
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnOCfromMtoN
	{
		[CompilerGenerated]
		get
		{
			return _btnOCfromMtoN;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCfromMtoN_Click;
			Button button = _btnOCfromMtoN;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCfromMtoN = value;
			button = _btnOCfromMtoN;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnOCTopup
	{
		[CompilerGenerated]
		get
		{
			return _btnOCTopup;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCTopup_Click;
			Button button = _btnOCTopup;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCTopup = value;
			button = _btnOCTopup;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label72")]
	internal virtual Label Label72
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label73")]
	internal virtual Label Label73
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Label Label74
	{
		[CompilerGenerated]
		get
		{
			return _Label74;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = Label74_DoubleClick;
			Label label = _Label74;
			if (label != null)
			{
				label.DoubleClick -= value2;
			}
			_Label74 = value;
			label = _Label74;
			if (label != null)
			{
				label.DoubleClick += value2;
			}
		}
	}

	internal virtual TextBox txtOCchargeNum1
	{
		[CompilerGenerated]
		get
		{
			return _txtOCchargeNum1;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			EventHandler value3 = txtOCchargeNum1_TextChanged;
			EventHandler value4 = txtOCchargeNum1_DoubleClick;
			TextBox textBox = _txtOCchargeNum1;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
				textBox.TextChanged -= value3;
				textBox.DoubleClick -= value4;
			}
			_txtOCchargeNum1 = value;
			textBox = _txtOCchargeNum1;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
				textBox.TextChanged += value3;
				textBox.DoubleClick += value4;
			}
		}
	}

	internal virtual TextBox txtOCNextMain
	{
		[CompilerGenerated]
		get
		{
			return _txtOCNextMain;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			KeyPressEventHandler value3 = txtTransNum2365_n_KeyPress;
			EventHandler value4 = txtOCNextMain_TextChanged;
			TextBox textBox = _txtOCNextMain;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
				textBox.KeyPress -= value3;
				textBox.TextChanged -= value4;
			}
			_txtOCNextMain = value;
			textBox = _txtOCNextMain;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
				textBox.KeyPress += value3;
				textBox.TextChanged += value4;
			}
		}
	}

	[field: AccessedThroughProperty("Label76")]
	internal virtual Label Label76
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOCValue")]
	internal virtual TextBox txtOCValue
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("tabOCMaster")]
	internal virtual TabPage tabOCMaster
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("tabOCSetup")]
	internal virtual TabPage tabOCSetup
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtOCchargeNum6
	{
		[CompilerGenerated]
		get
		{
			return _txtOCchargeNum6;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			TextBox textBox = _txtOCchargeNum6;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtOCchargeNum6 = value;
			textBox = _txtOCchargeNum6;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	internal virtual TextBox txtOCchargeNum5
	{
		[CompilerGenerated]
		get
		{
			return _txtOCchargeNum5;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			TextBox textBox = _txtOCchargeNum5;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtOCchargeNum5 = value;
			textBox = _txtOCchargeNum5;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	internal virtual CheckBox ckOCEditPass
	{
		[CompilerGenerated]
		get
		{
			return _ckOCEditPass;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _ckOCEditPass;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_ckOCEditPass = value;
			checkBox = _ckOCEditPass;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	internal virtual Button btnOCEditPass
	{
		[CompilerGenerated]
		get
		{
			return _btnOCEditPass;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCEditPass_Click;
			Button button = _btnOCEditPass;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCEditPass = value;
			button = _btnOCEditPass;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label78")]
	internal virtual Label Label78
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOCNewPass")]
	internal virtual TextBox txtOCNewPass
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label77")]
	internal virtual Label Label77
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOCPass")]
	internal virtual TextBox txtOCPass
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckOCSub")]
	internal virtual CheckBox ckOCSub
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOCSub")]
	internal virtual TextBox txtOCSub
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnOCGetBal
	{
		[CompilerGenerated]
		get
		{
			return _btnOCGetBal;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCGetBal_Click;
			Button button = _btnOCGetBal;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCGetBal = value;
			button = _btnOCGetBal;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual CheckBox ckbtnOCTopup
	{
		[CompilerGenerated]
		get
		{
			return _ckbtnOCTopup;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _ckbtnOCTopup;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_ckbtnOCTopup = value;
			checkBox = _ckbtnOCTopup;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	internal virtual Label lblOCv20
	{
		[CompilerGenerated]
		get
		{
			return _lblOCv20;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblOCvx_Click;
			Label label = _lblOCv20;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblOCv20 = value;
			label = _lblOCv20;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lblOCv15
	{
		[CompilerGenerated]
		get
		{
			return _lblOCv15;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblOCvx_Click;
			Label label = _lblOCv15;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblOCv15 = value;
			label = _lblOCv15;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lblOCv10
	{
		[CompilerGenerated]
		get
		{
			return _lblOCv10;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblOCvx_Click;
			Label label = _lblOCv10;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblOCv10 = value;
			label = _lblOCv10;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lblOCv5
	{
		[CompilerGenerated]
		get
		{
			return _lblOCv5;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblOCvx_Click;
			Label label = _lblOCv5;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblOCv5 = value;
			label = _lblOCv5;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("ckOCSubAuto")]
	internal virtual CheckBox ckOCSubAuto
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual CheckBox ckbtnOCSeries
	{
		[CompilerGenerated]
		get
		{
			return _ckbtnOCSeries;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _ckbtnOCSeries;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_ckbtnOCSeries = value;
			checkBox = _ckbtnOCSeries;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	internal virtual Button btnONtopup
	{
		[CompilerGenerated]
		get
		{
			return _btnONtopup;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnTransGiftAuto_Click;
			Button button = _btnONtopup;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnONtopup = value;
			button = _btnONtopup;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnONGift
	{
		[CompilerGenerated]
		get
		{
			return _btnONGift;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnONGift_Click;
			Button button = _btnONGift;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnONGift = value;
			button = _btnONGift;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnPrintRest
	{
		[CompilerGenerated]
		get
		{
			return _btnPrintRest;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnPrintRest_Click;
			Button button = _btnPrintRest;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnPrintRest = value;
			button = _btnPrintRest;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtPrintPd")]
	internal virtual TextBox txtPrintPd
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("tabTayer")]
	internal virtual TabPage tabTayer
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("btnAutoVC_ChargeTayer")]
	internal virtual Button btnAutoVC_ChargeTayer
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label70")]
	internal virtual Label Label70
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtTayerPass")]
	internal virtual TextBox txtTayerPass
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckTayerSub")]
	internal virtual CheckBox ckTayerSub
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtTayerSub")]
	internal virtual TextBox txtTayerSub
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnTayerEX
	{
		[CompilerGenerated]
		get
		{
			return _btnTayerEX;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTayerEX_Click;
			Button button = _btnTayerEX;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTayerEX = value;
			button = _btnTayerEX;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnTayerSeries
	{
		[CompilerGenerated]
		get
		{
			return _btnTayerSeries;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTayerSeries_Click;
			Button button = _btnTayerSeries;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTayerSeries = value;
			button = _btnTayerSeries;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label75")]
	internal virtual Label Label75
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label79")]
	internal virtual Label Label79
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtTayerNextMain
	{
		[CompilerGenerated]
		get
		{
			return _txtTayerNextMain;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			TextBox textBox = _txtTayerNextMain;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtTayerNextMain = value;
			textBox = _txtTayerNextMain;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblTayerMain")]
	internal virtual Label lblTayerMain
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label81")]
	internal virtual Label Label81
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtTayerValue")]
	internal virtual TextBox txtTayerValue
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnTayerGetBal
	{
		[CompilerGenerated]
		get
		{
			return _btnTayerGetBal;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTayerGetBal_Click;
			Button button = _btnTayerGetBal;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTayerGetBal = value;
			button = _btnTayerGetBal;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label80")]
	internal virtual Label Label80
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("TextBox1")]
	internal virtual TextBox TextBox1
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnTayerfromMtoN
	{
		[CompilerGenerated]
		get
		{
			return _btnTayerfromMtoN;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTayerfromMtoN_Click;
			Button button = _btnTayerfromMtoN;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTayerfromMtoN = value;
			button = _btnTayerfromMtoN;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("ckTayerGetBal")]
	internal virtual CheckBox ckTayerGetBal
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtTayerF")]
	internal virtual TextBox txtTayerF
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtTayerS")]
	internal virtual TextBox txtTayerS
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("CheckBox2")]
	internal virtual CheckBox CheckBox2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckbtnTayerSeries")]
	internal virtual CheckBox ckbtnTayerSeries
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual CheckBox ckbtnOCGetBal
	{
		[CompilerGenerated]
		get
		{
			return _ckbtnOCGetBal;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _ckbtnOCGetBal;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_ckbtnOCGetBal = value;
			checkBox = _ckbtnOCGetBal;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label82")]
	internal virtual Label Label82
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckbtnTayerPullAllBals")]
	internal virtual CheckBox ckbtnTayerPullAllBals
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnTayerPullAllBals
	{
		[CompilerGenerated]
		get
		{
			return _btnTayerPullAllBals;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTayerPullAllBals_Click;
			Button button = _btnTayerPullAllBals;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTayerPullAllBals = value;
			button = _btnTayerPullAllBals;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label83")]
	internal virtual Label Label83
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOCPassMaster")]
	internal virtual TextBox txtOCPassMaster
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual CheckBox ckbtnOCMSeries
	{
		[CompilerGenerated]
		get
		{
			return _ckbtnOCMSeries;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _ckbtnOCMSeries;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_ckbtnOCMSeries = value;
			checkBox = _ckbtnOCMSeries;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	internal virtual Button btnOCMSeries
	{
		[CompilerGenerated]
		get
		{
			return _btnOCMSeries;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCMSeries_Click;
			Button button = _btnOCMSeries;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCMSeries = value;
			button = _btnOCMSeries;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label85")]
	internal virtual Label Label85
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label87")]
	internal virtual Label Label87
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOCMValue")]
	internal virtual TextBox txtOCMValue
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnOCMGetBal
	{
		[CompilerGenerated]
		get
		{
			return _btnOCMGetBal;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCMGetBal_Click;
			Button button = _btnOCMGetBal;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCMGetBal = value;
			button = _btnOCMGetBal;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnOCGetBal2
	{
		[CompilerGenerated]
		get
		{
			return _btnOCGetBal2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCGetBal2_Click;
			Button button = _btnOCGetBal2;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCGetBal2 = value;
			button = _btnOCGetBal2;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtLoopSSDOC")]
	internal virtual TextBox txtLoopSSDOC
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtLoopFSDOC")]
	internal virtual TextBox txtLoopFSDOC
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label88")]
	internal virtual Label Label88
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOTyrPass")]
	internal virtual TextBox txtOTyrPass
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnAddCodeToTayer
	{
		[CompilerGenerated]
		get
		{
			return _btnAddCodeToTayer;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnAddCodeToTayer_Click;
			Button button = _btnAddCodeToTayer;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnAddCodeToTayer = value;
			button = _btnAddCodeToTayer;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtCodeTayer")]
	internal virtual TextBox txtCodeTayer
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnTayerKikOut
	{
		[CompilerGenerated]
		get
		{
			return _btnTayerKikOut;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTayerKikOut_Click;
			Button button = _btnTayerKikOut;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTayerKikOut = value;
			button = _btnTayerKikOut;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label90")]
	internal virtual Label Label90
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label92")]
	internal virtual Label Label92
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOCOldPass")]
	internal virtual TextBox txtOCOldPass
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMacro8")]
	internal virtual TextBox txtMacro8
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMacro7")]
	internal virtual TextBox txtMacro7
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMacro1")]
	internal virtual TextBox txtMacro1
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMacro6")]
	internal virtual TextBox txtMacro6
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMacro5")]
	internal virtual TextBox txtMacro5
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMacro2")]
	internal virtual TextBox txtMacro2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMacro3")]
	internal virtual TextBox txtMacro3
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMacro4")]
	internal virtual TextBox txtMacro4
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMacro16")]
	internal virtual TextBox txtMacro16
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMacro15")]
	internal virtual TextBox txtMacro15
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMacro9")]
	internal virtual TextBox txtMacro9
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMacro14")]
	internal virtual TextBox txtMacro14
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMacro13")]
	internal virtual TextBox txtMacro13
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMacro10")]
	internal virtual TextBox txtMacro10
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMacro11")]
	internal virtual TextBox txtMacro11
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtMacro12")]
	internal virtual TextBox txtMacro12
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnMacro
	{
		[CompilerGenerated]
		get
		{
			return _btnMacro;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnMacro_Click;
			Button button = _btnMacro;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnMacro = value;
			button = _btnMacro;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual CheckBox ckbtnMacro
	{
		[CompilerGenerated]
		get
		{
			return _ckbtnMacro;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _ckbtnMacro;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_ckbtnMacro = value;
			checkBox = _ckbtnMacro;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	[field: AccessedThroughProperty("ckbtnTransGiftAutoSpVal")]
	internal virtual CheckBox ckbtnTransGiftAutoSpVal
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckbtnTransGiftAuto")]
	internal virtual CheckBox ckbtnTransGiftAuto
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckbtnRun02Nm")]
	internal virtual CheckBox ckbtnRun02Nm
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckUseNextMain")]
	internal virtual CheckBox ckUseNextMain
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("tabvc2")]
	internal virtual TabPage tabvc2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Label lbl100
	{
		[CompilerGenerated]
		get
		{
			return _lbl100;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lbl05_Click;
			Label label = _lbl100;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lbl100 = value;
			label = _lbl100;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lbl35
	{
		[CompilerGenerated]
		get
		{
			return _lbl35;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lbl05_Click;
			Label label = _lbl35;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lbl35 = value;
			label = _lbl35;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lbl50
	{
		[CompilerGenerated]
		get
		{
			return _lbl50;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lbl05_Click;
			Label label = _lbl50;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lbl50 = value;
			label = _lbl50;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lbl45
	{
		[CompilerGenerated]
		get
		{
			return _lbl45;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lbl05_Click;
			Label label = _lbl45;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lbl45 = value;
			label = _lbl45;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lbl40
	{
		[CompilerGenerated]
		get
		{
			return _lbl40;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lbl05_Click;
			Label label = _lbl40;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lbl40 = value;
			label = _lbl40;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("ckbtnTransGiftAutoSpValAll")]
	internal virtual CheckBox ckbtnTransGiftAutoSpValAll
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnTransGiftAutoSpValAll
	{
		[CompilerGenerated]
		get
		{
			return _btnTransGiftAutoSpValAll;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTransGiftAutoSpValAll_Click;
			Button button = _btnTransGiftAutoSpValAll;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTransGiftAutoSpValAll = value;
			button = _btnTransGiftAutoSpValAll;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnUp
	{
		[CompilerGenerated]
		get
		{
			return _btnUp;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnUp_Click;
			Button button = _btnUp;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnUp = value;
			button = _btnUp;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnSADwn
	{
		[CompilerGenerated]
		get
		{
			return _btnSADwn;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnSADwn_Click;
			Button button = _btnSADwn;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnSADwn = value;
			button = _btnSADwn;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnRun02NmDwl
	{
		[CompilerGenerated]
		get
		{
			return _btnRun02NmDwl;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnRun02NmDwl_Click;
			Button button = _btnRun02NmDwl;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnRun02NmDwl = value;
			button = _btnRun02NmDwl;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label93")]
	internal virtual Label Label93
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOCAdd")]
	internal virtual TextBox txtOCAdd
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label94")]
	internal virtual Label Label94
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnOCTransferAll
	{
		[CompilerGenerated]
		get
		{
			return _btnOCTransferAll;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCTransferAll_Click;
			Button button = _btnOCTransferAll;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCTransferAll = value;
			button = _btnOCTransferAll;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual CheckBox ckbtnOCTransferAll
	{
		[CompilerGenerated]
		get
		{
			return _ckbtnOCTransferAll;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _ckbtnOCTransferAll;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_ckbtnOCTransferAll = value;
			checkBox = _ckbtnOCTransferAll;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	internal virtual TabPage tabOCGifts
	{
		[CompilerGenerated]
		get
		{
			return _tabOCGifts;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = tabOCGifts_Click;
			TabPage tabPage = _tabOCGifts;
			if (tabPage != null)
			{
				tabPage.Click -= value2;
			}
			_tabOCGifts = value;
			tabPage = _tabOCGifts;
			if (tabPage != null)
			{
				tabPage.Click += value2;
			}
		}
	}

	internal virtual Button btnOCGiftsCheck
	{
		[CompilerGenerated]
		get
		{
			return _btnOCGiftsCheck;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCGiftsCheck_Click;
			Button button = _btnOCGiftsCheck;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCGiftsCheck = value;
			button = _btnOCGiftsCheck;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual CheckBox ckbtnOCGiftsCheck
	{
		[CompilerGenerated]
		get
		{
			return _ckbtnOCGiftsCheck;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _ckbtnOCGiftsCheck;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_ckbtnOCGiftsCheck = value;
			checkBox = _ckbtnOCGiftsCheck;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtLoopSSOCG")]
	internal virtual TextBox txtLoopSSOCG
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtLoopFSOCG")]
	internal virtual TextBox txtLoopFSOCG
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnOCApply58
	{
		[CompilerGenerated]
		get
		{
			return _btnOCApply58;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCApply58_Click;
			Button button = _btnOCApply58;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCApply58 = value;
			button = _btnOCApply58;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual CheckBox ckbtnOCGiftsCheckConf
	{
		[CompilerGenerated]
		get
		{
			return _ckbtnOCGiftsCheckConf;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _ckbtnOCGiftsCheckConf;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_ckbtnOCGiftsCheckConf = value;
			checkBox = _ckbtnOCGiftsCheckConf;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	internal virtual Button btnOCGiftsCheckConf
	{
		[CompilerGenerated]
		get
		{
			return _btnOCGiftsCheckConf;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCGiftsCheckConf_Click;
			Button button = _btnOCGiftsCheckConf;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCGiftsCheckConf = value;
			button = _btnOCGiftsCheckConf;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnCC
	{
		[CompilerGenerated]
		get
		{
			return _btnCC;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnCC_Click;
			Button button = _btnCC;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnCC = value;
			button = _btnCC;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual CheckBox ckbtnOCApply58
	{
		[CompilerGenerated]
		get
		{
			return _ckbtnOCApply58;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _ckbtnOCApply58;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_ckbtnOCApply58 = value;
			checkBox = _ckbtnOCApply58;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	[field: AccessedThroughProperty("tabOCCon")]
	internal virtual TabPage tabOCCon
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Label lblOCv90
	{
		[CompilerGenerated]
		get
		{
			return _lblOCv90;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblOCvx_Click;
			Label label = _lblOCv90;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblOCv90 = value;
			label = _lblOCv90;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lblOCv85
	{
		[CompilerGenerated]
		get
		{
			return _lblOCv85;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblOCvx_Click;
			Label label = _lblOCv85;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblOCv85 = value;
			label = _lblOCv85;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lblOCv75
	{
		[CompilerGenerated]
		get
		{
			return _lblOCv75;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblOCvx_Click;
			Label label = _lblOCv75;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblOCv75 = value;
			label = _lblOCv75;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lblOCv65
	{
		[CompilerGenerated]
		get
		{
			return _lblOCv65;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblOCvx_Click;
			Label label = _lblOCv65;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblOCv65 = value;
			label = _lblOCv65;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lblOCv50
	{
		[CompilerGenerated]
		get
		{
			return _lblOCv50;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblOCvx_Click;
			Label label = _lblOCv50;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblOCv50 = value;
			label = _lblOCv50;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lblOCv45
	{
		[CompilerGenerated]
		get
		{
			return _lblOCv45;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblOCvx_Click;
			Label label = _lblOCv45;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblOCv45 = value;
			label = _lblOCv45;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lblOCv35
	{
		[CompilerGenerated]
		get
		{
			return _lblOCv35;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblOCvx_Click;
			Label label = _lblOCv35;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblOCv35 = value;
			label = _lblOCv35;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lblOCv25
	{
		[CompilerGenerated]
		get
		{
			return _lblOCv25;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblOCvx_Click;
			Label label = _lblOCv25;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblOCv25 = value;
			label = _lblOCv25;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lblOCvTotal
	{
		[CompilerGenerated]
		get
		{
			return _lblOCvTotal;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblOCvx_Click;
			Label label = _lblOCvTotal;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblOCvTotal = value;
			label = _lblOCvTotal;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lblOCvsub
	{
		[CompilerGenerated]
		get
		{
			return _lblOCvsub;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblOCvsub_Click;
			Label label = _lblOCvsub;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblOCvsub = value;
			label = _lblOCvsub;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lblOCvPlus
	{
		[CompilerGenerated]
		get
		{
			return _lblOCvPlus;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblOCvPlus_Click;
			Label label = _lblOCvPlus;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblOCvPlus = value;
			label = _lblOCvPlus;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	internal virtual Label lblOCv100
	{
		[CompilerGenerated]
		get
		{
			return _lblOCv100;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblOCvx_Click;
			Label label = _lblOCv100;
			if (label != null)
			{
				label.Click -= value2;
			}
			_lblOCv100 = value;
			label = _lblOCv100;
			if (label != null)
			{
				label.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("CheckBox1")]
	internal virtual CheckBox CheckBox1
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnOCTransferSame
	{
		[CompilerGenerated]
		get
		{
			return _btnOCTransferSame;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCTransferSame_Click;
			Button button = _btnOCTransferSame;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCTransferSame = value;
			button = _btnOCTransferSame;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtOCValueSame")]
	internal virtual TextBox txtOCValueSame
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label95")]
	internal virtual Label Label95
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckbtnOCSeriesMT")]
	internal virtual CheckBox ckbtnOCSeriesMT
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnOCSeriesMT
	{
		[CompilerGenerated]
		get
		{
			return _btnOCSeriesMT;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCSeriesMT_Click;
			Button button = _btnOCSeriesMT;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCSeriesMT = value;
			button = _btnOCSeriesMT;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtOCValueMT5")]
	internal virtual TextBox txtOCValueMT5
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label100")]
	internal virtual Label Label100
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOCValueMT4")]
	internal virtual TextBox txtOCValueMT4
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label99")]
	internal virtual Label Label99
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOCValueMT3")]
	internal virtual TextBox txtOCValueMT3
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label98")]
	internal virtual Label Label98
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOCValueMT2")]
	internal virtual TextBox txtOCValueMT2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label97")]
	internal virtual Label Label97
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOCValueMT1")]
	internal virtual TextBox txtOCValueMT1
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label96")]
	internal virtual Label Label96
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label101")]
	internal virtual Label Label101
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOCMCount")]
	internal virtual TextBox txtOCMCount
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckbtnOCFromMasterToAll")]
	internal virtual CheckBox ckbtnOCFromMasterToAll
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnOCFromMasterToAll
	{
		[CompilerGenerated]
		get
		{
			return _btnOCFromMasterToAll;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCFromMasterToAll_Click;
			Button button = _btnOCFromMasterToAll;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCFromMasterToAll = value;
			button = _btnOCFromMasterToAll;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnOCGetBalPAy
	{
		[CompilerGenerated]
		get
		{
			return _btnOCGetBalPAy;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCGetBal_Click;
			Button button = _btnOCGetBalPAy;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCGetBalPAy = value;
			button = _btnOCGetBalPAy;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("ckOCBalWithBack")]
	internal virtual CheckBox ckOCBalWithBack
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label105")]
	internal virtual Label Label105
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOCTransferSub")]
	internal virtual TextBox txtOCTransferSub
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnOCGetBalPAy2
	{
		[CompilerGenerated]
		get
		{
			return _btnOCGetBalPAy2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCGetBal_Click;
			Button button = _btnOCGetBalPAy2;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCGetBalPAy2 = value;
			button = _btnOCGetBalPAy2;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtLoopSSDOCPaySr")]
	internal virtual TextBox txtLoopSSDOCPaySr
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtLoopFSDOCPAYSr")]
	internal virtual TextBox txtLoopFSDOCPAYSr
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual CheckBox ckbtnOCMSerieAccept
	{
		[CompilerGenerated]
		get
		{
			return _ckbtnOCMSerieAccept;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _ckbtnOCMSerieAccept;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_ckbtnOCMSerieAccept = value;
			checkBox = _ckbtnOCMSerieAccept;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	internal virtual Button btnOCMSerieAccept
	{
		[CompilerGenerated]
		get
		{
			return _btnOCMSerieAccept;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCMSerieAccept_Click;
			Button button = _btnOCMSerieAccept;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCMSerieAccept = value;
			button = _btnOCMSerieAccept;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual TextBox txtOCNumber
	{
		[CompilerGenerated]
		get
		{
			return _txtOCNumber;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = txtOCNumber_TextChanged;
			KeyPressEventHandler value3 = txtOCNumber_KeyPress;
			TextBox textBox = _txtOCNumber;
			if (textBox != null)
			{
				textBox.TextChanged -= value2;
				textBox.KeyPress -= value3;
			}
			_txtOCNumber = value;
			textBox = _txtOCNumber;
			if (textBox != null)
			{
				textBox.TextChanged += value2;
				textBox.KeyPress += value3;
			}
		}
	}

	[field: AccessedThroughProperty("lstOCNumbers")]
	internal virtual ListBox lstOCNumbers
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblCountPre")]
	internal virtual Label lblCountPre
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnClearOC
	{
		[CompilerGenerated]
		get
		{
			return _btnClearOC;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnClearOC_Click_1;
			Button button = _btnClearOC;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnClearOC = value;
			button = _btnClearOC;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnDelOnePre
	{
		[CompilerGenerated]
		get
		{
			return _btnDelOnePre;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnDelOnePre_Click;
			Button button = _btnDelOnePre;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnDelOnePre = value;
			button = _btnDelOnePre;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblOCDone")]
	internal virtual Label lblOCDone
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnTayerCharge
	{
		[CompilerGenerated]
		get
		{
			return _btnTayerCharge;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTayerCharge_Click;
			Button button = _btnTayerCharge;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTayerCharge = value;
			button = _btnTayerCharge;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnOCMSeriesInput
	{
		[CompilerGenerated]
		get
		{
			return _btnOCMSeriesInput;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCMSeriesInput_Click;
			Button button = _btnOCMSeriesInput;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCMSeriesInput = value;
			button = _btnOCMSeriesInput;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnOCMSerieAcceptInput
	{
		[CompilerGenerated]
		get
		{
			return _btnOCMSerieAcceptInput;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCMSerieAcceptInput_Click;
			Button button = _btnOCMSerieAcceptInput;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCMSerieAcceptInput = value;
			button = _btnOCMSerieAcceptInput;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtOCInput")]
	internal virtual TextBox txtOCInput
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnVV
	{
		[CompilerGenerated]
		get
		{
			return _btnVV;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnVV_Click;
			Button button = _btnVV;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnVV = value;
			button = _btnVV;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button BtnOO
	{
		[CompilerGenerated]
		get
		{
			return _BtnOO;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = BtnOO_Click;
			Button button = _BtnOO;
			if (button != null)
			{
				button.Click -= value2;
			}
			_BtnOO = value;
			button = _BtnOO;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtTopUpOrangeValue")]
	internal virtual TextBox txtTopUpOrangeValue
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtOCtopupDelay")]
	internal virtual TextBox txtOCtopupDelay
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnOCTopUpMulti
	{
		[CompilerGenerated]
		get
		{
			return _btnOCTopUpMulti;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCTopUpMulti_Click;
			Button button = _btnOCTopUpMulti;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCTopUpMulti = value;
			button = _btnOCTopUpMulti;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtOCtopupDelayM")]
	internal virtual TextBox txtOCtopupDelayM
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnAddNumbersToOC
	{
		[CompilerGenerated]
		get
		{
			return _btnAddNumbersToOC;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnAddNumbersToOC_Click;
			Button button = _btnAddNumbersToOC;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnAddNumbersToOC = value;
			button = _btnAddNumbersToOC;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual TextBox lblOCMMain
	{
		[CompilerGenerated]
		get
		{
			return _lblOCMMain;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = lblOCMMain_TextChanged;
			TextBox textBox = _lblOCMMain;
			if (textBox != null)
			{
				textBox.TextChanged -= value2;
			}
			_lblOCMMain = value;
			textBox = _lblOCMMain;
			if (textBox != null)
			{
				textBox.TextChanged += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtOCtopupDelayM2")]
	internal virtual TextBox txtOCtopupDelayM2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual CheckBox ckbtnTrans100
	{
		[CompilerGenerated]
		get
		{
			return _ckbtnTrans100;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _ckbtnTrans100;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_ckbtnTrans100 = value;
			checkBox = _ckbtnTrans100;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	internal virtual Button btnTrans100
	{
		[CompilerGenerated]
		get
		{
			return _btnTrans100;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTrans100_Click;
			Button button = _btnTrans100;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTrans100 = value;
			button = _btnTrans100;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual CheckBox ckbtnTrans1000
	{
		[CompilerGenerated]
		get
		{
			return _ckbtnTrans1000;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _ckbtnTrans1000;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_ckbtnTrans1000 = value;
			checkBox = _ckbtnTrans1000;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	internal virtual Button btnTrans1000
	{
		[CompilerGenerated]
		get
		{
			return _btnTrans1000;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTrans1000_Click;
			Button button = _btnTrans1000;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTrans1000 = value;
			button = _btnTrans1000;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual CheckBox ckbtnTranstop
	{
		[CompilerGenerated]
		get
		{
			return _ckbtnTranstop;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _ckbtnTranstop;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_ckbtnTranstop = value;
			checkBox = _ckbtnTranstop;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	internal virtual Button btnTranstop
	{
		[CompilerGenerated]
		get
		{
			return _btnTranstop;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTranstop_Click;
			Button button = _btnTranstop;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTranstop = value;
			button = _btnTranstop;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblOCMain")]
	internal virtual TextBox lblOCMain
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lblLastCheck")]
	internal virtual Label lblLastCheck
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual CheckBox ckbtnGetNormalBal
	{
		[CompilerGenerated]
		get
		{
			return _ckbtnGetNormalBal;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _ckbtnGetNormalBal;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_ckbtnGetNormalBal = value;
			checkBox = _ckbtnGetNormalBal;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	internal virtual Button btnGetNormalBal
	{
		[CompilerGenerated]
		get
		{
			return _btnGetNormalBal;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnGetNormalBal_Click;
			Button button = _btnGetNormalBal;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnGetNormalBal = value;
			button = _btnGetNormalBal;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("ckbtnOCSeriesGetBalAfter")]
	internal virtual CheckBox ckbtnOCSeriesGetBalAfter
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckbtnOCSeriesGetBalBEfore")]
	internal virtual CheckBox ckbtnOCSeriesGetBalBEfore
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("tabEzoo")]
	internal virtual TabPage tabEzoo
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnTal2aTransferFromOrange
	{
		[CompilerGenerated]
		get
		{
			return _btnTal2aTransferFromOrange;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTal2aTransferFromOrange_Click;
			Button button = _btnTal2aTransferFromOrange;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTal2aTransferFromOrange = value;
			button = _btnTal2aTransferFromOrange;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label102")]
	internal virtual Label Label102
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtTl2aOrangeValue")]
	internal virtual TextBox txtTl2aOrangeValue
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnTal2aTransferVoda
	{
		[CompilerGenerated]
		get
		{
			return _btnTal2aTransferVoda;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTal2aTransferVoda_Click;
			Button button = _btnTal2aTransferVoda;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTal2aTransferVoda = value;
			button = _btnTal2aTransferVoda;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnTal2aGetBal
	{
		[CompilerGenerated]
		get
		{
			return _btnTal2aGetBal;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTal2aGetBal_Click;
			Button button = _btnTal2aGetBal;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTal2aGetBal = value;
			button = _btnTal2aGetBal;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label86")]
	internal virtual Label Label86
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtTl2aToVodaNumber")]
	internal virtual TextBox txtTl2aToVodaNumber
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtTl2aVodaValue")]
	internal virtual TextBox txtTl2aVodaValue
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckTal2a")]
	internal virtual CheckBox ckTal2a
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckbtnTal2aGetBal")]
	internal virtual CheckBox ckbtnTal2aGetBal
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual CheckBox ckbtnVodaAuto365
	{
		[CompilerGenerated]
		get
		{
			return _ckbtnVodaAuto365;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _ckbtnVodaAuto365;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_ckbtnVodaAuto365 = value;
			checkBox = _ckbtnVodaAuto365;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	internal virtual Button btnVodaAuto365
	{
		[CompilerGenerated]
		get
		{
			return _btnVodaAuto365;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnVodaAuto365_Click;
			Button button = _btnVodaAuto365;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnVodaAuto365 = value;
			button = _btnVodaAuto365;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("ckbtnOtransRun")]
	internal virtual CheckBox ckbtnOtransRun
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckbtnGetOrngBal")]
	internal virtual CheckBox ckbtnGetOrngBal
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label84")]
	internal virtual Label Label84
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtEtsCashPass")]
	internal virtual TextBox txtEtsCashPass
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtPrintStr")]
	internal virtual TextBox txtPrintStr
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnPrintstr
	{
		[CompilerGenerated]
		get
		{
			return _btnPrintstr;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnPrintstr_Click;
			Button button = _btnPrintstr;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnPrintstr = value;
			button = _btnPrintstr;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual TextBox txtOCchargeNumOne
	{
		[CompilerGenerated]
		get
		{
			return _txtOCchargeNumOne;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			TextBox textBox = _txtOCchargeNumOne;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtOCchargeNumOne = value;
			textBox = _txtOCchargeNumOne;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	[field: AccessedThroughProperty("ckbtnOCTopupOne")]
	internal virtual CheckBox ckbtnOCTopupOne
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnOCTopupOne
	{
		[CompilerGenerated]
		get
		{
			return _btnOCTopupOne;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCTopupOne_Click;
			Button button = _btnOCTopupOne;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCTopupOne = value;
			button = _btnOCTopupOne;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual CheckBox ckbtnOCMAuto
	{
		[CompilerGenerated]
		get
		{
			return _ckbtnOCMAuto;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _ckbtnOCMAuto;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_ckbtnOCMAuto = value;
			checkBox = _ckbtnOCMAuto;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	internal virtual Button btnOCMAuto
	{
		[CompilerGenerated]
		get
		{
			return _btnOCMAuto;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCMAuto_Click;
			Button button = _btnOCMAuto;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCMAuto = value;
			button = _btnOCMAuto;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("ckbtnOCGetBalPAy2")]
	internal virtual CheckBox ckbtnOCGetBalPAy2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("cktxtDelayInSC")]
	internal virtual CheckBox cktxtDelayInSC
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckbtnGetBal2EC")]
	internal virtual CheckBox ckbtnGetBal2EC
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnAutoVCnormECOne
	{
		[CompilerGenerated]
		get
		{
			return _btnAutoVCnormECOne;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnAutoVCnormECOne_Click;
			Button button = _btnAutoVCnormECOne;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnAutoVCnormECOne = value;
			button = _btnAutoVCnormECOne;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual CheckBox ckbtnVodaCashFreeTransfer
	{
		[CompilerGenerated]
		get
		{
			return _ckbtnVodaCashFreeTransfer;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = ckbtnOCMAuto_CheckedChanged;
			CheckBox checkBox = _ckbtnVodaCashFreeTransfer;
			if (checkBox != null)
			{
				checkBox.CheckedChanged -= value2;
			}
			_ckbtnVodaCashFreeTransfer = value;
			checkBox = _ckbtnVodaCashFreeTransfer;
			if (checkBox != null)
			{
				checkBox.CheckedChanged += value2;
			}
		}
	}

	internal virtual Button btnVodaCashFreeTransfer
	{
		[CompilerGenerated]
		get
		{
			return _btnVodaCashFreeTransfer;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnVodaCashFreeTransfer_Click;
			Button button = _btnVodaCashFreeTransfer;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnVodaCashFreeTransfer = value;
			button = _btnVodaCashFreeTransfer;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("ckbtnOCFreeTransfer")]
	internal virtual CheckBox ckbtnOCFreeTransfer
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnOCFreeTransfer
	{
		[CompilerGenerated]
		get
		{
			return _btnOCFreeTransfer;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnOCFreeTransfer_Click;
			Button button = _btnOCFreeTransfer;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnOCFreeTransfer = value;
			button = _btnOCFreeTransfer;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual TextBox txtOCTransferAll
	{
		[CompilerGenerated]
		get
		{
			return _txtOCTransferAll;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			TextBox textBox = _txtOCTransferAll;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtOCTransferAll = value;
			textBox = _txtOCTransferAll;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtOCtopupDelayCash")]
	internal virtual TextBox txtOCtopupDelayCash
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("TabPage11")]
	internal virtual TabPage TabPage11
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnAddNumbersToOCsms
	{
		[CompilerGenerated]
		get
		{
			return _btnAddNumbersToOCsms;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnAddNumbersToOC_Click;
			Button button = _btnAddNumbersToOCsms;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnAddNumbersToOCsms = value;
			button = _btnAddNumbersToOCsms;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblCountPresms")]
	internal virtual Label lblCountPresms
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnClearOCsms
	{
		[CompilerGenerated]
		get
		{
			return _btnClearOCsms;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnClearOCsms_Click;
			Button button = _btnClearOCsms;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnClearOCsms = value;
			button = _btnClearOCsms;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblOCDonesms")]
	internal virtual Label lblOCDonesms
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtOCNumbersms
	{
		[CompilerGenerated]
		get
		{
			return _txtOCNumbersms;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = txtOCNumbersms_TextChanged;
			KeyPressEventHandler value3 = txtOCNumbersms_KeyPress;
			TextBox textBox = _txtOCNumbersms;
			if (textBox != null)
			{
				textBox.TextChanged -= value2;
				textBox.KeyPress -= value3;
			}
			_txtOCNumbersms = value;
			textBox = _txtOCNumbersms;
			if (textBox != null)
			{
				textBox.TextChanged += value2;
				textBox.KeyPress += value3;
			}
		}
	}

	[field: AccessedThroughProperty("lstOCNumberssms")]
	internal virtual ListBox lstOCNumberssms
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtLoopSsms")]
	internal virtual TextBox txtLoopSsms
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtLoopFsms")]
	internal virtual TextBox txtLoopFsms
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckbtnSendSmsToNumber")]
	internal virtual CheckBox ckbtnSendSmsToNumber
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtSMStothisnumber")]
	internal virtual TextBox txtSMStothisnumber
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtSmsWait")]
	internal virtual TextBox txtSmsWait
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnSendSmsToNumber
	{
		[CompilerGenerated]
		get
		{
			return _btnSendSmsToNumber;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnSendSmsToNumber_Click;
			Button button = _btnSendSmsToNumber;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnSendSmsToNumber = value;
			button = _btnSendSmsToNumber;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label23")]
	internal virtual Label Label23
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btn2G
	{
		[CompilerGenerated]
		get
		{
			return _btn2G;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btn2G_Click;
			Button button = _btn2G;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btn2G = value;
			button = _btn2G;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual TextBox txtWebSign
	{
		[CompilerGenerated]
		get
		{
			return _txtWebSign;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = txtWebSign_TextChanged;
			TextBox textBox = _txtWebSign;
			if (textBox != null)
			{
				textBox.TextChanged -= value2;
			}
			_txtWebSign = value;
			textBox = _txtWebSign;
			if (textBox != null)
			{
				textBox.TextChanged += value2;
			}
		}
	}

	[field: AccessedThroughProperty("tabServer")]
	internal virtual TabPage tabServer
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label32")]
	internal virtual Label Label32
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtWebQryOperator")]
	internal virtual TextBox txtWebQryOperator
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtWebQrySign
	{
		[CompilerGenerated]
		get
		{
			return _txtWebQrySign;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = txtWebQrySign_TextChanged;
			TextBox textBox = _txtWebQrySign;
			if (textBox != null)
			{
				textBox.TextChanged -= value2;
			}
			_txtWebQrySign = value;
			textBox = _txtWebQrySign;
			if (textBox != null)
			{
				textBox.TextChanged += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lblQryCount")]
	internal virtual Label lblQryCount
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label91")]
	internal virtual Label Label91
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtWebQryMonth")]
	internal virtual TextBox txtWebQryMonth
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label34")]
	internal virtual Label Label34
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtWebQryDay")]
	internal virtual TextBox txtWebQryDay
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("lstWebQry")]
	internal virtual ListBox lstWebQry
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label33")]
	internal virtual Label Label33
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnwebQry
	{
		[CompilerGenerated]
		get
		{
			return _btnwebQry;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnwebQry_Click;
			Button button = _btnwebQry;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnwebQry = value;
			button = _btnwebQry;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnSaveASqry
	{
		[CompilerGenerated]
		get
		{
			return _btnSaveASqry;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnSaveASqry_Click;
			Button button = _btnSaveASqry;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnSaveASqry = value;
			button = _btnSaveASqry;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnExport2qry
	{
		[CompilerGenerated]
		get
		{
			return _btnExport2qry;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnExport2qry_Click;
			Button button = _btnExport2qry;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnExport2qry = value;
			button = _btnExport2qry;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("lbladdedtoQry")]
	internal virtual Label lbladdedtoQry
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label103")]
	internal virtual Label Label103
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtNumberToAddinRobot
	{
		[CompilerGenerated]
		get
		{
			return _txtNumberToAddinRobot;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = txtNumberToAddinRobot_TextChanged;
			KeyPressEventHandler value3 = txtNumberToAddinRobot_KeyPress;
			TextBox textBox = _txtNumberToAddinRobot;
			if (textBox != null)
			{
				textBox.TextChanged -= value2;
				textBox.KeyPress -= value3;
			}
			_txtNumberToAddinRobot = value;
			textBox = _txtNumberToAddinRobot;
			if (textBox != null)
			{
				textBox.TextChanged += value2;
				textBox.KeyPress += value3;
			}
		}
	}

	[field: AccessedThroughProperty("ckbtnAutoES_Seres")]
	internal virtual CheckBox ckbtnAutoES_Seres
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnAutoES_Seres
	{
		[CompilerGenerated]
		get
		{
			return _btnAutoES_Seres;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnAutoES_Seres_Click;
			Button button = _btnAutoES_Seres;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnAutoES_Seres = value;
			button = _btnAutoES_Seres;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label104")]
	internal virtual Label Label104
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label106")]
	internal virtual Label Label106
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtESAdd")]
	internal virtual TextBox txtESAdd
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtESSub")]
	internal virtual TextBox txtESSub
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("TempCheck")]
	internal virtual CheckBox TempCheck
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnECConvertTocash
	{
		[CompilerGenerated]
		get
		{
			return _btnECConvertTocash;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnECConvertTocash_Click;
			Button button = _btnECConvertTocash;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnECConvertTocash = value;
			button = _btnECConvertTocash;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btnECRun777111
	{
		[CompilerGenerated]
		get
		{
			return _btnECRun777111;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnECRun777111_Click;
			Button button = _btnECRun777111;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnECRun777111 = value;
			button = _btnECRun777111;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("ckbtnECRun777111")]
	internal virtual CheckBox ckbtnECRun777111
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckbtnTransGiftAutoSpValAll0")]
	internal virtual CheckBox ckbtnTransGiftAutoSpValAll0
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckbtnVodaAuto3652")]
	internal virtual CheckBox ckbtnVodaAuto3652
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnVodaAuto3652
	{
		[CompilerGenerated]
		get
		{
			return _btnVodaAuto3652;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnVodaAuto3652_Click;
			Button button = _btnVodaAuto3652;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnVodaAuto3652 = value;
			button = _btnVodaAuto3652;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("ck365_90")]
	internal virtual CheckBox ck365_90
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ck365_T")]
	internal virtual CheckBox ck365_T
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ck365_901")]
	internal virtual CheckBox ck365_901
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btn365_90
	{
		[CompilerGenerated]
		get
		{
			return _btn365_90;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btn365_90_Click;
			Button button = _btn365_90;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btn365_90 = value;
			button = _btn365_90;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual Button btn365_901
	{
		[CompilerGenerated]
		get
		{
			return _btn365_901;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btn365_901_Click;
			Button button = _btn365_901;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btn365_901 = value;
			button = _btn365_901;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("ck365_toup")]
	internal virtual CheckBox ck365_toup
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ck365_902")]
	internal virtual CheckBox ck365_902
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ck365_T2")]
	internal virtual CheckBox ck365_T2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckSetThisNumberToValedPeriod")]
	internal virtual CheckBox ckSetThisNumberToValedPeriod
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtDelayToGet58")]
	internal virtual TextBox txtDelayToGet58
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckbtnDoOfferWithdraw")]
	internal virtual CheckBox ckbtnDoOfferWithdraw
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnDoOfferWithdraw
	{
		[CompilerGenerated]
		get
		{
			return _btnDoOfferWithdraw;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnDoOfferWithdraw_Click;
			Button button = _btnDoOfferWithdraw;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnDoOfferWithdraw = value;
			button = _btnDoOfferWithdraw;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	internal virtual TextBox txtDoOfferWithdraw2
	{
		[CompilerGenerated]
		get
		{
			return _txtDoOfferWithdraw2;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			TextBox textBox = _txtDoOfferWithdraw2;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtDoOfferWithdraw2 = value;
			textBox = _txtDoOfferWithdraw2;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label108")]
	internal virtual Label Label108
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual TextBox txtDoOfferWithdraw1
	{
		[CompilerGenerated]
		get
		{
			return _txtDoOfferWithdraw1;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			KeyPressEventHandler value2 = txtTransNum2365_n_KeyPress;
			TextBox textBox = _txtDoOfferWithdraw1;
			if (textBox != null)
			{
				textBox.KeyPress -= value2;
			}
			_txtDoOfferWithdraw1 = value;
			textBox = _txtDoOfferWithdraw1;
			if (textBox != null)
			{
				textBox.KeyPress += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label107")]
	internal virtual Label Label107
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckVerifyNumber")]
	internal virtual CheckBox ckVerifyNumber
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckbtnTransToNm")]
	internal virtual CheckBox ckbtnTransToNm
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckbtnTransFromNm")]
	internal virtual CheckBox ckbtnTransFromNm
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckbtnTayerPullAllBalsMony")]
	internal virtual CheckBox ckbtnTayerPullAllBalsMony
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnTayerPullAllBalsMony
	{
		[CompilerGenerated]
		get
		{
			return _btnTayerPullAllBalsMony;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnTayerPullAllBalsMony_Click;
			Button button = _btnTayerPullAllBalsMony;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnTayerPullAllBalsMony = value;
			button = _btnTayerPullAllBalsMony;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("ck2x1")]
	internal virtual CheckBox ck2x1
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btn365_9093
	{
		[CompilerGenerated]
		get
		{
			return _btn365_9093;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btn365_9093_Click;
			Button button = _btn365_9093;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btn365_9093 = value;
			button = _btn365_9093;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtPrintOut2")]
	internal virtual TextBox txtPrintOut2
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtPrintOut1")]
	internal virtual TextBox txtPrintOut1
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnPrintOUT
	{
		[CompilerGenerated]
		get
		{
			return _btnPrintOUT;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnPrintOUT_Click;
			Button button = _btnPrintOUT;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnPrintOUT = value;
			button = _btnPrintOUT;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("Label109")]
	internal virtual Label Label109
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtSmsT_S")]
	internal virtual TextBox txtSmsT_S
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtSmsT_M")]
	internal virtual TextBox txtSmsT_M
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtSmsT_H")]
	internal virtual TextBox txtSmsT_H
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtSmsT_SR")]
	internal virtual TextBox txtSmsT_SR
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtSmsT_MR")]
	internal virtual TextBox txtSmsT_MR
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtSmsT_HR")]
	internal virtual TextBox txtSmsT_HR
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnFromMainToAll
	{
		[CompilerGenerated]
		get
		{
			return _btnFromMainToAll;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnFromMainToAll_Click;
			Button button = _btnFromMainToAll;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnFromMainToAll = value;
			button = _btnFromMainToAll;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("gboxSms")]
	internal virtual GroupBox gboxSms
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtGboxMain")]
	internal virtual TextBox txtGboxMain
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtGboxSub")]
	internal virtual TextBox txtGboxSub
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btngboxSmsAdd
	{
		[CompilerGenerated]
		get
		{
			return _btngboxSmsAdd;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btngboxSmsAdd_Click;
			Button button = _btngboxSmsAdd;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btngboxSmsAdd = value;
			button = _btngboxSmsAdd;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtGboxQty")]
	internal virtual TextBox txtGboxQty
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("ckbtnCashKing")]
	internal virtual CheckBox ckbtnCashKing
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	internal virtual Button btnCashKing
	{
		[CompilerGenerated]
		get
		{
			return _btnCashKing;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		[CompilerGenerated]
		set
		{
			EventHandler value2 = btnCashKing_Click;
			Button button = _btnCashKing;
			if (button != null)
			{
				button.Click -= value2;
			}
			_btnCashKing = value;
			button = _btnCashKing;
			if (button != null)
			{
				button.Click += value2;
			}
		}
	}

	[field: AccessedThroughProperty("txtInfoSizeH")]
	internal virtual TextBox txtInfoSizeH
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label110")]
	internal virtual Label Label110
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("txtInfoSize")]
	internal virtual TextBox txtInfoSize
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	[field: AccessedThroughProperty("Label89")]
	internal virtual Label Label89
	{
		get; [MethodImpl(MethodImplOptions.Synchronized)]
		set;
	}

	public frmUssd()
	{
		base.Closing += frmUssd_Closing;
		base.Load += frmUssd_Load;
		base.MouseMove += EnableMouseMove;
		countedX = new bool[11];
		StoredSa3ed_Nums = new string[8, 51];
		PortsArray = new string[8];
		NumbersArray = new string[8];
		FreezAddGift = false;
		InitializeComponent();
	}

	[DebuggerNonUserCode]
	protected override void Dispose(bool disposing)
	{
		try
		{
			if (disposing && components != null)
			{
				components.Dispose();
			}
		}
		finally
		{
			base.Dispose(disposing);
		}
	}

	[System.Diagnostics.DebuggerStepThrough]
	private void InitializeComponent()
	{
		this.components = new System.ComponentModel.Container();
		System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle = new System.Windows.Forms.DataGridViewCellStyle();
		System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle2 = new System.Windows.Forms.DataGridViewCellStyle();
		System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle3 = new System.Windows.Forms.DataGridViewCellStyle();
		System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle4 = new System.Windows.Forms.DataGridViewCellStyle();
		System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle5 = new System.Windows.Forms.DataGridViewCellStyle();
		System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle6 = new System.Windows.Forms.DataGridViewCellStyle();
		System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle7 = new System.Windows.Forms.DataGridViewCellStyle();
		System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle8 = new System.Windows.Forms.DataGridViewCellStyle();
		System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle9 = new System.Windows.Forms.DataGridViewCellStyle();
		System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(MTUssd.frmUssd));
		this.btnRefreshMissed = new System.Windows.Forms.Button();
		this.txtUssdc3 = new System.Windows.Forms.TextBox();
		this.txtUssdc2 = new System.Windows.Forms.TextBox();
		this.txt205 = new System.Windows.Forms.TextBox();
		this.TimerSecAuto = new System.Windows.Forms.Timer(this.components);
		this.txtUssd = new System.Windows.Forms.TextBox();
		this.lblPort6 = new System.Windows.Forms.Label();
		this.lblPort5 = new System.Windows.Forms.Label();
		this.lblPort4 = new System.Windows.Forms.Label();
		this.lblPort3 = new System.Windows.Forms.Label();
		this.lblPort2 = new System.Windows.Forms.Label();
		this.lblPort1 = new System.Windows.Forms.Label();
		this.btnResetMissed = new System.Windows.Forms.Button();
		this.btnGetSims = new System.Windows.Forms.Button();
		this.lblProgress = new System.Windows.Forms.Label();
		this.btnRefresh = new System.Windows.Forms.Button();
		this.btnRunUssd = new System.Windows.Forms.Button();
		this.txtRet01 = new System.Windows.Forms.TextBox();
		this.txtRet02 = new System.Windows.Forms.TextBox();
		this.txtRet03 = new System.Windows.Forms.TextBox();
		this.txtRet06 = new System.Windows.Forms.TextBox();
		this.txtRet05 = new System.Windows.Forms.TextBox();
		this.txtRet04 = new System.Windows.Forms.TextBox();
		this.btnRunUssd2 = new System.Windows.Forms.Button();
		this.btnRunUssd3 = new System.Windows.Forms.Button();
		this.btnRunUssd4 = new System.Windows.Forms.Button();
		this.txtUssdc4 = new System.Windows.Forms.TextBox();
		this.txtUssdc5 = new System.Windows.Forms.TextBox();
		this.btnRunUssd5 = new System.Windows.Forms.Button();
		this.txtUssdc6 = new System.Windows.Forms.TextBox();
		this.btnRunUssd6 = new System.Windows.Forms.Button();
		this.txtUssdc7 = new System.Windows.Forms.TextBox();
		this.btnRunUssd7 = new System.Windows.Forms.Button();
		this.txtUssdc8 = new System.Windows.Forms.TextBox();
		this.btnRunUssd8 = new System.Windows.Forms.Button();
		this.txtUssdc9 = new System.Windows.Forms.TextBox();
		this.btnRunUssd9 = new System.Windows.Forms.Button();
		this.txtUssdc10 = new System.Windows.Forms.TextBox();
		this.btnRunUssd10 = new System.Windows.Forms.Button();
		this.btnClear = new System.Windows.Forms.Button();
		this.btnRR = new System.Windows.Forms.Button();
		this.btnUssdReset = new System.Windows.Forms.Button();
		this.btnClearSMS = new System.Windows.Forms.Button();
		this.btnReadSms = new System.Windows.Forms.Button();
		this.lblNum6 = new System.Windows.Forms.Label();
		this.lblNum5 = new System.Windows.Forms.Label();
		this.lblNum4 = new System.Windows.Forms.Label();
		this.lblNum3 = new System.Windows.Forms.Label();
		this.lblNum2 = new System.Windows.Forms.Label();
		this.lblNum1 = new System.Windows.Forms.Label();
		this.ckBox = new System.Windows.Forms.CheckBox();
		this.btnRefreshEmpty = new System.Windows.Forms.Button();
		this.btnNumbers = new System.Windows.Forms.Button();
		this.ckME = new System.Windows.Forms.CheckBox();
		this.btnGetOut = new System.Windows.Forms.Button();
		this.btnSaveOut = new System.Windows.Forms.Button();
		this.btnNumbers2 = new System.Windows.Forms.Button();
		this.btnNumbers3 = new System.Windows.Forms.Button();
		this.txtLoopS = new System.Windows.Forms.TextBox();
		this.txtLoopF = new System.Windows.Forms.TextBox();
		this.btnRunUssdGG = new System.Windows.Forms.Button();
		this.btnReplyBy = new System.Windows.Forms.Button();
		this.txtReplyBy = new System.Windows.Forms.TextBox();
		this.txtReplyBy2 = new System.Windows.Forms.TextBox();
		this.btnReplyBy2 = new System.Windows.Forms.Button();
		this.btnFawrySms = new System.Windows.Forms.Button();
		this.lblBal6 = new System.Windows.Forms.Label();
		this.lblBal5 = new System.Windows.Forms.Label();
		this.lblBal4 = new System.Windows.Forms.Label();
		this.lblBal3 = new System.Windows.Forms.Label();
		this.lblBal2 = new System.Windows.Forms.Label();
		this.lblBal1 = new System.Windows.Forms.Label();
		this.txtInfo = new System.Windows.Forms.TextBox();
		this.txtEproc = new System.Windows.Forms.TextBox();
		this.txtReplyBy3 = new System.Windows.Forms.TextBox();
		this.btnReplyBy3 = new System.Windows.Forms.Button();
		this.lblCard4 = new System.Windows.Forms.Label();
		this.lblCard5 = new System.Windows.Forms.Label();
		this.lblCard6 = new System.Windows.Forms.Label();
		this.lblCard3 = new System.Windows.Forms.Label();
		this.lblCard2 = new System.Windows.Forms.Label();
		this.lblCard1 = new System.Windows.Forms.Label();
		this.btnApplyCards = new System.Windows.Forms.Button();
		this.ckCards = new System.Windows.Forms.CheckBox();
		this.btnAddCards = new System.Windows.Forms.Button();
		this.lblCardsQty = new System.Windows.Forms.Label();
		this.cmbEvalue = new System.Windows.Forms.ComboBox();
		this.chkCh1 = new System.Windows.Forms.CheckBox();
		this.chkCh2 = new System.Windows.Forms.CheckBox();
		this.chkCh3 = new System.Windows.Forms.CheckBox();
		this.chkCh4 = new System.Windows.Forms.CheckBox();
		this.chkCh5 = new System.Windows.Forms.CheckBox();
		this.chkCh6 = new System.Windows.Forms.CheckBox();
		this.txtChSS = new System.Windows.Forms.TextBox();
		this.btnApplyCards2 = new System.Windows.Forms.Button();
		this.btnDeSA = new System.Windows.Forms.Button();
		this.btnSA = new System.Windows.Forms.Button();
		this.chkIgnorSms = new System.Windows.Forms.CheckBox();
		this.RBEts = new System.Windows.Forms.RadioButton();
		this.RBVoda = new System.Windows.Forms.RadioButton();
		this.chkSlowRead = new System.Windows.Forms.CheckBox();
		this.txtReplyBy4 = new System.Windows.Forms.TextBox();
		this.btnReplyBy4 = new System.Windows.Forms.Button();
		this.txtReplyBy5 = new System.Windows.Forms.TextBox();
		this.btnReplyBy5 = new System.Windows.Forms.Button();
		this.txtReplyBy0 = new System.Windows.Forms.TextBox();
		this.btnReplyBy0 = new System.Windows.Forms.Button();
		this.MainTC = new System.Windows.Forms.TabControl();
		this.VodaCashPAnel = new System.Windows.Forms.TabPage();
		this.ckbtnTransToNm = new System.Windows.Forms.CheckBox();
		this.ckbtnTransFromNm = new System.Windows.Forms.CheckBox();
		this.ckbtnTransGiftAutoSpValAll0 = new System.Windows.Forms.CheckBox();
		this.btnRun02NmDwl = new System.Windows.Forms.Button();
		this.ckbtnTransGiftAuto = new System.Windows.Forms.CheckBox();
		this.ckbtnTransGiftAutoSpValAll = new System.Windows.Forms.CheckBox();
		this.btnTransFromNm = new System.Windows.Forms.Button();
		this.btnTransToNm = new System.Windows.Forms.Button();
		this.ckbtnRun02Nm = new System.Windows.Forms.CheckBox();
		this.btnTransGiftAutoSpValAll = new System.Windows.Forms.Button();
		this.chkAutoTransferCash = new System.Windows.Forms.CheckBox();
		this.lbl100 = new System.Windows.Forms.Label();
		this.lbl35 = new System.Windows.Forms.Label();
		this.lbl50 = new System.Windows.Forms.Label();
		this.chkAutoTransferNrm = new System.Windows.Forms.CheckBox();
		this.chAutoGooo2 = new System.Windows.Forms.CheckBox();
		this.lbl45 = new System.Windows.Forms.Label();
		this.lbl40 = new System.Windows.Forms.Label();
		this.chAutoGooo = new System.Windows.Forms.CheckBox();
		this.ckbtnTransGiftAutoSpVal = new System.Windows.Forms.CheckBox();
		this.btnAutoVC_SeresWtop = new System.Windows.Forms.Button();
		this.ckTransP = new System.Windows.Forms.CheckBox();
		this.txtTransP = new System.Windows.Forms.TextBox();
		this.lbl30 = new System.Windows.Forms.Label();
		this.lbl25 = new System.Windows.Forms.Label();
		this.lbl20 = new System.Windows.Forms.Label();
		this.lbl15 = new System.Windows.Forms.Label();
		this.lbl10 = new System.Windows.Forms.Label();
		this.lbl05 = new System.Windows.Forms.Label();
		this.chkTransGift = new System.Windows.Forms.CheckBox();
		this.chkGetgift = new System.Windows.Forms.CheckBox();
		this.btnExchangeNN = new System.Windows.Forms.Button();
		this.chbeep = new System.Windows.Forms.CheckBox();
		this.chkInDB = new System.Windows.Forms.CheckBox();
		this.btnAutoVC_Hez = new System.Windows.Forms.Button();
		this.chkRefref = new System.Windows.Forms.CheckBox();
		this.cknull = new System.Windows.Forms.CheckBox();
		this.btnAutoVC_Seres = new System.Windows.Forms.Button();
		this.txtVCForceMony = new System.Windows.Forms.TextBox();
		this.btnTransToNextMain = new System.Windows.Forms.Button();
		this.btnTransGiftAutoSpVal = new System.Windows.Forms.Button();
		this.Label37 = new System.Windows.Forms.Label();
		this.Label24 = new System.Windows.Forms.Label();
		this.btnAutoVCnorm = new System.Windows.Forms.Button();
		this.Label14 = new System.Windows.Forms.Label();
		this.txtTransNum2 = new System.Windows.Forms.TextBox();
		this.btnTransGiftAuto = new System.Windows.Forms.Button();
		this.txtCashNextMaster = new System.Windows.Forms.TextBox();
		this.btnRun02Nm = new System.Windows.Forms.Button();
		this.lblMain = new System.Windows.Forms.Label();
		this.Label21 = new System.Windows.Forms.Label();
		this.txtMonyMn = new System.Windows.Forms.TextBox();
		this.btnGetBal2 = new System.Windows.Forms.Button();
		this.btnTransAllMn = new System.Windows.Forms.Button();
		this.btnTransGiftAutoNorm = new System.Windows.Forms.Button();
		this.tabvc2 = new System.Windows.Forms.TabPage();
		this.ckbtnCashKing = new System.Windows.Forms.CheckBox();
		this.btnCashKing = new System.Windows.Forms.Button();
		this.btn365_9093 = new System.Windows.Forms.Button();
		this.ck365_902 = new System.Windows.Forms.CheckBox();
		this.ck365_T2 = new System.Windows.Forms.CheckBox();
		this.ck365_toup = new System.Windows.Forms.CheckBox();
		this.ck365_90 = new System.Windows.Forms.CheckBox();
		this.ck365_T = new System.Windows.Forms.CheckBox();
		this.ck365_901 = new System.Windows.Forms.CheckBox();
		this.btn365_90 = new System.Windows.Forms.Button();
		this.btn365_901 = new System.Windows.Forms.Button();
		this.ckbtnVodaAuto3652 = new System.Windows.Forms.CheckBox();
		this.btnVodaAuto3652 = new System.Windows.Forms.Button();
		this.ckbtnVodaCashFreeTransfer = new System.Windows.Forms.CheckBox();
		this.btnVodaCashFreeTransfer = new System.Windows.Forms.Button();
		this.ckbtnVodaAuto365 = new System.Windows.Forms.CheckBox();
		this.btnVodaAuto365 = new System.Windows.Forms.Button();
		this.btnVCtransFrom3Up = new System.Windows.Forms.Button();
		this.btnVCtransFrom3Dn = new System.Windows.Forms.Button();
		this.ckTrans = new System.Windows.Forms.CheckBox();
		this.chkimpsms = new System.Windows.Forms.CheckBox();
		this.txtCHS = new System.Windows.Forms.TextBox();
		this.tab365_2 = new System.Windows.Forms.TabPage();
		this.btnDelTarfehy = new System.Windows.Forms.Button();
		this.chkNewWallet = new System.Windows.Forms.CheckBox();
		this.btnGetVodaBal365 = new System.Windows.Forms.Button();
		this.txtLoopSSD365_2 = new System.Windows.Forms.TextBox();
		this.txtLoopFSD365_2 = new System.Windows.Forms.TextBox();
		this.chkApply365Trans = new System.Windows.Forms.CheckBox();
		this.txtTransNum2365_n = new System.Windows.Forms.TextBox();
		this.Label63 = new System.Windows.Forms.Label();
		this.btnTransGiftAutoNorm365 = new System.Windows.Forms.Button();
		this.txtVCForceMony365_n = new System.Windows.Forms.TextBox();
		this.chkTransferAllNormalVoda365 = new System.Windows.Forms.CheckBox();
		this.chkApply365Bakat = new System.Windows.Forms.CheckBox();
		this.btnApply365Bakat = new System.Windows.Forms.Button();
		this.btnChkNewSims = new System.Windows.Forms.Button();
		this.TabPage4 = new System.Windows.Forms.TabPage();
		this.ckbtnChangePassNew = new System.Windows.Forms.CheckBox();
		this.ckbtnChangePass = new System.Windows.Forms.CheckBox();
		this.btnChangePassNew = new System.Windows.Forms.Button();
		this.BDatedel = new System.Windows.Forms.DateTimePicker();
		this.btnDlGifts = new System.Windows.Forms.Button();
		this.Label51 = new System.Windows.Forms.Label();
		this.btnChangePass = new System.Windows.Forms.Button();
		this.Label50 = new System.Windows.Forms.Label();
		this.txtOldPass = new System.Windows.Forms.TextBox();
		this.Label49 = new System.Windows.Forms.Label();
		this.txtNewPass = new System.Windows.Forms.TextBox();
		this.chkPay = new System.Windows.Forms.CheckBox();
		this.btnGetBalNM = new System.Windows.Forms.Button();
		this.btnCopyAll = new System.Windows.Forms.Button();
		this.txtSpNum6 = new System.Windows.Forms.TextBox();
		this.txtSpNum5 = new System.Windows.Forms.TextBox();
		this.txtSpNum4 = new System.Windows.Forms.TextBox();
		this.txtSpNum3 = new System.Windows.Forms.TextBox();
		this.txtSpNum2 = new System.Windows.Forms.TextBox();
		this.Label11 = new System.Windows.Forms.Label();
		this.txtSpNum1 = new System.Windows.Forms.TextBox();
		this.Label2 = new System.Windows.Forms.Label();
		this.txtwait = new System.Windows.Forms.TextBox();
		this.Label1 = new System.Windows.Forms.Label();
		this.txtPass = new System.Windows.Forms.TextBox();
		this.btnAddItems = new System.Windows.Forms.Button();
		this.tabOcash = new System.Windows.Forms.TabPage();
		this.txtOCtopupDelayCash = new System.Windows.Forms.TextBox();
		this.txtOCTransferAll = new System.Windows.Forms.TextBox();
		this.txtOCchargeNumOne = new System.Windows.Forms.TextBox();
		this.ckbtnOCTopupOne = new System.Windows.Forms.CheckBox();
		this.btnOCTopupOne = new System.Windows.Forms.Button();
		this.txtOCtopupDelay = new System.Windows.Forms.TextBox();
		this.ckOCBalWithBack = new System.Windows.Forms.CheckBox();
		this.Label105 = new System.Windows.Forms.Label();
		this.txtOCTransferSub = new System.Windows.Forms.TextBox();
		this.CheckBox1 = new System.Windows.Forms.CheckBox();
		this.btnOCTransferSame = new System.Windows.Forms.Button();
		this.txtOCValueSame = new System.Windows.Forms.TextBox();
		this.Label95 = new System.Windows.Forms.Label();
		this.lblOCvTotal = new System.Windows.Forms.Label();
		this.lblOCvsub = new System.Windows.Forms.Label();
		this.lblOCvPlus = new System.Windows.Forms.Label();
		this.lblOCv100 = new System.Windows.Forms.Label();
		this.lblOCv90 = new System.Windows.Forms.Label();
		this.lblOCv85 = new System.Windows.Forms.Label();
		this.lblOCv75 = new System.Windows.Forms.Label();
		this.lblOCv65 = new System.Windows.Forms.Label();
		this.lblOCv50 = new System.Windows.Forms.Label();
		this.lblOCv45 = new System.Windows.Forms.Label();
		this.lblOCv35 = new System.Windows.Forms.Label();
		this.lblOCv25 = new System.Windows.Forms.Label();
		this.ckbtnOCTransferAll = new System.Windows.Forms.CheckBox();
		this.txtLoopSSDOC = new System.Windows.Forms.TextBox();
		this.txtLoopFSDOC = new System.Windows.Forms.TextBox();
		this.Label82 = new System.Windows.Forms.Label();
		this.lblOCv20 = new System.Windows.Forms.Label();
		this.btnOCTransferAll = new System.Windows.Forms.Button();
		this.lblOCv15 = new System.Windows.Forms.Label();
		this.lblOCv10 = new System.Windows.Forms.Label();
		this.lblOCv5 = new System.Windows.Forms.Label();
		this.ckbtnOCTopup = new System.Windows.Forms.CheckBox();
		this.txtOCchargeNum6 = new System.Windows.Forms.TextBox();
		this.txtOCchargeNum5 = new System.Windows.Forms.TextBox();
		this.txtOCchargeNum4 = new System.Windows.Forms.TextBox();
		this.txtOCchargeNum3 = new System.Windows.Forms.TextBox();
		this.txtOCchargeNum2 = new System.Windows.Forms.TextBox();
		this.txtOCTopValue = new System.Windows.Forms.TextBox();
		this.btnOCTopup = new System.Windows.Forms.Button();
		this.ckbtnOCGetBal = new System.Windows.Forms.CheckBox();
		this.Label74 = new System.Windows.Forms.Label();
		this.txtOCchargeNum1 = new System.Windows.Forms.TextBox();
		this.btnOCGetBal = new System.Windows.Forms.Button();
		this.tabOCCon = new System.Windows.Forms.TabPage();
		this.ckbtnOCSeriesGetBalAfter = new System.Windows.Forms.CheckBox();
		this.ckbtnOCSeriesGetBalBEfore = new System.Windows.Forms.CheckBox();
		this.lblOCMain = new System.Windows.Forms.TextBox();
		this.txtLoopSSDOCPaySr = new System.Windows.Forms.TextBox();
		this.txtLoopFSDOCPAYSr = new System.Windows.Forms.TextBox();
		this.ckbtnOCFromMasterToAll = new System.Windows.Forms.CheckBox();
		this.btnOCFromMasterToAll = new System.Windows.Forms.Button();
		this.btnOCGetBalPAy = new System.Windows.Forms.Button();
		this.txtOCValueMT5 = new System.Windows.Forms.TextBox();
		this.Label100 = new System.Windows.Forms.Label();
		this.txtOCValueMT4 = new System.Windows.Forms.TextBox();
		this.Label99 = new System.Windows.Forms.Label();
		this.txtOCValueMT3 = new System.Windows.Forms.TextBox();
		this.Label98 = new System.Windows.Forms.Label();
		this.txtOCValueMT2 = new System.Windows.Forms.TextBox();
		this.Label97 = new System.Windows.Forms.Label();
		this.txtOCValueMT1 = new System.Windows.Forms.TextBox();
		this.Label96 = new System.Windows.Forms.Label();
		this.ckbtnOCSeriesMT = new System.Windows.Forms.CheckBox();
		this.btnOCSeriesMT = new System.Windows.Forms.Button();
		this.ckbtnOCSeries = new System.Windows.Forms.CheckBox();
		this.btnOCSeries = new System.Windows.Forms.Button();
		this.txtOCValue = new System.Windows.Forms.TextBox();
		this.Label76 = new System.Windows.Forms.Label();
		this.Label94 = new System.Windows.Forms.Label();
		this.txtOCNextMain = new System.Windows.Forms.TextBox();
		this.Label73 = new System.Windows.Forms.Label();
		this.Label93 = new System.Windows.Forms.Label();
		this.Label72 = new System.Windows.Forms.Label();
		this.btnOCExchange = new System.Windows.Forms.Button();
		this.txtOCAdd = new System.Windows.Forms.TextBox();
		this.txtOCSub = new System.Windows.Forms.TextBox();
		this.ckOCSub = new System.Windows.Forms.CheckBox();
		this.ckOCSubAuto = new System.Windows.Forms.CheckBox();
		this.btnOCfromMtoN = new System.Windows.Forms.Button();
		this.tabOCMaster = new System.Windows.Forms.TabPage();
		this.ckVerifyNumber = new System.Windows.Forms.CheckBox();
		this.ckbtnOCMAuto = new System.Windows.Forms.CheckBox();
		this.btnOCMAuto = new System.Windows.Forms.Button();
		this.txtOCtopupDelayM2 = new System.Windows.Forms.TextBox();
		this.lblOCMMain = new System.Windows.Forms.TextBox();
		this.btnAddNumbersToOC = new System.Windows.Forms.Button();
		this.txtOCtopupDelayM = new System.Windows.Forms.TextBox();
		this.btnOCTopUpMulti = new System.Windows.Forms.Button();
		this.txtTopUpOrangeValue = new System.Windows.Forms.TextBox();
		this.txtOCInput = new System.Windows.Forms.TextBox();
		this.btnOCMSerieAcceptInput = new System.Windows.Forms.Button();
		this.btnOCMSeriesInput = new System.Windows.Forms.Button();
		this.btnTayerCharge = new System.Windows.Forms.Button();
		this.lblOCDone = new System.Windows.Forms.Label();
		this.btnClearOC = new System.Windows.Forms.Button();
		this.btnDelOnePre = new System.Windows.Forms.Button();
		this.lblCountPre = new System.Windows.Forms.Label();
		this.txtOCNumber = new System.Windows.Forms.TextBox();
		this.lstOCNumbers = new System.Windows.Forms.ListBox();
		this.ckbtnOCMSerieAccept = new System.Windows.Forms.CheckBox();
		this.btnOCMSerieAccept = new System.Windows.Forms.Button();
		this.Label101 = new System.Windows.Forms.Label();
		this.txtOCMCount = new System.Windows.Forms.TextBox();
		this.btnOCGetBal2 = new System.Windows.Forms.Button();
		this.ckbtnOCMSeries = new System.Windows.Forms.CheckBox();
		this.btnOCMSeries = new System.Windows.Forms.Button();
		this.Label85 = new System.Windows.Forms.Label();
		this.Label87 = new System.Windows.Forms.Label();
		this.txtOCMValue = new System.Windows.Forms.TextBox();
		this.btnOCMGetBal = new System.Windows.Forms.Button();
		this.tabOCGifts = new System.Windows.Forms.TabPage();
		this.txtDoOfferWithdraw2 = new System.Windows.Forms.TextBox();
		this.Label108 = new System.Windows.Forms.Label();
		this.txtDoOfferWithdraw1 = new System.Windows.Forms.TextBox();
		this.Label107 = new System.Windows.Forms.Label();
		this.ckbtnDoOfferWithdraw = new System.Windows.Forms.CheckBox();
		this.btnDoOfferWithdraw = new System.Windows.Forms.Button();
		this.txtDelayToGet58 = new System.Windows.Forms.TextBox();
		this.ckbtnOCFreeTransfer = new System.Windows.Forms.CheckBox();
		this.btnOCFreeTransfer = new System.Windows.Forms.Button();
		this.ckbtnOCGetBalPAy2 = new System.Windows.Forms.CheckBox();
		this.ckbtnGetNormalBal = new System.Windows.Forms.CheckBox();
		this.btnGetNormalBal = new System.Windows.Forms.Button();
		this.ckbtnTranstop = new System.Windows.Forms.CheckBox();
		this.btnTranstop = new System.Windows.Forms.Button();
		this.ckbtnTrans1000 = new System.Windows.Forms.CheckBox();
		this.btnTrans1000 = new System.Windows.Forms.Button();
		this.ckbtnTrans100 = new System.Windows.Forms.CheckBox();
		this.btnTrans100 = new System.Windows.Forms.Button();
		this.btnOCGetBalPAy2 = new System.Windows.Forms.Button();
		this.ckbtnOCApply58 = new System.Windows.Forms.CheckBox();
		this.ckbtnOCGiftsCheckConf = new System.Windows.Forms.CheckBox();
		this.btnOCGiftsCheckConf = new System.Windows.Forms.Button();
		this.txtLoopSSOCG = new System.Windows.Forms.TextBox();
		this.txtLoopFSOCG = new System.Windows.Forms.TextBox();
		this.btnOCApply58 = new System.Windows.Forms.Button();
		this.ckbtnOCGiftsCheck = new System.Windows.Forms.CheckBox();
		this.btnOCGiftsCheck = new System.Windows.Forms.Button();
		this.tabOCSetup = new System.Windows.Forms.TabPage();
		this.Label84 = new System.Windows.Forms.Label();
		this.txtEtsCashPass = new System.Windows.Forms.TextBox();
		this.Label92 = new System.Windows.Forms.Label();
		this.txtOCOldPass = new System.Windows.Forms.TextBox();
		this.Label88 = new System.Windows.Forms.Label();
		this.txtOTyrPass = new System.Windows.Forms.TextBox();
		this.Label83 = new System.Windows.Forms.Label();
		this.txtOCPassMaster = new System.Windows.Forms.TextBox();
		this.ckOCEditPass = new System.Windows.Forms.CheckBox();
		this.btnOCEditPass = new System.Windows.Forms.Button();
		this.Label78 = new System.Windows.Forms.Label();
		this.txtOCNewPass = new System.Windows.Forms.TextBox();
		this.Label77 = new System.Windows.Forms.Label();
		this.txtOCPass = new System.Windows.Forms.TextBox();
		this.tabOrngInv = new System.Windows.Forms.TabPage();
		this.ckbtnOtransRun = new System.Windows.Forms.CheckBox();
		this.ckbtnGetOrngBal = new System.Windows.Forms.CheckBox();
		this.dataViewGrid = new System.Windows.Forms.DataGridView();
		this.btnOrngAccQry = new System.Windows.Forms.Button();
		this.btnGetOrngBal = new System.Windows.Forms.Button();
		this.btnGetOrngBalAcc = new System.Windows.Forms.Button();
		this.btnSaveAS3 = new System.Windows.Forms.Button();
		this.btnExport3 = new System.Windows.Forms.Button();
		this.btnOtransRun = new System.Windows.Forms.Button();
		this.Label30 = new System.Windows.Forms.Label();
		this.txtOTotalTransQ = new System.Windows.Forms.TextBox();
		this.Label25 = new System.Windows.Forms.Label();
		this.txtOtotalTrans = new System.Windows.Forms.TextBox();
		this.txtOtransRem = new System.Windows.Forms.TextBox();
		this.txtOtransMP = new System.Windows.Forms.TextBox();
		this.txtOtransACC = new System.Windows.Forms.TextBox();
		this.txtOtransTN = new System.Windows.Forms.TextBox();
		this.Label29 = new System.Windows.Forms.Label();
		this.Label28 = new System.Windows.Forms.Label();
		this.Label27 = new System.Windows.Forms.Label();
		this.Label26 = new System.Windows.Forms.Label();
		this.lblSavePath3 = new System.Windows.Forms.Label();
		this.TabPage1 = new System.Windows.Forms.TabPage();
		this.ckbtnMacro = new System.Windows.Forms.CheckBox();
		this.btnMacro = new System.Windows.Forms.Button();
		this.txtMacro16 = new System.Windows.Forms.TextBox();
		this.txtMacro15 = new System.Windows.Forms.TextBox();
		this.txtMacro9 = new System.Windows.Forms.TextBox();
		this.txtMacro14 = new System.Windows.Forms.TextBox();
		this.txtMacro13 = new System.Windows.Forms.TextBox();
		this.txtMacro10 = new System.Windows.Forms.TextBox();
		this.txtMacro11 = new System.Windows.Forms.TextBox();
		this.txtMacro12 = new System.Windows.Forms.TextBox();
		this.txtMacro8 = new System.Windows.Forms.TextBox();
		this.txtMacro7 = new System.Windows.Forms.TextBox();
		this.txtMacro1 = new System.Windows.Forms.TextBox();
		this.txtMacro6 = new System.Windows.Forms.TextBox();
		this.txtMacro5 = new System.Windows.Forms.TextBox();
		this.txtMacro2 = new System.Windows.Forms.TextBox();
		this.txtMacro3 = new System.Windows.Forms.TextBox();
		this.txtMacro4 = new System.Windows.Forms.TextBox();
		this.txtReplyBy7 = new System.Windows.Forms.TextBox();
		this.btnReplyBy7 = new System.Windows.Forms.Button();
		this.txtReplyBy6 = new System.Windows.Forms.TextBox();
		this.btnReplyBy6 = new System.Windows.Forms.Button();
		this.TabPage7 = new System.Windows.Forms.TabPage();
		this.btnFromMainToAll = new System.Windows.Forms.Button();
		this.ckbtnECRun777111 = new System.Windows.Forms.CheckBox();
		this.btnECConvertTocash = new System.Windows.Forms.Button();
		this.btnECRun777111 = new System.Windows.Forms.Button();
		this.TempCheck = new System.Windows.Forms.CheckBox();
		this.ckbtnAutoES_Seres = new System.Windows.Forms.CheckBox();
		this.btnAutoES_Seres = new System.Windows.Forms.Button();
		this.Label104 = new System.Windows.Forms.Label();
		this.Label106 = new System.Windows.Forms.Label();
		this.txtESAdd = new System.Windows.Forms.TextBox();
		this.txtESSub = new System.Windows.Forms.TextBox();
		this.btnAutoVCnormECOne = new System.Windows.Forms.Button();
		this.ckbtnGetBal2EC = new System.Windows.Forms.CheckBox();
		this.lblMainEC = new System.Windows.Forms.Label();
		this.Label42 = new System.Windows.Forms.Label();
		this.Label39 = new System.Windows.Forms.Label();
		this.Label40 = new System.Windows.Forms.Label();
		this.btnAutoVCnormEC = new System.Windows.Forms.Button();
		this.txtCashNextMasterEC = new System.Windows.Forms.TextBox();
		this.txtMonyMnEC = new System.Windows.Forms.TextBox();
		this.btnGetBal2EC = new System.Windows.Forms.Button();
		this.Label38 = new System.Windows.Forms.Label();
		this.txtPassEC = new System.Windows.Forms.TextBox();
		this.tabPrint = new System.Windows.Forms.TabPage();
		this.txtPrintOut2 = new System.Windows.Forms.TextBox();
		this.txtPrintOut1 = new System.Windows.Forms.TextBox();
		this.btnPrintOUT = new System.Windows.Forms.Button();
		this.ck2x1 = new System.Windows.Forms.CheckBox();
		this.txtPrintStr = new System.Windows.Forms.TextBox();
		this.btnPrintstr = new System.Windows.Forms.Button();
		this.txtPrintPd = new System.Windows.Forms.TextBox();
		this.btnPrintRest = new System.Windows.Forms.Button();
		this.ckPrint = new System.Windows.Forms.CheckBox();
		this.GroupBox2 = new System.Windows.Forms.GroupBox();
		this.txtInfoT = new System.Windows.Forms.TextBox();
		this.txtInfoY = new System.Windows.Forms.TextBox();
		this.txtInfoX = new System.Windows.Forms.TextBox();
		this.Label66 = new System.Windows.Forms.Label();
		this.Label68 = new System.Windows.Forms.Label();
		this.btnPrinter = new System.Windows.Forms.Button();
		this.btnPrint = new System.Windows.Forms.Button();
		this.GroupBox5 = new System.Windows.Forms.GroupBox();
		this.txtBar_tn = new System.Windows.Forms.TextBox();
		this.Label58 = new System.Windows.Forms.Label();
		this.txtBar_tk = new System.Windows.Forms.TextBox();
		this.Label59 = new System.Windows.Forms.Label();
		this.txtBar_H = new System.Windows.Forms.TextBox();
		this.txtBar_y = new System.Windows.Forms.TextBox();
		this.txtBar_x = new System.Windows.Forms.TextBox();
		this.Label60 = new System.Windows.Forms.Label();
		this.Label61 = new System.Windows.Forms.Label();
		this.Label62 = new System.Windows.Forms.Label();
		this.GroupBox1 = new System.Windows.Forms.GroupBox();
		this.txtW = new System.Windows.Forms.TextBox();
		this.txtH = new System.Windows.Forms.TextBox();
		this.txtHn = new System.Windows.Forms.TextBox();
		this.Label55 = new System.Windows.Forms.Label();
		this.Label56 = new System.Windows.Forms.Label();
		this.Label57 = new System.Windows.Forms.Label();
		this.cmbPrinter = new System.Windows.Forms.TextBox();
		this.TabPage3 = new System.Windows.Forms.TabPage();
		this.gboxSms = new System.Windows.Forms.GroupBox();
		this.txtGboxSub = new System.Windows.Forms.TextBox();
		this.btngboxSmsAdd = new System.Windows.Forms.Button();
		this.txtGboxQty = new System.Windows.Forms.TextBox();
		this.txtGboxMain = new System.Windows.Forms.TextBox();
		this.txtSmsT_SR = new System.Windows.Forms.TextBox();
		this.txtSmsT_MR = new System.Windows.Forms.TextBox();
		this.txtSmsT_HR = new System.Windows.Forms.TextBox();
		this.Label109 = new System.Windows.Forms.Label();
		this.txtSmsT_S = new System.Windows.Forms.TextBox();
		this.txtSmsT_M = new System.Windows.Forms.TextBox();
		this.txtSmsT_H = new System.Windows.Forms.TextBox();
		this.ckbtnSendSmsToNumber = new System.Windows.Forms.CheckBox();
		this.txtSMStothisnumber = new System.Windows.Forms.TextBox();
		this.txtSmsWait = new System.Windows.Forms.TextBox();
		this.btnSendSmsToNumber = new System.Windows.Forms.Button();
		this.Label23 = new System.Windows.Forms.Label();
		this.txtLoopSsms = new System.Windows.Forms.TextBox();
		this.txtLoopFsms = new System.Windows.Forms.TextBox();
		this.btnAddNumbersToOCsms = new System.Windows.Forms.Button();
		this.lblCountPresms = new System.Windows.Forms.Label();
		this.btnClearOCsms = new System.Windows.Forms.Button();
		this.lblOCDonesms = new System.Windows.Forms.Label();
		this.txtOCNumbersms = new System.Windows.Forms.TextBox();
		this.lstOCNumberssms = new System.Windows.Forms.ListBox();
		this.TabPage5 = new System.Windows.Forms.TabPage();
		this.Label12 = new System.Windows.Forms.Label();
		this.txtGftLmt = new System.Windows.Forms.TextBox();
		this.txtTotalTransVal = new System.Windows.Forms.TextBox();
		this.btnTransAllMony = new System.Windows.Forms.Button();
		this.btnVodaTrans = new System.Windows.Forms.Button();
		this.btnRunAuto = new System.Windows.Forms.Button();
		this.txtLoopSVC = new System.Windows.Forms.TextBox();
		this.txtLoopFVC = new System.Windows.Forms.TextBox();
		this.btnExnums = new System.Windows.Forms.Button();
		this.lstNumbers = new System.Windows.Forms.ListBox();
		this.txtEnumsVC = new System.Windows.Forms.TextBox();
		this.btnTransInv = new System.Windows.Forms.Button();
		this.Label9 = new System.Windows.Forms.Label();
		this.txtTransNum = new System.Windows.Forms.TextBox();
		this.btnTransVal = new System.Windows.Forms.Button();
		this.btnRunAll = new System.Windows.Forms.Button();
		this.btnGetBal = new System.Windows.Forms.Button();
		this.btnRun02 = new System.Windows.Forms.Button();
		this.bt = new System.Windows.Forms.Button();
		this.btnNextItems = new System.Windows.Forms.Button();
		this.btnWorkID = new System.Windows.Forms.Button();
		this.Label8 = new System.Windows.Forms.Label();
		this.txtTransMoney = new System.Windows.Forms.TextBox();
		this.Label6 = new System.Windows.Forms.Label();
		this.txtQtyDone = new System.Windows.Forms.TextBox();
		this.Label5 = new System.Windows.Forms.Label();
		this.txtMoney = new System.Windows.Forms.TextBox();
		this.Label3 = new System.Windows.Forms.Label();
		this.txtWorkID = new System.Windows.Forms.TextBox();
		this.TabPage14 = new System.Windows.Forms.TabPage();
		this.txtTotalTransValP = new System.Windows.Forms.TextBox();
		this.btnTransValP = new System.Windows.Forms.Button();
		this.Label48 = new System.Windows.Forms.Label();
		this.txtTransMoneyP = new System.Windows.Forms.TextBox();
		this.txtReplyPower = new System.Windows.Forms.TextBox();
		this.Button2 = new System.Windows.Forms.Button();
		this.txtUssdP2 = new System.Windows.Forms.TextBox();
		this.btnRunPowe2 = new System.Windows.Forms.Button();
		this.txtTempxxp = new System.Windows.Forms.TextBox();
		this.Label47 = new System.Windows.Forms.Label();
		this.txtTransNumP = new System.Windows.Forms.TextBox();
		this.txtLoopSVCP = new System.Windows.Forms.TextBox();
		this.txtLoopFVCP = new System.Windows.Forms.TextBox();
		this.Label45 = new System.Windows.Forms.Label();
		this.txtQtyDoneP = new System.Windows.Forms.TextBox();
		this.txtUssdP1 = new System.Windows.Forms.TextBox();
		this.btnRunPower = new System.Windows.Forms.Button();
		this.btnAutoSendPower = new System.Windows.Forms.Button();
		this.lstNumbersP = new System.Windows.Forms.ListBox();
		this.txtEnumsVCP = new System.Windows.Forms.TextBox();
		this.btnNextItemsP = new System.Windows.Forms.Button();
		this.TabPage12 = new System.Windows.Forms.TabPage();
		this.txtLoopSSD = new System.Windows.Forms.TextBox();
		this.txtLoopFSD = new System.Windows.Forms.TextBox();
		this.btnGetVodaBal = new System.Windows.Forms.Button();
		this.btnChkOK = new System.Windows.Forms.Button();
		this.btnSA3edhmCancel = new System.Windows.Forms.Button();
		this.btnViewSa3edList = new System.Windows.Forms.Button();
		this.Label36 = new System.Windows.Forms.Label();
		this.Label35 = new System.Windows.Forms.Label();
		this.txtSa3edhmV = new System.Windows.Forms.TextBox();
		this.btnSA3edhmTrans = new System.Windows.Forms.Button();
		this.txtSA3edhmReq = new System.Windows.Forms.TextBox();
		this.btnSA3edhmR5 = new System.Windows.Forms.Button();
		this.btnSA3edhmR4 = new System.Windows.Forms.Button();
		this.btnSA3edhmR3 = new System.Windows.Forms.Button();
		this.btnSA3edhmR2 = new System.Windows.Forms.Button();
		this.btnSA3edhmR1 = new System.Windows.Forms.Button();
		this.btnSA3edhmRDell = new System.Windows.Forms.Button();
		this.btnSA3edhmRAdd = new System.Windows.Forms.Button();
		this.txtSA3edhmNum = new System.Windows.Forms.TextBox();
		this.btnSA3edhmReg = new System.Windows.Forms.Button();
		this.TabPage13 = new System.Windows.Forms.TabPage();
		this.txtArrayOut = new System.Windows.Forms.TextBox();
		this.lblCorrectNumber = new System.Windows.Forms.Label();
		this.Label41 = new System.Windows.Forms.Label();
		this.Label43 = new System.Windows.Forms.Label();
		this.btnAutoVCnormCon = new System.Windows.Forms.Button();
		this.Label44 = new System.Windows.Forms.Label();
		this.txtTransNum2Con = new System.Windows.Forms.TextBox();
		this.txtCashNextMasterCon = new System.Windows.Forms.TextBox();
		this.lblMainCon = new System.Windows.Forms.Label();
		this.Label46 = new System.Windows.Forms.Label();
		this.txtMonyMnCon = new System.Windows.Forms.TextBox();
		this.btnGetBal2Con = new System.Windows.Forms.Button();
		this.TabPage6 = new System.Windows.Forms.TabPage();
		this.txtNextPortNum = new System.Windows.Forms.TextBox();
		this.txtRemTimeVC = new System.Windows.Forms.TextBox();
		this.btnVCChargeToSelf = new System.Windows.Forms.Button();
		this.txtLoopSvc2 = new System.Windows.Forms.TextBox();
		this.txtLoopFvc2 = new System.Windows.Forms.TextBox();
		this.btnVC6 = new System.Windows.Forms.Button();
		this.txtMoneyMS6Dly = new System.Windows.Forms.TextBox();
		this.txtMoneyMS5Dly = new System.Windows.Forms.TextBox();
		this.txtMoneyMS4Dly = new System.Windows.Forms.TextBox();
		this.txtMoneyMS3Dly = new System.Windows.Forms.TextBox();
		this.Label31 = new System.Windows.Forms.Label();
		this.Label19 = new System.Windows.Forms.Label();
		this.Label18 = new System.Windows.Forms.Label();
		this.Label17 = new System.Windows.Forms.Label();
		this.Label16 = new System.Windows.Forms.Label();
		this.Label15 = new System.Windows.Forms.Label();
		this.txtMoneyMS6 = new System.Windows.Forms.TextBox();
		this.txtMoneyMS5 = new System.Windows.Forms.TextBox();
		this.txtMoneyMS4 = new System.Windows.Forms.TextBox();
		this.txtMoneyMS3 = new System.Windows.Forms.TextBox();
		this.txtMoneyMS2 = new System.Windows.Forms.TextBox();
		this.Label13 = new System.Windows.Forms.Label();
		this.txtMS02 = new System.Windows.Forms.TextBox();
		this.btnTransToA = new System.Windows.Forms.Button();
		this.Label10 = new System.Windows.Forms.Label();
		this.btnArrangIT = new System.Windows.Forms.Button();
		this.txtPassMs = new System.Windows.Forms.TextBox();
		this.Label7 = new System.Windows.Forms.Label();
		this.txtMS01 = new System.Windows.Forms.TextBox();
		this.btnGetBalMS = new System.Windows.Forms.Button();
		this.btnTransTo = new System.Windows.Forms.Button();
		this.btnTransFromMS = new System.Windows.Forms.Button();
		this.Label4 = new System.Windows.Forms.Label();
		this.tabTayer = new System.Windows.Forms.TabPage();
		this.ckbtnTayerPullAllBalsMony = new System.Windows.Forms.CheckBox();
		this.btnTayerPullAllBalsMony = new System.Windows.Forms.Button();
		this.btnTayerKikOut = new System.Windows.Forms.Button();
		this.Label90 = new System.Windows.Forms.Label();
		this.btnAddCodeToTayer = new System.Windows.Forms.Button();
		this.txtCodeTayer = new System.Windows.Forms.TextBox();
		this.ckbtnTayerPullAllBals = new System.Windows.Forms.CheckBox();
		this.btnTayerPullAllBals = new System.Windows.Forms.Button();
		this.ckbtnTayerSeries = new System.Windows.Forms.CheckBox();
		this.CheckBox2 = new System.Windows.Forms.CheckBox();
		this.txtTayerF = new System.Windows.Forms.TextBox();
		this.txtTayerS = new System.Windows.Forms.TextBox();
		this.ckTayerGetBal = new System.Windows.Forms.CheckBox();
		this.btnTayerfromMtoN = new System.Windows.Forms.Button();
		this.Label80 = new System.Windows.Forms.Label();
		this.TextBox1 = new System.Windows.Forms.TextBox();
		this.btnAutoVC_ChargeTayer = new System.Windows.Forms.Button();
		this.Label70 = new System.Windows.Forms.Label();
		this.txtTayerPass = new System.Windows.Forms.TextBox();
		this.ckTayerSub = new System.Windows.Forms.CheckBox();
		this.txtTayerSub = new System.Windows.Forms.TextBox();
		this.btnTayerEX = new System.Windows.Forms.Button();
		this.btnTayerSeries = new System.Windows.Forms.Button();
		this.Label75 = new System.Windows.Forms.Label();
		this.Label79 = new System.Windows.Forms.Label();
		this.txtTayerNextMain = new System.Windows.Forms.TextBox();
		this.lblTayerMain = new System.Windows.Forms.Label();
		this.Label81 = new System.Windows.Forms.Label();
		this.txtTayerValue = new System.Windows.Forms.TextBox();
		this.btnTayerGetBal = new System.Windows.Forms.Button();
		this.tabEzoo = new System.Windows.Forms.TabPage();
		this.ckbtnTal2aGetBal = new System.Windows.Forms.CheckBox();
		this.ckTal2a = new System.Windows.Forms.CheckBox();
		this.btnTal2aTransferFromOrange = new System.Windows.Forms.Button();
		this.Label102 = new System.Windows.Forms.Label();
		this.txtTl2aOrangeValue = new System.Windows.Forms.TextBox();
		this.btnTal2aTransferVoda = new System.Windows.Forms.Button();
		this.btnTal2aGetBal = new System.Windows.Forms.Button();
		this.Label86 = new System.Windows.Forms.Label();
		this.txtTl2aToVodaNumber = new System.Windows.Forms.TextBox();
		this.txtTl2aVodaValue = new System.Windows.Forms.TextBox();
		this.tab365 = new System.Windows.Forms.TabPage();
		this.chkTransGiftAutoSpVal365 = new System.Windows.Forms.CheckBox();
		this.txtLoopSSD365_f = new System.Windows.Forms.TextBox();
		this.txtLoopFSD365_f = new System.Windows.Forms.TextBox();
		this.txtGetgft365_2 = new System.Windows.Forms.TextBox();
		this.chkAuto365EXE_f = new System.Windows.Forms.CheckBox();
		this.txtGetgft365_f = new System.Windows.Forms.TextBox();
		this.btnApply36590_f = new System.Windows.Forms.Button();
		this.txtLoopSSD365Gft = new System.Windows.Forms.TextBox();
		this.txtLoopFSD365Gft = new System.Windows.Forms.TextBox();
		this.chkNoCharge50 = new System.Windows.Forms.CheckBox();
		this.chkAuto365Trans = new System.Windows.Forms.CheckBox();
		this.chk250int = new System.Windows.Forms.CheckBox();
		this.chkApply365 = new System.Windows.Forms.CheckBox();
		this.chkAuto365EXE = new System.Windows.Forms.CheckBox();
		this.chkFast365 = new System.Windows.Forms.CheckBox();
		this.btnAuto365 = new System.Windows.Forms.Button();
		this.txtGetgft365 = new System.Windows.Forms.TextBox();
		this.txtVCForceMony365 = new System.Windows.Forms.TextBox();
		this.btnTransGiftAutoSpVal365 = new System.Windows.Forms.Button();
		this.Label54 = new System.Windows.Forms.Label();
		this.txtTransNum2365Gft = new System.Windows.Forms.TextBox();
		this.txtLoopSSD365 = new System.Windows.Forms.TextBox();
		this.txtLoopFSD365 = new System.Windows.Forms.TextBox();
		this.btnApply36590 = new System.Windows.Forms.Button();
		this.chkChargeOnSame365 = new System.Windows.Forms.CheckBox();
		this.Label52 = new System.Windows.Forms.Label();
		this.Label53 = new System.Windows.Forms.Label();
		this.txtTransNum2365 = new System.Windows.Forms.TextBox();
		this.txtMonyMn365 = new System.Windows.Forms.TextBox();
		this.btnApply365 = new System.Windows.Forms.Button();
		this.tabpoints = new System.Windows.Forms.TabPage();
		this.txtRet07 = new System.Windows.Forms.TextBox();
		this.txtRet08 = new System.Windows.Forms.TextBox();
		this.chkCh8 = new System.Windows.Forms.CheckBox();
		this.chkCh7 = new System.Windows.Forms.CheckBox();
		this.txtPointsF = new System.Windows.Forms.TextBox();
		this.txtPointsS = new System.Windows.Forms.TextBox();
		this.btnAutoVC_ChargePoints = new System.Windows.Forms.Button();
		this.Label69 = new System.Windows.Forms.Label();
		this.lblMainPoints = new System.Windows.Forms.Label();
		this.Label71 = new System.Windows.Forms.Label();
		this.txtPointsValue = new System.Windows.Forms.TextBox();
		this.lblNum8 = new System.Windows.Forms.TextBox();
		this.lblNum7 = new System.Windows.Forms.TextBox();
		this.tabON = new System.Windows.Forms.TabPage();
		this.btnONtopup = new System.Windows.Forms.Button();
		this.btnONGift = new System.Windows.Forms.Button();
		this.btnGetBal2ON = new System.Windows.Forms.Button();
		this.btnAutoGet = new System.Windows.Forms.Button();
		this.btnPic = new System.Windows.Forms.Button();
		this.lblONnumQ = new System.Windows.Forms.Label();
		this.lblONvQ = new System.Windows.Forms.Label();
		this.lblONmcQ = new System.Windows.Forms.Label();
		this.txtQryOrder = new System.Windows.Forms.TextBox();
		this.lblONnum6 = new System.Windows.Forms.Label();
		this.txtONorder6 = new System.Windows.Forms.TextBox();
		this.lblONv6 = new System.Windows.Forms.Label();
		this.lblONmc6 = new System.Windows.Forms.Label();
		this.lblONnum5 = new System.Windows.Forms.Label();
		this.txtONorder5 = new System.Windows.Forms.TextBox();
		this.lblONv5 = new System.Windows.Forms.Label();
		this.lblONmc5 = new System.Windows.Forms.Label();
		this.lblONnum4 = new System.Windows.Forms.Label();
		this.txtONorder4 = new System.Windows.Forms.TextBox();
		this.lblONv4 = new System.Windows.Forms.Label();
		this.lblONmc4 = new System.Windows.Forms.Label();
		this.lblONnum3 = new System.Windows.Forms.Label();
		this.txtONorder3 = new System.Windows.Forms.TextBox();
		this.lblONv3 = new System.Windows.Forms.Label();
		this.lblONmc3 = new System.Windows.Forms.Label();
		this.lblONnum2 = new System.Windows.Forms.Label();
		this.txtONorder2 = new System.Windows.Forms.TextBox();
		this.lblONv2 = new System.Windows.Forms.Label();
		this.lblONmc2 = new System.Windows.Forms.Label();
		this.lblONnum1 = new System.Windows.Forms.Label();
		this.txtONorder1 = new System.Windows.Forms.TextBox();
		this.lblONed = new System.Windows.Forms.Label();
		this.lblONv1 = new System.Windows.Forms.Label();
		this.lblONmc1 = new System.Windows.Forms.Label();
		this.ckOnOut = new System.Windows.Forms.CheckBox();
		this.btnOnOut = new System.Windows.Forms.Button();
		this.Label64 = new System.Windows.Forms.Label();
		this.txtOnValue = new System.Windows.Forms.TextBox();
		this.TabPage2 = new System.Windows.Forms.TabPage();
		this.TabPage8 = new System.Windows.Forms.TabPage();
		this.lstNames = new System.Windows.Forms.ListBox();
		this.lstNum = new System.Windows.Forms.ListBox();
		this.btnRefreshMsg = new System.Windows.Forms.Button();
		this.txtEnote = new System.Windows.Forms.TextBox();
		this.txtSvrName = new System.Windows.Forms.TextBox();
		this.txtSrvMsg = new System.Windows.Forms.TextBox();
		this.txtMobnum = new System.Windows.Forms.TextBox();
		this.btnSendSms = new System.Windows.Forms.Button();
		this.Button1 = new System.Windows.Forms.Button();
		this.TabPage9 = new System.Windows.Forms.TabPage();
		this.btnPast = new System.Windows.Forms.Button();
		this.Label22 = new System.Windows.Forms.Label();
		this.Label20 = new System.Windows.Forms.Label();
		this.dataViewGridQryChrg = new System.Windows.Forms.DataGridView();
		this.dataViewGridQryBal = new System.Windows.Forms.DataGridView();
		this.txtNumQry = new System.Windows.Forms.TextBox();
		this.TabPage10 = new System.Windows.Forms.TabPage();
		this.lblSavePath = new System.Windows.Forms.Label();
		this.btnSaveAS = new System.Windows.Forms.Button();
		this.btnExport2 = new System.Windows.Forms.Button();
		this.btnQryQry = new System.Windows.Forms.Button();
		this.lblQryTotal = new System.Windows.Forms.Label();
		this.lstQryBal = new System.Windows.Forms.ListBox();
		this.lstQryNumbers = new System.Windows.Forms.ListBox();
		this.txtEnumsVCQry = new System.Windows.Forms.TextBox();
		this.btnGetQry = new System.Windows.Forms.Button();
		this.chkAutoMain = new System.Windows.Forms.CheckBox();
		this.ckUseNextMain = new System.Windows.Forms.CheckBox();
		this.chkUse365inprcss = new System.Windows.Forms.CheckBox();
		this.chkUse365inprcss10 = new System.Windows.Forms.CheckBox();
		this.chkSqn = new System.Windows.Forms.CheckBox();
		this.chkTransferAllNormalVoda = new System.Windows.Forms.CheckBox();
		this.ckUse910 = new System.Windows.Forms.CheckBox();
		this.chkChargeOnSame = new System.Windows.Forms.CheckBox();
		this.btnCancelTrans = new System.Windows.Forms.Button();
		this.btn3G = new System.Windows.Forms.Button();
		this.chkStop = new System.Windows.Forms.CheckBox();
		this.lblGifts01 = new System.Windows.Forms.Label();
		this.lblGifts02 = new System.Windows.Forms.Label();
		this.lblGifts03 = new System.Windows.Forms.Label();
		this.lblGifts04 = new System.Windows.Forms.Label();
		this.lblGifts05 = new System.Windows.Forms.Label();
		this.lblGifts06 = new System.Windows.Forms.Label();
		this.SFD = new System.Windows.Forms.SaveFileDialog();
		this.chkAutoDell = new System.Windows.Forms.CheckBox();
		this.ODfile = new System.Windows.Forms.OpenFileDialog();
		this.lblGiftV1 = new System.Windows.Forms.Label();
		this.lblGiftV2 = new System.Windows.Forms.Label();
		this.lblGiftV3 = new System.Windows.Forms.Label();
		this.lblGiftV4 = new System.Windows.Forms.Label();
		this.lblGiftV5 = new System.Windows.Forms.Label();
		this.lblGiftV6 = new System.Windows.Forms.Label();
		this.lblGifttotal6 = new System.Windows.Forms.Label();
		this.lblGifttotal5 = new System.Windows.Forms.Label();
		this.lblGifttotal4 = new System.Windows.Forms.Label();
		this.lblGifttotal3 = new System.Windows.Forms.Label();
		this.lblGifttotal2 = new System.Windows.Forms.Label();
		this.lblGifttotal1 = new System.Windows.Forms.Label();
		this.btnRefreshComs = new System.Windows.Forms.Button();
		this.btnGetSimsGifts = new System.Windows.Forms.Button();
		this.btnGetInfo = new System.Windows.Forms.Button();
		this.chkAutoRes = new System.Windows.Forms.CheckBox();
		this.chkDelSms = new System.Windows.Forms.CheckBox();
		this.chkReadsms = new System.Windows.Forms.CheckBox();
		this.TabControl1 = new System.Windows.Forms.TabControl();
		this.TabPage11 = new System.Windows.Forms.TabPage();
		this.btnInvertSelection = new System.Windows.Forms.Button();
		this.btnSADwn = new System.Windows.Forms.Button();
		this.btnUp = new System.Windows.Forms.Button();
		this.BtnOO = new System.Windows.Forms.Button();
		this.btnVV = new System.Windows.Forms.Button();
		this.TabPage15 = new System.Windows.Forms.TabPage();
		this.txtWebSign = new System.Windows.Forms.TextBox();
		this.btnCC = new System.Windows.Forms.Button();
		this.TabPage16 = new System.Windows.Forms.TabPage();
		this.btn2G = new System.Windows.Forms.Button();
		this.TabPage17 = new System.Windows.Forms.TabPage();
		this.ckSetThisNumberToValedPeriod = new System.Windows.Forms.CheckBox();
		this.chkSafeMode = new System.Windows.Forms.CheckBox();
		this.tabServer = new System.Windows.Forms.TabPage();
		this.Label103 = new System.Windows.Forms.Label();
		this.txtNumberToAddinRobot = new System.Windows.Forms.TextBox();
		this.lbladdedtoQry = new System.Windows.Forms.Label();
		this.btnSaveASqry = new System.Windows.Forms.Button();
		this.btnExport2qry = new System.Windows.Forms.Button();
		this.btnwebQry = new System.Windows.Forms.Button();
		this.lblQryCount = new System.Windows.Forms.Label();
		this.Label91 = new System.Windows.Forms.Label();
		this.txtWebQryMonth = new System.Windows.Forms.TextBox();
		this.Label34 = new System.Windows.Forms.Label();
		this.txtWebQryDay = new System.Windows.Forms.TextBox();
		this.lstWebQry = new System.Windows.Forms.ListBox();
		this.Label33 = new System.Windows.Forms.Label();
		this.Label32 = new System.Windows.Forms.Label();
		this.txtWebQryOperator = new System.Windows.Forms.TextBox();
		this.txtWebQrySign = new System.Windows.Forms.TextBox();
		this.txtDelayInSC = new System.Windows.Forms.TextBox();
		this.cktxtDelayInSC = new System.Windows.Forms.CheckBox();
		this.lblChargeDone1 = new System.Windows.Forms.Label();
		this.lblChargeDone2 = new System.Windows.Forms.Label();
		this.lblChargeDone3 = new System.Windows.Forms.Label();
		this.lblChargeDone4 = new System.Windows.Forms.Label();
		this.lblChargeDone5 = new System.Windows.Forms.Label();
		this.lblChargeDone6 = new System.Windows.Forms.Label();
		this.gboxLock = new System.Windows.Forms.GroupBox();
		this.btnLockNo = new System.Windows.Forms.Button();
		this.btnLockOK = new System.Windows.Forms.Button();
		this.Label67 = new System.Windows.Forms.Label();
		this.Label65 = new System.Windows.Forms.Label();
		this.lblLastCheck = new System.Windows.Forms.Label();
		this.txtInfoSize = new System.Windows.Forms.TextBox();
		this.Label89 = new System.Windows.Forms.Label();
		this.txtInfoSizeH = new System.Windows.Forms.TextBox();
		this.Label110 = new System.Windows.Forms.Label();
		this.MainTC.SuspendLayout();
		this.VodaCashPAnel.SuspendLayout();
		this.tabvc2.SuspendLayout();
		this.tab365_2.SuspendLayout();
		this.TabPage4.SuspendLayout();
		this.tabOcash.SuspendLayout();
		this.tabOCCon.SuspendLayout();
		this.tabOCMaster.SuspendLayout();
		this.tabOCGifts.SuspendLayout();
		this.tabOCSetup.SuspendLayout();
		this.tabOrngInv.SuspendLayout();
		((System.ComponentModel.ISupportInitialize)this.dataViewGrid).BeginInit();
		this.TabPage1.SuspendLayout();
		this.TabPage7.SuspendLayout();
		this.tabPrint.SuspendLayout();
		this.GroupBox2.SuspendLayout();
		this.GroupBox5.SuspendLayout();
		this.GroupBox1.SuspendLayout();
		this.TabPage3.SuspendLayout();
		this.gboxSms.SuspendLayout();
		this.TabPage5.SuspendLayout();
		this.TabPage14.SuspendLayout();
		this.TabPage12.SuspendLayout();
		this.TabPage13.SuspendLayout();
		this.TabPage6.SuspendLayout();
		this.tabTayer.SuspendLayout();
		this.tabEzoo.SuspendLayout();
		this.tab365.SuspendLayout();
		this.tabpoints.SuspendLayout();
		this.tabON.SuspendLayout();
		this.TabPage2.SuspendLayout();
		this.TabPage8.SuspendLayout();
		this.TabPage9.SuspendLayout();
		((System.ComponentModel.ISupportInitialize)this.dataViewGridQryChrg).BeginInit();
		((System.ComponentModel.ISupportInitialize)this.dataViewGridQryBal).BeginInit();
		this.TabPage10.SuspendLayout();
		this.TabControl1.SuspendLayout();
		this.TabPage11.SuspendLayout();
		this.TabPage15.SuspendLayout();
		this.TabPage16.SuspendLayout();
		this.TabPage17.SuspendLayout();
		this.tabServer.SuspendLayout();
		this.gboxLock.SuspendLayout();
		base.SuspendLayout();
		this.btnRefreshMissed.BackColor = System.Drawing.Color.FromArgb(192, 255, 255);
		this.btnRefreshMissed.Font = new System.Drawing.Font("Tahoma", 7.75f, System.Drawing.FontStyle.Bold);
		this.btnRefreshMissed.Location = new System.Drawing.Point(82, 5);
		this.btnRefreshMissed.Name = "btnRefreshMissed";
		this.btnRefreshMissed.Size = new System.Drawing.Size(87, 42);
		this.btnRefreshMissed.TabIndex = 765;
		this.btnRefreshMissed.Text = "Get Missed";
		this.btnRefreshMissed.UseVisualStyleBackColor = false;
		this.txtUssdc3.BackColor = System.Drawing.Color.White;
		this.txtUssdc3.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtUssdc3.ForeColor = System.Drawing.Color.Black;
		this.txtUssdc3.Location = new System.Drawing.Point(6, 38);
		this.txtUssdc3.Name = "txtUssdc3";
		this.txtUssdc3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtUssdc3.Size = new System.Drawing.Size(135, 27);
		this.txtUssdc3.TabIndex = 736;
		this.txtUssdc2.BackColor = System.Drawing.Color.White;
		this.txtUssdc2.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtUssdc2.ForeColor = System.Drawing.Color.Black;
		this.txtUssdc2.Location = new System.Drawing.Point(214, 38);
		this.txtUssdc2.Name = "txtUssdc2";
		this.txtUssdc2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtUssdc2.Size = new System.Drawing.Size(108, 27);
		this.txtUssdc2.TabIndex = 734;
		this.txt205.BackColor = System.Drawing.Color.FromArgb(64, 64, 64);
		this.txt205.BorderStyle = System.Windows.Forms.BorderStyle.None;
		this.txt205.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txt205.ForeColor = System.Drawing.Color.White;
		this.txt205.Location = new System.Drawing.Point(163, 265);
		this.txt205.Name = "txt205";
		this.txt205.PasswordChar = '*';
		this.txt205.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txt205.Size = new System.Drawing.Size(37, 17);
		this.txt205.TabIndex = 726;
		this.txt205.TabStop = false;
		this.txt205.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.TimerSecAuto.Interval = 3000;
		this.txtUssd.BackColor = System.Drawing.Color.White;
		this.txtUssd.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtUssd.ForeColor = System.Drawing.Color.Black;
		this.txtUssd.Location = new System.Drawing.Point(6, 9);
		this.txtUssd.Name = "txtUssd";
		this.txtUssd.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtUssd.Size = new System.Drawing.Size(316, 27);
		this.txtUssd.TabIndex = 598;
		this.lblPort6.BackColor = System.Drawing.Color.Black;
		this.lblPort6.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblPort6.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.lblPort6.ForeColor = System.Drawing.Color.White;
		this.lblPort6.Location = new System.Drawing.Point(221, 350);
		this.lblPort6.Name = "lblPort6";
		this.lblPort6.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblPort6.Size = new System.Drawing.Size(66, 27);
		this.lblPort6.TabIndex = 624;
		this.lblPort6.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblPort5.BackColor = System.Drawing.Color.Black;
		this.lblPort5.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblPort5.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.lblPort5.ForeColor = System.Drawing.Color.White;
		this.lblPort5.Location = new System.Drawing.Point(691, 350);
		this.lblPort5.Name = "lblPort5";
		this.lblPort5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblPort5.Size = new System.Drawing.Size(66, 27);
		this.lblPort5.TabIndex = 622;
		this.lblPort5.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblPort4.BackColor = System.Drawing.Color.Black;
		this.lblPort4.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblPort4.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.lblPort4.ForeColor = System.Drawing.Color.White;
		this.lblPort4.Location = new System.Drawing.Point(1229, 351);
		this.lblPort4.Name = "lblPort4";
		this.lblPort4.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblPort4.Size = new System.Drawing.Size(65, 27);
		this.lblPort4.TabIndex = 615;
		this.lblPort4.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblPort3.BackColor = System.Drawing.Color.Black;
		this.lblPort3.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblPort3.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.lblPort3.ForeColor = System.Drawing.Color.White;
		this.lblPort3.Location = new System.Drawing.Point(80, 135);
		this.lblPort3.Name = "lblPort3";
		this.lblPort3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblPort3.Size = new System.Drawing.Size(66, 27);
		this.lblPort3.TabIndex = 613;
		this.lblPort3.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblPort2.BackColor = System.Drawing.Color.Black;
		this.lblPort2.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblPort2.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.lblPort2.ForeColor = System.Drawing.Color.White;
		this.lblPort2.Location = new System.Drawing.Point(630, 135);
		this.lblPort2.Name = "lblPort2";
		this.lblPort2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblPort2.Size = new System.Drawing.Size(59, 27);
		this.lblPort2.TabIndex = 611;
		this.lblPort2.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblPort1.BackColor = System.Drawing.Color.Black;
		this.lblPort1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblPort1.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.lblPort1.ForeColor = System.Drawing.Color.White;
		this.lblPort1.Location = new System.Drawing.Point(974, 138);
		this.lblPort1.Name = "lblPort1";
		this.lblPort1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblPort1.Size = new System.Drawing.Size(58, 27);
		this.lblPort1.TabIndex = 608;
		this.lblPort1.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.btnResetMissed.BackColor = System.Drawing.Color.FromArgb(192, 255, 255);
		this.btnResetMissed.Font = new System.Drawing.Font("Tahoma", 7.75f, System.Drawing.FontStyle.Bold);
		this.btnResetMissed.ForeColor = System.Drawing.Color.Red;
		this.btnResetMissed.Location = new System.Drawing.Point(6, 5);
		this.btnResetMissed.Name = "btnResetMissed";
		this.btnResetMissed.Size = new System.Drawing.Size(75, 42);
		this.btnResetMissed.TabIndex = 593;
		this.btnResetMissed.Text = "RST Missed";
		this.btnResetMissed.UseVisualStyleBackColor = false;
		this.btnGetSims.BackColor = System.Drawing.Color.FromArgb(192, 255, 255);
		this.btnGetSims.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.btnGetSims.ForeColor = System.Drawing.Color.Red;
		this.btnGetSims.Location = new System.Drawing.Point(82, 47);
		this.btnGetSims.Name = "btnGetSims";
		this.btnGetSims.Size = new System.Drawing.Size(87, 42);
		this.btnGetSims.TabIndex = 591;
		this.btnGetSims.Text = "RST All";
		this.btnGetSims.UseVisualStyleBackColor = false;
		this.lblProgress.BackColor = System.Drawing.Color.White;
		this.lblProgress.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblProgress.Font = new System.Drawing.Font("Tahoma", 15.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lblProgress.ForeColor = System.Drawing.Color.Black;
		this.lblProgress.Location = new System.Drawing.Point(152, 4);
		this.lblProgress.Name = "lblProgress";
		this.lblProgress.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblProgress.Size = new System.Drawing.Size(824, 35);
		this.lblProgress.TabIndex = 616;
		this.lblProgress.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.btnRefresh.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.btnRefresh.Font = new System.Drawing.Font("Tahoma", 21.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnRefresh.ForeColor = System.Drawing.Color.Green;
		this.btnRefresh.Location = new System.Drawing.Point(951, 396);
		this.btnRefresh.Name = "btnRefresh";
		this.btnRefresh.Size = new System.Drawing.Size(138, 117);
		this.btnRefresh.TabIndex = 590;
		this.btnRefresh.Text = "Run";
		this.btnRefresh.UseVisualStyleBackColor = false;
		this.btnRunUssd.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRunUssd.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnRunUssd.ForeColor = System.Drawing.Color.Black;
		this.btnRunUssd.Location = new System.Drawing.Point(328, 8);
		this.btnRunUssd.Name = "btnRunUssd";
		this.btnRunUssd.Size = new System.Drawing.Size(62, 27);
		this.btnRunUssd.TabIndex = 596;
		this.btnRunUssd.Text = "تنفيذ";
		this.btnRunUssd.UseVisualStyleBackColor = false;
		this.txtRet01.BackColor = System.Drawing.Color.Black;
		this.txtRet01.Font = new System.Drawing.Font("Arial", 14f, System.Drawing.FontStyle.Bold);
		this.txtRet01.ForeColor = System.Drawing.Color.White;
		this.txtRet01.Location = new System.Drawing.Point(895, 101);
		this.txtRet01.Multiline = true;
		this.txtRet01.Name = "txtRet01";
		this.txtRet01.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.txtRet01.ScrollBars = System.Windows.Forms.ScrollBars.Vertical;
		this.txtRet01.Size = new System.Drawing.Size(445, 113);
		this.txtRet01.TabIndex = 769;
		this.txtRet02.BackColor = System.Drawing.Color.Black;
		this.txtRet02.Font = new System.Drawing.Font("Arial", 14f, System.Drawing.FontStyle.Bold);
		this.txtRet02.ForeColor = System.Drawing.Color.White;
		this.txtRet02.Location = new System.Drawing.Point(450, 101);
		this.txtRet02.Multiline = true;
		this.txtRet02.Name = "txtRet02";
		this.txtRet02.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.txtRet02.ScrollBars = System.Windows.Forms.ScrollBars.Vertical;
		this.txtRet02.Size = new System.Drawing.Size(443, 113);
		this.txtRet02.TabIndex = 770;
		this.txtRet03.BackColor = System.Drawing.Color.Black;
		this.txtRet03.Font = new System.Drawing.Font("Arial", 14f, System.Drawing.FontStyle.Bold);
		this.txtRet03.ForeColor = System.Drawing.Color.White;
		this.txtRet03.Location = new System.Drawing.Point(3, 101);
		this.txtRet03.Multiline = true;
		this.txtRet03.Name = "txtRet03";
		this.txtRet03.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.txtRet03.ScrollBars = System.Windows.Forms.ScrollBars.Vertical;
		this.txtRet03.Size = new System.Drawing.Size(446, 113);
		this.txtRet03.TabIndex = 771;
		this.txtRet06.BackColor = System.Drawing.Color.Black;
		this.txtRet06.Font = new System.Drawing.Font("Arial", 14f, System.Drawing.FontStyle.Bold);
		this.txtRet06.ForeColor = System.Drawing.Color.White;
		this.txtRet06.Location = new System.Drawing.Point(3, 277);
		this.txtRet06.Multiline = true;
		this.txtRet06.Name = "txtRet06";
		this.txtRet06.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.txtRet06.ScrollBars = System.Windows.Forms.ScrollBars.Vertical;
		this.txtRet06.Size = new System.Drawing.Size(446, 113);
		this.txtRet06.TabIndex = 774;
		this.txtRet05.BackColor = System.Drawing.Color.Black;
		this.txtRet05.Font = new System.Drawing.Font("Arial", 14f, System.Drawing.FontStyle.Bold);
		this.txtRet05.ForeColor = System.Drawing.Color.White;
		this.txtRet05.Location = new System.Drawing.Point(450, 277);
		this.txtRet05.Multiline = true;
		this.txtRet05.Name = "txtRet05";
		this.txtRet05.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.txtRet05.ScrollBars = System.Windows.Forms.ScrollBars.Vertical;
		this.txtRet05.Size = new System.Drawing.Size(443, 113);
		this.txtRet05.TabIndex = 773;
		this.txtRet04.BackColor = System.Drawing.Color.Black;
		this.txtRet04.Font = new System.Drawing.Font("Arial", 14f, System.Drawing.FontStyle.Bold);
		this.txtRet04.ForeColor = System.Drawing.Color.White;
		this.txtRet04.Location = new System.Drawing.Point(895, 277);
		this.txtRet04.Multiline = true;
		this.txtRet04.Name = "txtRet04";
		this.txtRet04.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.txtRet04.ScrollBars = System.Windows.Forms.ScrollBars.Vertical;
		this.txtRet04.Size = new System.Drawing.Size(445, 113);
		this.txtRet04.TabIndex = 772;
		this.btnRunUssd2.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRunUssd2.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnRunUssd2.ForeColor = System.Drawing.Color.Black;
		this.btnRunUssd2.Location = new System.Drawing.Point(328, 39);
		this.btnRunUssd2.Name = "btnRunUssd2";
		this.btnRunUssd2.Size = new System.Drawing.Size(62, 27);
		this.btnRunUssd2.TabIndex = 775;
		this.btnRunUssd2.Text = "تنفيذ";
		this.btnRunUssd2.UseVisualStyleBackColor = false;
		this.btnRunUssd3.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRunUssd3.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnRunUssd3.ForeColor = System.Drawing.Color.Black;
		this.btnRunUssd3.Location = new System.Drawing.Point(147, 38);
		this.btnRunUssd3.Name = "btnRunUssd3";
		this.btnRunUssd3.Size = new System.Drawing.Size(62, 27);
		this.btnRunUssd3.TabIndex = 776;
		this.btnRunUssd3.Text = "تنفيذ";
		this.btnRunUssd3.UseVisualStyleBackColor = false;
		this.btnRunUssd4.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRunUssd4.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnRunUssd4.ForeColor = System.Drawing.Color.Black;
		this.btnRunUssd4.Location = new System.Drawing.Point(328, 77);
		this.btnRunUssd4.Name = "btnRunUssd4";
		this.btnRunUssd4.Size = new System.Drawing.Size(62, 27);
		this.btnRunUssd4.TabIndex = 777;
		this.btnRunUssd4.Text = "تنفيذ";
		this.btnRunUssd4.UseVisualStyleBackColor = false;
		this.txtUssdc4.BackColor = System.Drawing.Color.White;
		this.txtUssdc4.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtUssdc4.ForeColor = System.Drawing.Color.Black;
		this.txtUssdc4.Location = new System.Drawing.Point(6, 77);
		this.txtUssdc4.Name = "txtUssdc4";
		this.txtUssdc4.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtUssdc4.Size = new System.Drawing.Size(316, 27);
		this.txtUssdc4.TabIndex = 778;
		this.txtUssdc5.BackColor = System.Drawing.Color.White;
		this.txtUssdc5.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtUssdc5.ForeColor = System.Drawing.Color.Black;
		this.txtUssdc5.Location = new System.Drawing.Point(6, 157);
		this.txtUssdc5.Name = "txtUssdc5";
		this.txtUssdc5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtUssdc5.Size = new System.Drawing.Size(316, 27);
		this.txtUssdc5.TabIndex = 780;
		this.btnRunUssd5.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRunUssd5.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnRunUssd5.ForeColor = System.Drawing.Color.Black;
		this.btnRunUssd5.Location = new System.Drawing.Point(328, 159);
		this.btnRunUssd5.Name = "btnRunUssd5";
		this.btnRunUssd5.Size = new System.Drawing.Size(63, 27);
		this.btnRunUssd5.TabIndex = 779;
		this.btnRunUssd5.Text = "تنفيذ";
		this.btnRunUssd5.UseVisualStyleBackColor = false;
		this.txtUssdc6.BackColor = System.Drawing.Color.White;
		this.txtUssdc6.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtUssdc6.ForeColor = System.Drawing.Color.Black;
		this.txtUssdc6.Location = new System.Drawing.Point(6, 185);
		this.txtUssdc6.Name = "txtUssdc6";
		this.txtUssdc6.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtUssdc6.Size = new System.Drawing.Size(316, 27);
		this.txtUssdc6.TabIndex = 782;
		this.btnRunUssd6.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRunUssd6.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnRunUssd6.ForeColor = System.Drawing.Color.Black;
		this.btnRunUssd6.Location = new System.Drawing.Point(328, 186);
		this.btnRunUssd6.Name = "btnRunUssd6";
		this.btnRunUssd6.Size = new System.Drawing.Size(63, 27);
		this.btnRunUssd6.TabIndex = 781;
		this.btnRunUssd6.Text = "تنفيذ";
		this.btnRunUssd6.UseVisualStyleBackColor = false;
		this.txtUssdc7.BackColor = System.Drawing.Color.White;
		this.txtUssdc7.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtUssdc7.ForeColor = System.Drawing.Color.Black;
		this.txtUssdc7.Location = new System.Drawing.Point(6, 212);
		this.txtUssdc7.Name = "txtUssdc7";
		this.txtUssdc7.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtUssdc7.Size = new System.Drawing.Size(316, 27);
		this.txtUssdc7.TabIndex = 784;
		this.btnRunUssd7.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRunUssd7.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnRunUssd7.ForeColor = System.Drawing.Color.Black;
		this.btnRunUssd7.Location = new System.Drawing.Point(328, 213);
		this.btnRunUssd7.Name = "btnRunUssd7";
		this.btnRunUssd7.Size = new System.Drawing.Size(63, 27);
		this.btnRunUssd7.TabIndex = 783;
		this.btnRunUssd7.Text = "تنفيذ";
		this.btnRunUssd7.UseVisualStyleBackColor = false;
		this.txtUssdc8.BackColor = System.Drawing.Color.White;
		this.txtUssdc8.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtUssdc8.ForeColor = System.Drawing.Color.Black;
		this.txtUssdc8.Location = new System.Drawing.Point(6, 239);
		this.txtUssdc8.Name = "txtUssdc8";
		this.txtUssdc8.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtUssdc8.Size = new System.Drawing.Size(128, 27);
		this.txtUssdc8.TabIndex = 786;
		this.btnRunUssd8.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRunUssd8.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnRunUssd8.ForeColor = System.Drawing.Color.Black;
		this.btnRunUssd8.Location = new System.Drawing.Point(138, 241);
		this.btnRunUssd8.Name = "btnRunUssd8";
		this.btnRunUssd8.Size = new System.Drawing.Size(63, 27);
		this.btnRunUssd8.TabIndex = 785;
		this.btnRunUssd8.Text = "تنفيذ";
		this.btnRunUssd8.UseVisualStyleBackColor = false;
		this.txtUssdc9.BackColor = System.Drawing.Color.White;
		this.txtUssdc9.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtUssdc9.ForeColor = System.Drawing.Color.Black;
		this.txtUssdc9.Location = new System.Drawing.Point(6, 104);
		this.txtUssdc9.Name = "txtUssdc9";
		this.txtUssdc9.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtUssdc9.Size = new System.Drawing.Size(316, 27);
		this.txtUssdc9.TabIndex = 788;
		this.btnRunUssd9.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRunUssd9.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnRunUssd9.ForeColor = System.Drawing.Color.Black;
		this.btnRunUssd9.Location = new System.Drawing.Point(328, 104);
		this.btnRunUssd9.Name = "btnRunUssd9";
		this.btnRunUssd9.Size = new System.Drawing.Size(62, 27);
		this.btnRunUssd9.TabIndex = 787;
		this.btnRunUssd9.Text = "تنفيذ";
		this.btnRunUssd9.UseVisualStyleBackColor = false;
		this.txtUssdc10.BackColor = System.Drawing.Color.White;
		this.txtUssdc10.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtUssdc10.ForeColor = System.Drawing.Color.Black;
		this.txtUssdc10.Location = new System.Drawing.Point(6, 131);
		this.txtUssdc10.Name = "txtUssdc10";
		this.txtUssdc10.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtUssdc10.Size = new System.Drawing.Size(316, 27);
		this.txtUssdc10.TabIndex = 790;
		this.btnRunUssd10.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRunUssd10.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnRunUssd10.ForeColor = System.Drawing.Color.Black;
		this.btnRunUssd10.Location = new System.Drawing.Point(328, 131);
		this.btnRunUssd10.Name = "btnRunUssd10";
		this.btnRunUssd10.Size = new System.Drawing.Size(63, 27);
		this.btnRunUssd10.TabIndex = 789;
		this.btnRunUssd10.Text = "تنفيذ";
		this.btnRunUssd10.UseVisualStyleBackColor = false;
		this.btnClear.BackColor = System.Drawing.Color.FromArgb(255, 224, 192);
		this.btnClear.Font = new System.Drawing.Font("Tahoma", 11.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnClear.Location = new System.Drawing.Point(6, 4);
		this.btnClear.Name = "btnClear";
		this.btnClear.Size = new System.Drawing.Size(140, 35);
		this.btnClear.TabIndex = 791;
		this.btnClear.Text = "Clear";
		this.btnClear.UseVisualStyleBackColor = false;
		this.btnRR.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRR.Font = new System.Drawing.Font("Tahoma", 9f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnRR.Location = new System.Drawing.Point(9, 179);
		this.btnRR.Name = "btnRR";
		this.btnRR.Size = new System.Drawing.Size(160, 30);
		this.btnRR.TabIndex = 792;
		this.btnRR.Text = "قراءة الرد";
		this.btnRR.UseVisualStyleBackColor = false;
		this.btnUssdReset.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnUssdReset.Font = new System.Drawing.Font("Tahoma", 9f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnUssdReset.Location = new System.Drawing.Point(3, 6);
		this.btnUssdReset.Name = "btnUssdReset";
		this.btnUssdReset.Size = new System.Drawing.Size(202, 65);
		this.btnUssdReset.TabIndex = 793;
		this.btnUssdReset.Text = "Refresh USSD";
		this.btnUssdReset.UseVisualStyleBackColor = false;
		this.btnClearSMS.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnClearSMS.Font = new System.Drawing.Font("Tahoma", 9f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnClearSMS.Location = new System.Drawing.Point(6, 108);
		this.btnClearSMS.Name = "btnClearSMS";
		this.btnClearSMS.Size = new System.Drawing.Size(144, 27);
		this.btnClearSMS.TabIndex = 809;
		this.btnClearSMS.Text = "مسح الرسائل";
		this.btnClearSMS.UseVisualStyleBackColor = false;
		this.btnReadSms.BackColor = System.Drawing.Color.FromArgb(224, 224, 224);
		this.btnReadSms.Font = new System.Drawing.Font("Tahoma", 9f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnReadSms.Location = new System.Drawing.Point(6, 77);
		this.btnReadSms.Name = "btnReadSms";
		this.btnReadSms.Size = new System.Drawing.Size(144, 27);
		this.btnReadSms.TabIndex = 808;
		this.btnReadSms.Text = "قراءة الرسائل";
		this.btnReadSms.UseVisualStyleBackColor = false;
		this.lblNum6.BackColor = System.Drawing.Color.Black;
		this.lblNum6.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblNum6.Font = new System.Drawing.Font("Tahoma", 21.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lblNum6.ForeColor = System.Drawing.Color.FromArgb(128, 255, 128);
		this.lblNum6.Location = new System.Drawing.Point(222, 217);
		this.lblNum6.Name = "lblNum6";
		this.lblNum6.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblNum6.Size = new System.Drawing.Size(227, 52);
		this.lblNum6.TabIndex = 815;
		this.lblNum6.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblNum5.BackColor = System.Drawing.Color.Black;
		this.lblNum5.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblNum5.Font = new System.Drawing.Font("Tahoma", 21.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lblNum5.ForeColor = System.Drawing.Color.FromArgb(128, 255, 128);
		this.lblNum5.Location = new System.Drawing.Point(663, 218);
		this.lblNum5.Name = "lblNum5";
		this.lblNum5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblNum5.Size = new System.Drawing.Size(227, 52);
		this.lblNum5.TabIndex = 814;
		this.lblNum5.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblNum4.BackColor = System.Drawing.Color.Black;
		this.lblNum4.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblNum4.Font = new System.Drawing.Font("Tahoma", 21.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lblNum4.ForeColor = System.Drawing.Color.FromArgb(128, 255, 128);
		this.lblNum4.Location = new System.Drawing.Point(1113, 218);
		this.lblNum4.Name = "lblNum4";
		this.lblNum4.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblNum4.Size = new System.Drawing.Size(227, 52);
		this.lblNum4.TabIndex = 813;
		this.lblNum4.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblNum3.BackColor = System.Drawing.Color.Black;
		this.lblNum3.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblNum3.Font = new System.Drawing.Font("Tahoma", 21.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lblNum3.ForeColor = System.Drawing.Color.FromArgb(128, 255, 128);
		this.lblNum3.Location = new System.Drawing.Point(222, 43);
		this.lblNum3.Name = "lblNum3";
		this.lblNum3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblNum3.Size = new System.Drawing.Size(227, 52);
		this.lblNum3.TabIndex = 812;
		this.lblNum3.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblNum2.BackColor = System.Drawing.Color.Black;
		this.lblNum2.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblNum2.Font = new System.Drawing.Font("Tahoma", 21.75f, System.Drawing.FontStyle.Bold);
		this.lblNum2.ForeColor = System.Drawing.Color.FromArgb(128, 255, 128);
		this.lblNum2.Location = new System.Drawing.Point(663, 44);
		this.lblNum2.Name = "lblNum2";
		this.lblNum2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblNum2.Size = new System.Drawing.Size(227, 52);
		this.lblNum2.TabIndex = 811;
		this.lblNum2.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblNum1.BackColor = System.Drawing.Color.Black;
		this.lblNum1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblNum1.Font = new System.Drawing.Font("Tahoma", 21.75f, System.Drawing.FontStyle.Bold);
		this.lblNum1.ForeColor = System.Drawing.Color.FromArgb(128, 255, 128);
		this.lblNum1.Location = new System.Drawing.Point(1113, 42);
		this.lblNum1.Name = "lblNum1";
		this.lblNum1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblNum1.Size = new System.Drawing.Size(227, 52);
		this.lblNum1.TabIndex = 810;
		this.lblNum1.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.ckBox.AutoSize = true;
		this.ckBox.Checked = true;
		this.ckBox.CheckState = System.Windows.Forms.CheckState.Checked;
		this.ckBox.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckBox.ForeColor = System.Drawing.Color.Cyan;
		this.ckBox.Location = new System.Drawing.Point(110, 213);
		this.ckBox.Name = "ckBox";
		this.ckBox.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckBox.Size = new System.Drawing.Size(112, 17);
		this.ckBox.TabIndex = 816;
		this.ckBox.Text = "تطبيق على الكل";
		this.ckBox.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckBox.UseVisualStyleBackColor = true;
		this.btnRefreshEmpty.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRefreshEmpty.Font = new System.Drawing.Font("Tahoma", 9f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnRefreshEmpty.Location = new System.Drawing.Point(9, 210);
		this.btnRefreshEmpty.Name = "btnRefreshEmpty";
		this.btnRefreshEmpty.Size = new System.Drawing.Size(160, 32);
		this.btnRefreshEmpty.TabIndex = 817;
		this.btnRefreshEmpty.Text = "Refresh";
		this.btnRefreshEmpty.UseVisualStyleBackColor = false;
		this.btnNumbers.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnNumbers.Font = new System.Drawing.Font("Arial", 8f, System.Drawing.FontStyle.Bold);
		this.btnNumbers.Location = new System.Drawing.Point(106, 87);
		this.btnNumbers.Name = "btnNumbers";
		this.btnNumbers.Size = new System.Drawing.Size(63, 40);
		this.btnNumbers.TabIndex = 818;
		this.btnNumbers.Text = "MISSED Nums1";
		this.btnNumbers.UseVisualStyleBackColor = false;
		this.ckME.AutoSize = true;
		this.ckME.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckME.ForeColor = System.Drawing.Color.Cyan;
		this.ckME.Location = new System.Drawing.Point(128, 60);
		this.ckME.Name = "ckME";
		this.ckME.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckME.Size = new System.Drawing.Size(94, 17);
		this.ckME.TabIndex = 819;
		this.ckME.Text = "رسائل الجهاز";
		this.ckME.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckME.UseVisualStyleBackColor = true;
		this.btnGetOut.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnGetOut.Font = new System.Drawing.Font("Tahoma", 9f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnGetOut.Location = new System.Drawing.Point(6, 170);
		this.btnGetOut.Name = "btnGetOut";
		this.btnGetOut.Size = new System.Drawing.Size(199, 42);
		this.btnGetOut.TabIndex = 840;
		this.btnGetOut.Text = "Get ";
		this.btnGetOut.UseVisualStyleBackColor = false;
		this.btnSaveOut.BackColor = System.Drawing.Color.Silver;
		this.btnSaveOut.Font = new System.Drawing.Font("Tahoma", 9f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnSaveOut.Location = new System.Drawing.Point(1170, 4);
		this.btnSaveOut.Name = "btnSaveOut";
		this.btnSaveOut.Size = new System.Drawing.Size(170, 35);
		this.btnSaveOut.TabIndex = 839;
		this.btnSaveOut.Text = "Save";
		this.btnSaveOut.UseVisualStyleBackColor = false;
		this.btnNumbers2.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnNumbers2.Font = new System.Drawing.Font("Arial", 8f, System.Drawing.FontStyle.Bold);
		this.btnNumbers2.Location = new System.Drawing.Point(6, 87);
		this.btnNumbers2.Name = "btnNumbers2";
		this.btnNumbers2.Size = new System.Drawing.Size(99, 40);
		this.btnNumbers2.TabIndex = 851;
		this.btnNumbers2.Text = "MISSED Nums2";
		this.btnNumbers2.UseVisualStyleBackColor = false;
		this.btnNumbers3.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnNumbers3.Font = new System.Drawing.Font("Arial", 8f, System.Drawing.FontStyle.Bold);
		this.btnNumbers3.Location = new System.Drawing.Point(6, 127);
		this.btnNumbers3.Name = "btnNumbers3";
		this.btnNumbers3.Size = new System.Drawing.Size(99, 35);
		this.btnNumbers3.TabIndex = 868;
		this.btnNumbers3.Text = "MISSED Nums3";
		this.btnNumbers3.UseVisualStyleBackColor = false;
		this.txtLoopS.BackColor = System.Drawing.Color.Black;
		this.txtLoopS.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopS.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopS.Location = new System.Drawing.Point(6, 34);
		this.txtLoopS.Name = "txtLoopS";
		this.txtLoopS.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopS.Size = new System.Drawing.Size(37, 24);
		this.txtLoopS.TabIndex = 870;
		this.txtLoopS.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtLoopF.BackColor = System.Drawing.Color.Black;
		this.txtLoopF.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopF.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopF.Location = new System.Drawing.Point(6, 8);
		this.txtLoopF.Name = "txtLoopF";
		this.txtLoopF.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopF.Size = new System.Drawing.Size(37, 24);
		this.txtLoopF.TabIndex = 869;
		this.txtLoopF.Text = "1";
		this.txtLoopF.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnRunUssdGG.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRunUssdGG.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnRunUssdGG.ForeColor = System.Drawing.Color.Black;
		this.btnRunUssdGG.Location = new System.Drawing.Point(203, 242);
		this.btnRunUssdGG.Name = "btnRunUssdGG";
		this.btnRunUssdGG.Size = new System.Drawing.Size(119, 27);
		this.btnRunUssdGG.TabIndex = 871;
		this.btnRunUssdGG.Text = "تنفيذ مخصص";
		this.btnRunUssdGG.UseVisualStyleBackColor = false;
		this.btnReplyBy.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnReplyBy.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.btnReplyBy.ForeColor = System.Drawing.Color.Black;
		this.btnReplyBy.Location = new System.Drawing.Point(445, 42);
		this.btnReplyBy.Name = "btnReplyBy";
		this.btnReplyBy.Size = new System.Drawing.Size(112, 33);
		this.btnReplyBy.TabIndex = 872;
		this.btnReplyBy.Text = "Reply";
		this.btnReplyBy.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.btnReplyBy.UseVisualStyleBackColor = false;
		this.txtReplyBy.BackColor = System.Drawing.Color.Black;
		this.txtReplyBy.BorderStyle = System.Windows.Forms.BorderStyle.None;
		this.txtReplyBy.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtReplyBy.ForeColor = System.Drawing.Color.White;
		this.txtReplyBy.Location = new System.Drawing.Point(455, 49);
		this.txtReplyBy.MaxLength = 1;
		this.txtReplyBy.Name = "txtReplyBy";
		this.txtReplyBy.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtReplyBy.Size = new System.Drawing.Size(37, 17);
		this.txtReplyBy.TabIndex = 873;
		this.txtReplyBy.TabStop = false;
		this.txtReplyBy.Text = "1";
		this.txtReplyBy.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtReplyBy2.BackColor = System.Drawing.Color.Black;
		this.txtReplyBy2.BorderStyle = System.Windows.Forms.BorderStyle.None;
		this.txtReplyBy2.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtReplyBy2.ForeColor = System.Drawing.Color.White;
		this.txtReplyBy2.Location = new System.Drawing.Point(455, 82);
		this.txtReplyBy2.MaxLength = 1;
		this.txtReplyBy2.Name = "txtReplyBy2";
		this.txtReplyBy2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtReplyBy2.Size = new System.Drawing.Size(37, 17);
		this.txtReplyBy2.TabIndex = 878;
		this.txtReplyBy2.TabStop = false;
		this.txtReplyBy2.Text = "2";
		this.txtReplyBy2.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnReplyBy2.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnReplyBy2.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.btnReplyBy2.ForeColor = System.Drawing.Color.Black;
		this.btnReplyBy2.Location = new System.Drawing.Point(445, 75);
		this.btnReplyBy2.Name = "btnReplyBy2";
		this.btnReplyBy2.Size = new System.Drawing.Size(112, 33);
		this.btnReplyBy2.TabIndex = 877;
		this.btnReplyBy2.Text = "Reply";
		this.btnReplyBy2.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.btnReplyBy2.UseVisualStyleBackColor = false;
		this.btnFawrySms.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnFawrySms.Font = new System.Drawing.Font("Tahoma", 9f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnFawrySms.ForeColor = System.Drawing.Color.Black;
		this.btnFawrySms.Location = new System.Drawing.Point(9, 242);
		this.btnFawrySms.Name = "btnFawrySms";
		this.btnFawrySms.Size = new System.Drawing.Size(160, 38);
		this.btnFawrySms.TabIndex = 879;
		this.btnFawrySms.Text = "تصدير الرسائل";
		this.btnFawrySms.UseVisualStyleBackColor = false;
		this.lblBal6.BackColor = System.Drawing.Color.Black;
		this.lblBal6.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblBal6.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblBal6.ForeColor = System.Drawing.Color.Yellow;
		this.lblBal6.Location = new System.Drawing.Point(42, 216);
		this.lblBal6.Name = "lblBal6";
		this.lblBal6.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblBal6.Size = new System.Drawing.Size(107, 27);
		this.lblBal6.TabIndex = 888;
		this.lblBal6.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblBal5.BackColor = System.Drawing.Color.Black;
		this.lblBal5.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblBal5.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblBal5.ForeColor = System.Drawing.Color.Yellow;
		this.lblBal5.Location = new System.Drawing.Point(481, 216);
		this.lblBal5.Name = "lblBal5";
		this.lblBal5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblBal5.Size = new System.Drawing.Size(107, 27);
		this.lblBal5.TabIndex = 887;
		this.lblBal5.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblBal4.BackColor = System.Drawing.Color.Black;
		this.lblBal4.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblBal4.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblBal4.ForeColor = System.Drawing.Color.Yellow;
		this.lblBal4.Location = new System.Drawing.Point(923, 216);
		this.lblBal4.Name = "lblBal4";
		this.lblBal4.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblBal4.Size = new System.Drawing.Size(117, 27);
		this.lblBal4.TabIndex = 886;
		this.lblBal4.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblBal3.BackColor = System.Drawing.Color.Black;
		this.lblBal3.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblBal3.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblBal3.ForeColor = System.Drawing.Color.Yellow;
		this.lblBal3.Location = new System.Drawing.Point(42, 42);
		this.lblBal3.Name = "lblBal3";
		this.lblBal3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblBal3.Size = new System.Drawing.Size(107, 27);
		this.lblBal3.TabIndex = 885;
		this.lblBal3.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblBal2.BackColor = System.Drawing.Color.Black;
		this.lblBal2.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblBal2.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblBal2.ForeColor = System.Drawing.Color.Yellow;
		this.lblBal2.Location = new System.Drawing.Point(481, 42);
		this.lblBal2.Name = "lblBal2";
		this.lblBal2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblBal2.Size = new System.Drawing.Size(107, 27);
		this.lblBal2.TabIndex = 884;
		this.lblBal2.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblBal1.BackColor = System.Drawing.Color.Black;
		this.lblBal1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblBal1.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.lblBal1.ForeColor = System.Drawing.Color.Yellow;
		this.lblBal1.Location = new System.Drawing.Point(923, 42);
		this.lblBal1.Name = "lblBal1";
		this.lblBal1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblBal1.Size = new System.Drawing.Size(117, 27);
		this.lblBal1.TabIndex = 883;
		this.lblBal1.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.txtInfo.BackColor = System.Drawing.Color.Black;
		this.txtInfo.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtInfo.ForeColor = System.Drawing.Color.Lime;
		this.txtInfo.Location = new System.Drawing.Point(6, 194);
		this.txtInfo.Multiline = true;
		this.txtInfo.Name = "txtInfo";
		this.txtInfo.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.txtInfo.ScrollBars = System.Windows.Forms.ScrollBars.Vertical;
		this.txtInfo.Size = new System.Drawing.Size(216, 96);
		this.txtInfo.TabIndex = 890;
		this.txtEproc.BackColor = System.Drawing.Color.Black;
		this.txtEproc.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtEproc.ForeColor = System.Drawing.Color.Yellow;
		this.txtEproc.Location = new System.Drawing.Point(0, 765);
		this.txtEproc.Name = "txtEproc";
		this.txtEproc.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtEproc.Size = new System.Drawing.Size(150, 24);
		this.txtEproc.TabIndex = 891;
		this.txtEproc.Visible = false;
		this.txtReplyBy3.BackColor = System.Drawing.Color.Black;
		this.txtReplyBy3.BorderStyle = System.Windows.Forms.BorderStyle.None;
		this.txtReplyBy3.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtReplyBy3.ForeColor = System.Drawing.Color.White;
		this.txtReplyBy3.Location = new System.Drawing.Point(455, 116);
		this.txtReplyBy3.MaxLength = 1;
		this.txtReplyBy3.Name = "txtReplyBy3";
		this.txtReplyBy3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtReplyBy3.Size = new System.Drawing.Size(37, 17);
		this.txtReplyBy3.TabIndex = 893;
		this.txtReplyBy3.TabStop = false;
		this.txtReplyBy3.Text = "3";
		this.txtReplyBy3.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnReplyBy3.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnReplyBy3.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.btnReplyBy3.ForeColor = System.Drawing.Color.Black;
		this.btnReplyBy3.Location = new System.Drawing.Point(445, 108);
		this.btnReplyBy3.Name = "btnReplyBy3";
		this.btnReplyBy3.Size = new System.Drawing.Size(112, 33);
		this.btnReplyBy3.TabIndex = 892;
		this.btnReplyBy3.Text = "Reply";
		this.btnReplyBy3.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.btnReplyBy3.UseVisualStyleBackColor = false;
		this.lblCard4.BackColor = System.Drawing.Color.Silver;
		this.lblCard4.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblCard4.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.lblCard4.ForeColor = System.Drawing.Color.Black;
		this.lblCard4.Location = new System.Drawing.Point(731, 573);
		this.lblCard4.Name = "lblCard4";
		this.lblCard4.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblCard4.Size = new System.Drawing.Size(140, 27);
		this.lblCard4.TabIndex = 895;
		this.lblCard4.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblCard4.Visible = false;
		this.lblCard5.BackColor = System.Drawing.Color.Silver;
		this.lblCard5.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblCard5.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.lblCard5.ForeColor = System.Drawing.Color.Black;
		this.lblCard5.Location = new System.Drawing.Point(731, 514);
		this.lblCard5.Name = "lblCard5";
		this.lblCard5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblCard5.Size = new System.Drawing.Size(140, 27);
		this.lblCard5.TabIndex = 896;
		this.lblCard5.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblCard5.Visible = false;
		this.lblCard6.BackColor = System.Drawing.Color.Silver;
		this.lblCard6.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblCard6.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.lblCard6.ForeColor = System.Drawing.Color.Black;
		this.lblCard6.Location = new System.Drawing.Point(731, 661);
		this.lblCard6.Name = "lblCard6";
		this.lblCard6.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblCard6.Size = new System.Drawing.Size(140, 27);
		this.lblCard6.TabIndex = 897;
		this.lblCard6.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblCard6.Visible = false;
		this.lblCard3.BackColor = System.Drawing.Color.Silver;
		this.lblCard3.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblCard3.Font = new System.Drawing.Font("Tahoma", 7f, System.Drawing.FontStyle.Bold);
		this.lblCard3.ForeColor = System.Drawing.Color.Black;
		this.lblCard3.Location = new System.Drawing.Point(731, 631);
		this.lblCard3.Name = "lblCard3";
		this.lblCard3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblCard3.Size = new System.Drawing.Size(140, 27);
		this.lblCard3.TabIndex = 900;
		this.lblCard3.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblCard3.Visible = false;
		this.lblCard2.BackColor = System.Drawing.Color.Silver;
		this.lblCard2.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblCard2.Font = new System.Drawing.Font("Tahoma", 7f, System.Drawing.FontStyle.Bold);
		this.lblCard2.ForeColor = System.Drawing.Color.Black;
		this.lblCard2.Location = new System.Drawing.Point(731, 541);
		this.lblCard2.Name = "lblCard2";
		this.lblCard2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblCard2.Size = new System.Drawing.Size(140, 27);
		this.lblCard2.TabIndex = 899;
		this.lblCard2.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblCard2.Visible = false;
		this.lblCard1.BackColor = System.Drawing.Color.Silver;
		this.lblCard1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblCard1.Font = new System.Drawing.Font("Tahoma", 7f, System.Drawing.FontStyle.Bold);
		this.lblCard1.ForeColor = System.Drawing.Color.Black;
		this.lblCard1.Location = new System.Drawing.Point(731, 601);
		this.lblCard1.Name = "lblCard1";
		this.lblCard1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblCard1.Size = new System.Drawing.Size(140, 27);
		this.lblCard1.TabIndex = 898;
		this.lblCard1.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblCard1.Visible = false;
		this.btnApplyCards.BackColor = System.Drawing.Color.FromArgb(128, 128, 255);
		this.btnApplyCards.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnApplyCards.Location = new System.Drawing.Point(419, 14);
		this.btnApplyCards.Name = "btnApplyCards";
		this.btnApplyCards.Size = new System.Drawing.Size(186, 44);
		this.btnApplyCards.TabIndex = 901;
		this.btnApplyCards.Text = "شحن كروت جديدة";
		this.btnApplyCards.UseVisualStyleBackColor = false;
		this.ckCards.AutoSize = true;
		this.ckCards.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckCards.Location = new System.Drawing.Point(56, 83);
		this.ckCards.Name = "ckCards";
		this.ckCards.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckCards.Size = new System.Drawing.Size(113, 17);
		this.ckCards.TabIndex = 902;
		this.ckCards.Text = "امان شحن كروت";
		this.ckCards.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckCards.UseVisualStyleBackColor = true;
		this.btnAddCards.BackColor = System.Drawing.Color.FromArgb(128, 128, 255);
		this.btnAddCards.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnAddCards.ForeColor = System.Drawing.Color.Black;
		this.btnAddCards.Location = new System.Drawing.Point(24, 14);
		this.btnAddCards.Name = "btnAddCards";
		this.btnAddCards.Size = new System.Drawing.Size(151, 40);
		this.btnAddCards.TabIndex = 903;
		this.btnAddCards.Text = "اضافة كروت شحن";
		this.btnAddCards.UseVisualStyleBackColor = false;
		this.lblCardsQty.BackColor = System.Drawing.Color.FromArgb(128, 128, 255);
		this.lblCardsQty.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblCardsQty.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.lblCardsQty.ForeColor = System.Drawing.Color.White;
		this.lblCardsQty.Location = new System.Drawing.Point(99, 53);
		this.lblCardsQty.Name = "lblCardsQty";
		this.lblCardsQty.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblCardsQty.Size = new System.Drawing.Size(50, 27);
		this.lblCardsQty.TabIndex = 904;
		this.lblCardsQty.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.cmbEvalue.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
		this.cmbEvalue.FormattingEnabled = true;
		this.cmbEvalue.Location = new System.Drawing.Point(24, 57);
		this.cmbEvalue.Name = "cmbEvalue";
		this.cmbEvalue.Size = new System.Drawing.Size(69, 21);
		this.cmbEvalue.TabIndex = 905;
		this.chkCh1.AutoSize = true;
		this.chkCh1.Checked = true;
		this.chkCh1.CheckState = System.Windows.Forms.CheckState.Checked;
		this.chkCh1.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkCh1.Location = new System.Drawing.Point(902, 64);
		this.chkCh1.Name = "chkCh1";
		this.chkCh1.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkCh1.Size = new System.Drawing.Size(15, 14);
		this.chkCh1.TabIndex = 906;
		this.chkCh1.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkCh1.UseVisualStyleBackColor = true;
		this.chkCh2.AutoSize = true;
		this.chkCh2.Checked = true;
		this.chkCh2.CheckState = System.Windows.Forms.CheckState.Checked;
		this.chkCh2.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkCh2.Location = new System.Drawing.Point(457, 63);
		this.chkCh2.Name = "chkCh2";
		this.chkCh2.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkCh2.Size = new System.Drawing.Size(15, 14);
		this.chkCh2.TabIndex = 907;
		this.chkCh2.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkCh2.UseVisualStyleBackColor = true;
		this.chkCh3.AutoSize = true;
		this.chkCh3.Checked = true;
		this.chkCh3.CheckState = System.Windows.Forms.CheckState.Checked;
		this.chkCh3.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.chkCh3.Location = new System.Drawing.Point(12, 63);
		this.chkCh3.Name = "chkCh3";
		this.chkCh3.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkCh3.Size = new System.Drawing.Size(15, 14);
		this.chkCh3.TabIndex = 908;
		this.chkCh3.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkCh3.UseVisualStyleBackColor = true;
		this.chkCh4.AutoSize = true;
		this.chkCh4.Checked = true;
		this.chkCh4.CheckState = System.Windows.Forms.CheckState.Checked;
		this.chkCh4.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkCh4.Location = new System.Drawing.Point(902, 240);
		this.chkCh4.Name = "chkCh4";
		this.chkCh4.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkCh4.Size = new System.Drawing.Size(15, 14);
		this.chkCh4.TabIndex = 909;
		this.chkCh4.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkCh4.UseVisualStyleBackColor = true;
		this.chkCh5.AutoSize = true;
		this.chkCh5.Checked = true;
		this.chkCh5.CheckState = System.Windows.Forms.CheckState.Checked;
		this.chkCh5.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkCh5.Location = new System.Drawing.Point(457, 240);
		this.chkCh5.Name = "chkCh5";
		this.chkCh5.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkCh5.Size = new System.Drawing.Size(15, 14);
		this.chkCh5.TabIndex = 910;
		this.chkCh5.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkCh5.UseVisualStyleBackColor = true;
		this.chkCh6.AutoSize = true;
		this.chkCh6.Checked = true;
		this.chkCh6.CheckState = System.Windows.Forms.CheckState.Checked;
		this.chkCh6.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkCh6.Location = new System.Drawing.Point(12, 240);
		this.chkCh6.Name = "chkCh6";
		this.chkCh6.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkCh6.Size = new System.Drawing.Size(15, 14);
		this.chkCh6.TabIndex = 911;
		this.chkCh6.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkCh6.UseVisualStyleBackColor = true;
		this.txtChSS.BackColor = System.Drawing.Color.White;
		this.txtChSS.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtChSS.ForeColor = System.Drawing.Color.Black;
		this.txtChSS.Location = new System.Drawing.Point(150, 53);
		this.txtChSS.Name = "txtChSS";
		this.txtChSS.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtChSS.Size = new System.Drawing.Size(22, 27);
		this.txtChSS.TabIndex = 912;
		this.txtChSS.Text = "0";
		this.btnApplyCards2.BackColor = System.Drawing.Color.FromArgb(128, 128, 255);
		this.btnApplyCards2.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnApplyCards2.Location = new System.Drawing.Point(420, 60);
		this.btnApplyCards2.Name = "btnApplyCards2";
		this.btnApplyCards2.Size = new System.Drawing.Size(186, 39);
		this.btnApplyCards2.TabIndex = 913;
		this.btnApplyCards2.Text = "شحن الكروت الحالية";
		this.btnApplyCards2.UseVisualStyleBackColor = false;
		this.btnDeSA.BackColor = System.Drawing.Color.FromArgb(255, 192, 192);
		this.btnDeSA.Font = new System.Drawing.Font("Tahoma", 14.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnDeSA.Location = new System.Drawing.Point(6, 101);
		this.btnDeSA.Name = "btnDeSA";
		this.btnDeSA.Size = new System.Drawing.Size(139, 46);
		this.btnDeSA.TabIndex = 932;
		this.btnDeSA.Text = "DeSel";
		this.btnDeSA.UseVisualStyleBackColor = false;
		this.btnSA.BackColor = System.Drawing.Color.FromArgb(192, 255, 192);
		this.btnSA.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnSA.Location = new System.Drawing.Point(6, 60);
		this.btnSA.Name = "btnSA";
		this.btnSA.Size = new System.Drawing.Size(216, 44);
		this.btnSA.TabIndex = 931;
		this.btnSA.Text = "Select All";
		this.btnSA.UseVisualStyleBackColor = false;
		this.chkIgnorSms.AutoSize = true;
		this.chkIgnorSms.Font = new System.Drawing.Font("Tahoma", 7f, System.Drawing.FontStyle.Bold);
		this.chkIgnorSms.ForeColor = System.Drawing.Color.Cyan;
		this.chkIgnorSms.Location = new System.Drawing.Point(68, 27);
		this.chkIgnorSms.Name = "chkIgnorSms";
		this.chkIgnorSms.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkIgnorSms.Size = new System.Drawing.Size(154, 16);
		this.chkIgnorSms.TabIndex = 941;
		this.chkIgnorSms.Text = "تجاهل الرسائل غير المرغوبة";
		this.chkIgnorSms.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkIgnorSms.UseVisualStyleBackColor = true;
		this.RBEts.AutoSize = true;
		this.RBEts.Checked = true;
		this.RBEts.Font = new System.Drawing.Font("Tahoma", 12f);
		this.RBEts.ForeColor = System.Drawing.Color.Lime;
		this.RBEts.Location = new System.Drawing.Point(276, 31);
		this.RBEts.Name = "RBEts";
		this.RBEts.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.RBEts.Size = new System.Drawing.Size(119, 23);
		this.RBEts.TabIndex = 942;
		this.RBEts.TabStop = true;
		this.RBEts.Text = "شحن اتصالات";
		this.RBEts.UseVisualStyleBackColor = true;
		this.RBVoda.AutoSize = true;
		this.RBVoda.Font = new System.Drawing.Font("Tahoma", 12f);
		this.RBVoda.ForeColor = System.Drawing.Color.Red;
		this.RBVoda.Location = new System.Drawing.Point(274, 60);
		this.RBVoda.Name = "RBVoda";
		this.RBVoda.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.RBVoda.Size = new System.Drawing.Size(121, 23);
		this.RBVoda.TabIndex = 943;
		this.RBVoda.Text = "شحن فودافون";
		this.RBVoda.UseVisualStyleBackColor = true;
		this.chkSlowRead.AutoSize = true;
		this.chkSlowRead.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkSlowRead.ForeColor = System.Drawing.Color.Cyan;
		this.chkSlowRead.Location = new System.Drawing.Point(92, 43);
		this.chkSlowRead.Name = "chkSlowRead";
		this.chkSlowRead.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkSlowRead.Size = new System.Drawing.Size(130, 17);
		this.chkSlowRead.TabIndex = 944;
		this.chkSlowRead.Text = "قراءة بطيئة للرسائل";
		this.chkSlowRead.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkSlowRead.UseVisualStyleBackColor = true;
		this.txtReplyBy4.BackColor = System.Drawing.Color.Black;
		this.txtReplyBy4.BorderStyle = System.Windows.Forms.BorderStyle.None;
		this.txtReplyBy4.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtReplyBy4.ForeColor = System.Drawing.Color.White;
		this.txtReplyBy4.Location = new System.Drawing.Point(456, 149);
		this.txtReplyBy4.MaxLength = 1;
		this.txtReplyBy4.Name = "txtReplyBy4";
		this.txtReplyBy4.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtReplyBy4.Size = new System.Drawing.Size(36, 17);
		this.txtReplyBy4.TabIndex = 946;
		this.txtReplyBy4.TabStop = false;
		this.txtReplyBy4.Text = "4";
		this.txtReplyBy4.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnReplyBy4.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnReplyBy4.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.btnReplyBy4.ForeColor = System.Drawing.Color.Black;
		this.btnReplyBy4.Location = new System.Drawing.Point(445, 141);
		this.btnReplyBy4.Name = "btnReplyBy4";
		this.btnReplyBy4.Size = new System.Drawing.Size(112, 33);
		this.btnReplyBy4.TabIndex = 945;
		this.btnReplyBy4.Text = "Reply";
		this.btnReplyBy4.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.btnReplyBy4.UseVisualStyleBackColor = false;
		this.txtReplyBy5.BackColor = System.Drawing.Color.Black;
		this.txtReplyBy5.BorderStyle = System.Windows.Forms.BorderStyle.None;
		this.txtReplyBy5.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtReplyBy5.ForeColor = System.Drawing.Color.White;
		this.txtReplyBy5.Location = new System.Drawing.Point(456, 182);
		this.txtReplyBy5.MaxLength = 1;
		this.txtReplyBy5.Name = "txtReplyBy5";
		this.txtReplyBy5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtReplyBy5.Size = new System.Drawing.Size(36, 17);
		this.txtReplyBy5.TabIndex = 948;
		this.txtReplyBy5.TabStop = false;
		this.txtReplyBy5.Text = "5";
		this.txtReplyBy5.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnReplyBy5.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnReplyBy5.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.btnReplyBy5.ForeColor = System.Drawing.Color.Black;
		this.btnReplyBy5.Location = new System.Drawing.Point(445, 174);
		this.btnReplyBy5.Name = "btnReplyBy5";
		this.btnReplyBy5.Size = new System.Drawing.Size(112, 33);
		this.btnReplyBy5.TabIndex = 947;
		this.btnReplyBy5.Text = "Reply";
		this.btnReplyBy5.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.btnReplyBy5.UseVisualStyleBackColor = false;
		this.txtReplyBy0.BackColor = System.Drawing.Color.Black;
		this.txtReplyBy0.BorderStyle = System.Windows.Forms.BorderStyle.None;
		this.txtReplyBy0.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtReplyBy0.ForeColor = System.Drawing.Color.White;
		this.txtReplyBy0.Location = new System.Drawing.Point(455, 21);
		this.txtReplyBy0.MaxLength = 1;
		this.txtReplyBy0.Name = "txtReplyBy0";
		this.txtReplyBy0.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtReplyBy0.Size = new System.Drawing.Size(37, 17);
		this.txtReplyBy0.TabIndex = 950;
		this.txtReplyBy0.TabStop = false;
		this.txtReplyBy0.Text = "0";
		this.txtReplyBy0.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnReplyBy0.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnReplyBy0.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.btnReplyBy0.ForeColor = System.Drawing.Color.Black;
		this.btnReplyBy0.Location = new System.Drawing.Point(445, 9);
		this.btnReplyBy0.Name = "btnReplyBy0";
		this.btnReplyBy0.Size = new System.Drawing.Size(112, 33);
		this.btnReplyBy0.TabIndex = 949;
		this.btnReplyBy0.Text = "Reply";
		this.btnReplyBy0.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.btnReplyBy0.UseVisualStyleBackColor = false;
		this.MainTC.Controls.Add(this.VodaCashPAnel);
		this.MainTC.Controls.Add(this.tabvc2);
		this.MainTC.Controls.Add(this.tab365_2);
		this.MainTC.Controls.Add(this.TabPage4);
		this.MainTC.Controls.Add(this.tabOcash);
		this.MainTC.Controls.Add(this.tabOCCon);
		this.MainTC.Controls.Add(this.tabOCMaster);
		this.MainTC.Controls.Add(this.tabOCGifts);
		this.MainTC.Controls.Add(this.tabOCSetup);
		this.MainTC.Controls.Add(this.tabOrngInv);
		this.MainTC.Controls.Add(this.TabPage1);
		this.MainTC.Controls.Add(this.TabPage7);
		this.MainTC.Controls.Add(this.tabPrint);
		this.MainTC.Controls.Add(this.TabPage3);
		this.MainTC.Controls.Add(this.TabPage5);
		this.MainTC.Controls.Add(this.TabPage14);
		this.MainTC.Controls.Add(this.TabPage12);
		this.MainTC.Controls.Add(this.TabPage13);
		this.MainTC.Controls.Add(this.TabPage6);
		this.MainTC.Controls.Add(this.tabTayer);
		this.MainTC.Controls.Add(this.tabEzoo);
		this.MainTC.Controls.Add(this.tab365);
		this.MainTC.Controls.Add(this.tabpoints);
		this.MainTC.Controls.Add(this.tabON);
		this.MainTC.Controls.Add(this.TabPage2);
		this.MainTC.Controls.Add(this.TabPage8);
		this.MainTC.Controls.Add(this.TabPage9);
		this.MainTC.Controls.Add(this.TabPage10);
		this.MainTC.Location = new System.Drawing.Point(6, 393);
		this.MainTC.Name = "MainTC";
		this.MainTC.SelectedIndex = 0;
		this.MainTC.Size = new System.Drawing.Size(942, 321);
		this.MainTC.TabIndex = 951;
		this.VodaCashPAnel.BackColor = System.Drawing.Color.Red;
		this.VodaCashPAnel.Controls.Add(this.ckbtnTransToNm);
		this.VodaCashPAnel.Controls.Add(this.ckbtnTransFromNm);
		this.VodaCashPAnel.Controls.Add(this.ckbtnTransGiftAutoSpValAll0);
		this.VodaCashPAnel.Controls.Add(this.btnRun02NmDwl);
		this.VodaCashPAnel.Controls.Add(this.ckbtnTransGiftAuto);
		this.VodaCashPAnel.Controls.Add(this.ckbtnTransGiftAutoSpValAll);
		this.VodaCashPAnel.Controls.Add(this.btnTransFromNm);
		this.VodaCashPAnel.Controls.Add(this.btnTransToNm);
		this.VodaCashPAnel.Controls.Add(this.ckbtnRun02Nm);
		this.VodaCashPAnel.Controls.Add(this.btnTransGiftAutoSpValAll);
		this.VodaCashPAnel.Controls.Add(this.chkAutoTransferCash);
		this.VodaCashPAnel.Controls.Add(this.lbl100);
		this.VodaCashPAnel.Controls.Add(this.lbl35);
		this.VodaCashPAnel.Controls.Add(this.lbl50);
		this.VodaCashPAnel.Controls.Add(this.chkAutoTransferNrm);
		this.VodaCashPAnel.Controls.Add(this.chAutoGooo2);
		this.VodaCashPAnel.Controls.Add(this.lbl45);
		this.VodaCashPAnel.Controls.Add(this.lbl40);
		this.VodaCashPAnel.Controls.Add(this.chAutoGooo);
		this.VodaCashPAnel.Controls.Add(this.ckbtnTransGiftAutoSpVal);
		this.VodaCashPAnel.Controls.Add(this.btnAutoVC_SeresWtop);
		this.VodaCashPAnel.Controls.Add(this.ckTransP);
		this.VodaCashPAnel.Controls.Add(this.txtTransP);
		this.VodaCashPAnel.Controls.Add(this.lbl30);
		this.VodaCashPAnel.Controls.Add(this.lbl25);
		this.VodaCashPAnel.Controls.Add(this.lbl20);
		this.VodaCashPAnel.Controls.Add(this.lbl15);
		this.VodaCashPAnel.Controls.Add(this.lbl10);
		this.VodaCashPAnel.Controls.Add(this.lbl05);
		this.VodaCashPAnel.Controls.Add(this.chkTransGift);
		this.VodaCashPAnel.Controls.Add(this.chkGetgift);
		this.VodaCashPAnel.Controls.Add(this.btnExchangeNN);
		this.VodaCashPAnel.Controls.Add(this.chbeep);
		this.VodaCashPAnel.Controls.Add(this.chkInDB);
		this.VodaCashPAnel.Controls.Add(this.btnAutoVC_Hez);
		this.VodaCashPAnel.Controls.Add(this.chkRefref);
		this.VodaCashPAnel.Controls.Add(this.cknull);
		this.VodaCashPAnel.Controls.Add(this.btnAutoVC_Seres);
		this.VodaCashPAnel.Controls.Add(this.txtVCForceMony);
		this.VodaCashPAnel.Controls.Add(this.btnTransToNextMain);
		this.VodaCashPAnel.Controls.Add(this.btnTransGiftAutoSpVal);
		this.VodaCashPAnel.Controls.Add(this.Label37);
		this.VodaCashPAnel.Controls.Add(this.Label24);
		this.VodaCashPAnel.Controls.Add(this.btnAutoVCnorm);
		this.VodaCashPAnel.Controls.Add(this.Label14);
		this.VodaCashPAnel.Controls.Add(this.txtTransNum2);
		this.VodaCashPAnel.Controls.Add(this.btnTransGiftAuto);
		this.VodaCashPAnel.Controls.Add(this.txtCashNextMaster);
		this.VodaCashPAnel.Controls.Add(this.btnRun02Nm);
		this.VodaCashPAnel.Controls.Add(this.lblMain);
		this.VodaCashPAnel.Controls.Add(this.Label21);
		this.VodaCashPAnel.Controls.Add(this.txtMonyMn);
		this.VodaCashPAnel.Controls.Add(this.btnGetBal2);
		this.VodaCashPAnel.Controls.Add(this.btnTransAllMn);
		this.VodaCashPAnel.Controls.Add(this.btnTransGiftAutoNorm);
		this.VodaCashPAnel.ForeColor = System.Drawing.Color.Black;
		this.VodaCashPAnel.Location = new System.Drawing.Point(4, 22);
		this.VodaCashPAnel.Name = "VodaCashPAnel";
		this.VodaCashPAnel.Padding = new System.Windows.Forms.Padding(3);
		this.VodaCashPAnel.Size = new System.Drawing.Size(934, 295);
		this.VodaCashPAnel.TabIndex = 6;
		this.VodaCashPAnel.Text = "VfC Series";
		this.ckbtnTransToNm.AutoSize = true;
		this.ckbtnTransToNm.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnTransToNm.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnTransToNm.ForeColor = System.Drawing.Color.Black;
		this.ckbtnTransToNm.Location = new System.Drawing.Point(884, 209);
		this.ckbtnTransToNm.Name = "ckbtnTransToNm";
		this.ckbtnTransToNm.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnTransToNm.Size = new System.Drawing.Size(41, 17);
		this.ckbtnTransToNm.TabIndex = 1076;
		this.ckbtnTransToNm.Text = "Au";
		this.ckbtnTransToNm.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnTransToNm.UseVisualStyleBackColor = false;
		this.ckbtnTransFromNm.AutoSize = true;
		this.ckbtnTransFromNm.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnTransFromNm.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnTransFromNm.ForeColor = System.Drawing.Color.Black;
		this.ckbtnTransFromNm.Location = new System.Drawing.Point(887, 250);
		this.ckbtnTransFromNm.Name = "ckbtnTransFromNm";
		this.ckbtnTransFromNm.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnTransFromNm.Size = new System.Drawing.Size(41, 17);
		this.ckbtnTransFromNm.TabIndex = 1075;
		this.ckbtnTransFromNm.Text = "Au";
		this.ckbtnTransFromNm.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnTransFromNm.UseVisualStyleBackColor = false;
		this.ckbtnTransGiftAutoSpValAll0.AutoSize = true;
		this.ckbtnTransGiftAutoSpValAll0.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.ckbtnTransGiftAutoSpValAll0.Font = new System.Drawing.Font("Microsoft Sans Serif", 10f, System.Drawing.FontStyle.Bold);
		this.ckbtnTransGiftAutoSpValAll0.ForeColor = System.Drawing.Color.Black;
		this.ckbtnTransGiftAutoSpValAll0.Location = new System.Drawing.Point(7, 268);
		this.ckbtnTransGiftAutoSpValAll0.Name = "ckbtnTransGiftAutoSpValAll0";
		this.ckbtnTransGiftAutoSpValAll0.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnTransGiftAutoSpValAll0.Size = new System.Drawing.Size(46, 21);
		this.ckbtnTransGiftAutoSpValAll0.TabIndex = 1074;
		this.ckbtnTransGiftAutoSpValAll0.Text = "Au";
		this.ckbtnTransGiftAutoSpValAll0.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnTransGiftAutoSpValAll0.UseVisualStyleBackColor = false;
		this.btnRun02NmDwl.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRun02NmDwl.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnRun02NmDwl.Location = new System.Drawing.Point(234, 73);
		this.btnRun02NmDwl.Name = "btnRun02NmDwl";
		this.btnRun02NmDwl.Size = new System.Drawing.Size(190, 39);
		this.btnRun02NmDwl.TabIndex = 1073;
		this.btnRun02NmDwl.Text = "الهدايا";
		this.btnRun02NmDwl.UseVisualStyleBackColor = false;
		this.ckbtnTransGiftAuto.AutoSize = true;
		this.ckbtnTransGiftAuto.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnTransGiftAuto.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnTransGiftAuto.ForeColor = System.Drawing.Color.Black;
		this.ckbtnTransGiftAuto.Location = new System.Drawing.Point(381, 179);
		this.ckbtnTransGiftAuto.Name = "ckbtnTransGiftAuto";
		this.ckbtnTransGiftAuto.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnTransGiftAuto.Size = new System.Drawing.Size(41, 17);
		this.ckbtnTransGiftAuto.TabIndex = 1050;
		this.ckbtnTransGiftAuto.Text = "Au";
		this.ckbtnTransGiftAuto.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnTransGiftAuto.UseVisualStyleBackColor = false;
		this.ckbtnTransGiftAutoSpValAll.AutoSize = true;
		this.ckbtnTransGiftAutoSpValAll.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnTransGiftAutoSpValAll.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnTransGiftAutoSpValAll.ForeColor = System.Drawing.Color.Black;
		this.ckbtnTransGiftAutoSpValAll.Location = new System.Drawing.Point(179, 245);
		this.ckbtnTransGiftAutoSpValAll.Name = "ckbtnTransGiftAutoSpValAll";
		this.ckbtnTransGiftAutoSpValAll.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnTransGiftAutoSpValAll.Size = new System.Drawing.Size(41, 17);
		this.ckbtnTransGiftAutoSpValAll.TabIndex = 1072;
		this.ckbtnTransGiftAutoSpValAll.Text = "Au";
		this.ckbtnTransGiftAutoSpValAll.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnTransGiftAutoSpValAll.UseVisualStyleBackColor = false;
		this.btnTransFromNm.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTransFromNm.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnTransFromNm.Location = new System.Drawing.Point(722, 250);
		this.btnTransFromNm.Name = "btnTransFromNm";
		this.btnTransFromNm.Size = new System.Drawing.Size(204, 39);
		this.btnTransFromNm.TabIndex = 983;
		this.btnTransFromNm.Text = "تحويل من الكل الى";
		this.btnTransFromNm.UseVisualStyleBackColor = false;
		this.btnTransToNm.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTransToNm.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnTransToNm.Location = new System.Drawing.Point(722, 205);
		this.btnTransToNm.Name = "btnTransToNm";
		this.btnTransToNm.Size = new System.Drawing.Size(203, 39);
		this.btnTransToNm.TabIndex = 982;
		this.btnTransToNm.Text = "تحويل من الاساسى";
		this.btnTransToNm.UseVisualStyleBackColor = false;
		this.ckbtnRun02Nm.AutoSize = true;
		this.ckbtnRun02Nm.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnRun02Nm.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnRun02Nm.ForeColor = System.Drawing.Color.Black;
		this.ckbtnRun02Nm.Location = new System.Drawing.Point(381, 120);
		this.ckbtnRun02Nm.Name = "ckbtnRun02Nm";
		this.ckbtnRun02Nm.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnRun02Nm.Size = new System.Drawing.Size(41, 17);
		this.ckbtnRun02Nm.TabIndex = 1049;
		this.ckbtnRun02Nm.Text = "Au";
		this.ckbtnRun02Nm.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnRun02Nm.UseVisualStyleBackColor = false;
		this.btnTransGiftAutoSpValAll.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTransGiftAutoSpValAll.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnTransGiftAutoSpValAll.Location = new System.Drawing.Point(7, 236);
		this.btnTransGiftAutoSpValAll.Name = "btnTransGiftAutoSpValAll";
		this.btnTransGiftAutoSpValAll.Size = new System.Drawing.Size(215, 53);
		this.btnTransGiftAutoSpValAll.TabIndex = 1071;
		this.btnTransGiftAutoSpValAll.Text = "TopUp All Cash Back";
		this.btnTransGiftAutoSpValAll.UseVisualStyleBackColor = false;
		this.chkAutoTransferCash.AutoSize = true;
		this.chkAutoTransferCash.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.chkAutoTransferCash.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkAutoTransferCash.ForeColor = System.Drawing.Color.Black;
		this.chkAutoTransferCash.Location = new System.Drawing.Point(884, 16);
		this.chkAutoTransferCash.Name = "chkAutoTransferCash";
		this.chkAutoTransferCash.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkAutoTransferCash.Size = new System.Drawing.Size(41, 17);
		this.chkAutoTransferCash.TabIndex = 1050;
		this.chkAutoTransferCash.Text = "Au";
		this.chkAutoTransferCash.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkAutoTransferCash.UseVisualStyleBackColor = false;
		this.lbl100.BackColor = System.Drawing.Color.White;
		this.lbl100.Font = new System.Drawing.Font("Tahoma", 20.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lbl100.ForeColor = System.Drawing.Color.Black;
		this.lbl100.Location = new System.Drawing.Point(8, 193);
		this.lbl100.Name = "lbl100";
		this.lbl100.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lbl100.Size = new System.Drawing.Size(104, 37);
		this.lbl100.TabIndex = 1070;
		this.lbl100.Text = "100";
		this.lbl100.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lbl35.BackColor = System.Drawing.Color.White;
		this.lbl35.Font = new System.Drawing.Font("Tahoma", 20.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lbl35.ForeColor = System.Drawing.Color.Black;
		this.lbl35.Location = new System.Drawing.Point(118, 151);
		this.lbl35.Name = "lbl35";
		this.lbl35.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lbl35.Size = new System.Drawing.Size(49, 37);
		this.lbl35.TabIndex = 1069;
		this.lbl35.Text = "35";
		this.lbl35.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lbl50.BackColor = System.Drawing.Color.White;
		this.lbl50.Font = new System.Drawing.Font("Tahoma", 20.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lbl50.ForeColor = System.Drawing.Color.Black;
		this.lbl50.Location = new System.Drawing.Point(118, 193);
		this.lbl50.Name = "lbl50";
		this.lbl50.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lbl50.Size = new System.Drawing.Size(49, 37);
		this.lbl50.TabIndex = 1068;
		this.lbl50.Text = "50";
		this.lbl50.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.chkAutoTransferNrm.AutoSize = true;
		this.chkAutoTransferNrm.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.chkAutoTransferNrm.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkAutoTransferNrm.ForeColor = System.Drawing.Color.Black;
		this.chkAutoTransferNrm.Location = new System.Drawing.Point(885, 72);
		this.chkAutoTransferNrm.Name = "chkAutoTransferNrm";
		this.chkAutoTransferNrm.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkAutoTransferNrm.Size = new System.Drawing.Size(41, 17);
		this.chkAutoTransferNrm.TabIndex = 1051;
		this.chkAutoTransferNrm.Text = "Au";
		this.chkAutoTransferNrm.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkAutoTransferNrm.UseVisualStyleBackColor = false;
		this.chAutoGooo2.AutoSize = true;
		this.chAutoGooo2.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.chAutoGooo2.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chAutoGooo2.ForeColor = System.Drawing.Color.Black;
		this.chAutoGooo2.Location = new System.Drawing.Point(619, 245);
		this.chAutoGooo2.Name = "chAutoGooo2";
		this.chAutoGooo2.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chAutoGooo2.Size = new System.Drawing.Size(42, 17);
		this.chAutoGooo2.TabIndex = 1009;
		this.chAutoGooo2.Text = "AU";
		this.chAutoGooo2.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chAutoGooo2.UseVisualStyleBackColor = false;
		this.lbl45.BackColor = System.Drawing.Color.White;
		this.lbl45.Font = new System.Drawing.Font("Tahoma", 20.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lbl45.ForeColor = System.Drawing.Color.Black;
		this.lbl45.Location = new System.Drawing.Point(175, 193);
		this.lbl45.Name = "lbl45";
		this.lbl45.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lbl45.Size = new System.Drawing.Size(49, 37);
		this.lbl45.TabIndex = 1067;
		this.lbl45.Text = "45";
		this.lbl45.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lbl40.BackColor = System.Drawing.Color.White;
		this.lbl40.Font = new System.Drawing.Font("Tahoma", 20.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lbl40.ForeColor = System.Drawing.Color.Black;
		this.lbl40.Location = new System.Drawing.Point(175, 151);
		this.lbl40.Name = "lbl40";
		this.lbl40.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lbl40.Size = new System.Drawing.Size(49, 37);
		this.lbl40.TabIndex = 1066;
		this.lbl40.Text = "40";
		this.lbl40.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.chAutoGooo.AutoSize = true;
		this.chAutoGooo.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.chAutoGooo.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chAutoGooo.ForeColor = System.Drawing.Color.Black;
		this.chAutoGooo.Location = new System.Drawing.Point(378, 15);
		this.chAutoGooo.Name = "chAutoGooo";
		this.chAutoGooo.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chAutoGooo.Size = new System.Drawing.Size(42, 17);
		this.chAutoGooo.TabIndex = 1008;
		this.chAutoGooo.Text = "AU";
		this.chAutoGooo.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chAutoGooo.UseVisualStyleBackColor = false;
		this.ckbtnTransGiftAutoSpVal.AutoSize = true;
		this.ckbtnTransGiftAutoSpVal.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnTransGiftAutoSpVal.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnTransGiftAutoSpVal.ForeColor = System.Drawing.Color.Black;
		this.ckbtnTransGiftAutoSpVal.Location = new System.Drawing.Point(183, 56);
		this.ckbtnTransGiftAutoSpVal.Name = "ckbtnTransGiftAutoSpVal";
		this.ckbtnTransGiftAutoSpVal.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnTransGiftAutoSpVal.Size = new System.Drawing.Size(41, 17);
		this.ckbtnTransGiftAutoSpVal.TabIndex = 1064;
		this.ckbtnTransGiftAutoSpVal.Text = "Au";
		this.ckbtnTransGiftAutoSpVal.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnTransGiftAutoSpVal.UseVisualStyleBackColor = false;
		this.btnAutoVC_SeresWtop.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnAutoVC_SeresWtop.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnAutoVC_SeresWtop.Location = new System.Drawing.Point(722, 153);
		this.btnAutoVC_SeresWtop.Name = "btnAutoVC_SeresWtop";
		this.btnAutoVC_SeresWtop.Size = new System.Drawing.Size(204, 47);
		this.btnAutoVC_SeresWtop.TabIndex = 1063;
		this.btnAutoVC_SeresWtop.Text = "شحن متتالى";
		this.btnAutoVC_SeresWtop.UseVisualStyleBackColor = false;
		this.ckTransP.AutoSize = true;
		this.ckTransP.BackColor = System.Drawing.Color.Red;
		this.ckTransP.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckTransP.Location = new System.Drawing.Point(537, 213);
		this.ckTransP.Name = "ckTransP";
		this.ckTransP.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckTransP.Size = new System.Drawing.Size(78, 17);
		this.ckTransP.TabIndex = 1062;
		this.ckTransP.Text = "خصم مبلغ";
		this.ckTransP.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckTransP.UseVisualStyleBackColor = false;
		this.txtTransP.BackColor = System.Drawing.Color.White;
		this.txtTransP.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtTransP.ForeColor = System.Drawing.Color.Black;
		this.txtTransP.Location = new System.Drawing.Point(436, 209);
		this.txtTransP.MaxLength = 100;
		this.txtTransP.Name = "txtTransP";
		this.txtTransP.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTransP.Size = new System.Drawing.Size(95, 24);
		this.txtTransP.TabIndex = 1061;
		this.txtTransP.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.lbl30.BackColor = System.Drawing.Color.White;
		this.lbl30.Font = new System.Drawing.Font("Tahoma", 20.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lbl30.ForeColor = System.Drawing.Color.Black;
		this.lbl30.Location = new System.Drawing.Point(63, 151);
		this.lbl30.Name = "lbl30";
		this.lbl30.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lbl30.Size = new System.Drawing.Size(49, 37);
		this.lbl30.TabIndex = 1059;
		this.lbl30.Text = "30";
		this.lbl30.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lbl25.BackColor = System.Drawing.Color.White;
		this.lbl25.Font = new System.Drawing.Font("Tahoma", 20.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lbl25.ForeColor = System.Drawing.Color.Black;
		this.lbl25.Location = new System.Drawing.Point(8, 151);
		this.lbl25.Name = "lbl25";
		this.lbl25.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lbl25.Size = new System.Drawing.Size(49, 37);
		this.lbl25.TabIndex = 1058;
		this.lbl25.Text = "25";
		this.lbl25.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lbl20.BackColor = System.Drawing.Color.White;
		this.lbl20.Font = new System.Drawing.Font("Tahoma", 20.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lbl20.ForeColor = System.Drawing.Color.Black;
		this.lbl20.Location = new System.Drawing.Point(8, 109);
		this.lbl20.Name = "lbl20";
		this.lbl20.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lbl20.Size = new System.Drawing.Size(49, 37);
		this.lbl20.TabIndex = 1057;
		this.lbl20.Text = "20";
		this.lbl20.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lbl15.BackColor = System.Drawing.Color.White;
		this.lbl15.Font = new System.Drawing.Font("Tahoma", 20.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lbl15.ForeColor = System.Drawing.Color.Black;
		this.lbl15.Location = new System.Drawing.Point(63, 109);
		this.lbl15.Name = "lbl15";
		this.lbl15.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lbl15.Size = new System.Drawing.Size(49, 37);
		this.lbl15.TabIndex = 1056;
		this.lbl15.Text = "15";
		this.lbl15.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lbl10.BackColor = System.Drawing.Color.White;
		this.lbl10.Font = new System.Drawing.Font("Tahoma", 20.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lbl10.ForeColor = System.Drawing.Color.Black;
		this.lbl10.Location = new System.Drawing.Point(118, 109);
		this.lbl10.Name = "lbl10";
		this.lbl10.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lbl10.Size = new System.Drawing.Size(49, 37);
		this.lbl10.TabIndex = 1055;
		this.lbl10.Text = "10";
		this.lbl10.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lbl05.BackColor = System.Drawing.Color.White;
		this.lbl05.Font = new System.Drawing.Font("Tahoma", 20.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lbl05.ForeColor = System.Drawing.Color.Black;
		this.lbl05.Location = new System.Drawing.Point(175, 109);
		this.lbl05.Name = "lbl05";
		this.lbl05.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lbl05.Size = new System.Drawing.Size(49, 37);
		this.lbl05.TabIndex = 1054;
		this.lbl05.Text = "5";
		this.lbl05.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.chkTransGift.AutoSize = true;
		this.chkTransGift.BackColor = System.Drawing.Color.Red;
		this.chkTransGift.Checked = true;
		this.chkTransGift.CheckState = System.Windows.Forms.CheckState.Checked;
		this.chkTransGift.Font = new System.Drawing.Font("Microsoft Sans Serif", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.chkTransGift.ForeColor = System.Drawing.Color.Black;
		this.chkTransGift.Location = new System.Drawing.Point(235, 196);
		this.chkTransGift.Name = "chkTransGift";
		this.chkTransGift.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkTransGift.Size = new System.Drawing.Size(50, 24);
		this.chkTransGift.TabIndex = 1053;
		this.chkTransGift.Text = "Au";
		this.chkTransGift.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkTransGift.UseVisualStyleBackColor = false;
		this.chkGetgift.AutoSize = true;
		this.chkGetgift.BackColor = System.Drawing.Color.Red;
		this.chkGetgift.Checked = true;
		this.chkGetgift.CheckState = System.Windows.Forms.CheckState.Checked;
		this.chkGetgift.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.chkGetgift.ForeColor = System.Drawing.Color.Black;
		this.chkGetgift.Location = new System.Drawing.Point(235, 138);
		this.chkGetgift.Name = "chkGetgift";
		this.chkGetgift.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkGetgift.Size = new System.Drawing.Size(50, 23);
		this.chkGetgift.TabIndex = 1052;
		this.chkGetgift.Text = "Au";
		this.chkGetgift.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkGetgift.UseVisualStyleBackColor = false;
		this.btnExchangeNN.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnExchangeNN.Font = new System.Drawing.Font("Tahoma", 7f, System.Drawing.FontStyle.Bold);
		this.btnExchangeNN.Location = new System.Drawing.Point(505, 95);
		this.btnExchangeNN.Name = "btnExchangeNN";
		this.btnExchangeNN.Size = new System.Drawing.Size(42, 23);
		this.btnExchangeNN.TabIndex = 1049;
		this.btnExchangeNN.Text = "||";
		this.btnExchangeNN.UseVisualStyleBackColor = false;
		this.chbeep.AutoSize = true;
		this.chbeep.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chbeep.ForeColor = System.Drawing.Color.Cyan;
		this.chbeep.Location = new System.Drawing.Point(599, 11);
		this.chbeep.Name = "chbeep";
		this.chbeep.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chbeep.Size = new System.Drawing.Size(49, 17);
		this.chbeep.TabIndex = 1019;
		this.chbeep.Text = "تنبيه";
		this.chbeep.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.chbeep.UseVisualStyleBackColor = true;
		this.chkInDB.AutoSize = true;
		this.chkInDB.Checked = true;
		this.chkInDB.CheckState = System.Windows.Forms.CheckState.Checked;
		this.chkInDB.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkInDB.ForeColor = System.Drawing.Color.Cyan;
		this.chkInDB.Location = new System.Drawing.Point(460, 99);
		this.chkInDB.Name = "chkInDB";
		this.chkInDB.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkInDB.Size = new System.Drawing.Size(39, 17);
		this.chkInDB.TabIndex = 1018;
		this.chkInDB.Text = "ck";
		this.chkInDB.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkInDB.UseVisualStyleBackColor = true;
		this.btnAutoVC_Hez.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnAutoVC_Hez.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnAutoVC_Hez.Location = new System.Drawing.Point(6, 10);
		this.btnAutoVC_Hez.Name = "btnAutoVC_Hez";
		this.btnAutoVC_Hez.Size = new System.Drawing.Size(104, 38);
		this.btnAutoVC_Hez.TabIndex = 1014;
		this.btnAutoVC_Hez.Text = "متردد";
		this.btnAutoVC_Hez.UseVisualStyleBackColor = false;
		this.chkRefref.AutoSize = true;
		this.chkRefref.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkRefref.Location = new System.Drawing.Point(0, 281);
		this.chkRefref.Name = "chkRefref";
		this.chkRefref.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkRefref.Size = new System.Drawing.Size(15, 14);
		this.chkRefref.TabIndex = 1013;
		this.chkRefref.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkRefref.UseVisualStyleBackColor = true;
		this.cknull.AutoSize = true;
		this.cknull.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.cknull.Location = new System.Drawing.Point(1, 281);
		this.cknull.Name = "cknull";
		this.cknull.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.cknull.Size = new System.Drawing.Size(15, 14);
		this.cknull.TabIndex = 1010;
		this.cknull.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.cknull.UseVisualStyleBackColor = true;
		this.cknull.Visible = false;
		this.btnAutoVC_Seres.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnAutoVC_Seres.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnAutoVC_Seres.Location = new System.Drawing.Point(235, 12);
		this.btnAutoVC_Seres.Name = "btnAutoVC_Seres";
		this.btnAutoVC_Seres.Size = new System.Drawing.Size(187, 55);
		this.btnAutoVC_Seres.TabIndex = 1008;
		this.btnAutoVC_Seres.Text = "متتالى";
		this.btnAutoVC_Seres.UseVisualStyleBackColor = false;
		this.txtVCForceMony.BackColor = System.Drawing.Color.White;
		this.txtVCForceMony.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtVCForceMony.ForeColor = System.Drawing.Color.Black;
		this.txtVCForceMony.Location = new System.Drawing.Point(6, 61);
		this.txtVCForceMony.Name = "txtVCForceMony";
		this.txtVCForceMony.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtVCForceMony.Size = new System.Drawing.Size(63, 36);
		this.txtVCForceMony.TabIndex = 1007;
		this.txtVCForceMony.Text = "0";
		this.txtVCForceMony.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnTransToNextMain.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTransToNextMain.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnTransToNextMain.Location = new System.Drawing.Point(459, 161);
		this.btnTransToNextMain.Name = "btnTransToNextMain";
		this.btnTransToNextMain.Size = new System.Drawing.Size(207, 39);
		this.btnTransToNextMain.TabIndex = 1006;
		this.btnTransToNextMain.Text = "من الاساسى للاساسى التالى";
		this.btnTransToNextMain.UseVisualStyleBackColor = false;
		this.btnTransGiftAutoSpVal.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTransGiftAutoSpVal.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnTransGiftAutoSpVal.Location = new System.Drawing.Point(75, 51);
		this.btnTransGiftAutoSpVal.Name = "btnTransGiftAutoSpVal";
		this.btnTransGiftAutoSpVal.Size = new System.Drawing.Size(154, 55);
		this.btnTransGiftAutoSpVal.TabIndex = 1005;
		this.btnTransGiftAutoSpVal.Text = "TopUp";
		this.btnTransGiftAutoSpVal.UseVisualStyleBackColor = false;
		this.Label37.AutoSize = true;
		this.Label37.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.Label37.ForeColor = System.Drawing.Color.Black;
		this.Label37.Location = new System.Drawing.Point(565, 100);
		this.Label37.Name = "Label37";
		this.Label37.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label37.Size = new System.Drawing.Size(94, 13);
		this.Label37.TabIndex = 1001;
		this.Label37.Text = "الاساسى التالى";
		this.Label24.AutoSize = true;
		this.Label24.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label24.ForeColor = System.Drawing.Color.Black;
		this.Label24.Location = new System.Drawing.Point(548, 16);
		this.Label24.Name = "Label24";
		this.Label24.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label24.Size = new System.Drawing.Size(45, 17);
		this.Label24.TabIndex = 1000;
		this.Label24.Text = "المبلغ";
		this.btnAutoVCnorm.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnAutoVCnorm.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnAutoVCnorm.Location = new System.Drawing.Point(111, 11);
		this.btnAutoVCnorm.Name = "btnAutoVCnorm";
		this.btnAutoVCnorm.Size = new System.Drawing.Size(118, 38);
		this.btnAutoVCnorm.TabIndex = 998;
		this.btnAutoVCnorm.Text = "جماعى";
		this.btnAutoVCnorm.UseVisualStyleBackColor = false;
		this.Label14.AutoSize = true;
		this.Label14.BackColor = System.Drawing.Color.FromArgb(128, 255, 128);
		this.Label14.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label14.ForeColor = System.Drawing.Color.Black;
		this.Label14.Location = new System.Drawing.Point(235, 230);
		this.Label14.Name = "Label14";
		this.Label14.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label14.Size = new System.Drawing.Size(191, 17);
		this.Label14.TabIndex = 997;
		this.Label14.Text = "الخط مستقبل الرصيد العادى";
		this.txtTransNum2.BackColor = System.Drawing.Color.FromArgb(128, 255, 128);
		this.txtTransNum2.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtTransNum2.ForeColor = System.Drawing.Color.Black;
		this.txtTransNum2.Location = new System.Drawing.Point(235, 250);
		this.txtTransNum2.MaxLength = 11;
		this.txtTransNum2.Name = "txtTransNum2";
		this.txtTransNum2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTransNum2.Size = new System.Drawing.Size(190, 36);
		this.txtTransNum2.TabIndex = 996;
		this.txtTransNum2.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnTransGiftAuto.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTransGiftAuto.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnTransGiftAuto.Location = new System.Drawing.Point(291, 176);
		this.btnTransGiftAuto.Name = "btnTransGiftAuto";
		this.btnTransGiftAuto.Size = new System.Drawing.Size(133, 51);
		this.btnTransGiftAuto.TabIndex = 995;
		this.btnTransGiftAuto.Text = "شحن الهدية";
		this.btnTransGiftAuto.UseVisualStyleBackColor = false;
		this.txtCashNextMaster.BackColor = System.Drawing.Color.White;
		this.txtCashNextMaster.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtCashNextMaster.ForeColor = System.Drawing.Color.Black;
		this.txtCashNextMaster.Location = new System.Drawing.Point(459, 122);
		this.txtCashNextMaster.MaxLength = 11;
		this.txtCashNextMaster.Name = "txtCashNextMaster";
		this.txtCashNextMaster.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtCashNextMaster.Size = new System.Drawing.Size(202, 36);
		this.txtCashNextMaster.TabIndex = 994;
		this.txtCashNextMaster.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnRun02Nm.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRun02Nm.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnRun02Nm.Location = new System.Drawing.Point(291, 117);
		this.btnRun02Nm.Name = "btnRun02Nm";
		this.btnRun02Nm.Size = new System.Drawing.Size(133, 56);
		this.btnRun02Nm.TabIndex = 984;
		this.btnRun02Nm.Text = "استقبالا الهدايا";
		this.btnRun02Nm.UseVisualStyleBackColor = false;
		this.lblMain.BackColor = System.Drawing.Color.FromArgb(128, 255, 255);
		this.lblMain.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblMain.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.lblMain.ForeColor = System.Drawing.Color.Black;
		this.lblMain.Location = new System.Drawing.Point(459, 56);
		this.lblMain.Name = "lblMain";
		this.lblMain.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblMain.Size = new System.Drawing.Size(202, 38);
		this.lblMain.TabIndex = 981;
		this.lblMain.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.Label21.AutoSize = true;
		this.Label21.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label21.ForeColor = System.Drawing.Color.Black;
		this.Label21.Location = new System.Drawing.Point(590, 33);
		this.Label21.Name = "Label21";
		this.Label21.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label21.Size = new System.Drawing.Size(72, 17);
		this.Label21.TabIndex = 975;
		this.Label21.Text = "الاساسى";
		this.txtMonyMn.BackColor = System.Drawing.Color.White;
		this.txtMonyMn.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtMonyMn.ForeColor = System.Drawing.Color.Black;
		this.txtMonyMn.Location = new System.Drawing.Point(459, 15);
		this.txtMonyMn.Name = "txtMonyMn";
		this.txtMonyMn.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMonyMn.Size = new System.Drawing.Size(84, 36);
		this.txtMonyMn.TabIndex = 974;
		this.txtMonyMn.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnGetBal2.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnGetBal2.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnGetBal2.Location = new System.Drawing.Point(434, 236);
		this.btnGetBal2.Name = "btnGetBal2";
		this.btnGetBal2.Size = new System.Drawing.Size(232, 53);
		this.btnGetBal2.TabIndex = 902;
		this.btnGetBal2.Text = "استعلام عن رصيدالكاش";
		this.btnGetBal2.UseVisualStyleBackColor = false;
		this.btnTransAllMn.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTransAllMn.Font = new System.Drawing.Font("Tahoma", 7.75f, System.Drawing.FontStyle.Bold);
		this.btnTransAllMn.Location = new System.Drawing.Point(722, 13);
		this.btnTransAllMn.Name = "btnTransAllMn";
		this.btnTransAllMn.Size = new System.Drawing.Size(204, 50);
		this.btnTransAllMn.TabIndex = 979;
		this.btnTransAllMn.Text = "تحويل كامل مبلغ الكاش";
		this.btnTransAllMn.UseVisualStyleBackColor = false;
		this.btnTransGiftAutoNorm.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTransGiftAutoNorm.Font = new System.Drawing.Font("Tahoma", 7.75f, System.Drawing.FontStyle.Bold);
		this.btnTransGiftAutoNorm.Location = new System.Drawing.Point(723, 65);
		this.btnTransGiftAutoNorm.Name = "btnTransGiftAutoNorm";
		this.btnTransGiftAutoNorm.Size = new System.Drawing.Size(203, 51);
		this.btnTransGiftAutoNorm.TabIndex = 1012;
		this.btnTransGiftAutoNorm.Text = "تحويل كامل الرصيد العادى";
		this.btnTransGiftAutoNorm.UseVisualStyleBackColor = false;
		this.tabvc2.BackColor = System.Drawing.Color.Red;
		this.tabvc2.Controls.Add(this.ckbtnCashKing);
		this.tabvc2.Controls.Add(this.btnCashKing);
		this.tabvc2.Controls.Add(this.btn365_9093);
		this.tabvc2.Controls.Add(this.ck365_902);
		this.tabvc2.Controls.Add(this.ck365_T2);
		this.tabvc2.Controls.Add(this.ck365_toup);
		this.tabvc2.Controls.Add(this.ck365_90);
		this.tabvc2.Controls.Add(this.ck365_T);
		this.tabvc2.Controls.Add(this.ck365_901);
		this.tabvc2.Controls.Add(this.btn365_90);
		this.tabvc2.Controls.Add(this.btn365_901);
		this.tabvc2.Controls.Add(this.ckbtnVodaAuto3652);
		this.tabvc2.Controls.Add(this.btnVodaAuto3652);
		this.tabvc2.Controls.Add(this.ckbtnVodaCashFreeTransfer);
		this.tabvc2.Controls.Add(this.btnVodaCashFreeTransfer);
		this.tabvc2.Controls.Add(this.ckbtnVodaAuto365);
		this.tabvc2.Controls.Add(this.btnVodaAuto365);
		this.tabvc2.Controls.Add(this.btnVCtransFrom3Up);
		this.tabvc2.Controls.Add(this.btnVCtransFrom3Dn);
		this.tabvc2.Controls.Add(this.ckTrans);
		this.tabvc2.Controls.Add(this.chkimpsms);
		this.tabvc2.Controls.Add(this.txtCHS);
		this.tabvc2.Location = new System.Drawing.Point(4, 22);
		this.tabvc2.Name = "tabvc2";
		this.tabvc2.Padding = new System.Windows.Forms.Padding(3);
		this.tabvc2.Size = new System.Drawing.Size(934, 295);
		this.tabvc2.TabIndex = 25;
		this.tabvc2.Text = "VfC Series2";
		this.ckbtnCashKing.AutoSize = true;
		this.ckbtnCashKing.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnCashKing.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnCashKing.ForeColor = System.Drawing.Color.Black;
		this.ckbtnCashKing.Location = new System.Drawing.Point(211, 154);
		this.ckbtnCashKing.Name = "ckbtnCashKing";
		this.ckbtnCashKing.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnCashKing.Size = new System.Drawing.Size(53, 17);
		this.ckbtnCashKing.TabIndex = 1111;
		this.ckbtnCashKing.Text = "Auto";
		this.ckbtnCashKing.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnCashKing.UseVisualStyleBackColor = false;
		this.btnCashKing.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnCashKing.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnCashKing.ForeColor = System.Drawing.Color.Black;
		this.btnCashKing.Location = new System.Drawing.Point(20, 152);
		this.btnCashKing.Name = "btnCashKing";
		this.btnCashKing.Size = new System.Drawing.Size(244, 53);
		this.btnCashKing.TabIndex = 1110;
		this.btnCashKing.Text = "ملوك الكاش";
		this.btnCashKing.UseVisualStyleBackColor = false;
		this.btn365_9093.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btn365_9093.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btn365_9093.ForeColor = System.Drawing.Color.Black;
		this.btn365_9093.Location = new System.Drawing.Point(306, 187);
		this.btn365_9093.Name = "btn365_9093";
		this.btn365_9093.Size = new System.Drawing.Size(244, 45);
		this.btn365_9093.TabIndex = 1109;
		this.btn365_9093.Text = "*365*90-93#";
		this.btn365_9093.UseVisualStyleBackColor = false;
		this.ck365_902.AutoSize = true;
		this.ck365_902.BackColor = System.Drawing.Color.Silver;
		this.ck365_902.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ck365_902.ForeColor = System.Drawing.Color.Black;
		this.ck365_902.Location = new System.Drawing.Point(680, 239);
		this.ck365_902.Name = "ck365_902";
		this.ck365_902.Size = new System.Drawing.Size(103, 17);
		this.ck365_902.TabIndex = 1108;
		this.ck365_902.Text = "*365*90-93#";
		this.ck365_902.UseVisualStyleBackColor = false;
		this.ck365_T2.AutoSize = true;
		this.ck365_T2.BackColor = System.Drawing.Color.Silver;
		this.ck365_T2.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ck365_T2.ForeColor = System.Drawing.Color.Black;
		this.ck365_T2.Location = new System.Drawing.Point(680, 217);
		this.ck365_T2.Name = "ck365_T2";
		this.ck365_T2.Size = new System.Drawing.Size(74, 17);
		this.ck365_T2.TabIndex = 1107;
		this.ck365_T2.Text = "Transfer";
		this.ck365_T2.UseVisualStyleBackColor = false;
		this.ck365_toup.AutoSize = true;
		this.ck365_toup.BackColor = System.Drawing.Color.Silver;
		this.ck365_toup.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ck365_toup.ForeColor = System.Drawing.Color.Black;
		this.ck365_toup.Location = new System.Drawing.Point(680, 262);
		this.ck365_toup.Name = "ck365_toup";
		this.ck365_toup.Size = new System.Drawing.Size(76, 17);
		this.ck365_toup.TabIndex = 1106;
		this.ck365_toup.Text = "TopUpAll";
		this.ck365_toup.UseVisualStyleBackColor = false;
		this.ck365_90.AutoSize = true;
		this.ck365_90.BackColor = System.Drawing.Color.Silver;
		this.ck365_90.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ck365_90.ForeColor = System.Drawing.Color.Black;
		this.ck365_90.Location = new System.Drawing.Point(680, 197);
		this.ck365_90.Name = "ck365_90";
		this.ck365_90.Size = new System.Drawing.Size(84, 17);
		this.ck365_90.TabIndex = 1105;
		this.ck365_90.Text = "*365*90#";
		this.ck365_90.UseVisualStyleBackColor = false;
		this.ck365_T.AutoSize = true;
		this.ck365_T.BackColor = System.Drawing.Color.Silver;
		this.ck365_T.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ck365_T.ForeColor = System.Drawing.Color.Black;
		this.ck365_T.Location = new System.Drawing.Point(680, 174);
		this.ck365_T.Name = "ck365_T";
		this.ck365_T.Size = new System.Drawing.Size(74, 17);
		this.ck365_T.TabIndex = 1104;
		this.ck365_T.Text = "Transfer";
		this.ck365_T.UseVisualStyleBackColor = false;
		this.ck365_901.AutoSize = true;
		this.ck365_901.BackColor = System.Drawing.Color.Silver;
		this.ck365_901.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ck365_901.ForeColor = System.Drawing.Color.Black;
		this.ck365_901.Location = new System.Drawing.Point(680, 149);
		this.ck365_901.Name = "ck365_901";
		this.ck365_901.Size = new System.Drawing.Size(98, 17);
		this.ck365_901.TabIndex = 1103;
		this.ck365_901.Text = "*365*90*1#";
		this.ck365_901.UseVisualStyleBackColor = false;
		this.btn365_90.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btn365_90.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btn365_90.ForeColor = System.Drawing.Color.Black;
		this.btn365_90.Location = new System.Drawing.Point(306, 136);
		this.btn365_90.Name = "btn365_90";
		this.btn365_90.Size = new System.Drawing.Size(244, 45);
		this.btn365_90.TabIndex = 1102;
		this.btn365_90.Text = "*365*90#";
		this.btn365_90.UseVisualStyleBackColor = false;
		this.btn365_901.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btn365_901.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btn365_901.ForeColor = System.Drawing.Color.Black;
		this.btn365_901.Location = new System.Drawing.Point(306, 85);
		this.btn365_901.Name = "btn365_901";
		this.btn365_901.Size = new System.Drawing.Size(244, 45);
		this.btn365_901.TabIndex = 1101;
		this.btn365_901.Text = "*365*90*1#";
		this.btn365_901.UseVisualStyleBackColor = false;
		this.ckbtnVodaAuto3652.AutoSize = true;
		this.ckbtnVodaAuto3652.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnVodaAuto3652.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnVodaAuto3652.ForeColor = System.Drawing.Color.Black;
		this.ckbtnVodaAuto3652.Location = new System.Drawing.Point(856, 88);
		this.ckbtnVodaAuto3652.Name = "ckbtnVodaAuto3652";
		this.ckbtnVodaAuto3652.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnVodaAuto3652.Size = new System.Drawing.Size(53, 17);
		this.ckbtnVodaAuto3652.TabIndex = 1100;
		this.ckbtnVodaAuto3652.Text = "Auto";
		this.ckbtnVodaAuto3652.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnVodaAuto3652.UseVisualStyleBackColor = false;
		this.btnVodaAuto3652.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnVodaAuto3652.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnVodaAuto3652.ForeColor = System.Drawing.Color.Black;
		this.btnVodaAuto3652.Location = new System.Drawing.Point(668, 85);
		this.btnVodaAuto3652.Name = "btnVodaAuto3652";
		this.btnVodaAuto3652.Size = new System.Drawing.Size(244, 53);
		this.btnVodaAuto3652.TabIndex = 1099;
		this.btnVodaAuto3652.Text = "تشغيل كامل 365";
		this.btnVodaAuto3652.UseVisualStyleBackColor = false;
		this.ckbtnVodaCashFreeTransfer.AutoSize = true;
		this.ckbtnVodaCashFreeTransfer.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnVodaCashFreeTransfer.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnVodaCashFreeTransfer.ForeColor = System.Drawing.Color.Black;
		this.ckbtnVodaCashFreeTransfer.Location = new System.Drawing.Point(497, 22);
		this.ckbtnVodaCashFreeTransfer.Name = "ckbtnVodaCashFreeTransfer";
		this.ckbtnVodaCashFreeTransfer.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnVodaCashFreeTransfer.Size = new System.Drawing.Size(53, 17);
		this.ckbtnVodaCashFreeTransfer.TabIndex = 1098;
		this.ckbtnVodaCashFreeTransfer.Text = "Auto";
		this.ckbtnVodaCashFreeTransfer.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnVodaCashFreeTransfer.UseVisualStyleBackColor = false;
		this.btnVodaCashFreeTransfer.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnVodaCashFreeTransfer.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnVodaCashFreeTransfer.ForeColor = System.Drawing.Color.Black;
		this.btnVodaCashFreeTransfer.Location = new System.Drawing.Point(306, 20);
		this.btnVodaCashFreeTransfer.Name = "btnVodaCashFreeTransfer";
		this.btnVodaCashFreeTransfer.Size = new System.Drawing.Size(244, 53);
		this.btnVodaCashFreeTransfer.TabIndex = 1097;
		this.btnVodaCashFreeTransfer.Text = "عرض الصيف للتحويل مجانى";
		this.btnVodaCashFreeTransfer.UseVisualStyleBackColor = false;
		this.ckbtnVodaAuto365.AutoSize = true;
		this.ckbtnVodaAuto365.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnVodaAuto365.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnVodaAuto365.ForeColor = System.Drawing.Color.Black;
		this.ckbtnVodaAuto365.Location = new System.Drawing.Point(859, 17);
		this.ckbtnVodaAuto365.Name = "ckbtnVodaAuto365";
		this.ckbtnVodaAuto365.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnVodaAuto365.Size = new System.Drawing.Size(53, 17);
		this.ckbtnVodaAuto365.TabIndex = 1095;
		this.ckbtnVodaAuto365.Text = "Auto";
		this.ckbtnVodaAuto365.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnVodaAuto365.UseVisualStyleBackColor = false;
		this.btnVodaAuto365.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnVodaAuto365.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnVodaAuto365.ForeColor = System.Drawing.Color.Black;
		this.btnVodaAuto365.Location = new System.Drawing.Point(671, 14);
		this.btnVodaAuto365.Name = "btnVodaAuto365";
		this.btnVodaAuto365.Size = new System.Drawing.Size(244, 53);
		this.btnVodaAuto365.TabIndex = 1094;
		this.btnVodaAuto365.Text = "تشغيل تلقائى كامل متعدد";
		this.btnVodaAuto365.UseVisualStyleBackColor = false;
		this.btnVCtransFrom3Up.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnVCtransFrom3Up.Font = new System.Drawing.Font("Tahoma", 6.75f, System.Drawing.FontStyle.Bold);
		this.btnVCtransFrom3Up.Location = new System.Drawing.Point(10, 15);
		this.btnVCtransFrom3Up.Name = "btnVCtransFrom3Up";
		this.btnVCtransFrom3Up.Size = new System.Drawing.Size(223, 31);
		this.btnVCtransFrom3Up.TabIndex = 987;
		this.btnVCtransFrom3Up.Text = "تحويل من الثلاثة العلوية الى السفلية";
		this.btnVCtransFrom3Up.UseVisualStyleBackColor = false;
		this.btnVCtransFrom3Dn.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnVCtransFrom3Dn.Font = new System.Drawing.Font("Tahoma", 6.75f, System.Drawing.FontStyle.Bold);
		this.btnVCtransFrom3Dn.Location = new System.Drawing.Point(10, 46);
		this.btnVCtransFrom3Dn.Name = "btnVCtransFrom3Dn";
		this.btnVCtransFrom3Dn.Size = new System.Drawing.Size(223, 27);
		this.btnVCtransFrom3Dn.TabIndex = 988;
		this.btnVCtransFrom3Dn.Text = "تحويل من الثلاثة السفلية الى العلوية";
		this.btnVCtransFrom3Dn.UseVisualStyleBackColor = false;
		this.ckTrans.AutoSize = true;
		this.ckTrans.BackColor = System.Drawing.Color.Red;
		this.ckTrans.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckTrans.Location = new System.Drawing.Point(82, 94);
		this.ckTrans.Name = "ckTrans";
		this.ckTrans.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckTrans.Size = new System.Drawing.Size(141, 17);
		this.ckTrans.TabIndex = 1002;
		this.ckTrans.Text = "تحويل واستبال اجبارى";
		this.ckTrans.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckTrans.UseVisualStyleBackColor = false;
		this.chkimpsms.AutoSize = true;
		this.chkimpsms.BackColor = System.Drawing.Color.Red;
		this.chkimpsms.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkimpsms.Location = new System.Drawing.Point(73, 117);
		this.chkimpsms.Name = "chkimpsms";
		this.chkimpsms.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkimpsms.Size = new System.Drawing.Size(150, 17);
		this.chkimpsms.TabIndex = 1004;
		this.chkimpsms.Text = "دمج الرسائل فى التنفيذ";
		this.chkimpsms.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkimpsms.UseVisualStyleBackColor = false;
		this.txtCHS.BackColor = System.Drawing.Color.White;
		this.txtCHS.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtCHS.ForeColor = System.Drawing.Color.Black;
		this.txtCHS.Location = new System.Drawing.Point(20, 110);
		this.txtCHS.MaxLength = 1;
		this.txtCHS.Name = "txtCHS";
		this.txtCHS.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtCHS.Size = new System.Drawing.Size(35, 24);
		this.txtCHS.TabIndex = 1003;
		this.txtCHS.Text = "1";
		this.txtCHS.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.tab365_2.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.tab365_2.Controls.Add(this.btnDelTarfehy);
		this.tab365_2.Controls.Add(this.chkNewWallet);
		this.tab365_2.Controls.Add(this.btnGetVodaBal365);
		this.tab365_2.Controls.Add(this.txtLoopSSD365_2);
		this.tab365_2.Controls.Add(this.txtLoopFSD365_2);
		this.tab365_2.Controls.Add(this.chkApply365Trans);
		this.tab365_2.Controls.Add(this.txtTransNum2365_n);
		this.tab365_2.Controls.Add(this.Label63);
		this.tab365_2.Controls.Add(this.btnTransGiftAutoNorm365);
		this.tab365_2.Controls.Add(this.txtVCForceMony365_n);
		this.tab365_2.Controls.Add(this.chkTransferAllNormalVoda365);
		this.tab365_2.Controls.Add(this.chkApply365Bakat);
		this.tab365_2.Controls.Add(this.btnApply365Bakat);
		this.tab365_2.Controls.Add(this.btnChkNewSims);
		this.tab365_2.ForeColor = System.Drawing.Color.Black;
		this.tab365_2.Location = new System.Drawing.Point(4, 22);
		this.tab365_2.Name = "tab365_2";
		this.tab365_2.Size = new System.Drawing.Size(934, 295);
		this.tab365_2.TabIndex = 17;
		this.tab365_2.Text = "365_2";
		this.btnDelTarfehy.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnDelTarfehy.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnDelTarfehy.Location = new System.Drawing.Point(648, 137);
		this.btnDelTarfehy.Name = "btnDelTarfehy";
		this.btnDelTarfehy.Size = new System.Drawing.Size(188, 41);
		this.btnDelTarfehy.TabIndex = 1047;
		this.btnDelTarfehy.Text = "الغاء الخدمات الترفيهية";
		this.btnDelTarfehy.UseVisualStyleBackColor = false;
		this.chkNewWallet.AutoSize = true;
		this.chkNewWallet.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.chkNewWallet.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkNewWallet.Location = new System.Drawing.Point(229, 224);
		this.chkNewWallet.Name = "chkNewWallet";
		this.chkNewWallet.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkNewWallet.Size = new System.Drawing.Size(53, 17);
		this.chkNewWallet.TabIndex = 1046;
		this.chkNewWallet.Text = "Auto";
		this.chkNewWallet.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkNewWallet.UseVisualStyleBackColor = false;
		this.btnGetVodaBal365.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnGetVodaBal365.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnGetVodaBal365.Location = new System.Drawing.Point(592, 201);
		this.btnGetVodaBal365.Name = "btnGetVodaBal365";
		this.btnGetVodaBal365.Size = new System.Drawing.Size(249, 40);
		this.btnGetVodaBal365.TabIndex = 1045;
		this.btnGetVodaBal365.Text = "استعلام عن الرصيد العادى للخط";
		this.btnGetVodaBal365.UseVisualStyleBackColor = false;
		this.txtLoopSSD365_2.BackColor = System.Drawing.Color.Black;
		this.txtLoopSSD365_2.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopSSD365_2.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopSSD365_2.Location = new System.Drawing.Point(213, 79);
		this.txtLoopSSD365_2.Name = "txtLoopSSD365_2";
		this.txtLoopSSD365_2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopSSD365_2.Size = new System.Drawing.Size(55, 24);
		this.txtLoopSSD365_2.TabIndex = 1044;
		this.txtLoopSSD365_2.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtLoopFSD365_2.BackColor = System.Drawing.Color.Black;
		this.txtLoopFSD365_2.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopFSD365_2.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopFSD365_2.Location = new System.Drawing.Point(214, 51);
		this.txtLoopFSD365_2.Name = "txtLoopFSD365_2";
		this.txtLoopFSD365_2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopFSD365_2.Size = new System.Drawing.Size(54, 24);
		this.txtLoopFSD365_2.TabIndex = 1043;
		this.txtLoopFSD365_2.Text = "1";
		this.txtLoopFSD365_2.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.chkApply365Trans.AutoSize = true;
		this.chkApply365Trans.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.chkApply365Trans.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkApply365Trans.ForeColor = System.Drawing.Color.Black;
		this.chkApply365Trans.Location = new System.Drawing.Point(142, 40);
		this.chkApply365Trans.Name = "chkApply365Trans";
		this.chkApply365Trans.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkApply365Trans.Size = new System.Drawing.Size(53, 17);
		this.chkApply365Trans.TabIndex = 1042;
		this.chkApply365Trans.Text = "Auto";
		this.chkApply365Trans.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkApply365Trans.UseVisualStyleBackColor = false;
		this.txtTransNum2365_n.BackColor = System.Drawing.Color.White;
		this.txtTransNum2365_n.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtTransNum2365_n.ForeColor = System.Drawing.Color.Black;
		this.txtTransNum2365_n.Location = new System.Drawing.Point(13, 163);
		this.txtTransNum2365_n.MaxLength = 11;
		this.txtTransNum2365_n.Name = "txtTransNum2365_n";
		this.txtTransNum2365_n.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTransNum2365_n.Size = new System.Drawing.Size(187, 36);
		this.txtTransNum2365_n.TabIndex = 1041;
		this.txtTransNum2365_n.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label63.AutoSize = true;
		this.Label63.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label63.ForeColor = System.Drawing.Color.Black;
		this.Label63.Location = new System.Drawing.Point(139, 115);
		this.Label63.Name = "Label63";
		this.Label63.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label63.Size = new System.Drawing.Size(45, 17);
		this.Label63.TabIndex = 1040;
		this.Label63.Text = "المبلغ";
		this.btnTransGiftAutoNorm365.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTransGiftAutoNorm365.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnTransGiftAutoNorm365.Location = new System.Drawing.Point(14, 37);
		this.btnTransGiftAutoNorm365.Name = "btnTransGiftAutoNorm365";
		this.btnTransGiftAutoNorm365.Size = new System.Drawing.Size(186, 66);
		this.btnTransGiftAutoNorm365.TabIndex = 1039;
		this.btnTransGiftAutoNorm365.Text = "تحويل رصيد عادى";
		this.btnTransGiftAutoNorm365.UseVisualStyleBackColor = false;
		this.txtVCForceMony365_n.BackColor = System.Drawing.Color.White;
		this.txtVCForceMony365_n.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold);
		this.txtVCForceMony365_n.ForeColor = System.Drawing.Color.Black;
		this.txtVCForceMony365_n.Location = new System.Drawing.Point(66, 109);
		this.txtVCForceMony365_n.Name = "txtVCForceMony365_n";
		this.txtVCForceMony365_n.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtVCForceMony365_n.Size = new System.Drawing.Size(67, 27);
		this.txtVCForceMony365_n.TabIndex = 1038;
		this.txtVCForceMony365_n.Text = "0";
		this.txtVCForceMony365_n.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.chkTransferAllNormalVoda365.AutoSize = true;
		this.chkTransferAllNormalVoda365.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.chkTransferAllNormalVoda365.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkTransferAllNormalVoda365.Location = new System.Drawing.Point(38, 138);
		this.chkTransferAllNormalVoda365.Name = "chkTransferAllNormalVoda365";
		this.chkTransferAllNormalVoda365.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkTransferAllNormalVoda365.Size = new System.Drawing.Size(161, 17);
		this.chkTransferAllNormalVoda365.TabIndex = 1037;
		this.chkTransferAllNormalVoda365.Text = "تحويل كامل الرصيد العادى";
		this.chkTransferAllNormalVoda365.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkTransferAllNormalVoda365.UseVisualStyleBackColor = false;
		this.chkApply365Bakat.AutoSize = true;
		this.chkApply365Bakat.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.chkApply365Bakat.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkApply365Bakat.ForeColor = System.Drawing.Color.Black;
		this.chkApply365Bakat.Location = new System.Drawing.Point(783, 36);
		this.chkApply365Bakat.Name = "chkApply365Bakat";
		this.chkApply365Bakat.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkApply365Bakat.Size = new System.Drawing.Size(53, 17);
		this.chkApply365Bakat.TabIndex = 1036;
		this.chkApply365Bakat.Text = "Auto";
		this.chkApply365Bakat.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkApply365Bakat.UseVisualStyleBackColor = false;
		this.btnApply365Bakat.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnApply365Bakat.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnApply365Bakat.Location = new System.Drawing.Point(653, 33);
		this.btnApply365Bakat.Name = "btnApply365Bakat";
		this.btnApply365Bakat.Size = new System.Drawing.Size(188, 64);
		this.btnApply365Bakat.TabIndex = 1035;
		this.btnApply365Bakat.Text = "الباقات";
		this.btnApply365Bakat.UseVisualStyleBackColor = false;
		this.btnChkNewSims.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnChkNewSims.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnChkNewSims.Location = new System.Drawing.Point(13, 222);
		this.btnChkNewSims.Name = "btnChkNewSims";
		this.btnChkNewSims.Size = new System.Drawing.Size(269, 57);
		this.btnChkNewSims.TabIndex = 1048;
		this.btnChkNewSims.Text = "استعلام تلقائى عن المحافظ الجديدة";
		this.btnChkNewSims.UseVisualStyleBackColor = false;
		this.TabPage4.BackColor = System.Drawing.Color.Red;
		this.TabPage4.Controls.Add(this.ckbtnChangePassNew);
		this.TabPage4.Controls.Add(this.ckbtnChangePass);
		this.TabPage4.Controls.Add(this.btnChangePassNew);
		this.TabPage4.Controls.Add(this.BDatedel);
		this.TabPage4.Controls.Add(this.btnDlGifts);
		this.TabPage4.Controls.Add(this.Label51);
		this.TabPage4.Controls.Add(this.btnChangePass);
		this.TabPage4.Controls.Add(this.Label50);
		this.TabPage4.Controls.Add(this.txtOldPass);
		this.TabPage4.Controls.Add(this.Label49);
		this.TabPage4.Controls.Add(this.txtNewPass);
		this.TabPage4.Controls.Add(this.chkPay);
		this.TabPage4.Controls.Add(this.btnGetBalNM);
		this.TabPage4.Controls.Add(this.btnCopyAll);
		this.TabPage4.Controls.Add(this.txtSpNum6);
		this.TabPage4.Controls.Add(this.txtSpNum5);
		this.TabPage4.Controls.Add(this.txtSpNum4);
		this.TabPage4.Controls.Add(this.txtSpNum3);
		this.TabPage4.Controls.Add(this.txtSpNum2);
		this.TabPage4.Controls.Add(this.Label11);
		this.TabPage4.Controls.Add(this.txtSpNum1);
		this.TabPage4.Controls.Add(this.Label2);
		this.TabPage4.Controls.Add(this.txtwait);
		this.TabPage4.Controls.Add(this.Label1);
		this.TabPage4.Controls.Add(this.txtPass);
		this.TabPage4.Controls.Add(this.btnAddItems);
		this.TabPage4.Location = new System.Drawing.Point(4, 22);
		this.TabPage4.Name = "TabPage4";
		this.TabPage4.Padding = new System.Windows.Forms.Padding(3);
		this.TabPage4.Size = new System.Drawing.Size(934, 295);
		this.TabPage4.TabIndex = 3;
		this.TabPage4.Text = "VFsetting";
		this.ckbtnChangePassNew.AutoSize = true;
		this.ckbtnChangePassNew.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnChangePassNew.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnChangePassNew.ForeColor = System.Drawing.Color.Black;
		this.ckbtnChangePassNew.Location = new System.Drawing.Point(857, 232);
		this.ckbtnChangePassNew.Name = "ckbtnChangePassNew";
		this.ckbtnChangePassNew.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnChangePassNew.Size = new System.Drawing.Size(53, 17);
		this.ckbtnChangePassNew.TabIndex = 1044;
		this.ckbtnChangePassNew.Text = "Auto";
		this.ckbtnChangePassNew.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnChangePassNew.UseVisualStyleBackColor = false;
		this.ckbtnChangePass.AutoSize = true;
		this.ckbtnChangePass.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnChangePass.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnChangePass.ForeColor = System.Drawing.Color.Black;
		this.ckbtnChangePass.Location = new System.Drawing.Point(559, 119);
		this.ckbtnChangePass.Name = "ckbtnChangePass";
		this.ckbtnChangePass.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnChangePass.Size = new System.Drawing.Size(53, 17);
		this.ckbtnChangePass.TabIndex = 1043;
		this.ckbtnChangePass.Text = "Auto";
		this.ckbtnChangePass.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnChangePass.UseVisualStyleBackColor = false;
		this.btnChangePassNew.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnChangePassNew.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnChangePassNew.Location = new System.Drawing.Point(693, 232);
		this.btnChangePassNew.Name = "btnChangePassNew";
		this.btnChangePassNew.Size = new System.Drawing.Size(217, 51);
		this.btnChangePassNew.TabIndex = 987;
		this.btnChangePassNew.Text = "تسجيل اول مرة لكل الخطوط";
		this.btnChangePassNew.UseVisualStyleBackColor = false;
		this.BDatedel.Format = System.Windows.Forms.DateTimePickerFormat.Short;
		this.BDatedel.Location = new System.Drawing.Point(52, 263);
		this.BDatedel.Name = "BDatedel";
		this.BDatedel.Size = new System.Drawing.Size(88, 20);
		this.BDatedel.TabIndex = 986;
		this.btnDlGifts.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnDlGifts.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnDlGifts.Location = new System.Drawing.Point(13, 229);
		this.btnDlGifts.Name = "btnDlGifts";
		this.btnDlGifts.Size = new System.Drawing.Size(170, 32);
		this.btnDlGifts.TabIndex = 985;
		this.btnDlGifts.Text = "حذف الهدايا قبل تاريخ";
		this.btnDlGifts.UseVisualStyleBackColor = false;
		this.Label51.AutoSize = true;
		this.Label51.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label51.ForeColor = System.Drawing.Color.Black;
		this.Label51.Location = new System.Drawing.Point(394, 22);
		this.Label51.Name = "Label51";
		this.Label51.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label51.Size = new System.Drawing.Size(199, 17);
		this.Label51.TabIndex = 984;
		this.Label51.Text = "تعديل كلمة السر لكل الخطوط";
		this.btnChangePass.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnChangePass.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnChangePass.Location = new System.Drawing.Point(361, 110);
		this.btnChangePass.Name = "btnChangePass";
		this.btnChangePass.Size = new System.Drawing.Size(192, 32);
		this.btnChangePass.TabIndex = 983;
		this.btnChangePass.Text = "تعديل كلمة السر";
		this.btnChangePass.UseVisualStyleBackColor = false;
		this.Label50.AutoSize = true;
		this.Label50.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label50.ForeColor = System.Drawing.Color.Black;
		this.Label50.Location = new System.Drawing.Point(476, 53);
		this.Label50.Name = "Label50";
		this.Label50.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label50.Size = new System.Drawing.Size(127, 17);
		this.Label50.TabIndex = 982;
		this.Label50.Text = "كلمة السر القديمة";
		this.txtOldPass.BackColor = System.Drawing.Color.White;
		this.txtOldPass.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtOldPass.ForeColor = System.Drawing.Color.Black;
		this.txtOldPass.Location = new System.Drawing.Point(361, 47);
		this.txtOldPass.MaxLength = 6;
		this.txtOldPass.Name = "txtOldPass";
		this.txtOldPass.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOldPass.Size = new System.Drawing.Size(109, 27);
		this.txtOldPass.TabIndex = 981;
		this.Label49.AutoSize = true;
		this.Label49.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label49.ForeColor = System.Drawing.Color.Black;
		this.Label49.Location = new System.Drawing.Point(476, 83);
		this.Label49.Name = "Label49";
		this.Label49.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label49.Size = new System.Drawing.Size(128, 17);
		this.Label49.TabIndex = 980;
		this.Label49.Text = "كلمة السر الجديدة";
		this.txtNewPass.BackColor = System.Drawing.Color.White;
		this.txtNewPass.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtNewPass.ForeColor = System.Drawing.Color.Black;
		this.txtNewPass.Location = new System.Drawing.Point(361, 77);
		this.txtNewPass.MaxLength = 6;
		this.txtNewPass.Name = "txtNewPass";
		this.txtNewPass.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtNewPass.Size = new System.Drawing.Size(109, 27);
		this.txtNewPass.TabIndex = 979;
		this.chkPay.AutoSize = true;
		this.chkPay.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkPay.Location = new System.Drawing.Point(662, 28);
		this.chkPay.Name = "chkPay";
		this.chkPay.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkPay.Size = new System.Drawing.Size(15, 14);
		this.chkPay.TabIndex = 978;
		this.chkPay.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkPay.UseVisualStyleBackColor = true;
		this.btnGetBalNM.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnGetBalNM.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnGetBalNM.Location = new System.Drawing.Point(650, 12);
		this.btnGetBalNM.Name = "btnGetBalNM";
		this.btnGetBalNM.Size = new System.Drawing.Size(278, 51);
		this.btnGetBalNM.TabIndex = 977;
		this.btnGetBalNM.Text = "استعلام عن الرصيد العادى للخط";
		this.btnGetBalNM.UseVisualStyleBackColor = false;
		this.btnCopyAll.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnCopyAll.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnCopyAll.Location = new System.Drawing.Point(162, 165);
		this.btnCopyAll.Name = "btnCopyAll";
		this.btnCopyAll.Size = new System.Drawing.Size(87, 27);
		this.btnCopyAll.TabIndex = 906;
		this.btnCopyAll.Text = "نسخ الكل";
		this.btnCopyAll.UseVisualStyleBackColor = false;
		this.txtSpNum6.BackColor = System.Drawing.Color.White;
		this.txtSpNum6.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtSpNum6.ForeColor = System.Drawing.Color.Black;
		this.txtSpNum6.Location = new System.Drawing.Point(6, 164);
		this.txtSpNum6.MaxLength = 11;
		this.txtSpNum6.Name = "txtSpNum6";
		this.txtSpNum6.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtSpNum6.Size = new System.Drawing.Size(150, 27);
		this.txtSpNum6.TabIndex = 905;
		this.txtSpNum5.BackColor = System.Drawing.Color.White;
		this.txtSpNum5.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtSpNum5.ForeColor = System.Drawing.Color.Black;
		this.txtSpNum5.Location = new System.Drawing.Point(6, 137);
		this.txtSpNum5.MaxLength = 11;
		this.txtSpNum5.Name = "txtSpNum5";
		this.txtSpNum5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtSpNum5.Size = new System.Drawing.Size(150, 27);
		this.txtSpNum5.TabIndex = 904;
		this.txtSpNum4.BackColor = System.Drawing.Color.White;
		this.txtSpNum4.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtSpNum4.ForeColor = System.Drawing.Color.Black;
		this.txtSpNum4.Location = new System.Drawing.Point(6, 110);
		this.txtSpNum4.MaxLength = 11;
		this.txtSpNum4.Name = "txtSpNum4";
		this.txtSpNum4.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtSpNum4.Size = new System.Drawing.Size(150, 27);
		this.txtSpNum4.TabIndex = 903;
		this.txtSpNum3.BackColor = System.Drawing.Color.White;
		this.txtSpNum3.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtSpNum3.ForeColor = System.Drawing.Color.Black;
		this.txtSpNum3.Location = new System.Drawing.Point(6, 83);
		this.txtSpNum3.MaxLength = 11;
		this.txtSpNum3.Name = "txtSpNum3";
		this.txtSpNum3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtSpNum3.Size = new System.Drawing.Size(150, 27);
		this.txtSpNum3.TabIndex = 902;
		this.txtSpNum2.BackColor = System.Drawing.Color.White;
		this.txtSpNum2.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtSpNum2.ForeColor = System.Drawing.Color.Black;
		this.txtSpNum2.Location = new System.Drawing.Point(6, 56);
		this.txtSpNum2.MaxLength = 11;
		this.txtSpNum2.Name = "txtSpNum2";
		this.txtSpNum2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtSpNum2.Size = new System.Drawing.Size(150, 27);
		this.txtSpNum2.TabIndex = 901;
		this.Label11.AutoSize = true;
		this.Label11.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label11.ForeColor = System.Drawing.Color.Black;
		this.Label11.Location = new System.Drawing.Point(40, 8);
		this.Label11.Name = "Label11";
		this.Label11.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label11.Size = new System.Drawing.Size(84, 17);
		this.Label11.TabIndex = 900;
		this.Label11.Text = "ارقام سحب";
		this.txtSpNum1.BackColor = System.Drawing.Color.White;
		this.txtSpNum1.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtSpNum1.ForeColor = System.Drawing.Color.Black;
		this.txtSpNum1.Location = new System.Drawing.Point(6, 29);
		this.txtSpNum1.MaxLength = 11;
		this.txtSpNum1.Name = "txtSpNum1";
		this.txtSpNum1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtSpNum1.Size = new System.Drawing.Size(150, 27);
		this.txtSpNum1.TabIndex = 899;
		this.Label2.AutoSize = true;
		this.Label2.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label2.ForeColor = System.Drawing.Color.Black;
		this.Label2.Location = new System.Drawing.Point(159, 202);
		this.Label2.Name = "Label2";
		this.Label2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label2.Size = new System.Drawing.Size(55, 17);
		this.Label2.TabIndex = 884;
		this.Label2.Text = "الانتظار";
		this.txtwait.BackColor = System.Drawing.Color.White;
		this.txtwait.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtwait.ForeColor = System.Drawing.Color.Black;
		this.txtwait.Location = new System.Drawing.Point(47, 196);
		this.txtwait.Name = "txtwait";
		this.txtwait.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtwait.Size = new System.Drawing.Size(109, 27);
		this.txtwait.TabIndex = 883;
		this.Label1.AutoSize = true;
		this.Label1.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label1.ForeColor = System.Drawing.Color.Black;
		this.Label1.Location = new System.Drawing.Point(544, 209);
		this.Label1.Name = "Label1";
		this.Label1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label1.Size = new System.Drawing.Size(270, 17);
		this.Label1.TabIndex = 882;
		this.Label1.Text = "كلمة السر لخطوط فودافون كاش العادية";
		this.txtPass.BackColor = System.Drawing.Color.FromArgb(255, 192, 192);
		this.txtPass.Font = new System.Drawing.Font("Tahoma", 20.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtPass.ForeColor = System.Drawing.Color.Black;
		this.txtPass.Location = new System.Drawing.Point(541, 238);
		this.txtPass.MaxLength = 6;
		this.txtPass.Name = "txtPass";
		this.txtPass.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtPass.Size = new System.Drawing.Size(146, 40);
		this.txtPass.TabIndex = 881;
		this.txtPass.Text = "606060";
		this.txtPass.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnAddItems.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnAddItems.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnAddItems.ForeColor = System.Drawing.Color.Black;
		this.btnAddItems.Location = new System.Drawing.Point(162, 29);
		this.btnAddItems.Name = "btnAddItems";
		this.btnAddItems.Size = new System.Drawing.Size(151, 65);
		this.btnAddItems.TabIndex = 880;
		this.btnAddItems.Text = "اضافة خطوط لاستقبال الرصيد";
		this.btnAddItems.UseVisualStyleBackColor = false;
		this.tabOcash.BackColor = System.Drawing.Color.FromArgb(255, 128, 0);
		this.tabOcash.Controls.Add(this.txtOCtopupDelayCash);
		this.tabOcash.Controls.Add(this.txtOCTransferAll);
		this.tabOcash.Controls.Add(this.txtOCchargeNumOne);
		this.tabOcash.Controls.Add(this.ckbtnOCTopupOne);
		this.tabOcash.Controls.Add(this.btnOCTopupOne);
		this.tabOcash.Controls.Add(this.txtOCtopupDelay);
		this.tabOcash.Controls.Add(this.ckOCBalWithBack);
		this.tabOcash.Controls.Add(this.Label105);
		this.tabOcash.Controls.Add(this.txtOCTransferSub);
		this.tabOcash.Controls.Add(this.CheckBox1);
		this.tabOcash.Controls.Add(this.btnOCTransferSame);
		this.tabOcash.Controls.Add(this.txtOCValueSame);
		this.tabOcash.Controls.Add(this.Label95);
		this.tabOcash.Controls.Add(this.lblOCvTotal);
		this.tabOcash.Controls.Add(this.lblOCvsub);
		this.tabOcash.Controls.Add(this.lblOCvPlus);
		this.tabOcash.Controls.Add(this.lblOCv100);
		this.tabOcash.Controls.Add(this.lblOCv90);
		this.tabOcash.Controls.Add(this.lblOCv85);
		this.tabOcash.Controls.Add(this.lblOCv75);
		this.tabOcash.Controls.Add(this.lblOCv65);
		this.tabOcash.Controls.Add(this.lblOCv50);
		this.tabOcash.Controls.Add(this.lblOCv45);
		this.tabOcash.Controls.Add(this.lblOCv35);
		this.tabOcash.Controls.Add(this.lblOCv25);
		this.tabOcash.Controls.Add(this.ckbtnOCTransferAll);
		this.tabOcash.Controls.Add(this.txtLoopSSDOC);
		this.tabOcash.Controls.Add(this.txtLoopFSDOC);
		this.tabOcash.Controls.Add(this.Label82);
		this.tabOcash.Controls.Add(this.lblOCv20);
		this.tabOcash.Controls.Add(this.btnOCTransferAll);
		this.tabOcash.Controls.Add(this.lblOCv15);
		this.tabOcash.Controls.Add(this.lblOCv10);
		this.tabOcash.Controls.Add(this.lblOCv5);
		this.tabOcash.Controls.Add(this.ckbtnOCTopup);
		this.tabOcash.Controls.Add(this.txtOCchargeNum6);
		this.tabOcash.Controls.Add(this.txtOCchargeNum5);
		this.tabOcash.Controls.Add(this.txtOCchargeNum4);
		this.tabOcash.Controls.Add(this.txtOCchargeNum3);
		this.tabOcash.Controls.Add(this.txtOCchargeNum2);
		this.tabOcash.Controls.Add(this.txtOCTopValue);
		this.tabOcash.Controls.Add(this.btnOCTopup);
		this.tabOcash.Controls.Add(this.ckbtnOCGetBal);
		this.tabOcash.Controls.Add(this.Label74);
		this.tabOcash.Controls.Add(this.txtOCchargeNum1);
		this.tabOcash.Controls.Add(this.btnOCGetBal);
		this.tabOcash.Location = new System.Drawing.Point(4, 22);
		this.tabOcash.Name = "tabOcash";
		this.tabOcash.Padding = new System.Windows.Forms.Padding(3);
		this.tabOcash.Size = new System.Drawing.Size(934, 295);
		this.tabOcash.TabIndex = 20;
		this.tabOcash.Text = "OC Topup Transfer";
		this.txtOCtopupDelayCash.BackColor = System.Drawing.Color.Blue;
		this.txtOCtopupDelayCash.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtOCtopupDelayCash.ForeColor = System.Drawing.Color.White;
		this.txtOCtopupDelayCash.Location = new System.Drawing.Point(843, 154);
		this.txtOCtopupDelayCash.Name = "txtOCtopupDelayCash";
		this.txtOCtopupDelayCash.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCtopupDelayCash.Size = new System.Drawing.Size(64, 24);
		this.txtOCtopupDelayCash.TabIndex = 1131;
		this.txtOCtopupDelayCash.Text = "1";
		this.txtOCtopupDelayCash.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtOCTransferAll.BackColor = System.Drawing.Color.White;
		this.txtOCTransferAll.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCTransferAll.ForeColor = System.Drawing.Color.Black;
		this.txtOCTransferAll.Location = new System.Drawing.Point(409, 253);
		this.txtOCTransferAll.MaxLength = 11;
		this.txtOCTransferAll.Name = "txtOCTransferAll";
		this.txtOCTransferAll.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCTransferAll.Size = new System.Drawing.Size(222, 36);
		this.txtOCTransferAll.TabIndex = 1129;
		this.txtOCTransferAll.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtOCchargeNumOne.BackColor = System.Drawing.Color.White;
		this.txtOCchargeNumOne.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCchargeNumOne.ForeColor = System.Drawing.Color.Black;
		this.txtOCchargeNumOne.Location = new System.Drawing.Point(415, 88);
		this.txtOCchargeNumOne.MaxLength = 11;
		this.txtOCchargeNumOne.Name = "txtOCchargeNumOne";
		this.txtOCchargeNumOne.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCchargeNumOne.Size = new System.Drawing.Size(222, 36);
		this.txtOCchargeNumOne.TabIndex = 1128;
		this.txtOCchargeNumOne.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.ckbtnOCTopupOne.AutoSize = true;
		this.ckbtnOCTopupOne.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnOCTopupOne.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnOCTopupOne.ForeColor = System.Drawing.Color.Black;
		this.ckbtnOCTopupOne.Location = new System.Drawing.Point(581, 16);
		this.ckbtnOCTopupOne.Name = "ckbtnOCTopupOne";
		this.ckbtnOCTopupOne.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnOCTopupOne.Size = new System.Drawing.Size(53, 17);
		this.ckbtnOCTopupOne.TabIndex = 1127;
		this.ckbtnOCTopupOne.Text = "Auto";
		this.ckbtnOCTopupOne.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnOCTopupOne.UseVisualStyleBackColor = false;
		this.btnOCTopupOne.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCTopupOne.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnOCTopupOne.Location = new System.Drawing.Point(499, 13);
		this.btnOCTopupOne.Name = "btnOCTopupOne";
		this.btnOCTopupOne.Size = new System.Drawing.Size(138, 69);
		this.btnOCTopupOne.TabIndex = 1126;
		this.btnOCTopupOne.Text = "TopUp to 1";
		this.btnOCTopupOne.UseVisualStyleBackColor = false;
		this.txtOCtopupDelay.BackColor = System.Drawing.Color.Blue;
		this.txtOCtopupDelay.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtOCtopupDelay.ForeColor = System.Drawing.Color.White;
		this.txtOCtopupDelay.Location = new System.Drawing.Point(429, 20);
		this.txtOCtopupDelay.Name = "txtOCtopupDelay";
		this.txtOCtopupDelay.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCtopupDelay.Size = new System.Drawing.Size(64, 24);
		this.txtOCtopupDelay.TabIndex = 1125;
		this.txtOCtopupDelay.Text = "1";
		this.txtOCtopupDelay.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.ckOCBalWithBack.AutoSize = true;
		this.ckOCBalWithBack.BackColor = System.Drawing.Color.FromArgb(255, 128, 0);
		this.ckOCBalWithBack.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.ckOCBalWithBack.Location = new System.Drawing.Point(737, 118);
		this.ckOCBalWithBack.Name = "ckOCBalWithBack";
		this.ckOCBalWithBack.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckOCBalWithBack.Size = new System.Drawing.Size(167, 21);
		this.ckOCBalWithBack.TabIndex = 1124;
		this.ckOCBalWithBack.Text = "شحن الباك مع الرصيد";
		this.ckOCBalWithBack.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckOCBalWithBack.UseVisualStyleBackColor = false;
		this.Label105.AutoSize = true;
		this.Label105.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label105.ForeColor = System.Drawing.Color.Black;
		this.Label105.Location = new System.Drawing.Point(707, 157);
		this.Label105.Name = "Label105";
		this.Label105.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label105.Size = new System.Drawing.Size(119, 17);
		this.Label105.TabIndex = 1123;
		this.Label105.Text = "باقى رصيد بالخط";
		this.Label105.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.txtOCTransferSub.BackColor = System.Drawing.Color.White;
		this.txtOCTransferSub.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold);
		this.txtOCTransferSub.ForeColor = System.Drawing.Color.Black;
		this.txtOCTransferSub.Location = new System.Drawing.Point(643, 151);
		this.txtOCTransferSub.Name = "txtOCTransferSub";
		this.txtOCTransferSub.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCTransferSub.Size = new System.Drawing.Size(58, 27);
		this.txtOCTransferSub.TabIndex = 1122;
		this.txtOCTransferSub.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.CheckBox1.AutoSize = true;
		this.CheckBox1.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.CheckBox1.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.CheckBox1.ForeColor = System.Drawing.Color.Black;
		this.CheckBox1.Location = new System.Drawing.Point(851, 53);
		this.CheckBox1.Name = "CheckBox1";
		this.CheckBox1.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.CheckBox1.Size = new System.Drawing.Size(53, 17);
		this.CheckBox1.TabIndex = 1121;
		this.CheckBox1.Text = "Auto";
		this.CheckBox1.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.CheckBox1.UseVisualStyleBackColor = false;
		this.btnOCTransferSame.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCTransferSame.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnOCTransferSame.Location = new System.Drawing.Point(643, 46);
		this.btnOCTransferSame.Name = "btnOCTransferSame";
		this.btnOCTransferSame.Size = new System.Drawing.Size(267, 59);
		this.btnOCTransferSame.TabIndex = 1120;
		this.btnOCTransferSame.Text = "تحويل مبلغ من الكل";
		this.btnOCTransferSame.UseVisualStyleBackColor = false;
		this.txtOCValueSame.BackColor = System.Drawing.Color.White;
		this.txtOCValueSame.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCValueSame.ForeColor = System.Drawing.Color.Black;
		this.txtOCValueSame.Location = new System.Drawing.Point(719, 8);
		this.txtOCValueSame.Name = "txtOCValueSame";
		this.txtOCValueSame.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCValueSame.Size = new System.Drawing.Size(99, 36);
		this.txtOCValueSame.TabIndex = 1118;
		this.txtOCValueSame.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label95.AutoSize = true;
		this.Label95.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label95.ForeColor = System.Drawing.Color.Black;
		this.Label95.Location = new System.Drawing.Point(825, 18);
		this.Label95.Name = "Label95";
		this.Label95.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label95.Size = new System.Drawing.Size(88, 17);
		this.Label95.TabIndex = 1119;
		this.Label95.Text = "مبلغ التحويل";
		this.lblOCvTotal.BackColor = System.Drawing.Color.White;
		this.lblOCvTotal.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblOCvTotal.ForeColor = System.Drawing.Color.Black;
		this.lblOCvTotal.Location = new System.Drawing.Point(224, 249);
		this.lblOCvTotal.Name = "lblOCvTotal";
		this.lblOCvTotal.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCvTotal.Size = new System.Drawing.Size(179, 35);
		this.lblOCvTotal.TabIndex = 1117;
		this.lblOCvTotal.Text = "Total Bal";
		this.lblOCvTotal.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblOCvsub.BackColor = System.Drawing.Color.White;
		this.lblOCvsub.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblOCvsub.ForeColor = System.Drawing.Color.Black;
		this.lblOCvsub.Location = new System.Drawing.Point(293, 221);
		this.lblOCvsub.Name = "lblOCvsub";
		this.lblOCvsub.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCvsub.Size = new System.Drawing.Size(51, 24);
		this.lblOCvsub.TabIndex = 1116;
		this.lblOCvsub.Text = "-5";
		this.lblOCvsub.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblOCvPlus.BackColor = System.Drawing.Color.White;
		this.lblOCvPlus.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblOCvPlus.ForeColor = System.Drawing.Color.Black;
		this.lblOCvPlus.Location = new System.Drawing.Point(351, 221);
		this.lblOCvPlus.Name = "lblOCvPlus";
		this.lblOCvPlus.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCvPlus.Size = new System.Drawing.Size(51, 24);
		this.lblOCvPlus.TabIndex = 1115;
		this.lblOCvPlus.Text = "+5";
		this.lblOCvPlus.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblOCv100.BackColor = System.Drawing.Color.White;
		this.lblOCv100.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblOCv100.ForeColor = System.Drawing.Color.Black;
		this.lblOCv100.Location = new System.Drawing.Point(226, 221);
		this.lblOCv100.Name = "lblOCv100";
		this.lblOCv100.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCv100.Size = new System.Drawing.Size(61, 24);
		this.lblOCv100.TabIndex = 1114;
		this.lblOCv100.Text = "100";
		this.lblOCv100.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblOCv90.BackColor = System.Drawing.Color.White;
		this.lblOCv90.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblOCv90.ForeColor = System.Drawing.Color.Black;
		this.lblOCv90.Location = new System.Drawing.Point(226, 190);
		this.lblOCv90.Name = "lblOCv90";
		this.lblOCv90.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCv90.Size = new System.Drawing.Size(40, 24);
		this.lblOCv90.TabIndex = 1113;
		this.lblOCv90.Text = "90";
		this.lblOCv90.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblOCv85.BackColor = System.Drawing.Color.White;
		this.lblOCv85.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblOCv85.ForeColor = System.Drawing.Color.Black;
		this.lblOCv85.Location = new System.Drawing.Point(270, 190);
		this.lblOCv85.Name = "lblOCv85";
		this.lblOCv85.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCv85.Size = new System.Drawing.Size(40, 24);
		this.lblOCv85.TabIndex = 1112;
		this.lblOCv85.Text = "85";
		this.lblOCv85.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblOCv75.BackColor = System.Drawing.Color.White;
		this.lblOCv75.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblOCv75.ForeColor = System.Drawing.Color.Black;
		this.lblOCv75.Location = new System.Drawing.Point(316, 190);
		this.lblOCv75.Name = "lblOCv75";
		this.lblOCv75.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCv75.Size = new System.Drawing.Size(40, 24);
		this.lblOCv75.TabIndex = 1111;
		this.lblOCv75.Text = "75";
		this.lblOCv75.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblOCv65.BackColor = System.Drawing.Color.White;
		this.lblOCv65.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblOCv65.ForeColor = System.Drawing.Color.Black;
		this.lblOCv65.Location = new System.Drawing.Point(362, 190);
		this.lblOCv65.Name = "lblOCv65";
		this.lblOCv65.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCv65.Size = new System.Drawing.Size(40, 24);
		this.lblOCv65.TabIndex = 1110;
		this.lblOCv65.Text = "65";
		this.lblOCv65.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblOCv50.BackColor = System.Drawing.Color.White;
		this.lblOCv50.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblOCv50.ForeColor = System.Drawing.Color.Black;
		this.lblOCv50.Location = new System.Drawing.Point(224, 159);
		this.lblOCv50.Name = "lblOCv50";
		this.lblOCv50.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCv50.Size = new System.Drawing.Size(40, 24);
		this.lblOCv50.TabIndex = 1109;
		this.lblOCv50.Text = "50";
		this.lblOCv50.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblOCv45.BackColor = System.Drawing.Color.White;
		this.lblOCv45.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblOCv45.ForeColor = System.Drawing.Color.Black;
		this.lblOCv45.Location = new System.Drawing.Point(270, 159);
		this.lblOCv45.Name = "lblOCv45";
		this.lblOCv45.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCv45.Size = new System.Drawing.Size(40, 24);
		this.lblOCv45.TabIndex = 1108;
		this.lblOCv45.Text = "45";
		this.lblOCv45.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblOCv35.BackColor = System.Drawing.Color.White;
		this.lblOCv35.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblOCv35.ForeColor = System.Drawing.Color.Black;
		this.lblOCv35.Location = new System.Drawing.Point(316, 159);
		this.lblOCv35.Name = "lblOCv35";
		this.lblOCv35.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCv35.Size = new System.Drawing.Size(40, 24);
		this.lblOCv35.TabIndex = 1107;
		this.lblOCv35.Text = "35";
		this.lblOCv35.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblOCv25.BackColor = System.Drawing.Color.White;
		this.lblOCv25.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblOCv25.ForeColor = System.Drawing.Color.Black;
		this.lblOCv25.Location = new System.Drawing.Point(362, 159);
		this.lblOCv25.Name = "lblOCv25";
		this.lblOCv25.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCv25.Size = new System.Drawing.Size(40, 24);
		this.lblOCv25.TabIndex = 1106;
		this.lblOCv25.Text = "25";
		this.lblOCv25.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.ckbtnOCTransferAll.AutoSize = true;
		this.ckbtnOCTransferAll.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnOCTransferAll.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnOCTransferAll.ForeColor = System.Drawing.Color.Black;
		this.ckbtnOCTransferAll.Location = new System.Drawing.Point(578, 194);
		this.ckbtnOCTransferAll.Name = "ckbtnOCTransferAll";
		this.ckbtnOCTransferAll.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnOCTransferAll.Size = new System.Drawing.Size(53, 17);
		this.ckbtnOCTransferAll.TabIndex = 1105;
		this.ckbtnOCTransferAll.Text = "Auto";
		this.ckbtnOCTransferAll.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnOCTransferAll.UseVisualStyleBackColor = false;
		this.txtLoopSSDOC.BackColor = System.Drawing.Color.Black;
		this.txtLoopSSDOC.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopSSDOC.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopSSDOC.Location = new System.Drawing.Point(364, 48);
		this.txtLoopSSDOC.Name = "txtLoopSSDOC";
		this.txtLoopSSDOC.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopSSDOC.Size = new System.Drawing.Size(44, 24);
		this.txtLoopSSDOC.TabIndex = 1098;
		this.txtLoopSSDOC.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtLoopFSDOC.BackColor = System.Drawing.Color.Black;
		this.txtLoopFSDOC.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopFSDOC.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopFSDOC.Location = new System.Drawing.Point(365, 20);
		this.txtLoopFSDOC.Name = "txtLoopFSDOC";
		this.txtLoopFSDOC.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopFSDOC.Size = new System.Drawing.Size(43, 24);
		this.txtLoopFSDOC.TabIndex = 1097;
		this.txtLoopFSDOC.Text = "1";
		this.txtLoopFSDOC.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label82.AutoSize = true;
		this.Label82.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label82.ForeColor = System.Drawing.Color.Black;
		this.Label82.Location = new System.Drawing.Point(352, 92);
		this.Label82.Name = "Label82";
		this.Label82.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label82.Size = new System.Drawing.Size(45, 17);
		this.Label82.TabIndex = 1087;
		this.Label82.Text = "المبلغ";
		this.lblOCv20.BackColor = System.Drawing.Color.White;
		this.lblOCv20.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblOCv20.ForeColor = System.Drawing.Color.Black;
		this.lblOCv20.Location = new System.Drawing.Point(224, 127);
		this.lblOCv20.Name = "lblOCv20";
		this.lblOCv20.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCv20.Size = new System.Drawing.Size(40, 24);
		this.lblOCv20.TabIndex = 1075;
		this.lblOCv20.Text = "20";
		this.lblOCv20.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.btnOCTransferAll.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCTransferAll.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnOCTransferAll.Location = new System.Drawing.Point(410, 192);
		this.btnOCTransferAll.Name = "btnOCTransferAll";
		this.btnOCTransferAll.Size = new System.Drawing.Size(221, 55);
		this.btnOCTransferAll.TabIndex = 1104;
		this.btnOCTransferAll.Text = "تحويل كل الكاش على الرقم";
		this.btnOCTransferAll.UseVisualStyleBackColor = false;
		this.lblOCv15.BackColor = System.Drawing.Color.White;
		this.lblOCv15.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblOCv15.ForeColor = System.Drawing.Color.Black;
		this.lblOCv15.Location = new System.Drawing.Point(270, 127);
		this.lblOCv15.Name = "lblOCv15";
		this.lblOCv15.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCv15.Size = new System.Drawing.Size(40, 24);
		this.lblOCv15.TabIndex = 1074;
		this.lblOCv15.Text = "15";
		this.lblOCv15.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblOCv10.BackColor = System.Drawing.Color.White;
		this.lblOCv10.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblOCv10.ForeColor = System.Drawing.Color.Black;
		this.lblOCv10.Location = new System.Drawing.Point(316, 127);
		this.lblOCv10.Name = "lblOCv10";
		this.lblOCv10.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCv10.Size = new System.Drawing.Size(40, 24);
		this.lblOCv10.TabIndex = 1073;
		this.lblOCv10.Text = "10";
		this.lblOCv10.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblOCv5.BackColor = System.Drawing.Color.White;
		this.lblOCv5.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblOCv5.ForeColor = System.Drawing.Color.Black;
		this.lblOCv5.Location = new System.Drawing.Point(362, 127);
		this.lblOCv5.Name = "lblOCv5";
		this.lblOCv5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCv5.Size = new System.Drawing.Size(40, 24);
		this.lblOCv5.TabIndex = 1072;
		this.lblOCv5.Text = "5";
		this.lblOCv5.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.ckbtnOCTopup.AutoSize = true;
		this.ckbtnOCTopup.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnOCTopup.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnOCTopup.ForeColor = System.Drawing.Color.Black;
		this.ckbtnOCTopup.Location = new System.Drawing.Point(302, 13);
		this.ckbtnOCTopup.Name = "ckbtnOCTopup";
		this.ckbtnOCTopup.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnOCTopup.Size = new System.Drawing.Size(53, 17);
		this.ckbtnOCTopup.TabIndex = 1071;
		this.ckbtnOCTopup.Text = "Auto";
		this.ckbtnOCTopup.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnOCTopup.UseVisualStyleBackColor = false;
		this.txtOCchargeNum6.BackColor = System.Drawing.Color.White;
		this.txtOCchargeNum6.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCchargeNum6.ForeColor = System.Drawing.Color.Black;
		this.txtOCchargeNum6.Location = new System.Drawing.Point(15, 210);
		this.txtOCchargeNum6.MaxLength = 11;
		this.txtOCchargeNum6.Name = "txtOCchargeNum6";
		this.txtOCchargeNum6.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCchargeNum6.Size = new System.Drawing.Size(187, 36);
		this.txtOCchargeNum6.TabIndex = 1067;
		this.txtOCchargeNum6.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtOCchargeNum5.BackColor = System.Drawing.Color.White;
		this.txtOCchargeNum5.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCchargeNum5.ForeColor = System.Drawing.Color.Black;
		this.txtOCchargeNum5.Location = new System.Drawing.Point(15, 173);
		this.txtOCchargeNum5.MaxLength = 11;
		this.txtOCchargeNum5.Name = "txtOCchargeNum5";
		this.txtOCchargeNum5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCchargeNum5.Size = new System.Drawing.Size(187, 36);
		this.txtOCchargeNum5.TabIndex = 1066;
		this.txtOCchargeNum5.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtOCchargeNum4.BackColor = System.Drawing.Color.White;
		this.txtOCchargeNum4.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCchargeNum4.ForeColor = System.Drawing.Color.Black;
		this.txtOCchargeNum4.Location = new System.Drawing.Point(15, 137);
		this.txtOCchargeNum4.MaxLength = 11;
		this.txtOCchargeNum4.Name = "txtOCchargeNum4";
		this.txtOCchargeNum4.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCchargeNum4.Size = new System.Drawing.Size(187, 36);
		this.txtOCchargeNum4.TabIndex = 1065;
		this.txtOCchargeNum4.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtOCchargeNum3.BackColor = System.Drawing.Color.White;
		this.txtOCchargeNum3.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCchargeNum3.ForeColor = System.Drawing.Color.Black;
		this.txtOCchargeNum3.Location = new System.Drawing.Point(15, 101);
		this.txtOCchargeNum3.MaxLength = 11;
		this.txtOCchargeNum3.Name = "txtOCchargeNum3";
		this.txtOCchargeNum3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCchargeNum3.Size = new System.Drawing.Size(187, 36);
		this.txtOCchargeNum3.TabIndex = 1064;
		this.txtOCchargeNum3.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtOCchargeNum2.BackColor = System.Drawing.Color.White;
		this.txtOCchargeNum2.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCchargeNum2.ForeColor = System.Drawing.Color.Black;
		this.txtOCchargeNum2.Location = new System.Drawing.Point(14, 65);
		this.txtOCchargeNum2.MaxLength = 11;
		this.txtOCchargeNum2.Name = "txtOCchargeNum2";
		this.txtOCchargeNum2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCchargeNum2.Size = new System.Drawing.Size(187, 36);
		this.txtOCchargeNum2.TabIndex = 1063;
		this.txtOCchargeNum2.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtOCTopValue.BackColor = System.Drawing.Color.White;
		this.txtOCTopValue.Font = new System.Drawing.Font("Tahoma", 20.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtOCTopValue.ForeColor = System.Drawing.Color.Black;
		this.txtOCTopValue.Location = new System.Drawing.Point(222, 81);
		this.txtOCTopValue.Name = "txtOCTopValue";
		this.txtOCTopValue.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCTopValue.Size = new System.Drawing.Size(122, 40);
		this.txtOCTopValue.TabIndex = 1060;
		this.txtOCTopValue.Text = "0";
		this.txtOCTopValue.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnOCTopup.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCTopup.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnOCTopup.Location = new System.Drawing.Point(220, 10);
		this.btnOCTopup.Name = "btnOCTopup";
		this.btnOCTopup.Size = new System.Drawing.Size(138, 69);
		this.btnOCTopup.TabIndex = 1058;
		this.btnOCTopup.Text = "TopUp To 6";
		this.btnOCTopup.UseVisualStyleBackColor = false;
		this.ckbtnOCGetBal.AutoSize = true;
		this.ckbtnOCGetBal.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnOCGetBal.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnOCGetBal.ForeColor = System.Drawing.Color.Black;
		this.ckbtnOCGetBal.Location = new System.Drawing.Point(859, 239);
		this.ckbtnOCGetBal.Name = "ckbtnOCGetBal";
		this.ckbtnOCGetBal.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnOCGetBal.Size = new System.Drawing.Size(53, 17);
		this.ckbtnOCGetBal.TabIndex = 1088;
		this.ckbtnOCGetBal.Text = "Auto";
		this.ckbtnOCGetBal.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnOCGetBal.UseVisualStyleBackColor = false;
		this.Label74.AutoSize = true;
		this.Label74.BackColor = System.Drawing.Color.FromArgb(255, 128, 0);
		this.Label74.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label74.ForeColor = System.Drawing.Color.Black;
		this.Label74.Location = new System.Drawing.Point(11, 9);
		this.Label74.Name = "Label74";
		this.Label74.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label74.Size = new System.Drawing.Size(191, 17);
		this.Label74.TabIndex = 1055;
		this.Label74.Text = "الخط مستقبل الرصيد العادى";
		this.txtOCchargeNum1.BackColor = System.Drawing.Color.White;
		this.txtOCchargeNum1.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCchargeNum1.ForeColor = System.Drawing.Color.Black;
		this.txtOCchargeNum1.Location = new System.Drawing.Point(14, 29);
		this.txtOCchargeNum1.MaxLength = 11;
		this.txtOCchargeNum1.Name = "txtOCchargeNum1";
		this.txtOCchargeNum1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCchargeNum1.Size = new System.Drawing.Size(187, 36);
		this.txtOCchargeNum1.TabIndex = 1054;
		this.txtOCchargeNum1.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnOCGetBal.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCGetBal.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnOCGetBal.Location = new System.Drawing.Point(643, 237);
		this.btnOCGetBal.Name = "btnOCGetBal";
		this.btnOCGetBal.Size = new System.Drawing.Size(269, 50);
		this.btnOCGetBal.TabIndex = 1068;
		this.btnOCGetBal.Text = "استعلام عن رصيدالكاش";
		this.btnOCGetBal.UseVisualStyleBackColor = false;
		this.tabOCCon.BackColor = System.Drawing.Color.FromArgb(255, 128, 0);
		this.tabOCCon.Controls.Add(this.ckbtnOCSeriesGetBalAfter);
		this.tabOCCon.Controls.Add(this.ckbtnOCSeriesGetBalBEfore);
		this.tabOCCon.Controls.Add(this.lblOCMain);
		this.tabOCCon.Controls.Add(this.txtLoopSSDOCPaySr);
		this.tabOCCon.Controls.Add(this.txtLoopFSDOCPAYSr);
		this.tabOCCon.Controls.Add(this.ckbtnOCFromMasterToAll);
		this.tabOCCon.Controls.Add(this.btnOCFromMasterToAll);
		this.tabOCCon.Controls.Add(this.btnOCGetBalPAy);
		this.tabOCCon.Controls.Add(this.txtOCValueMT5);
		this.tabOCCon.Controls.Add(this.Label100);
		this.tabOCCon.Controls.Add(this.txtOCValueMT4);
		this.tabOCCon.Controls.Add(this.Label99);
		this.tabOCCon.Controls.Add(this.txtOCValueMT3);
		this.tabOCCon.Controls.Add(this.Label98);
		this.tabOCCon.Controls.Add(this.txtOCValueMT2);
		this.tabOCCon.Controls.Add(this.Label97);
		this.tabOCCon.Controls.Add(this.txtOCValueMT1);
		this.tabOCCon.Controls.Add(this.Label96);
		this.tabOCCon.Controls.Add(this.ckbtnOCSeriesMT);
		this.tabOCCon.Controls.Add(this.btnOCSeriesMT);
		this.tabOCCon.Controls.Add(this.ckbtnOCSeries);
		this.tabOCCon.Controls.Add(this.btnOCSeries);
		this.tabOCCon.Controls.Add(this.txtOCValue);
		this.tabOCCon.Controls.Add(this.Label76);
		this.tabOCCon.Controls.Add(this.Label94);
		this.tabOCCon.Controls.Add(this.txtOCNextMain);
		this.tabOCCon.Controls.Add(this.Label73);
		this.tabOCCon.Controls.Add(this.Label93);
		this.tabOCCon.Controls.Add(this.Label72);
		this.tabOCCon.Controls.Add(this.btnOCExchange);
		this.tabOCCon.Controls.Add(this.txtOCAdd);
		this.tabOCCon.Controls.Add(this.txtOCSub);
		this.tabOCCon.Controls.Add(this.ckOCSub);
		this.tabOCCon.Controls.Add(this.ckOCSubAuto);
		this.tabOCCon.Controls.Add(this.btnOCfromMtoN);
		this.tabOCCon.Location = new System.Drawing.Point(4, 22);
		this.tabOCCon.Name = "tabOCCon";
		this.tabOCCon.Padding = new System.Windows.Forms.Padding(3);
		this.tabOCCon.Size = new System.Drawing.Size(934, 295);
		this.tabOCCon.TabIndex = 27;
		this.tabOCCon.Text = "OC Series";
		this.ckbtnOCSeriesGetBalAfter.AutoSize = true;
		this.ckbtnOCSeriesGetBalAfter.BackColor = System.Drawing.Color.FromArgb(255, 128, 0);
		this.ckbtnOCSeriesGetBalAfter.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnOCSeriesGetBalAfter.Location = new System.Drawing.Point(274, 51);
		this.ckbtnOCSeriesGetBalAfter.Name = "ckbtnOCSeriesGetBalAfter";
		this.ckbtnOCSeriesGetBalAfter.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnOCSeriesGetBalAfter.Size = new System.Drawing.Size(114, 17);
		this.ckbtnOCSeriesGetBalAfter.TabIndex = 1120;
		this.ckbtnOCSeriesGetBalAfter.Text = "استعلام رصيد بعد";
		this.ckbtnOCSeriesGetBalAfter.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnOCSeriesGetBalAfter.UseVisualStyleBackColor = false;
		this.ckbtnOCSeriesGetBalBEfore.AutoSize = true;
		this.ckbtnOCSeriesGetBalBEfore.BackColor = System.Drawing.Color.FromArgb(255, 128, 0);
		this.ckbtnOCSeriesGetBalBEfore.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnOCSeriesGetBalBEfore.Location = new System.Drawing.Point(271, 24);
		this.ckbtnOCSeriesGetBalBEfore.Name = "ckbtnOCSeriesGetBalBEfore";
		this.ckbtnOCSeriesGetBalBEfore.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnOCSeriesGetBalBEfore.Size = new System.Drawing.Size(117, 17);
		this.ckbtnOCSeriesGetBalBEfore.TabIndex = 1119;
		this.ckbtnOCSeriesGetBalBEfore.Text = "استعلام رصيد قبل";
		this.ckbtnOCSeriesGetBalBEfore.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnOCSeriesGetBalBEfore.UseVisualStyleBackColor = false;
		this.lblOCMain.BackColor = System.Drawing.Color.White;
		this.lblOCMain.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.lblOCMain.ForeColor = System.Drawing.Color.Black;
		this.lblOCMain.Location = new System.Drawing.Point(640, 168);
		this.lblOCMain.MaxLength = 11;
		this.lblOCMain.Name = "lblOCMain";
		this.lblOCMain.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCMain.Size = new System.Drawing.Size(202, 36);
		this.lblOCMain.TabIndex = 1118;
		this.lblOCMain.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtLoopSSDOCPaySr.BackColor = System.Drawing.Color.Black;
		this.txtLoopSSDOCPaySr.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopSSDOCPaySr.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopSSDOCPaySr.Location = new System.Drawing.Point(498, 40);
		this.txtLoopSSDOCPaySr.Name = "txtLoopSSDOCPaySr";
		this.txtLoopSSDOCPaySr.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopSSDOCPaySr.Size = new System.Drawing.Size(44, 24);
		this.txtLoopSSDOCPaySr.TabIndex = 1117;
		this.txtLoopSSDOCPaySr.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtLoopFSDOCPAYSr.BackColor = System.Drawing.Color.Black;
		this.txtLoopFSDOCPAYSr.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopFSDOCPAYSr.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopFSDOCPAYSr.Location = new System.Drawing.Point(499, 12);
		this.txtLoopFSDOCPAYSr.Name = "txtLoopFSDOCPAYSr";
		this.txtLoopFSDOCPAYSr.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopFSDOCPAYSr.Size = new System.Drawing.Size(43, 24);
		this.txtLoopFSDOCPAYSr.TabIndex = 1116;
		this.txtLoopFSDOCPAYSr.Text = "1";
		this.txtLoopFSDOCPAYSr.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.ckbtnOCFromMasterToAll.AutoSize = true;
		this.ckbtnOCFromMasterToAll.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnOCFromMasterToAll.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnOCFromMasterToAll.ForeColor = System.Drawing.Color.Black;
		this.ckbtnOCFromMasterToAll.Location = new System.Drawing.Point(354, 87);
		this.ckbtnOCFromMasterToAll.Name = "ckbtnOCFromMasterToAll";
		this.ckbtnOCFromMasterToAll.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnOCFromMasterToAll.Size = new System.Drawing.Size(53, 17);
		this.ckbtnOCFromMasterToAll.TabIndex = 1115;
		this.ckbtnOCFromMasterToAll.Text = "Auto";
		this.ckbtnOCFromMasterToAll.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnOCFromMasterToAll.UseVisualStyleBackColor = false;
		this.btnOCFromMasterToAll.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCFromMasterToAll.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnOCFromMasterToAll.Location = new System.Drawing.Point(234, 84);
		this.btnOCFromMasterToAll.Name = "btnOCFromMasterToAll";
		this.btnOCFromMasterToAll.Size = new System.Drawing.Size(173, 79);
		this.btnOCFromMasterToAll.TabIndex = 1114;
		this.btnOCFromMasterToAll.Text = "من الاساسى للكل";
		this.btnOCFromMasterToAll.UseVisualStyleBackColor = false;
		this.btnOCGetBalPAy.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCGetBalPAy.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnOCGetBalPAy.Location = new System.Drawing.Point(234, 172);
		this.btnOCGetBalPAy.Name = "btnOCGetBalPAy";
		this.btnOCGetBalPAy.Size = new System.Drawing.Size(173, 72);
		this.btnOCGetBalPAy.TabIndex = 1107;
		this.btnOCGetBalPAy.Text = "استعلام عن رصيدالكاش";
		this.btnOCGetBalPAy.UseVisualStyleBackColor = false;
		this.txtOCValueMT5.BackColor = System.Drawing.Color.White;
		this.txtOCValueMT5.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCValueMT5.ForeColor = System.Drawing.Color.Black;
		this.txtOCValueMT5.Location = new System.Drawing.Point(14, 219);
		this.txtOCValueMT5.Name = "txtOCValueMT5";
		this.txtOCValueMT5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCValueMT5.Size = new System.Drawing.Size(120, 36);
		this.txtOCValueMT5.TabIndex = 1112;
		this.txtOCValueMT5.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label100.AutoSize = true;
		this.Label100.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label100.ForeColor = System.Drawing.Color.Black;
		this.Label100.Location = new System.Drawing.Point(155, 227);
		this.Label100.Name = "Label100";
		this.Label100.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label100.Size = new System.Drawing.Size(61, 17);
		this.Label100.TabIndex = 1113;
		this.Label100.Text = "تحويل 5";
		this.txtOCValueMT4.BackColor = System.Drawing.Color.White;
		this.txtOCValueMT4.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCValueMT4.ForeColor = System.Drawing.Color.Black;
		this.txtOCValueMT4.Location = new System.Drawing.Point(14, 179);
		this.txtOCValueMT4.Name = "txtOCValueMT4";
		this.txtOCValueMT4.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCValueMT4.Size = new System.Drawing.Size(120, 36);
		this.txtOCValueMT4.TabIndex = 1110;
		this.txtOCValueMT4.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label99.AutoSize = true;
		this.Label99.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label99.ForeColor = System.Drawing.Color.Black;
		this.Label99.Location = new System.Drawing.Point(155, 187);
		this.Label99.Name = "Label99";
		this.Label99.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label99.Size = new System.Drawing.Size(61, 17);
		this.Label99.TabIndex = 1111;
		this.Label99.Text = "تحويل 4";
		this.txtOCValueMT3.BackColor = System.Drawing.Color.White;
		this.txtOCValueMT3.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCValueMT3.ForeColor = System.Drawing.Color.Black;
		this.txtOCValueMT3.Location = new System.Drawing.Point(14, 140);
		this.txtOCValueMT3.Name = "txtOCValueMT3";
		this.txtOCValueMT3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCValueMT3.Size = new System.Drawing.Size(120, 36);
		this.txtOCValueMT3.TabIndex = 1108;
		this.txtOCValueMT3.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label98.AutoSize = true;
		this.Label98.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label98.ForeColor = System.Drawing.Color.Black;
		this.Label98.Location = new System.Drawing.Point(155, 148);
		this.Label98.Name = "Label98";
		this.Label98.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label98.Size = new System.Drawing.Size(61, 17);
		this.Label98.TabIndex = 1109;
		this.Label98.Text = "تحويل 3";
		this.txtOCValueMT2.BackColor = System.Drawing.Color.White;
		this.txtOCValueMT2.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCValueMT2.ForeColor = System.Drawing.Color.Black;
		this.txtOCValueMT2.Location = new System.Drawing.Point(14, 101);
		this.txtOCValueMT2.Name = "txtOCValueMT2";
		this.txtOCValueMT2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCValueMT2.Size = new System.Drawing.Size(120, 36);
		this.txtOCValueMT2.TabIndex = 1106;
		this.txtOCValueMT2.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label97.AutoSize = true;
		this.Label97.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label97.ForeColor = System.Drawing.Color.Black;
		this.Label97.Location = new System.Drawing.Point(155, 109);
		this.Label97.Name = "Label97";
		this.Label97.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label97.Size = new System.Drawing.Size(61, 17);
		this.Label97.TabIndex = 1107;
		this.Label97.Text = "تحويل 2";
		this.txtOCValueMT1.BackColor = System.Drawing.Color.White;
		this.txtOCValueMT1.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCValueMT1.ForeColor = System.Drawing.Color.Black;
		this.txtOCValueMT1.Location = new System.Drawing.Point(14, 62);
		this.txtOCValueMT1.Name = "txtOCValueMT1";
		this.txtOCValueMT1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCValueMT1.Size = new System.Drawing.Size(120, 36);
		this.txtOCValueMT1.TabIndex = 1104;
		this.txtOCValueMT1.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label96.AutoSize = true;
		this.Label96.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label96.ForeColor = System.Drawing.Color.Black;
		this.Label96.Location = new System.Drawing.Point(155, 70);
		this.Label96.Name = "Label96";
		this.Label96.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label96.Size = new System.Drawing.Size(61, 17);
		this.Label96.TabIndex = 1105;
		this.Label96.Text = "تحويل 1";
		this.ckbtnOCSeriesMT.AutoSize = true;
		this.ckbtnOCSeriesMT.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnOCSeriesMT.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnOCSeriesMT.ForeColor = System.Drawing.Color.Black;
		this.ckbtnOCSeriesMT.Location = new System.Drawing.Point(166, 14);
		this.ckbtnOCSeriesMT.Name = "ckbtnOCSeriesMT";
		this.ckbtnOCSeriesMT.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnOCSeriesMT.Size = new System.Drawing.Size(53, 17);
		this.ckbtnOCSeriesMT.TabIndex = 1103;
		this.ckbtnOCSeriesMT.Text = "Auto";
		this.ckbtnOCSeriesMT.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnOCSeriesMT.UseVisualStyleBackColor = false;
		this.btnOCSeriesMT.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCSeriesMT.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnOCSeriesMT.Location = new System.Drawing.Point(14, 8);
		this.btnOCSeriesMT.Name = "btnOCSeriesMT";
		this.btnOCSeriesMT.Size = new System.Drawing.Size(205, 48);
		this.btnOCSeriesMT.TabIndex = 1102;
		this.btnOCSeriesMT.Text = "متتالى";
		this.btnOCSeriesMT.UseVisualStyleBackColor = false;
		this.ckbtnOCSeries.AutoSize = true;
		this.ckbtnOCSeries.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnOCSeries.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnOCSeries.ForeColor = System.Drawing.Color.Black;
		this.ckbtnOCSeries.Location = new System.Drawing.Point(795, 17);
		this.ckbtnOCSeries.Name = "ckbtnOCSeries";
		this.ckbtnOCSeries.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnOCSeries.Size = new System.Drawing.Size(53, 17);
		this.ckbtnOCSeries.TabIndex = 1076;
		this.ckbtnOCSeries.Text = "Auto";
		this.ckbtnOCSeries.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnOCSeries.UseVisualStyleBackColor = false;
		this.btnOCSeries.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCSeries.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnOCSeries.Location = new System.Drawing.Point(548, 10);
		this.btnOCSeries.Name = "btnOCSeries";
		this.btnOCSeries.Size = new System.Drawing.Size(303, 73);
		this.btnOCSeries.TabIndex = 1061;
		this.btnOCSeries.Text = "متتالى";
		this.btnOCSeries.UseVisualStyleBackColor = false;
		this.txtOCValue.BackColor = System.Drawing.Color.White;
		this.txtOCValue.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCValue.ForeColor = System.Drawing.Color.Black;
		this.txtOCValue.Location = new System.Drawing.Point(521, 113);
		this.txtOCValue.Name = "txtOCValue";
		this.txtOCValue.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCValue.Size = new System.Drawing.Size(99, 36);
		this.txtOCValue.TabIndex = 1050;
		this.txtOCValue.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label76.AutoSize = true;
		this.Label76.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label76.ForeColor = System.Drawing.Color.Black;
		this.Label76.Location = new System.Drawing.Point(770, 141);
		this.Label76.Name = "Label76";
		this.Label76.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label76.Size = new System.Drawing.Size(72, 17);
		this.Label76.TabIndex = 1051;
		this.Label76.Text = "الاساسى";
		this.Label94.AutoSize = true;
		this.Label94.Font = new System.Drawing.Font("Tahoma", 15.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.Label94.ForeColor = System.Drawing.Color.Black;
		this.Label94.Location = new System.Drawing.Point(636, 136);
		this.Label94.Name = "Label94";
		this.Label94.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label94.Size = new System.Drawing.Size(29, 25);
		this.Label94.TabIndex = 1101;
		this.Label94.Text = "+";
		this.txtOCNextMain.BackColor = System.Drawing.Color.White;
		this.txtOCNextMain.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCNextMain.ForeColor = System.Drawing.Color.Black;
		this.txtOCNextMain.Location = new System.Drawing.Point(641, 235);
		this.txtOCNextMain.MaxLength = 11;
		this.txtOCNextMain.Name = "txtOCNextMain";
		this.txtOCNextMain.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCNextMain.Size = new System.Drawing.Size(202, 36);
		this.txtOCNextMain.TabIndex = 1053;
		this.txtOCNextMain.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label73.AutoSize = true;
		this.Label73.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label73.ForeColor = System.Drawing.Color.Black;
		this.Label73.Location = new System.Drawing.Point(532, 86);
		this.Label73.Name = "Label73";
		this.Label73.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label73.Size = new System.Drawing.Size(88, 17);
		this.Label73.TabIndex = 1056;
		this.Label73.Text = "مبلغ التحويل";
		this.Label93.AutoSize = true;
		this.Label93.Font = new System.Drawing.Font("Tahoma", 15.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.Label93.ForeColor = System.Drawing.Color.Black;
		this.Label93.Location = new System.Drawing.Point(639, 105);
		this.Label93.Name = "Label93";
		this.Label93.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label93.Size = new System.Drawing.Size(21, 25);
		this.Label93.TabIndex = 1100;
		this.Label93.Text = "-";
		this.Label72.AutoSize = true;
		this.Label72.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.Label72.ForeColor = System.Drawing.Color.Black;
		this.Label72.Location = new System.Drawing.Point(748, 212);
		this.Label72.Name = "Label72";
		this.Label72.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label72.Size = new System.Drawing.Size(94, 13);
		this.Label72.TabIndex = 1057;
		this.Label72.Text = "الاساسى التالى";
		this.btnOCExchange.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCExchange.Font = new System.Drawing.Font("Tahoma", 7f, System.Drawing.FontStyle.Bold);
		this.btnOCExchange.Location = new System.Drawing.Point(640, 207);
		this.btnOCExchange.Name = "btnOCExchange";
		this.btnOCExchange.Size = new System.Drawing.Size(42, 23);
		this.btnOCExchange.TabIndex = 1062;
		this.btnOCExchange.Text = "||";
		this.btnOCExchange.UseVisualStyleBackColor = false;
		this.txtOCAdd.BackColor = System.Drawing.Color.White;
		this.txtOCAdd.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtOCAdd.ForeColor = System.Drawing.Color.Black;
		this.txtOCAdd.Location = new System.Drawing.Point(670, 138);
		this.txtOCAdd.MaxLength = 100;
		this.txtOCAdd.Name = "txtOCAdd";
		this.txtOCAdd.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCAdd.Size = new System.Drawing.Size(69, 24);
		this.txtOCAdd.TabIndex = 1099;
		this.txtOCAdd.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtOCSub.BackColor = System.Drawing.Color.White;
		this.txtOCSub.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtOCSub.ForeColor = System.Drawing.Color.Black;
		this.txtOCSub.Location = new System.Drawing.Point(670, 107);
		this.txtOCSub.MaxLength = 100;
		this.txtOCSub.Name = "txtOCSub";
		this.txtOCSub.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCSub.Size = new System.Drawing.Size(69, 24);
		this.txtOCSub.TabIndex = 1069;
		this.txtOCSub.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.ckOCSub.AutoSize = true;
		this.ckOCSub.BackColor = System.Drawing.Color.FromArgb(255, 128, 0);
		this.ckOCSub.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckOCSub.Location = new System.Drawing.Point(758, 104);
		this.ckOCSub.Name = "ckOCSub";
		this.ckOCSub.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckOCSub.Size = new System.Drawing.Size(78, 17);
		this.ckOCSub.TabIndex = 1070;
		this.ckOCSub.Text = "خصم مبلغ";
		this.ckOCSub.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckOCSub.UseVisualStyleBackColor = false;
		this.ckOCSubAuto.AutoSize = true;
		this.ckOCSubAuto.BackColor = System.Drawing.Color.FromArgb(255, 128, 0);
		this.ckOCSubAuto.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckOCSubAuto.Location = new System.Drawing.Point(745, 121);
		this.ckOCSubAuto.Name = "ckOCSubAuto";
		this.ckOCSubAuto.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckOCSubAuto.Size = new System.Drawing.Size(91, 17);
		this.ckOCSubAuto.TabIndex = 1077;
		this.ckOCSubAuto.Text = "تخفيض ذكى";
		this.ckOCSubAuto.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckOCSubAuto.UseVisualStyleBackColor = false;
		this.btnOCfromMtoN.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCfromMtoN.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnOCfromMtoN.Location = new System.Drawing.Point(499, 159);
		this.btnOCfromMtoN.Name = "btnOCfromMtoN";
		this.btnOCfromMtoN.Size = new System.Drawing.Size(135, 116);
		this.btnOCfromMtoN.TabIndex = 1059;
		this.btnOCfromMtoN.Text = "من الاساسى للاساسى التالى";
		this.btnOCfromMtoN.UseVisualStyleBackColor = false;
		this.tabOCMaster.BackColor = System.Drawing.Color.FromArgb(255, 128, 0);
		this.tabOCMaster.Controls.Add(this.ckVerifyNumber);
		this.tabOCMaster.Controls.Add(this.ckbtnOCMAuto);
		this.tabOCMaster.Controls.Add(this.btnOCMAuto);
		this.tabOCMaster.Controls.Add(this.txtOCtopupDelayM2);
		this.tabOCMaster.Controls.Add(this.lblOCMMain);
		this.tabOCMaster.Controls.Add(this.btnAddNumbersToOC);
		this.tabOCMaster.Controls.Add(this.txtOCtopupDelayM);
		this.tabOCMaster.Controls.Add(this.btnOCTopUpMulti);
		this.tabOCMaster.Controls.Add(this.txtTopUpOrangeValue);
		this.tabOCMaster.Controls.Add(this.txtOCInput);
		this.tabOCMaster.Controls.Add(this.btnOCMSerieAcceptInput);
		this.tabOCMaster.Controls.Add(this.btnOCMSeriesInput);
		this.tabOCMaster.Controls.Add(this.btnTayerCharge);
		this.tabOCMaster.Controls.Add(this.lblOCDone);
		this.tabOCMaster.Controls.Add(this.btnClearOC);
		this.tabOCMaster.Controls.Add(this.btnDelOnePre);
		this.tabOCMaster.Controls.Add(this.lblCountPre);
		this.tabOCMaster.Controls.Add(this.txtOCNumber);
		this.tabOCMaster.Controls.Add(this.lstOCNumbers);
		this.tabOCMaster.Controls.Add(this.ckbtnOCMSerieAccept);
		this.tabOCMaster.Controls.Add(this.btnOCMSerieAccept);
		this.tabOCMaster.Controls.Add(this.Label101);
		this.tabOCMaster.Controls.Add(this.txtOCMCount);
		this.tabOCMaster.Controls.Add(this.btnOCGetBal2);
		this.tabOCMaster.Controls.Add(this.ckbtnOCMSeries);
		this.tabOCMaster.Controls.Add(this.btnOCMSeries);
		this.tabOCMaster.Controls.Add(this.Label85);
		this.tabOCMaster.Controls.Add(this.Label87);
		this.tabOCMaster.Controls.Add(this.txtOCMValue);
		this.tabOCMaster.Controls.Add(this.btnOCMGetBal);
		this.tabOCMaster.Location = new System.Drawing.Point(4, 22);
		this.tabOCMaster.Name = "tabOCMaster";
		this.tabOCMaster.Padding = new System.Windows.Forms.Padding(3);
		this.tabOCMaster.Size = new System.Drawing.Size(934, 295);
		this.tabOCMaster.TabIndex = 21;
		this.tabOCMaster.Text = "OC Master Tayer";
		this.ckVerifyNumber.AutoSize = true;
		this.ckVerifyNumber.Checked = true;
		this.ckVerifyNumber.CheckState = System.Windows.Forms.CheckState.Checked;
		this.ckVerifyNumber.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckVerifyNumber.Location = new System.Drawing.Point(121, 40);
		this.ckVerifyNumber.Name = "ckVerifyNumber";
		this.ckVerifyNumber.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckVerifyNumber.Size = new System.Drawing.Size(59, 17);
		this.ckVerifyNumber.TabIndex = 1135;
		this.ckVerifyNumber.Text = "Verify";
		this.ckVerifyNumber.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckVerifyNumber.UseVisualStyleBackColor = true;
		this.ckbtnOCMAuto.AutoSize = true;
		this.ckbtnOCMAuto.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnOCMAuto.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnOCMAuto.ForeColor = System.Drawing.Color.Black;
		this.ckbtnOCMAuto.Location = new System.Drawing.Point(565, 17);
		this.ckbtnOCMAuto.Name = "ckbtnOCMAuto";
		this.ckbtnOCMAuto.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnOCMAuto.Size = new System.Drawing.Size(53, 17);
		this.ckbtnOCMAuto.TabIndex = 1134;
		this.ckbtnOCMAuto.Text = "Auto";
		this.ckbtnOCMAuto.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnOCMAuto.UseVisualStyleBackColor = false;
		this.btnOCMAuto.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCMAuto.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnOCMAuto.Location = new System.Drawing.Point(430, 12);
		this.btnOCMAuto.Name = "btnOCMAuto";
		this.btnOCMAuto.Size = new System.Drawing.Size(195, 71);
		this.btnOCMAuto.TabIndex = 1133;
		this.btnOCMAuto.Text = "Auto Input";
		this.btnOCMAuto.UseVisualStyleBackColor = false;
		this.txtOCtopupDelayM2.BackColor = System.Drawing.Color.Blue;
		this.txtOCtopupDelayM2.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtOCtopupDelayM2.ForeColor = System.Drawing.Color.White;
		this.txtOCtopupDelayM2.Location = new System.Drawing.Point(872, 126);
		this.txtOCtopupDelayM2.Name = "txtOCtopupDelayM2";
		this.txtOCtopupDelayM2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCtopupDelayM2.Size = new System.Drawing.Size(50, 24);
		this.txtOCtopupDelayM2.TabIndex = 1131;
		this.txtOCtopupDelayM2.Text = "1";
		this.txtOCtopupDelayM2.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.lblOCMMain.BackColor = System.Drawing.Color.White;
		this.lblOCMMain.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.lblOCMMain.ForeColor = System.Drawing.Color.Black;
		this.lblOCMMain.Location = new System.Drawing.Point(726, 180);
		this.lblOCMMain.MaxLength = 11;
		this.lblOCMMain.Name = "lblOCMMain";
		this.lblOCMMain.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCMMain.Size = new System.Drawing.Size(196, 36);
		this.lblOCMMain.TabIndex = 1130;
		this.lblOCMMain.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnAddNumbersToOC.Location = new System.Drawing.Point(110, 10);
		this.btnAddNumbersToOC.Name = "btnAddNumbersToOC";
		this.btnAddNumbersToOC.Size = new System.Drawing.Size(72, 24);
		this.btnAddNumbersToOC.TabIndex = 1129;
		this.btnAddNumbersToOC.Text = "Add";
		this.btnAddNumbersToOC.UseVisualStyleBackColor = true;
		this.txtOCtopupDelayM.BackColor = System.Drawing.Color.Blue;
		this.txtOCtopupDelayM.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtOCtopupDelayM.ForeColor = System.Drawing.Color.White;
		this.txtOCtopupDelayM.Location = new System.Drawing.Point(421, 226);
		this.txtOCtopupDelayM.Name = "txtOCtopupDelayM";
		this.txtOCtopupDelayM.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCtopupDelayM.Size = new System.Drawing.Size(50, 24);
		this.txtOCtopupDelayM.TabIndex = 1128;
		this.txtOCtopupDelayM.Text = "1";
		this.txtOCtopupDelayM.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnOCTopUpMulti.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCTopUpMulti.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnOCTopUpMulti.Location = new System.Drawing.Point(421, 226);
		this.btnOCTopUpMulti.Name = "btnOCTopUpMulti";
		this.btnOCTopUpMulti.Size = new System.Drawing.Size(177, 64);
		this.btnOCTopUpMulti.TabIndex = 1127;
		this.btnOCTopUpMulti.Text = "TopUp Cash";
		this.btnOCTopUpMulti.UseVisualStyleBackColor = false;
		this.txtTopUpOrangeValue.BackColor = System.Drawing.Color.White;
		this.txtTopUpOrangeValue.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtTopUpOrangeValue.ForeColor = System.Drawing.Color.Black;
		this.txtTopUpOrangeValue.Location = new System.Drawing.Point(425, 182);
		this.txtTopUpOrangeValue.Name = "txtTopUpOrangeValue";
		this.txtTopUpOrangeValue.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTopUpOrangeValue.Size = new System.Drawing.Size(113, 36);
		this.txtTopUpOrangeValue.TabIndex = 1126;
		this.txtTopUpOrangeValue.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtOCInput.BackColor = System.Drawing.Color.White;
		this.txtOCInput.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCInput.ForeColor = System.Drawing.Color.Black;
		this.txtOCInput.Location = new System.Drawing.Point(3, 74);
		this.txtOCInput.Name = "txtOCInput";
		this.txtOCInput.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCInput.Size = new System.Drawing.Size(102, 36);
		this.txtOCInput.TabIndex = 1125;
		this.txtOCInput.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnOCMSerieAcceptInput.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCMSerieAcceptInput.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnOCMSerieAcceptInput.Location = new System.Drawing.Point(2, 170);
		this.btnOCMSerieAcceptInput.Name = "btnOCMSerieAcceptInput";
		this.btnOCMSerieAcceptInput.Size = new System.Drawing.Size(179, 49);
		this.btnOCMSerieAcceptInput.TabIndex = 1124;
		this.btnOCMSerieAcceptInput.Text = "تأكيد السحب";
		this.btnOCMSerieAcceptInput.UseVisualStyleBackColor = false;
		this.btnOCMSeriesInput.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCMSeriesInput.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnOCMSeriesInput.Location = new System.Drawing.Point(2, 119);
		this.btnOCMSeriesInput.Name = "btnOCMSeriesInput";
		this.btnOCMSeriesInput.Size = new System.Drawing.Size(178, 47);
		this.btnOCMSeriesInput.TabIndex = 1123;
		this.btnOCMSeriesInput.Text = "سحب من الماستر";
		this.btnOCMSeriesInput.UseVisualStyleBackColor = false;
		this.btnTayerCharge.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTayerCharge.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnTayerCharge.Location = new System.Drawing.Point(425, 121);
		this.btnTayerCharge.Name = "btnTayerCharge";
		this.btnTayerCharge.Size = new System.Drawing.Size(113, 56);
		this.btnTayerCharge.TabIndex = 1122;
		this.btnTayerCharge.Text = "TopUp Hawa";
		this.btnTayerCharge.UseVisualStyleBackColor = false;
		this.lblOCDone.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lblOCDone.ForeColor = System.Drawing.Color.Black;
		this.lblOCDone.Location = new System.Drawing.Point(6, 9);
		this.lblOCDone.Name = "lblOCDone";
		this.lblOCDone.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCDone.Size = new System.Drawing.Size(77, 19);
		this.lblOCDone.TabIndex = 1121;
		this.lblOCDone.Text = "#";
		this.lblOCDone.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.btnClearOC.Location = new System.Drawing.Point(110, 63);
		this.btnClearOC.Name = "btnClearOC";
		this.btnClearOC.Size = new System.Drawing.Size(72, 24);
		this.btnClearOC.TabIndex = 1120;
		this.btnClearOC.Text = "مسح الكل";
		this.btnClearOC.UseVisualStyleBackColor = true;
		this.btnDelOnePre.Location = new System.Drawing.Point(110, 89);
		this.btnDelOnePre.Name = "btnDelOnePre";
		this.btnDelOnePre.Size = new System.Drawing.Size(72, 24);
		this.btnDelOnePre.TabIndex = 1119;
		this.btnDelOnePre.Text = "حذف محدد";
		this.btnDelOnePre.UseVisualStyleBackColor = true;
		this.lblCountPre.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lblCountPre.ForeColor = System.Drawing.Color.Black;
		this.lblCountPre.Location = new System.Drawing.Point(6, 40);
		this.lblCountPre.Name = "lblCountPre";
		this.lblCountPre.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblCountPre.Size = new System.Drawing.Size(77, 19);
		this.lblCountPre.TabIndex = 1118;
		this.lblCountPre.Text = "#";
		this.lblCountPre.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.txtOCNumber.BackColor = System.Drawing.Color.White;
		this.txtOCNumber.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCNumber.ForeColor = System.Drawing.Color.Black;
		this.txtOCNumber.Location = new System.Drawing.Point(188, 17);
		this.txtOCNumber.Name = "txtOCNumber";
		this.txtOCNumber.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCNumber.Size = new System.Drawing.Size(231, 36);
		this.txtOCNumber.TabIndex = 1117;
		this.txtOCNumber.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.lstOCNumbers.Font = new System.Drawing.Font("Tahoma", 14f, System.Drawing.FontStyle.Bold);
		this.lstOCNumbers.FormattingEnabled = true;
		this.lstOCNumbers.ItemHeight = 23;
		this.lstOCNumbers.Location = new System.Drawing.Point(188, 56);
		this.lstOCNumbers.Name = "lstOCNumbers";
		this.lstOCNumbers.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lstOCNumbers.Size = new System.Drawing.Size(231, 188);
		this.lstOCNumbers.TabIndex = 1116;
		this.ckbtnOCMSerieAccept.AutoSize = true;
		this.ckbtnOCMSerieAccept.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnOCMSerieAccept.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnOCMSerieAccept.ForeColor = System.Drawing.Color.Black;
		this.ckbtnOCMSerieAccept.Location = new System.Drawing.Point(730, 12);
		this.ckbtnOCMSerieAccept.Name = "ckbtnOCMSerieAccept";
		this.ckbtnOCMSerieAccept.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnOCMSerieAccept.Size = new System.Drawing.Size(53, 17);
		this.ckbtnOCMSerieAccept.TabIndex = 1115;
		this.ckbtnOCMSerieAccept.Text = "Auto";
		this.ckbtnOCMSerieAccept.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnOCMSerieAccept.UseVisualStyleBackColor = false;
		this.btnOCMSerieAccept.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCMSerieAccept.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnOCMSerieAccept.Location = new System.Drawing.Point(637, 7);
		this.btnOCMSerieAccept.Name = "btnOCMSerieAccept";
		this.btnOCMSerieAccept.Size = new System.Drawing.Size(152, 71);
		this.btnOCMSerieAccept.TabIndex = 1114;
		this.btnOCMSerieAccept.Text = "تأكيد الايداع";
		this.btnOCMSerieAccept.UseVisualStyleBackColor = false;
		this.Label101.AutoSize = true;
		this.Label101.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label101.ForeColor = System.Drawing.Color.Black;
		this.Label101.Location = new System.Drawing.Point(793, 141);
		this.Label101.Name = "Label101";
		this.Label101.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label101.Size = new System.Drawing.Size(41, 17);
		this.Label101.TabIndex = 1113;
		this.Label101.Text = "العدد";
		this.txtOCMCount.BackColor = System.Drawing.Color.White;
		this.txtOCMCount.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCMCount.ForeColor = System.Drawing.Color.Black;
		this.txtOCMCount.Location = new System.Drawing.Point(726, 130);
		this.txtOCMCount.Name = "txtOCMCount";
		this.txtOCMCount.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCMCount.Size = new System.Drawing.Size(54, 36);
		this.txtOCMCount.TabIndex = 1112;
		this.txtOCMCount.Text = "1";
		this.txtOCMCount.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnOCGetBal2.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCGetBal2.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnOCGetBal2.Location = new System.Drawing.Point(608, 222);
		this.btnOCGetBal2.Name = "btnOCGetBal2";
		this.btnOCGetBal2.Size = new System.Drawing.Size(166, 66);
		this.btnOCGetBal2.TabIndex = 1107;
		this.btnOCGetBal2.Text = "استعلام عن رصيدالكاش";
		this.btnOCGetBal2.UseVisualStyleBackColor = false;
		this.ckbtnOCMSeries.AutoSize = true;
		this.ckbtnOCMSeries.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnOCMSeries.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnOCMSeries.ForeColor = System.Drawing.Color.Black;
		this.ckbtnOCMSeries.Location = new System.Drawing.Point(872, 11);
		this.ckbtnOCMSeries.Name = "ckbtnOCMSeries";
		this.ckbtnOCMSeries.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnOCMSeries.Size = new System.Drawing.Size(53, 17);
		this.ckbtnOCMSeries.TabIndex = 1102;
		this.ckbtnOCMSeries.Text = "Auto";
		this.ckbtnOCMSeries.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnOCMSeries.UseVisualStyleBackColor = false;
		this.btnOCMSeries.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCMSeries.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnOCMSeries.Location = new System.Drawing.Point(795, 6);
		this.btnOCMSeries.Name = "btnOCMSeries";
		this.btnOCMSeries.Size = new System.Drawing.Size(133, 72);
		this.btnOCMSeries.TabIndex = 1101;
		this.btnOCMSeries.Text = "ايداع";
		this.btnOCMSeries.UseVisualStyleBackColor = false;
		this.Label85.AutoSize = true;
		this.Label85.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label85.ForeColor = System.Drawing.Color.Black;
		this.Label85.Location = new System.Drawing.Point(833, 97);
		this.Label85.Name = "Label85";
		this.Label85.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label85.Size = new System.Drawing.Size(88, 17);
		this.Label85.TabIndex = 1100;
		this.Label85.Text = "مبلغ التحويل";
		this.Label87.AutoSize = true;
		this.Label87.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label87.ForeColor = System.Drawing.Color.Black;
		this.Label87.Location = new System.Drawing.Point(866, 156);
		this.Label87.Name = "Label87";
		this.Label87.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label87.Size = new System.Drawing.Size(58, 17);
		this.Label87.TabIndex = 1098;
		this.Label87.Text = "الماستر";
		this.txtOCMValue.BackColor = System.Drawing.Color.White;
		this.txtOCMValue.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCMValue.ForeColor = System.Drawing.Color.Black;
		this.txtOCMValue.Location = new System.Drawing.Point(720, 89);
		this.txtOCMValue.Name = "txtOCMValue";
		this.txtOCMValue.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCMValue.Size = new System.Drawing.Size(102, 36);
		this.txtOCMValue.TabIndex = 1097;
		this.txtOCMValue.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnOCMGetBal.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCMGetBal.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnOCMGetBal.Location = new System.Drawing.Point(780, 222);
		this.btnOCMGetBal.Name = "btnOCMGetBal";
		this.btnOCMGetBal.Size = new System.Drawing.Size(148, 66);
		this.btnOCMGetBal.TabIndex = 1095;
		this.btnOCMGetBal.Text = "استعلام عن رصيدالماستر";
		this.btnOCMGetBal.UseVisualStyleBackColor = false;
		this.tabOCGifts.BackColor = System.Drawing.Color.FromArgb(255, 128, 0);
		this.tabOCGifts.Controls.Add(this.txtDoOfferWithdraw2);
		this.tabOCGifts.Controls.Add(this.Label108);
		this.tabOCGifts.Controls.Add(this.txtDoOfferWithdraw1);
		this.tabOCGifts.Controls.Add(this.Label107);
		this.tabOCGifts.Controls.Add(this.ckbtnDoOfferWithdraw);
		this.tabOCGifts.Controls.Add(this.btnDoOfferWithdraw);
		this.tabOCGifts.Controls.Add(this.txtDelayToGet58);
		this.tabOCGifts.Controls.Add(this.ckbtnOCFreeTransfer);
		this.tabOCGifts.Controls.Add(this.btnOCFreeTransfer);
		this.tabOCGifts.Controls.Add(this.ckbtnOCGetBalPAy2);
		this.tabOCGifts.Controls.Add(this.ckbtnGetNormalBal);
		this.tabOCGifts.Controls.Add(this.btnGetNormalBal);
		this.tabOCGifts.Controls.Add(this.ckbtnTranstop);
		this.tabOCGifts.Controls.Add(this.btnTranstop);
		this.tabOCGifts.Controls.Add(this.ckbtnTrans1000);
		this.tabOCGifts.Controls.Add(this.btnTrans1000);
		this.tabOCGifts.Controls.Add(this.ckbtnTrans100);
		this.tabOCGifts.Controls.Add(this.btnTrans100);
		this.tabOCGifts.Controls.Add(this.btnOCGetBalPAy2);
		this.tabOCGifts.Controls.Add(this.ckbtnOCApply58);
		this.tabOCGifts.Controls.Add(this.ckbtnOCGiftsCheckConf);
		this.tabOCGifts.Controls.Add(this.btnOCGiftsCheckConf);
		this.tabOCGifts.Controls.Add(this.txtLoopSSOCG);
		this.tabOCGifts.Controls.Add(this.txtLoopFSOCG);
		this.tabOCGifts.Controls.Add(this.btnOCApply58);
		this.tabOCGifts.Controls.Add(this.ckbtnOCGiftsCheck);
		this.tabOCGifts.Controls.Add(this.btnOCGiftsCheck);
		this.tabOCGifts.Location = new System.Drawing.Point(4, 22);
		this.tabOCGifts.Name = "tabOCGifts";
		this.tabOCGifts.Padding = new System.Windows.Forms.Padding(3);
		this.tabOCGifts.Size = new System.Drawing.Size(934, 295);
		this.tabOCGifts.TabIndex = 26;
		this.tabOCGifts.Text = "OC Offers";
		this.txtDoOfferWithdraw2.BackColor = System.Drawing.Color.White;
		this.txtDoOfferWithdraw2.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtDoOfferWithdraw2.ForeColor = System.Drawing.Color.Black;
		this.txtDoOfferWithdraw2.Location = new System.Drawing.Point(325, 189);
		this.txtDoOfferWithdraw2.MaxLength = 11;
		this.txtDoOfferWithdraw2.Name = "txtDoOfferWithdraw2";
		this.txtDoOfferWithdraw2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtDoOfferWithdraw2.Size = new System.Drawing.Size(196, 36);
		this.txtDoOfferWithdraw2.TabIndex = 1138;
		this.txtDoOfferWithdraw2.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label108.AutoSize = true;
		this.Label108.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label108.ForeColor = System.Drawing.Color.Black;
		this.Label108.Location = new System.Drawing.Point(447, 167);
		this.Label108.Name = "Label108";
		this.Label108.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label108.Size = new System.Drawing.Size(74, 17);
		this.Label108.TabIndex = 1137;
		this.Label108.Text = "اسنقبال 1";
		this.txtDoOfferWithdraw1.BackColor = System.Drawing.Color.White;
		this.txtDoOfferWithdraw1.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtDoOfferWithdraw1.ForeColor = System.Drawing.Color.Black;
		this.txtDoOfferWithdraw1.Location = new System.Drawing.Point(325, 122);
		this.txtDoOfferWithdraw1.MaxLength = 11;
		this.txtDoOfferWithdraw1.Name = "txtDoOfferWithdraw1";
		this.txtDoOfferWithdraw1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtDoOfferWithdraw1.Size = new System.Drawing.Size(196, 36);
		this.txtDoOfferWithdraw1.TabIndex = 1136;
		this.txtDoOfferWithdraw1.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label107.AutoSize = true;
		this.Label107.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label107.ForeColor = System.Drawing.Color.Black;
		this.Label107.Location = new System.Drawing.Point(447, 100);
		this.Label107.Name = "Label107";
		this.Label107.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label107.Size = new System.Drawing.Size(74, 17);
		this.Label107.TabIndex = 1135;
		this.Label107.Text = "اسنقبال 1";
		this.ckbtnDoOfferWithdraw.AutoSize = true;
		this.ckbtnDoOfferWithdraw.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnDoOfferWithdraw.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnDoOfferWithdraw.ForeColor = System.Drawing.Color.Black;
		this.ckbtnDoOfferWithdraw.Location = new System.Drawing.Point(468, 231);
		this.ckbtnDoOfferWithdraw.Name = "ckbtnDoOfferWithdraw";
		this.ckbtnDoOfferWithdraw.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnDoOfferWithdraw.Size = new System.Drawing.Size(53, 17);
		this.ckbtnDoOfferWithdraw.TabIndex = 1134;
		this.ckbtnDoOfferWithdraw.Text = "Auto";
		this.ckbtnDoOfferWithdraw.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnDoOfferWithdraw.UseVisualStyleBackColor = false;
		this.btnDoOfferWithdraw.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnDoOfferWithdraw.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnDoOfferWithdraw.ForeColor = System.Drawing.Color.Black;
		this.btnDoOfferWithdraw.Location = new System.Drawing.Point(325, 230);
		this.btnDoOfferWithdraw.Name = "btnDoOfferWithdraw";
		this.btnDoOfferWithdraw.Size = new System.Drawing.Size(196, 58);
		this.btnDoOfferWithdraw.TabIndex = 1133;
		this.btnDoOfferWithdraw.Text = "after withdraw";
		this.btnDoOfferWithdraw.UseVisualStyleBackColor = false;
		this.txtDelayToGet58.BackColor = System.Drawing.Color.Blue;
		this.txtDelayToGet58.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtDelayToGet58.ForeColor = System.Drawing.Color.White;
		this.txtDelayToGet58.Location = new System.Drawing.Point(212, 189);
		this.txtDelayToGet58.Name = "txtDelayToGet58";
		this.txtDelayToGet58.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtDelayToGet58.Size = new System.Drawing.Size(64, 24);
		this.txtDelayToGet58.TabIndex = 1132;
		this.txtDelayToGet58.Text = "60";
		this.txtDelayToGet58.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.ckbtnOCFreeTransfer.AutoSize = true;
		this.ckbtnOCFreeTransfer.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnOCFreeTransfer.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnOCFreeTransfer.ForeColor = System.Drawing.Color.Black;
		this.ckbtnOCFreeTransfer.Location = new System.Drawing.Point(594, 28);
		this.ckbtnOCFreeTransfer.Name = "ckbtnOCFreeTransfer";
		this.ckbtnOCFreeTransfer.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnOCFreeTransfer.Size = new System.Drawing.Size(53, 17);
		this.ckbtnOCFreeTransfer.TabIndex = 1120;
		this.ckbtnOCFreeTransfer.Text = "Auto";
		this.ckbtnOCFreeTransfer.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnOCFreeTransfer.UseVisualStyleBackColor = false;
		this.btnOCFreeTransfer.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCFreeTransfer.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnOCFreeTransfer.ForeColor = System.Drawing.Color.Black;
		this.btnOCFreeTransfer.Location = new System.Drawing.Point(325, 14);
		this.btnOCFreeTransfer.Name = "btnOCFreeTransfer";
		this.btnOCFreeTransfer.Size = new System.Drawing.Size(333, 67);
		this.btnOCFreeTransfer.TabIndex = 1119;
		this.btnOCFreeTransfer.Text = "عرض الصيف للتحويل مجانى";
		this.btnOCFreeTransfer.UseVisualStyleBackColor = false;
		this.ckbtnOCGetBalPAy2.AutoSize = true;
		this.ckbtnOCGetBalPAy2.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnOCGetBalPAy2.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnOCGetBalPAy2.ForeColor = System.Drawing.Color.Black;
		this.ckbtnOCGetBalPAy2.Location = new System.Drawing.Point(847, 222);
		this.ckbtnOCGetBalPAy2.Name = "ckbtnOCGetBalPAy2";
		this.ckbtnOCGetBalPAy2.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnOCGetBalPAy2.Size = new System.Drawing.Size(53, 17);
		this.ckbtnOCGetBalPAy2.TabIndex = 1118;
		this.ckbtnOCGetBalPAy2.Text = "Auto";
		this.ckbtnOCGetBalPAy2.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnOCGetBalPAy2.UseVisualStyleBackColor = false;
		this.ckbtnGetNormalBal.AutoSize = true;
		this.ckbtnGetNormalBal.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnGetNormalBal.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnGetNormalBal.ForeColor = System.Drawing.Color.Black;
		this.ckbtnGetNormalBal.Location = new System.Drawing.Point(847, 148);
		this.ckbtnGetNormalBal.Name = "ckbtnGetNormalBal";
		this.ckbtnGetNormalBal.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnGetNormalBal.Size = new System.Drawing.Size(53, 17);
		this.ckbtnGetNormalBal.TabIndex = 1116;
		this.ckbtnGetNormalBal.Text = "Auto";
		this.ckbtnGetNormalBal.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnGetNormalBal.UseVisualStyleBackColor = false;
		this.btnGetNormalBal.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnGetNormalBal.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnGetNormalBal.ForeColor = System.Drawing.Color.Black;
		this.btnGetNormalBal.Location = new System.Drawing.Point(663, 145);
		this.btnGetNormalBal.Name = "btnGetNormalBal";
		this.btnGetNormalBal.Size = new System.Drawing.Size(245, 67);
		this.btnGetNormalBal.TabIndex = 1115;
		this.btnGetNormalBal.Text = "رصيد عادى";
		this.btnGetNormalBal.UseVisualStyleBackColor = false;
		this.ckbtnTranstop.AutoSize = true;
		this.ckbtnTranstop.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnTranstop.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnTranstop.ForeColor = System.Drawing.Color.Black;
		this.ckbtnTranstop.Location = new System.Drawing.Point(148, 238);
		this.ckbtnTranstop.Name = "ckbtnTranstop";
		this.ckbtnTranstop.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnTranstop.Size = new System.Drawing.Size(53, 17);
		this.ckbtnTranstop.TabIndex = 1114;
		this.ckbtnTranstop.Text = "Auto";
		this.ckbtnTranstop.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnTranstop.UseVisualStyleBackColor = false;
		this.btnTranstop.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTranstop.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnTranstop.ForeColor = System.Drawing.Color.Black;
		this.btnTranstop.Location = new System.Drawing.Point(17, 230);
		this.btnTranstop.Name = "btnTranstop";
		this.btnTranstop.Size = new System.Drawing.Size(187, 53);
		this.btnTranstop.TabIndex = 1113;
		this.btnTranstop.Text = "top up all";
		this.btnTranstop.UseVisualStyleBackColor = false;
		this.ckbtnTrans1000.AutoSize = true;
		this.ckbtnTrans1000.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnTrans1000.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnTrans1000.ForeColor = System.Drawing.Color.Black;
		this.ckbtnTrans1000.Location = new System.Drawing.Point(148, 177);
		this.ckbtnTrans1000.Name = "ckbtnTrans1000";
		this.ckbtnTrans1000.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnTrans1000.Size = new System.Drawing.Size(53, 17);
		this.ckbtnTrans1000.TabIndex = 1112;
		this.ckbtnTrans1000.Text = "Auto";
		this.ckbtnTrans1000.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnTrans1000.UseVisualStyleBackColor = false;
		this.btnTrans1000.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTrans1000.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnTrans1000.ForeColor = System.Drawing.Color.Black;
		this.btnTrans1000.Location = new System.Drawing.Point(17, 171);
		this.btnTrans1000.Name = "btnTrans1000";
		this.btnTrans1000.Size = new System.Drawing.Size(187, 58);
		this.btnTrans1000.TabIndex = 1111;
		this.btnTrans1000.Text = "Wait Then Get";
		this.btnTrans1000.UseVisualStyleBackColor = false;
		this.ckbtnTrans100.AutoSize = true;
		this.ckbtnTrans100.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnTrans100.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnTrans100.ForeColor = System.Drawing.Color.Black;
		this.ckbtnTrans100.Location = new System.Drawing.Point(148, 105);
		this.ckbtnTrans100.Name = "ckbtnTrans100";
		this.ckbtnTrans100.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnTrans100.Size = new System.Drawing.Size(53, 17);
		this.ckbtnTrans100.TabIndex = 1110;
		this.ckbtnTrans100.Text = "Auto";
		this.ckbtnTrans100.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnTrans100.UseVisualStyleBackColor = false;
		this.btnTrans100.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTrans100.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnTrans100.ForeColor = System.Drawing.Color.Black;
		this.btnTrans100.Location = new System.Drawing.Point(17, 100);
		this.btnTrans100.Name = "btnTrans100";
		this.btnTrans100.Size = new System.Drawing.Size(187, 65);
		this.btnTrans100.TabIndex = 1109;
		this.btnTrans100.Text = "trans 2S";
		this.btnTrans100.UseVisualStyleBackColor = false;
		this.btnOCGetBalPAy2.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCGetBalPAy2.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnOCGetBalPAy2.Location = new System.Drawing.Point(663, 218);
		this.btnOCGetBalPAy2.Name = "btnOCGetBalPAy2";
		this.btnOCGetBalPAy2.Size = new System.Drawing.Size(245, 65);
		this.btnOCGetBalPAy2.TabIndex = 1108;
		this.btnOCGetBalPAy2.Text = "استعلام عن رصيدالكاش";
		this.btnOCGetBalPAy2.UseVisualStyleBackColor = false;
		this.ckbtnOCApply58.AutoSize = true;
		this.ckbtnOCApply58.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnOCApply58.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnOCApply58.ForeColor = System.Drawing.Color.Black;
		this.ckbtnOCApply58.Location = new System.Drawing.Point(148, 29);
		this.ckbtnOCApply58.Name = "ckbtnOCApply58";
		this.ckbtnOCApply58.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnOCApply58.Size = new System.Drawing.Size(53, 17);
		this.ckbtnOCApply58.TabIndex = 1103;
		this.ckbtnOCApply58.Text = "Auto";
		this.ckbtnOCApply58.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnOCApply58.UseVisualStyleBackColor = false;
		this.ckbtnOCGiftsCheckConf.AutoSize = true;
		this.ckbtnOCGiftsCheckConf.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnOCGiftsCheckConf.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnOCGiftsCheckConf.ForeColor = System.Drawing.Color.Black;
		this.ckbtnOCGiftsCheckConf.Location = new System.Drawing.Point(847, 91);
		this.ckbtnOCGiftsCheckConf.Name = "ckbtnOCGiftsCheckConf";
		this.ckbtnOCGiftsCheckConf.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnOCGiftsCheckConf.Size = new System.Drawing.Size(53, 17);
		this.ckbtnOCGiftsCheckConf.TabIndex = 1102;
		this.ckbtnOCGiftsCheckConf.Text = "Auto";
		this.ckbtnOCGiftsCheckConf.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnOCGiftsCheckConf.UseVisualStyleBackColor = false;
		this.btnOCGiftsCheckConf.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCGiftsCheckConf.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnOCGiftsCheckConf.ForeColor = System.Drawing.Color.Black;
		this.btnOCGiftsCheckConf.Location = new System.Drawing.Point(662, 86);
		this.btnOCGiftsCheckConf.Name = "btnOCGiftsCheckConf";
		this.btnOCGiftsCheckConf.Size = new System.Drawing.Size(246, 53);
		this.btnOCGiftsCheckConf.TabIndex = 1101;
		this.btnOCGiftsCheckConf.Text = "Confirm";
		this.btnOCGiftsCheckConf.UseVisualStyleBackColor = false;
		this.txtLoopSSOCG.BackColor = System.Drawing.Color.Black;
		this.txtLoopSSOCG.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopSSOCG.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopSSOCG.Location = new System.Drawing.Point(206, 57);
		this.txtLoopSSOCG.Name = "txtLoopSSOCG";
		this.txtLoopSSOCG.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopSSOCG.Size = new System.Drawing.Size(44, 24);
		this.txtLoopSSOCG.TabIndex = 1100;
		this.txtLoopSSOCG.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtLoopFSOCG.BackColor = System.Drawing.Color.Black;
		this.txtLoopFSOCG.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopFSOCG.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopFSOCG.Location = new System.Drawing.Point(207, 29);
		this.txtLoopFSOCG.Name = "txtLoopFSOCG";
		this.txtLoopFSOCG.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopFSOCG.Size = new System.Drawing.Size(43, 24);
		this.txtLoopFSOCG.TabIndex = 1099;
		this.txtLoopFSOCG.Text = "1";
		this.txtLoopFSOCG.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnOCApply58.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCApply58.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnOCApply58.ForeColor = System.Drawing.Color.Black;
		this.btnOCApply58.Location = new System.Drawing.Point(17, 21);
		this.btnOCApply58.Name = "btnOCApply58";
		this.btnOCApply58.Size = new System.Drawing.Size(187, 73);
		this.btnOCApply58.TabIndex = 1094;
		this.btnOCApply58.Text = "#58#";
		this.btnOCApply58.UseVisualStyleBackColor = false;
		this.ckbtnOCGiftsCheck.AutoSize = true;
		this.ckbtnOCGiftsCheck.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnOCGiftsCheck.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnOCGiftsCheck.ForeColor = System.Drawing.Color.Black;
		this.ckbtnOCGiftsCheck.Location = new System.Drawing.Point(845, 21);
		this.ckbtnOCGiftsCheck.Name = "ckbtnOCGiftsCheck";
		this.ckbtnOCGiftsCheck.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnOCGiftsCheck.Size = new System.Drawing.Size(53, 17);
		this.ckbtnOCGiftsCheck.TabIndex = 1093;
		this.ckbtnOCGiftsCheck.Text = "Auto";
		this.ckbtnOCGiftsCheck.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnOCGiftsCheck.UseVisualStyleBackColor = false;
		this.btnOCGiftsCheck.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCGiftsCheck.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnOCGiftsCheck.ForeColor = System.Drawing.Color.Black;
		this.btnOCGiftsCheck.Location = new System.Drawing.Point(662, 14);
		this.btnOCGiftsCheck.Name = "btnOCGiftsCheck";
		this.btnOCGiftsCheck.Size = new System.Drawing.Size(246, 66);
		this.btnOCGiftsCheck.TabIndex = 597;
		this.btnOCGiftsCheck.Text = "Check";
		this.btnOCGiftsCheck.UseVisualStyleBackColor = false;
		this.tabOCSetup.BackColor = System.Drawing.Color.FromArgb(255, 128, 0);
		this.tabOCSetup.Controls.Add(this.Label84);
		this.tabOCSetup.Controls.Add(this.txtEtsCashPass);
		this.tabOCSetup.Controls.Add(this.Label92);
		this.tabOCSetup.Controls.Add(this.txtOCOldPass);
		this.tabOCSetup.Controls.Add(this.Label88);
		this.tabOCSetup.Controls.Add(this.txtOTyrPass);
		this.tabOCSetup.Controls.Add(this.Label83);
		this.tabOCSetup.Controls.Add(this.txtOCPassMaster);
		this.tabOCSetup.Controls.Add(this.ckOCEditPass);
		this.tabOCSetup.Controls.Add(this.btnOCEditPass);
		this.tabOCSetup.Controls.Add(this.Label78);
		this.tabOCSetup.Controls.Add(this.txtOCNewPass);
		this.tabOCSetup.Controls.Add(this.Label77);
		this.tabOCSetup.Controls.Add(this.txtOCPass);
		this.tabOCSetup.Location = new System.Drawing.Point(4, 22);
		this.tabOCSetup.Name = "tabOCSetup";
		this.tabOCSetup.Padding = new System.Windows.Forms.Padding(3);
		this.tabOCSetup.Size = new System.Drawing.Size(934, 295);
		this.tabOCSetup.TabIndex = 22;
		this.tabOCSetup.Text = "OC Setup";
		this.Label84.AutoSize = true;
		this.Label84.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label84.ForeColor = System.Drawing.Color.Black;
		this.Label84.Location = new System.Drawing.Point(188, 184);
		this.Label84.Name = "Label84";
		this.Label84.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label84.Size = new System.Drawing.Size(163, 17);
		this.Label84.TabIndex = 1055;
		this.Label84.Text = "كلمة مرور اتصالات كاش";
		this.txtEtsCashPass.BackColor = System.Drawing.Color.White;
		this.txtEtsCashPass.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold);
		this.txtEtsCashPass.ForeColor = System.Drawing.Color.Black;
		this.txtEtsCashPass.Location = new System.Drawing.Point(191, 216);
		this.txtEtsCashPass.MaxLength = 11;
		this.txtEtsCashPass.Name = "txtEtsCashPass";
		this.txtEtsCashPass.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtEtsCashPass.Size = new System.Drawing.Size(151, 27);
		this.txtEtsCashPass.TabIndex = 1054;
		this.txtEtsCashPass.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label92.AutoSize = true;
		this.Label92.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label92.ForeColor = System.Drawing.Color.Black;
		this.Label92.Location = new System.Drawing.Point(783, 29);
		this.Label92.Name = "Label92";
		this.Label92.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label92.Size = new System.Drawing.Size(127, 17);
		this.Label92.TabIndex = 1053;
		this.Label92.Text = "كلمة السر القديمة";
		this.txtOCOldPass.BackColor = System.Drawing.Color.White;
		this.txtOCOldPass.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtOCOldPass.ForeColor = System.Drawing.Color.Black;
		this.txtOCOldPass.Location = new System.Drawing.Point(668, 23);
		this.txtOCOldPass.MaxLength = 6;
		this.txtOCOldPass.Name = "txtOCOldPass";
		this.txtOCOldPass.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCOldPass.Size = new System.Drawing.Size(109, 27);
		this.txtOCOldPass.TabIndex = 1052;
		this.Label88.AutoSize = true;
		this.Label88.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label88.ForeColor = System.Drawing.Color.Black;
		this.Label88.Location = new System.Drawing.Point(36, 188);
		this.Label88.Name = "Label88";
		this.Label88.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label88.Size = new System.Drawing.Size(104, 17);
		this.Label88.TabIndex = 1051;
		this.Label88.Text = "كلمة مرور الهوا";
		this.txtOTyrPass.BackColor = System.Drawing.Color.White;
		this.txtOTyrPass.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold);
		this.txtOTyrPass.ForeColor = System.Drawing.Color.Black;
		this.txtOTyrPass.Location = new System.Drawing.Point(24, 216);
		this.txtOTyrPass.MaxLength = 11;
		this.txtOTyrPass.Name = "txtOTyrPass";
		this.txtOTyrPass.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOTyrPass.Size = new System.Drawing.Size(139, 27);
		this.txtOTyrPass.TabIndex = 1050;
		this.txtOTyrPass.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label83.AutoSize = true;
		this.Label83.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label83.ForeColor = System.Drawing.Color.Black;
		this.Label83.Location = new System.Drawing.Point(36, 110);
		this.Label83.Name = "Label83";
		this.Label83.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label83.Size = new System.Drawing.Size(115, 17);
		this.Label83.TabIndex = 1049;
		this.Label83.Text = "كلمة مرور ماستر";
		this.txtOCPassMaster.BackColor = System.Drawing.Color.White;
		this.txtOCPassMaster.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold);
		this.txtOCPassMaster.ForeColor = System.Drawing.Color.Black;
		this.txtOCPassMaster.Location = new System.Drawing.Point(24, 138);
		this.txtOCPassMaster.MaxLength = 11;
		this.txtOCPassMaster.Name = "txtOCPassMaster";
		this.txtOCPassMaster.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCPassMaster.Size = new System.Drawing.Size(139, 27);
		this.txtOCPassMaster.TabIndex = 1048;
		this.txtOCPassMaster.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.ckOCEditPass.AutoSize = true;
		this.ckOCEditPass.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckOCEditPass.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckOCEditPass.ForeColor = System.Drawing.Color.Black;
		this.ckOCEditPass.Location = new System.Drawing.Point(866, 98);
		this.ckOCEditPass.Name = "ckOCEditPass";
		this.ckOCEditPass.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckOCEditPass.Size = new System.Drawing.Size(53, 17);
		this.ckOCEditPass.TabIndex = 1047;
		this.ckOCEditPass.Text = "Auto";
		this.ckOCEditPass.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckOCEditPass.UseVisualStyleBackColor = false;
		this.btnOCEditPass.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOCEditPass.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnOCEditPass.Location = new System.Drawing.Point(668, 89);
		this.btnOCEditPass.Name = "btnOCEditPass";
		this.btnOCEditPass.Size = new System.Drawing.Size(192, 32);
		this.btnOCEditPass.TabIndex = 1046;
		this.btnOCEditPass.Text = "تعديل كلمة السر";
		this.btnOCEditPass.UseVisualStyleBackColor = false;
		this.Label78.AutoSize = true;
		this.Label78.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label78.ForeColor = System.Drawing.Color.Black;
		this.Label78.Location = new System.Drawing.Point(783, 62);
		this.Label78.Name = "Label78";
		this.Label78.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label78.Size = new System.Drawing.Size(128, 17);
		this.Label78.TabIndex = 1045;
		this.Label78.Text = "كلمة السر الجديدة";
		this.txtOCNewPass.BackColor = System.Drawing.Color.White;
		this.txtOCNewPass.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtOCNewPass.ForeColor = System.Drawing.Color.Black;
		this.txtOCNewPass.Location = new System.Drawing.Point(668, 56);
		this.txtOCNewPass.MaxLength = 6;
		this.txtOCNewPass.Name = "txtOCNewPass";
		this.txtOCNewPass.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCNewPass.Size = new System.Drawing.Size(109, 27);
		this.txtOCNewPass.TabIndex = 1044;
		this.Label77.AutoSize = true;
		this.Label77.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label77.ForeColor = System.Drawing.Color.Black;
		this.Label77.Location = new System.Drawing.Point(18, 24);
		this.Label77.Name = "Label77";
		this.Label77.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label77.Size = new System.Drawing.Size(145, 17);
		this.Label77.TabIndex = 917;
		this.Label77.Text = "كلمة مرور اورنج كاش";
		this.txtOCPass.BackColor = System.Drawing.Color.White;
		this.txtOCPass.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold);
		this.txtOCPass.ForeColor = System.Drawing.Color.Black;
		this.txtOCPass.Location = new System.Drawing.Point(21, 56);
		this.txtOCPass.MaxLength = 11;
		this.txtOCPass.Name = "txtOCPass";
		this.txtOCPass.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCPass.Size = new System.Drawing.Size(139, 27);
		this.txtOCPass.TabIndex = 916;
		this.txtOCPass.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.tabOrngInv.BackColor = System.Drawing.Color.FromArgb(255, 128, 0);
		this.tabOrngInv.Controls.Add(this.ckbtnOtransRun);
		this.tabOrngInv.Controls.Add(this.ckbtnGetOrngBal);
		this.tabOrngInv.Controls.Add(this.dataViewGrid);
		this.tabOrngInv.Controls.Add(this.btnOrngAccQry);
		this.tabOrngInv.Controls.Add(this.btnGetOrngBal);
		this.tabOrngInv.Controls.Add(this.btnGetOrngBalAcc);
		this.tabOrngInv.Controls.Add(this.btnSaveAS3);
		this.tabOrngInv.Controls.Add(this.btnExport3);
		this.tabOrngInv.Controls.Add(this.btnOtransRun);
		this.tabOrngInv.Controls.Add(this.Label30);
		this.tabOrngInv.Controls.Add(this.txtOTotalTransQ);
		this.tabOrngInv.Controls.Add(this.Label25);
		this.tabOrngInv.Controls.Add(this.txtOtotalTrans);
		this.tabOrngInv.Controls.Add(this.txtOtransRem);
		this.tabOrngInv.Controls.Add(this.txtOtransMP);
		this.tabOrngInv.Controls.Add(this.txtOtransACC);
		this.tabOrngInv.Controls.Add(this.txtOtransTN);
		this.tabOrngInv.Controls.Add(this.Label29);
		this.tabOrngInv.Controls.Add(this.Label28);
		this.tabOrngInv.Controls.Add(this.Label27);
		this.tabOrngInv.Controls.Add(this.Label26);
		this.tabOrngInv.Controls.Add(this.lblSavePath3);
		this.tabOrngInv.Location = new System.Drawing.Point(4, 22);
		this.tabOrngInv.Name = "tabOrngInv";
		this.tabOrngInv.Padding = new System.Windows.Forms.Padding(3);
		this.tabOrngInv.Size = new System.Drawing.Size(934, 295);
		this.tabOrngInv.TabIndex = 10;
		this.tabOrngInv.Text = "Orng Inv";
		this.ckbtnOtransRun.AutoSize = true;
		this.ckbtnOtransRun.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnOtransRun.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnOtransRun.ForeColor = System.Drawing.Color.Black;
		this.ckbtnOtransRun.Location = new System.Drawing.Point(847, 79);
		this.ckbtnOtransRun.Name = "ckbtnOtransRun";
		this.ckbtnOtransRun.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnOtransRun.Size = new System.Drawing.Size(53, 17);
		this.ckbtnOtransRun.TabIndex = 1095;
		this.ckbtnOtransRun.Text = "Auto";
		this.ckbtnOtransRun.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnOtransRun.UseVisualStyleBackColor = false;
		this.ckbtnGetOrngBal.AutoSize = true;
		this.ckbtnGetOrngBal.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnGetOrngBal.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnGetOrngBal.ForeColor = System.Drawing.Color.Black;
		this.ckbtnGetOrngBal.Location = new System.Drawing.Point(545, 10);
		this.ckbtnGetOrngBal.Name = "ckbtnGetOrngBal";
		this.ckbtnGetOrngBal.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnGetOrngBal.Size = new System.Drawing.Size(53, 17);
		this.ckbtnGetOrngBal.TabIndex = 1094;
		this.ckbtnGetOrngBal.Text = "Auto";
		this.ckbtnGetOrngBal.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnGetOrngBal.UseVisualStyleBackColor = false;
		this.dataViewGrid.AllowUserToAddRows = false;
		this.dataViewGrid.AllowUserToDeleteRows = false;
		dataGridViewCellStyle.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.dataViewGrid.AlternatingRowsDefaultCellStyle = dataGridViewCellStyle;
		this.dataViewGrid.Anchor = System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left | System.Windows.Forms.AnchorStyles.Right;
		this.dataViewGrid.BackgroundColor = System.Drawing.Color.FromArgb(255, 128, 0);
		dataGridViewCellStyle2.Alignment = System.Windows.Forms.DataGridViewContentAlignment.MiddleCenter;
		dataGridViewCellStyle2.BackColor = System.Drawing.Color.FromArgb(192, 255, 255);
		dataGridViewCellStyle2.Font = new System.Drawing.Font("Tahoma", 9f, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, 0);
		dataGridViewCellStyle2.ForeColor = System.Drawing.Color.Black;
		dataGridViewCellStyle2.SelectionBackColor = System.Drawing.SystemColors.Highlight;
		dataGridViewCellStyle2.SelectionForeColor = System.Drawing.SystemColors.HighlightText;
		dataGridViewCellStyle2.WrapMode = System.Windows.Forms.DataGridViewTriState.True;
		this.dataViewGrid.ColumnHeadersDefaultCellStyle = dataGridViewCellStyle2;
		this.dataViewGrid.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;
		dataGridViewCellStyle3.Alignment = System.Windows.Forms.DataGridViewContentAlignment.MiddleLeft;
		dataGridViewCellStyle3.BackColor = System.Drawing.Color.FromArgb(224, 224, 224);
		dataGridViewCellStyle3.Font = new System.Drawing.Font("Tahoma", 9f, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, 0);
		dataGridViewCellStyle3.ForeColor = System.Drawing.Color.Black;
		dataGridViewCellStyle3.SelectionBackColor = System.Drawing.SystemColors.Highlight;
		dataGridViewCellStyle3.SelectionForeColor = System.Drawing.SystemColors.HighlightText;
		dataGridViewCellStyle3.WrapMode = System.Windows.Forms.DataGridViewTriState.True;
		this.dataViewGrid.DefaultCellStyle = dataGridViewCellStyle3;
		this.dataViewGrid.Location = new System.Drawing.Point(6, 134);
		this.dataViewGrid.Name = "dataViewGrid";
		this.dataViewGrid.ReadOnly = true;
		this.dataViewGrid.RightToLeft = System.Windows.Forms.RightToLeft.No;
		dataGridViewCellStyle4.Alignment = System.Windows.Forms.DataGridViewContentAlignment.MiddleLeft;
		dataGridViewCellStyle4.BackColor = System.Drawing.Color.FromArgb(224, 224, 224);
		dataGridViewCellStyle4.Font = new System.Drawing.Font("Tahoma", 9f, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, 0);
		dataGridViewCellStyle4.ForeColor = System.Drawing.SystemColors.WindowText;
		dataGridViewCellStyle4.SelectionBackColor = System.Drawing.SystemColors.Highlight;
		dataGridViewCellStyle4.SelectionForeColor = System.Drawing.SystemColors.HighlightText;
		dataGridViewCellStyle4.WrapMode = System.Windows.Forms.DataGridViewTriState.True;
		this.dataViewGrid.RowHeadersDefaultCellStyle = dataGridViewCellStyle4;
		this.dataViewGrid.RowHeadersWidth = 51;
		dataGridViewCellStyle5.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.dataViewGrid.RowsDefaultCellStyle = dataGridViewCellStyle5;
		this.dataViewGrid.Size = new System.Drawing.Size(721, 155);
		this.dataViewGrid.TabIndex = 1012;
		this.btnOrngAccQry.Location = new System.Drawing.Point(6, 40);
		this.btnOrngAccQry.Name = "btnOrngAccQry";
		this.btnOrngAccQry.Size = new System.Drawing.Size(195, 27);
		this.btnOrngAccQry.TabIndex = 1010;
		this.btnOrngAccQry.Text = "استعلام عن العمليات الCOMة";
		this.btnOrngAccQry.UseVisualStyleBackColor = true;
		this.btnGetOrngBal.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnGetOrngBal.Location = new System.Drawing.Point(492, 6);
		this.btnGetOrngBal.Name = "btnGetOrngBal";
		this.btnGetOrngBal.Size = new System.Drawing.Size(110, 114);
		this.btnGetOrngBal.TabIndex = 1009;
		this.btnGetOrngBal.Text = "استعلام الرصيد العادى";
		this.btnGetOrngBal.UseVisualStyleBackColor = true;
		this.btnGetOrngBalAcc.Location = new System.Drawing.Point(446, 152);
		this.btnGetOrngBalAcc.Name = "btnGetOrngBalAcc";
		this.btnGetOrngBalAcc.Size = new System.Drawing.Size(176, 27);
		this.btnGetOrngBalAcc.TabIndex = 1008;
		this.btnGetOrngBalAcc.Text = "استعلام الرصيد برقم حساب";
		this.btnGetOrngBalAcc.UseVisualStyleBackColor = true;
		this.btnSaveAS3.Location = new System.Drawing.Point(474, 232);
		this.btnSaveAS3.Name = "btnSaveAS3";
		this.btnSaveAS3.Size = new System.Drawing.Size(45, 38);
		this.btnSaveAS3.TabIndex = 1002;
		this.btnSaveAS3.Text = "مكان الحفظ";
		this.btnSaveAS3.UseVisualStyleBackColor = true;
		this.btnExport3.Location = new System.Drawing.Point(474, 266);
		this.btnExport3.Name = "btnExport3";
		this.btnExport3.Size = new System.Drawing.Size(45, 23);
		this.btnExport3.TabIndex = 1001;
		this.btnExport3.Text = "تصدير";
		this.btnExport3.UseVisualStyleBackColor = true;
		this.btnOtransRun.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOtransRun.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnOtransRun.ForeColor = System.Drawing.Color.Black;
		this.btnOtransRun.Location = new System.Drawing.Point(610, 70);
		this.btnOtransRun.Name = "btnOtransRun";
		this.btnOtransRun.Size = new System.Drawing.Size(300, 54);
		this.btnOtransRun.TabIndex = 1000;
		this.btnOtransRun.Text = "بدا التحويل";
		this.btnOtransRun.UseVisualStyleBackColor = false;
		this.Label30.AutoSize = true;
		this.Label30.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label30.ForeColor = System.Drawing.Color.Black;
		this.Label30.Location = new System.Drawing.Point(126, 107);
		this.Label30.Name = "Label30";
		this.Label30.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label30.Size = new System.Drawing.Size(138, 17);
		this.Label30.TabIndex = 999;
		this.Label30.Text = "عدد عمليات التحويل";
		this.txtOTotalTransQ.BackColor = System.Drawing.Color.FromArgb(255, 192, 128);
		this.txtOTotalTransQ.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtOTotalTransQ.ForeColor = System.Drawing.Color.Black;
		this.txtOTotalTransQ.Location = new System.Drawing.Point(6, 101);
		this.txtOTotalTransQ.MaxLength = 11;
		this.txtOTotalTransQ.Name = "txtOTotalTransQ";
		this.txtOTotalTransQ.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOTotalTransQ.Size = new System.Drawing.Size(114, 27);
		this.txtOTotalTransQ.TabIndex = 998;
		this.txtOTotalTransQ.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label25.AutoSize = true;
		this.Label25.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label25.ForeColor = System.Drawing.Color.Black;
		this.Label25.Location = new System.Drawing.Point(126, 79);
		this.Label25.Name = "Label25";
		this.Label25.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label25.Size = new System.Drawing.Size(150, 17);
		this.Label25.TabIndex = 997;
		this.Label25.Text = "اجمالى المبلغ المحول";
		this.txtOtotalTrans.BackColor = System.Drawing.Color.FromArgb(255, 192, 128);
		this.txtOtotalTrans.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtOtotalTrans.ForeColor = System.Drawing.Color.Black;
		this.txtOtotalTrans.Location = new System.Drawing.Point(6, 73);
		this.txtOtotalTrans.MaxLength = 11;
		this.txtOtotalTrans.Name = "txtOtotalTrans";
		this.txtOtotalTrans.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOtotalTrans.Size = new System.Drawing.Size(114, 27);
		this.txtOtotalTrans.TabIndex = 996;
		this.txtOtotalTrans.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtOtransRem.BackColor = System.Drawing.Color.White;
		this.txtOtransRem.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtOtransRem.ForeColor = System.Drawing.Color.Black;
		this.txtOtransRem.Location = new System.Drawing.Point(612, 34);
		this.txtOtransRem.MaxLength = 11;
		this.txtOtransRem.Name = "txtOtransRem";
		this.txtOtransRem.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOtransRem.Size = new System.Drawing.Size(87, 27);
		this.txtOtransRem.TabIndex = 993;
		this.txtOtransRem.Text = "0.15";
		this.txtOtransRem.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtOtransMP.BackColor = System.Drawing.Color.White;
		this.txtOtransMP.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtOtransMP.ForeColor = System.Drawing.Color.Black;
		this.txtOtransMP.Location = new System.Drawing.Point(612, 7);
		this.txtOtransMP.MaxLength = 11;
		this.txtOtransMP.Name = "txtOtransMP";
		this.txtOtransMP.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOtransMP.Size = new System.Drawing.Size(87, 27);
		this.txtOtransMP.TabIndex = 992;
		this.txtOtransMP.Text = "0";
		this.txtOtransMP.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtOtransACC.BackColor = System.Drawing.Color.White;
		this.txtOtransACC.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtOtransACC.ForeColor = System.Drawing.Color.Black;
		this.txtOtransACC.Location = new System.Drawing.Point(6, 12);
		this.txtOtransACC.MaxLength = 11;
		this.txtOtransACC.Name = "txtOtransACC";
		this.txtOtransACC.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOtransACC.Size = new System.Drawing.Size(195, 27);
		this.txtOtransACC.TabIndex = 991;
		this.txtOtransACC.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtOtransTN.BackColor = System.Drawing.Color.White;
		this.txtOtransTN.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtOtransTN.ForeColor = System.Drawing.Color.Black;
		this.txtOtransTN.Location = new System.Drawing.Point(474, 202);
		this.txtOtransTN.MaxLength = 11;
		this.txtOtransTN.Name = "txtOtransTN";
		this.txtOtransTN.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOtransTN.Size = new System.Drawing.Size(145, 27);
		this.txtOtransTN.TabIndex = 990;
		this.txtOtransTN.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label29.AutoSize = true;
		this.Label29.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label29.ForeColor = System.Drawing.Color.Black;
		this.Label29.Location = new System.Drawing.Point(705, 13);
		this.Label29.Name = "Label29";
		this.Label29.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label29.Size = new System.Drawing.Size(123, 17);
		this.Label29.TabIndex = 989;
		this.Label29.Text = "المبلغ المراد دفعة";
		this.Label28.AutoSize = true;
		this.Label28.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label28.ForeColor = System.Drawing.Color.Black;
		this.Label28.Location = new System.Drawing.Point(705, 38);
		this.Label28.Name = "Label28";
		this.Label28.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label28.Size = new System.Drawing.Size(133, 17);
		this.Label28.TabIndex = 987;
		this.Label28.Text = "المبلغ الباقى بالخط";
		this.Label27.AutoSize = true;
		this.Label27.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label27.ForeColor = System.Drawing.Color.Black;
		this.Label27.Location = new System.Drawing.Point(204, 14);
		this.Label27.Name = "Label27";
		this.Label27.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label27.Size = new System.Drawing.Size(62, 17);
		this.Label27.TabIndex = 986;
		this.Label27.Text = "الحساب";
		this.Label26.AutoSize = true;
		this.Label26.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label26.ForeColor = System.Drawing.Color.Black;
		this.Label26.Location = new System.Drawing.Point(531, 182);
		this.Label26.Name = "Label26";
		this.Label26.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label26.Size = new System.Drawing.Size(81, 17);
		this.Label26.TabIndex = 985;
		this.Label26.Text = "رقم العملية";
		this.lblSavePath3.BackColor = System.Drawing.Color.FromArgb(255, 192, 128);
		this.lblSavePath3.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblSavePath3.Font = new System.Drawing.Font("Tahoma", 6.75f, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, 0);
		this.lblSavePath3.ForeColor = System.Drawing.Color.Black;
		this.lblSavePath3.Location = new System.Drawing.Point(521, 232);
		this.lblSavePath3.Name = "lblSavePath3";
		this.lblSavePath3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblSavePath3.Size = new System.Drawing.Size(98, 57);
		this.lblSavePath3.TabIndex = 1003;
		this.lblSavePath3.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.TabPage1.Controls.Add(this.ckbtnMacro);
		this.TabPage1.Controls.Add(this.btnMacro);
		this.TabPage1.Controls.Add(this.txtMacro16);
		this.TabPage1.Controls.Add(this.txtMacro15);
		this.TabPage1.Controls.Add(this.txtMacro9);
		this.TabPage1.Controls.Add(this.txtMacro14);
		this.TabPage1.Controls.Add(this.txtMacro13);
		this.TabPage1.Controls.Add(this.txtMacro10);
		this.TabPage1.Controls.Add(this.txtMacro11);
		this.TabPage1.Controls.Add(this.txtMacro12);
		this.TabPage1.Controls.Add(this.txtMacro8);
		this.TabPage1.Controls.Add(this.txtMacro7);
		this.TabPage1.Controls.Add(this.txtMacro1);
		this.TabPage1.Controls.Add(this.txtMacro6);
		this.TabPage1.Controls.Add(this.txtMacro5);
		this.TabPage1.Controls.Add(this.txtMacro2);
		this.TabPage1.Controls.Add(this.txtMacro3);
		this.TabPage1.Controls.Add(this.txtMacro4);
		this.TabPage1.Controls.Add(this.txtReplyBy7);
		this.TabPage1.Controls.Add(this.btnReplyBy7);
		this.TabPage1.Controls.Add(this.txtReplyBy6);
		this.TabPage1.Controls.Add(this.btnReplyBy6);
		this.TabPage1.Controls.Add(this.txtUssdc10);
		this.TabPage1.Controls.Add(this.txtReplyBy0);
		this.TabPage1.Controls.Add(this.btnRunUssd5);
		this.TabPage1.Controls.Add(this.btnReplyBy0);
		this.TabPage1.Controls.Add(this.txtUssdc5);
		this.TabPage1.Controls.Add(this.txtReplyBy5);
		this.TabPage1.Controls.Add(this.btnRunUssd10);
		this.TabPage1.Controls.Add(this.btnReplyBy5);
		this.TabPage1.Controls.Add(this.txtUssdc7);
		this.TabPage1.Controls.Add(this.txtReplyBy4);
		this.TabPage1.Controls.Add(this.btnRunUssd6);
		this.TabPage1.Controls.Add(this.btnReplyBy4);
		this.TabPage1.Controls.Add(this.txtUssdc6);
		this.TabPage1.Controls.Add(this.btnRunUssd7);
		this.TabPage1.Controls.Add(this.btnRunUssd8);
		this.TabPage1.Controls.Add(this.txtUssdc8);
		this.TabPage1.Controls.Add(this.btnRunUssd);
		this.TabPage1.Controls.Add(this.btnRunUssd2);
		this.TabPage1.Controls.Add(this.btnRunUssd3);
		this.TabPage1.Controls.Add(this.btnRunUssd4);
		this.TabPage1.Controls.Add(this.btnRunUssd9);
		this.TabPage1.Controls.Add(this.txtUssd);
		this.TabPage1.Controls.Add(this.txtUssdc2);
		this.TabPage1.Controls.Add(this.txtUssdc3);
		this.TabPage1.Controls.Add(this.txtUssdc4);
		this.TabPage1.Controls.Add(this.txtUssdc9);
		this.TabPage1.Controls.Add(this.txtReplyBy);
		this.TabPage1.Controls.Add(this.txtReplyBy2);
		this.TabPage1.Controls.Add(this.txtReplyBy3);
		this.TabPage1.Controls.Add(this.btnReplyBy);
		this.TabPage1.Controls.Add(this.btnReplyBy2);
		this.TabPage1.Controls.Add(this.btnReplyBy3);
		this.TabPage1.Controls.Add(this.btnRunUssdGG);
		this.TabPage1.Location = new System.Drawing.Point(4, 22);
		this.TabPage1.Name = "TabPage1";
		this.TabPage1.Padding = new System.Windows.Forms.Padding(3);
		this.TabPage1.Size = new System.Drawing.Size(934, 295);
		this.TabPage1.TabIndex = 0;
		this.TabPage1.Text = "Nrm Ussd";
		this.TabPage1.UseVisualStyleBackColor = true;
		this.ckbtnMacro.AutoSize = true;
		this.ckbtnMacro.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnMacro.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnMacro.ForeColor = System.Drawing.Color.Black;
		this.ckbtnMacro.Location = new System.Drawing.Point(761, 217);
		this.ckbtnMacro.Name = "ckbtnMacro";
		this.ckbtnMacro.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnMacro.Size = new System.Drawing.Size(53, 17);
		this.ckbtnMacro.TabIndex = 1044;
		this.ckbtnMacro.Text = "Auto";
		this.ckbtnMacro.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnMacro.UseVisualStyleBackColor = false;
		this.btnMacro.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnMacro.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnMacro.ForeColor = System.Drawing.Color.Black;
		this.btnMacro.Location = new System.Drawing.Point(646, 213);
		this.btnMacro.Name = "btnMacro";
		this.btnMacro.Size = new System.Drawing.Size(168, 70);
		this.btnMacro.TabIndex = 971;
		this.btnMacro.Text = "Macro";
		this.btnMacro.UseVisualStyleBackColor = false;
		this.txtMacro16.BackColor = System.Drawing.Color.White;
		this.txtMacro16.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.txtMacro16.Font = new System.Drawing.Font("Tahoma", 12.25f, System.Drawing.FontStyle.Bold);
		this.txtMacro16.ForeColor = System.Drawing.Color.Black;
		this.txtMacro16.Location = new System.Drawing.Point(588, 242);
		this.txtMacro16.MaxLength = 2;
		this.txtMacro16.Name = "txtMacro16";
		this.txtMacro16.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMacro16.Size = new System.Drawing.Size(36, 27);
		this.txtMacro16.TabIndex = 970;
		this.txtMacro16.TabStop = false;
		this.txtMacro16.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMacro15.BackColor = System.Drawing.Color.White;
		this.txtMacro15.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.txtMacro15.Font = new System.Drawing.Font("Tahoma", 12.25f, System.Drawing.FontStyle.Bold);
		this.txtMacro15.ForeColor = System.Drawing.Color.Black;
		this.txtMacro15.Location = new System.Drawing.Point(587, 209);
		this.txtMacro15.MaxLength = 2;
		this.txtMacro15.Name = "txtMacro15";
		this.txtMacro15.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMacro15.Size = new System.Drawing.Size(36, 27);
		this.txtMacro15.TabIndex = 969;
		this.txtMacro15.TabStop = false;
		this.txtMacro15.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMacro9.BackColor = System.Drawing.Color.White;
		this.txtMacro9.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.txtMacro9.Font = new System.Drawing.Font("Tahoma", 14.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtMacro9.ForeColor = System.Drawing.Color.Black;
		this.txtMacro9.Location = new System.Drawing.Point(587, 12);
		this.txtMacro9.MaxLength = 1;
		this.txtMacro9.Name = "txtMacro9";
		this.txtMacro9.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMacro9.Size = new System.Drawing.Size(37, 30);
		this.txtMacro9.TabIndex = 968;
		this.txtMacro9.TabStop = false;
		this.txtMacro9.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMacro14.BackColor = System.Drawing.Color.White;
		this.txtMacro14.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.txtMacro14.Font = new System.Drawing.Font("Tahoma", 12.25f, System.Drawing.FontStyle.Bold);
		this.txtMacro14.ForeColor = System.Drawing.Color.Black;
		this.txtMacro14.Location = new System.Drawing.Point(587, 176);
		this.txtMacro14.MaxLength = 1;
		this.txtMacro14.Name = "txtMacro14";
		this.txtMacro14.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMacro14.Size = new System.Drawing.Size(36, 27);
		this.txtMacro14.TabIndex = 967;
		this.txtMacro14.TabStop = false;
		this.txtMacro14.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMacro13.BackColor = System.Drawing.Color.White;
		this.txtMacro13.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.txtMacro13.Font = new System.Drawing.Font("Tahoma", 12.25f, System.Drawing.FontStyle.Bold);
		this.txtMacro13.ForeColor = System.Drawing.Color.Black;
		this.txtMacro13.Location = new System.Drawing.Point(587, 144);
		this.txtMacro13.MaxLength = 1;
		this.txtMacro13.Name = "txtMacro13";
		this.txtMacro13.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMacro13.Size = new System.Drawing.Size(36, 27);
		this.txtMacro13.TabIndex = 966;
		this.txtMacro13.TabStop = false;
		this.txtMacro13.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMacro10.BackColor = System.Drawing.Color.White;
		this.txtMacro10.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.txtMacro10.Font = new System.Drawing.Font("Tahoma", 14.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtMacro10.ForeColor = System.Drawing.Color.Black;
		this.txtMacro10.Location = new System.Drawing.Point(587, 45);
		this.txtMacro10.MaxLength = 1;
		this.txtMacro10.Name = "txtMacro10";
		this.txtMacro10.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMacro10.Size = new System.Drawing.Size(37, 30);
		this.txtMacro10.TabIndex = 963;
		this.txtMacro10.TabStop = false;
		this.txtMacro10.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMacro11.BackColor = System.Drawing.Color.White;
		this.txtMacro11.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.txtMacro11.Font = new System.Drawing.Font("Tahoma", 12.25f, System.Drawing.FontStyle.Bold);
		this.txtMacro11.ForeColor = System.Drawing.Color.Black;
		this.txtMacro11.Location = new System.Drawing.Point(587, 79);
		this.txtMacro11.MaxLength = 1;
		this.txtMacro11.Name = "txtMacro11";
		this.txtMacro11.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMacro11.Size = new System.Drawing.Size(37, 27);
		this.txtMacro11.TabIndex = 964;
		this.txtMacro11.TabStop = false;
		this.txtMacro11.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMacro12.BackColor = System.Drawing.Color.White;
		this.txtMacro12.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.txtMacro12.Font = new System.Drawing.Font("Tahoma", 12.25f, System.Drawing.FontStyle.Bold);
		this.txtMacro12.ForeColor = System.Drawing.Color.Black;
		this.txtMacro12.Location = new System.Drawing.Point(587, 111);
		this.txtMacro12.MaxLength = 1;
		this.txtMacro12.Name = "txtMacro12";
		this.txtMacro12.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMacro12.Size = new System.Drawing.Size(37, 27);
		this.txtMacro12.TabIndex = 965;
		this.txtMacro12.TabStop = false;
		this.txtMacro12.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMacro8.BackColor = System.Drawing.Color.White;
		this.txtMacro8.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.txtMacro8.Font = new System.Drawing.Font("Tahoma", 12.25f, System.Drawing.FontStyle.Bold);
		this.txtMacro8.ForeColor = System.Drawing.Color.Black;
		this.txtMacro8.Location = new System.Drawing.Point(396, 217);
		this.txtMacro8.MaxLength = 2;
		this.txtMacro8.Name = "txtMacro8";
		this.txtMacro8.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMacro8.Size = new System.Drawing.Size(36, 27);
		this.txtMacro8.TabIndex = 962;
		this.txtMacro8.TabStop = false;
		this.txtMacro8.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMacro7.BackColor = System.Drawing.Color.White;
		this.txtMacro7.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.txtMacro7.Font = new System.Drawing.Font("Tahoma", 12.25f, System.Drawing.FontStyle.Bold);
		this.txtMacro7.ForeColor = System.Drawing.Color.Black;
		this.txtMacro7.Location = new System.Drawing.Point(396, 189);
		this.txtMacro7.MaxLength = 2;
		this.txtMacro7.Name = "txtMacro7";
		this.txtMacro7.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMacro7.Size = new System.Drawing.Size(36, 27);
		this.txtMacro7.TabIndex = 961;
		this.txtMacro7.TabStop = false;
		this.txtMacro7.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMacro1.BackColor = System.Drawing.Color.White;
		this.txtMacro1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.txtMacro1.Font = new System.Drawing.Font("Tahoma", 14.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtMacro1.ForeColor = System.Drawing.Color.Black;
		this.txtMacro1.Location = new System.Drawing.Point(396, 8);
		this.txtMacro1.MaxLength = 1;
		this.txtMacro1.Name = "txtMacro1";
		this.txtMacro1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMacro1.Size = new System.Drawing.Size(37, 30);
		this.txtMacro1.TabIndex = 960;
		this.txtMacro1.TabStop = false;
		this.txtMacro1.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMacro6.BackColor = System.Drawing.Color.White;
		this.txtMacro6.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.txtMacro6.Font = new System.Drawing.Font("Tahoma", 12.25f, System.Drawing.FontStyle.Bold);
		this.txtMacro6.ForeColor = System.Drawing.Color.Black;
		this.txtMacro6.Location = new System.Drawing.Point(396, 161);
		this.txtMacro6.MaxLength = 1;
		this.txtMacro6.Name = "txtMacro6";
		this.txtMacro6.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMacro6.Size = new System.Drawing.Size(36, 27);
		this.txtMacro6.TabIndex = 959;
		this.txtMacro6.TabStop = false;
		this.txtMacro6.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMacro5.BackColor = System.Drawing.Color.White;
		this.txtMacro5.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.txtMacro5.Font = new System.Drawing.Font("Tahoma", 12.25f, System.Drawing.FontStyle.Bold);
		this.txtMacro5.ForeColor = System.Drawing.Color.Black;
		this.txtMacro5.Location = new System.Drawing.Point(396, 132);
		this.txtMacro5.MaxLength = 1;
		this.txtMacro5.Name = "txtMacro5";
		this.txtMacro5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMacro5.Size = new System.Drawing.Size(36, 27);
		this.txtMacro5.TabIndex = 958;
		this.txtMacro5.TabStop = false;
		this.txtMacro5.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMacro2.BackColor = System.Drawing.Color.White;
		this.txtMacro2.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.txtMacro2.Font = new System.Drawing.Font("Tahoma", 14.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtMacro2.ForeColor = System.Drawing.Color.Black;
		this.txtMacro2.Location = new System.Drawing.Point(396, 40);
		this.txtMacro2.MaxLength = 1;
		this.txtMacro2.Name = "txtMacro2";
		this.txtMacro2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMacro2.Size = new System.Drawing.Size(37, 30);
		this.txtMacro2.TabIndex = 955;
		this.txtMacro2.TabStop = false;
		this.txtMacro2.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMacro3.BackColor = System.Drawing.Color.White;
		this.txtMacro3.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.txtMacro3.Font = new System.Drawing.Font("Tahoma", 12.25f, System.Drawing.FontStyle.Bold);
		this.txtMacro3.ForeColor = System.Drawing.Color.Black;
		this.txtMacro3.Location = new System.Drawing.Point(396, 74);
		this.txtMacro3.MaxLength = 1;
		this.txtMacro3.Name = "txtMacro3";
		this.txtMacro3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMacro3.Size = new System.Drawing.Size(37, 27);
		this.txtMacro3.TabIndex = 956;
		this.txtMacro3.TabStop = false;
		this.txtMacro3.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMacro4.BackColor = System.Drawing.Color.White;
		this.txtMacro4.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.txtMacro4.Font = new System.Drawing.Font("Tahoma", 12.25f, System.Drawing.FontStyle.Bold);
		this.txtMacro4.ForeColor = System.Drawing.Color.Black;
		this.txtMacro4.Location = new System.Drawing.Point(396, 103);
		this.txtMacro4.MaxLength = 1;
		this.txtMacro4.Name = "txtMacro4";
		this.txtMacro4.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMacro4.Size = new System.Drawing.Size(37, 27);
		this.txtMacro4.TabIndex = 957;
		this.txtMacro4.TabStop = false;
		this.txtMacro4.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtReplyBy7.BackColor = System.Drawing.Color.Black;
		this.txtReplyBy7.BorderStyle = System.Windows.Forms.BorderStyle.None;
		this.txtReplyBy7.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtReplyBy7.ForeColor = System.Drawing.Color.FromArgb(128, 255, 128);
		this.txtReplyBy7.Location = new System.Drawing.Point(456, 246);
		this.txtReplyBy7.MaxLength = 2;
		this.txtReplyBy7.Name = "txtReplyBy7";
		this.txtReplyBy7.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtReplyBy7.Size = new System.Drawing.Size(36, 17);
		this.txtReplyBy7.TabIndex = 954;
		this.txtReplyBy7.TabStop = false;
		this.txtReplyBy7.Text = "7";
		this.txtReplyBy7.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnReplyBy7.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnReplyBy7.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.btnReplyBy7.ForeColor = System.Drawing.Color.Black;
		this.btnReplyBy7.Location = new System.Drawing.Point(445, 240);
		this.btnReplyBy7.Name = "btnReplyBy7";
		this.btnReplyBy7.Size = new System.Drawing.Size(112, 33);
		this.btnReplyBy7.TabIndex = 953;
		this.btnReplyBy7.Text = "Reply";
		this.btnReplyBy7.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.btnReplyBy7.UseVisualStyleBackColor = false;
		this.txtReplyBy6.BackColor = System.Drawing.Color.Black;
		this.txtReplyBy6.BorderStyle = System.Windows.Forms.BorderStyle.None;
		this.txtReplyBy6.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtReplyBy6.ForeColor = System.Drawing.Color.FromArgb(128, 255, 128);
		this.txtReplyBy6.Location = new System.Drawing.Point(456, 215);
		this.txtReplyBy6.MaxLength = 2;
		this.txtReplyBy6.Name = "txtReplyBy6";
		this.txtReplyBy6.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtReplyBy6.Size = new System.Drawing.Size(36, 17);
		this.txtReplyBy6.TabIndex = 952;
		this.txtReplyBy6.TabStop = false;
		this.txtReplyBy6.Text = "6";
		this.txtReplyBy6.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnReplyBy6.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnReplyBy6.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.btnReplyBy6.ForeColor = System.Drawing.Color.Black;
		this.btnReplyBy6.Location = new System.Drawing.Point(445, 207);
		this.btnReplyBy6.Name = "btnReplyBy6";
		this.btnReplyBy6.Size = new System.Drawing.Size(112, 33);
		this.btnReplyBy6.TabIndex = 951;
		this.btnReplyBy6.Text = "Reply";
		this.btnReplyBy6.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.btnReplyBy6.UseVisualStyleBackColor = false;
		this.TabPage7.BackColor = System.Drawing.Color.PaleGreen;
		this.TabPage7.Controls.Add(this.btnFromMainToAll);
		this.TabPage7.Controls.Add(this.ckbtnECRun777111);
		this.TabPage7.Controls.Add(this.btnECConvertTocash);
		this.TabPage7.Controls.Add(this.btnECRun777111);
		this.TabPage7.Controls.Add(this.TempCheck);
		this.TabPage7.Controls.Add(this.ckbtnAutoES_Seres);
		this.TabPage7.Controls.Add(this.btnAutoES_Seres);
		this.TabPage7.Controls.Add(this.Label104);
		this.TabPage7.Controls.Add(this.Label106);
		this.TabPage7.Controls.Add(this.txtESAdd);
		this.TabPage7.Controls.Add(this.txtESSub);
		this.TabPage7.Controls.Add(this.btnAutoVCnormECOne);
		this.TabPage7.Controls.Add(this.ckbtnGetBal2EC);
		this.TabPage7.Controls.Add(this.lblMainEC);
		this.TabPage7.Controls.Add(this.Label42);
		this.TabPage7.Controls.Add(this.Label39);
		this.TabPage7.Controls.Add(this.Label40);
		this.TabPage7.Controls.Add(this.btnAutoVCnormEC);
		this.TabPage7.Controls.Add(this.txtCashNextMasterEC);
		this.TabPage7.Controls.Add(this.txtMonyMnEC);
		this.TabPage7.Controls.Add(this.btnGetBal2EC);
		this.TabPage7.Controls.Add(this.Label38);
		this.TabPage7.Controls.Add(this.txtPassEC);
		this.TabPage7.Location = new System.Drawing.Point(4, 22);
		this.TabPage7.Name = "TabPage7";
		this.TabPage7.Size = new System.Drawing.Size(934, 295);
		this.TabPage7.TabIndex = 12;
		this.TabPage7.Text = "Ets";
		this.btnFromMainToAll.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnFromMainToAll.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnFromMainToAll.Location = new System.Drawing.Point(341, 120);
		this.btnFromMainToAll.Name = "btnFromMainToAll";
		this.btnFromMainToAll.Size = new System.Drawing.Size(147, 80);
		this.btnFromMainToAll.TabIndex = 1117;
		this.btnFromMainToAll.Text = "تحويل من الاساسى للكل";
		this.btnFromMainToAll.UseVisualStyleBackColor = false;
		this.ckbtnECRun777111.AutoSize = true;
		this.ckbtnECRun777111.BackColor = System.Drawing.Color.FromArgb(224, 224, 224);
		this.ckbtnECRun777111.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnECRun777111.ForeColor = System.Drawing.Color.Black;
		this.ckbtnECRun777111.Location = new System.Drawing.Point(150, 23);
		this.ckbtnECRun777111.Name = "ckbtnECRun777111";
		this.ckbtnECRun777111.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnECRun777111.Size = new System.Drawing.Size(53, 17);
		this.ckbtnECRun777111.TabIndex = 1116;
		this.ckbtnECRun777111.Text = "Auto";
		this.ckbtnECRun777111.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnECRun777111.UseVisualStyleBackColor = false;
		this.btnECConvertTocash.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnECConvertTocash.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnECConvertTocash.ForeColor = System.Drawing.Color.Black;
		this.btnECConvertTocash.Location = new System.Drawing.Point(22, 94);
		this.btnECConvertTocash.Name = "btnECConvertTocash";
		this.btnECConvertTocash.Size = new System.Drawing.Size(181, 61);
		this.btnECConvertTocash.TabIndex = 1115;
		this.btnECConvertTocash.Text = "CashBack to Cash";
		this.btnECConvertTocash.UseVisualStyleBackColor = false;
		this.btnECRun777111.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnECRun777111.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnECRun777111.ForeColor = System.Drawing.Color.Black;
		this.btnECRun777111.Location = new System.Drawing.Point(22, 16);
		this.btnECRun777111.Name = "btnECRun777111";
		this.btnECRun777111.Size = new System.Drawing.Size(181, 65);
		this.btnECRun777111.TabIndex = 1114;
		this.btnECRun777111.Text = "*777*111#";
		this.btnECRun777111.UseVisualStyleBackColor = false;
		this.TempCheck.AutoSize = true;
		this.TempCheck.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.TempCheck.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.TempCheck.ForeColor = System.Drawing.Color.Black;
		this.TempCheck.Location = new System.Drawing.Point(13, 273);
		this.TempCheck.Name = "TempCheck";
		this.TempCheck.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.TempCheck.Size = new System.Drawing.Size(15, 14);
		this.TempCheck.TabIndex = 1113;
		this.TempCheck.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.TempCheck.UseVisualStyleBackColor = false;
		this.TempCheck.Visible = false;
		this.ckbtnAutoES_Seres.AutoSize = true;
		this.ckbtnAutoES_Seres.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnAutoES_Seres.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnAutoES_Seres.ForeColor = System.Drawing.Color.Black;
		this.ckbtnAutoES_Seres.Location = new System.Drawing.Point(856, 23);
		this.ckbtnAutoES_Seres.Name = "ckbtnAutoES_Seres";
		this.ckbtnAutoES_Seres.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnAutoES_Seres.Size = new System.Drawing.Size(53, 17);
		this.ckbtnAutoES_Seres.TabIndex = 1113;
		this.ckbtnAutoES_Seres.Text = "Auto";
		this.ckbtnAutoES_Seres.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnAutoES_Seres.UseVisualStyleBackColor = false;
		this.btnAutoES_Seres.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnAutoES_Seres.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnAutoES_Seres.Location = new System.Drawing.Point(671, 16);
		this.btnAutoES_Seres.Name = "btnAutoES_Seres";
		this.btnAutoES_Seres.Size = new System.Drawing.Size(247, 73);
		this.btnAutoES_Seres.TabIndex = 1112;
		this.btnAutoES_Seres.Text = "متتالى";
		this.btnAutoES_Seres.UseVisualStyleBackColor = false;
		this.Label104.AutoSize = true;
		this.Label104.Font = new System.Drawing.Font("Tahoma", 15.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.Label104.ForeColor = System.Drawing.Color.Black;
		this.Label104.Location = new System.Drawing.Point(552, 64);
		this.Label104.Name = "Label104";
		this.Label104.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label104.Size = new System.Drawing.Size(29, 25);
		this.Label104.TabIndex = 1111;
		this.Label104.Text = "+";
		this.Label106.AutoSize = true;
		this.Label106.Font = new System.Drawing.Font("Tahoma", 15.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.Label106.ForeColor = System.Drawing.Color.Black;
		this.Label106.Location = new System.Drawing.Point(555, 33);
		this.Label106.Name = "Label106";
		this.Label106.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label106.Size = new System.Drawing.Size(21, 25);
		this.Label106.TabIndex = 1110;
		this.Label106.Text = "-";
		this.txtESAdd.BackColor = System.Drawing.Color.White;
		this.txtESAdd.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtESAdd.ForeColor = System.Drawing.Color.Black;
		this.txtESAdd.Location = new System.Drawing.Point(586, 66);
		this.txtESAdd.MaxLength = 100;
		this.txtESAdd.Name = "txtESAdd";
		this.txtESAdd.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtESAdd.Size = new System.Drawing.Size(69, 24);
		this.txtESAdd.TabIndex = 1109;
		this.txtESAdd.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtESSub.BackColor = System.Drawing.Color.White;
		this.txtESSub.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtESSub.ForeColor = System.Drawing.Color.Black;
		this.txtESSub.Location = new System.Drawing.Point(586, 35);
		this.txtESSub.MaxLength = 100;
		this.txtESSub.Name = "txtESSub";
		this.txtESSub.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtESSub.Size = new System.Drawing.Size(69, 24);
		this.txtESSub.TabIndex = 1108;
		this.txtESSub.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnAutoVCnormECOne.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnAutoVCnormECOne.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnAutoVCnormECOne.Location = new System.Drawing.Point(341, 207);
		this.btnAutoVCnormECOne.Name = "btnAutoVCnormECOne";
		this.btnAutoVCnormECOne.Size = new System.Drawing.Size(147, 80);
		this.btnAutoVCnormECOne.TabIndex = 1107;
		this.btnAutoVCnormECOne.Text = "تحويل من الاساسى للتالى";
		this.btnAutoVCnormECOne.UseVisualStyleBackColor = false;
		this.ckbtnGetBal2EC.AutoSize = true;
		this.ckbtnGetBal2EC.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnGetBal2EC.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnGetBal2EC.ForeColor = System.Drawing.Color.Black;
		this.ckbtnGetBal2EC.Location = new System.Drawing.Point(865, 218);
		this.ckbtnGetBal2EC.Name = "ckbtnGetBal2EC";
		this.ckbtnGetBal2EC.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnGetBal2EC.Size = new System.Drawing.Size(53, 17);
		this.ckbtnGetBal2EC.TabIndex = 1106;
		this.ckbtnGetBal2EC.Text = "Auto";
		this.ckbtnGetBal2EC.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnGetBal2EC.UseVisualStyleBackColor = false;
		this.lblMainEC.BackColor = System.Drawing.Color.FromArgb(128, 255, 255);
		this.lblMainEC.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblMainEC.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.lblMainEC.ForeColor = System.Drawing.Color.Black;
		this.lblMainEC.Location = new System.Drawing.Point(503, 178);
		this.lblMainEC.Name = "lblMainEC";
		this.lblMainEC.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblMainEC.Size = new System.Drawing.Size(202, 38);
		this.lblMainEC.TabIndex = 1009;
		this.lblMainEC.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.Label42.AutoSize = true;
		this.Label42.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label42.ForeColor = System.Drawing.Color.Black;
		this.Label42.Location = new System.Drawing.Point(571, 155);
		this.Label42.Name = "Label42";
		this.Label42.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label42.Size = new System.Drawing.Size(72, 17);
		this.Label42.TabIndex = 1008;
		this.Label42.Text = "الاساسى";
		this.Label39.AutoSize = true;
		this.Label39.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label39.ForeColor = System.Drawing.Color.Black;
		this.Label39.Location = new System.Drawing.Point(551, 224);
		this.Label39.Name = "Label39";
		this.Label39.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label39.Size = new System.Drawing.Size(115, 17);
		this.Label39.TabIndex = 1007;
		this.Label39.Text = "الاساسى التالى";
		this.Label40.AutoSize = true;
		this.Label40.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label40.ForeColor = System.Drawing.Color.Black;
		this.Label40.Location = new System.Drawing.Point(443, 25);
		this.Label40.Name = "Label40";
		this.Label40.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label40.Size = new System.Drawing.Size(45, 17);
		this.Label40.TabIndex = 1006;
		this.Label40.Text = "المبلغ";
		this.btnAutoVCnormEC.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnAutoVCnormEC.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnAutoVCnormEC.Location = new System.Drawing.Point(201, 205);
		this.btnAutoVCnormEC.Name = "btnAutoVCnormEC";
		this.btnAutoVCnormEC.Size = new System.Drawing.Size(133, 82);
		this.btnAutoVCnormEC.TabIndex = 1005;
		this.btnAutoVCnormEC.Text = "تحويل من الكل للاساسى التالى";
		this.btnAutoVCnormEC.UseVisualStyleBackColor = false;
		this.txtCashNextMasterEC.BackColor = System.Drawing.Color.White;
		this.txtCashNextMasterEC.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtCashNextMasterEC.ForeColor = System.Drawing.Color.Black;
		this.txtCashNextMasterEC.Location = new System.Drawing.Point(503, 246);
		this.txtCashNextMasterEC.MaxLength = 11;
		this.txtCashNextMasterEC.Name = "txtCashNextMasterEC";
		this.txtCashNextMasterEC.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtCashNextMasterEC.Size = new System.Drawing.Size(202, 36);
		this.txtCashNextMasterEC.TabIndex = 1004;
		this.txtCashNextMasterEC.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMonyMnEC.BackColor = System.Drawing.Color.White;
		this.txtMonyMnEC.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtMonyMnEC.ForeColor = System.Drawing.Color.Black;
		this.txtMonyMnEC.Location = new System.Drawing.Point(393, 58);
		this.txtMonyMnEC.Name = "txtMonyMnEC";
		this.txtMonyMnEC.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMonyMnEC.Size = new System.Drawing.Size(133, 36);
		this.txtMonyMnEC.TabIndex = 1003;
		this.txtMonyMnEC.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnGetBal2EC.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnGetBal2EC.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnGetBal2EC.Location = new System.Drawing.Point(716, 212);
		this.btnGetBal2EC.Name = "btnGetBal2EC";
		this.btnGetBal2EC.Size = new System.Drawing.Size(204, 77);
		this.btnGetBal2EC.TabIndex = 1002;
		this.btnGetBal2EC.Text = "استعلام عن رصيد الكاش";
		this.btnGetBal2EC.UseVisualStyleBackColor = false;
		this.Label38.AutoSize = true;
		this.Label38.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label38.ForeColor = System.Drawing.Color.Black;
		this.Label38.Location = new System.Drawing.Point(10, 228);
		this.Label38.Name = "Label38";
		this.Label38.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label38.Size = new System.Drawing.Size(157, 17);
		this.Label38.TabIndex = 884;
		this.Label38.Text = "كلمة سر اتصالات كاش";
		this.txtPassEC.BackColor = System.Drawing.Color.White;
		this.txtPassEC.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtPassEC.ForeColor = System.Drawing.Color.Black;
		this.txtPassEC.Location = new System.Drawing.Point(22, 255);
		this.txtPassEC.MaxLength = 6;
		this.txtPassEC.Name = "txtPassEC";
		this.txtPassEC.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtPassEC.Size = new System.Drawing.Size(127, 27);
		this.txtPassEC.TabIndex = 883;
		this.tabPrint.BackColor = System.Drawing.Color.Teal;
		this.tabPrint.Controls.Add(this.txtPrintOut2);
		this.tabPrint.Controls.Add(this.txtPrintOut1);
		this.tabPrint.Controls.Add(this.btnPrintOUT);
		this.tabPrint.Controls.Add(this.ck2x1);
		this.tabPrint.Controls.Add(this.txtPrintStr);
		this.tabPrint.Controls.Add(this.btnPrintstr);
		this.tabPrint.Controls.Add(this.txtPrintPd);
		this.tabPrint.Controls.Add(this.btnPrintRest);
		this.tabPrint.Controls.Add(this.ckPrint);
		this.tabPrint.Controls.Add(this.GroupBox2);
		this.tabPrint.Controls.Add(this.btnPrinter);
		this.tabPrint.Controls.Add(this.btnPrint);
		this.tabPrint.Controls.Add(this.GroupBox5);
		this.tabPrint.Controls.Add(this.GroupBox1);
		this.tabPrint.Controls.Add(this.cmbPrinter);
		this.tabPrint.Location = new System.Drawing.Point(4, 22);
		this.tabPrint.Name = "tabPrint";
		this.tabPrint.Padding = new System.Windows.Forms.Padding(3);
		this.tabPrint.Size = new System.Drawing.Size(934, 295);
		this.tabPrint.TabIndex = 16;
		this.tabPrint.Text = "Print";
		this.txtPrintOut2.Font = new System.Drawing.Font("Tahoma", 14.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtPrintOut2.Location = new System.Drawing.Point(286, 207);
		this.txtPrintOut2.MaxLength = 100;
		this.txtPrintOut2.Name = "txtPrintOut2";
		this.txtPrintOut2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtPrintOut2.Size = new System.Drawing.Size(176, 30);
		this.txtPrintOut2.TabIndex = 1051;
		this.txtPrintOut2.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtPrintOut1.Font = new System.Drawing.Font("Tahoma", 14.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtPrintOut1.Location = new System.Drawing.Point(286, 176);
		this.txtPrintOut1.MaxLength = 100;
		this.txtPrintOut1.Name = "txtPrintOut1";
		this.txtPrintOut1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtPrintOut1.Size = new System.Drawing.Size(176, 30);
		this.txtPrintOut1.TabIndex = 1050;
		this.txtPrintOut1.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnPrintOUT.Location = new System.Drawing.Point(468, 176);
		this.btnPrintOUT.Name = "btnPrintOUT";
		this.btnPrintOUT.Size = new System.Drawing.Size(76, 65);
		this.btnPrintOUT.TabIndex = 1049;
		this.btnPrintOUT.Text = "طباعة خارج";
		this.btnPrintOUT.UseVisualStyleBackColor = true;
		this.ck2x1.AutoSize = true;
		this.ck2x1.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ck2x1.Checked = true;
		this.ck2x1.CheckState = System.Windows.Forms.CheckState.Checked;
		this.ck2x1.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ck2x1.ForeColor = System.Drawing.Color.Black;
		this.ck2x1.Location = new System.Drawing.Point(310, 28);
		this.ck2x1.Name = "ck2x1";
		this.ck2x1.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ck2x1.Size = new System.Drawing.Size(47, 17);
		this.ck2x1.TabIndex = 1048;
		this.ck2x1.Text = "2x1";
		this.ck2x1.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ck2x1.UseVisualStyleBackColor = false;
		this.txtPrintStr.Font = new System.Drawing.Font("Tahoma", 14.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtPrintStr.Location = new System.Drawing.Point(641, 247);
		this.txtPrintStr.Name = "txtPrintStr";
		this.txtPrintStr.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtPrintStr.Size = new System.Drawing.Size(266, 30);
		this.txtPrintStr.TabIndex = 1047;
		this.txtPrintStr.Text = "#";
		this.txtPrintStr.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnPrintstr.Location = new System.Drawing.Point(812, 202);
		this.btnPrintstr.Name = "btnPrintstr";
		this.btnPrintstr.Size = new System.Drawing.Size(95, 43);
		this.btnPrintstr.TabIndex = 1046;
		this.btnPrintstr.Text = "طباعة رقم";
		this.btnPrintstr.UseVisualStyleBackColor = true;
		this.txtPrintPd.Font = new System.Drawing.Font("Tahoma", 15f);
		this.txtPrintPd.Location = new System.Drawing.Point(703, 25);
		this.txtPrintPd.Name = "txtPrintPd";
		this.txtPrintPd.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtPrintPd.Size = new System.Drawing.Size(79, 32);
		this.txtPrintPd.TabIndex = 1045;
		this.txtPrintPd.Text = "3000";
		this.txtPrintPd.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnPrintRest.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnPrintRest.Location = new System.Drawing.Point(696, 20);
		this.btnPrintRest.Name = "btnPrintRest";
		this.btnPrintRest.Size = new System.Drawing.Size(214, 93);
		this.btnPrintRest.TabIndex = 1044;
		this.btnPrintRest.Text = "Restart";
		this.btnPrintRest.UseVisualStyleBackColor = true;
		this.ckPrint.AutoSize = true;
		this.ckPrint.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckPrint.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckPrint.ForeColor = System.Drawing.Color.Black;
		this.ckPrint.Location = new System.Drawing.Point(846, 128);
		this.ckPrint.Name = "ckPrint";
		this.ckPrint.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckPrint.Size = new System.Drawing.Size(53, 17);
		this.ckPrint.TabIndex = 1043;
		this.ckPrint.Text = "Auto";
		this.ckPrint.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckPrint.UseVisualStyleBackColor = false;
		this.GroupBox2.Controls.Add(this.txtInfoSizeH);
		this.GroupBox2.Controls.Add(this.Label110);
		this.GroupBox2.Controls.Add(this.txtInfoSize);
		this.GroupBox2.Controls.Add(this.Label89);
		this.GroupBox2.Controls.Add(this.txtInfoT);
		this.GroupBox2.Controls.Add(this.txtInfoY);
		this.GroupBox2.Controls.Add(this.txtInfoX);
		this.GroupBox2.Controls.Add(this.Label66);
		this.GroupBox2.Controls.Add(this.Label68);
		this.GroupBox2.ForeColor = System.Drawing.Color.White;
		this.GroupBox2.Location = new System.Drawing.Point(277, 51);
		this.GroupBox2.Name = "GroupBox2";
		this.GroupBox2.Size = new System.Drawing.Size(413, 94);
		this.GroupBox2.TabIndex = 285;
		this.GroupBox2.TabStop = false;
		this.txtInfoT.Font = new System.Drawing.Font("Tahoma", 14.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtInfoT.Location = new System.Drawing.Point(216, 22);
		this.txtInfoT.Name = "txtInfoT";
		this.txtInfoT.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtInfoT.Size = new System.Drawing.Size(168, 30);
		this.txtInfoT.TabIndex = 9;
		this.txtInfoT.Text = "#";
		this.txtInfoT.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtInfoY.Location = new System.Drawing.Point(130, 33);
		this.txtInfoY.Name = "txtInfoY";
		this.txtInfoY.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtInfoY.Size = new System.Drawing.Size(67, 20);
		this.txtInfoY.TabIndex = 8;
		this.txtInfoY.Text = "7";
		this.txtInfoY.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtInfoX.Location = new System.Drawing.Point(29, 32);
		this.txtInfoX.Name = "txtInfoX";
		this.txtInfoX.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtInfoX.Size = new System.Drawing.Size(67, 20);
		this.txtInfoX.TabIndex = 7;
		this.txtInfoX.Text = "31";
		this.txtInfoX.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label66.AutoSize = true;
		this.Label66.ForeColor = System.Drawing.Color.White;
		this.Label66.Location = new System.Drawing.Point(6, 35);
		this.Label66.Name = "Label66";
		this.Label66.Size = new System.Drawing.Size(14, 13);
		this.Label66.TabIndex = 6;
		this.Label66.Text = "X";
		this.Label68.AutoSize = true;
		this.Label68.ForeColor = System.Drawing.Color.White;
		this.Label68.Location = new System.Drawing.Point(111, 36);
		this.Label68.Name = "Label68";
		this.Label68.Size = new System.Drawing.Size(14, 13);
		this.Label68.TabIndex = 4;
		this.Label68.Text = "Y";
		this.btnPrinter.Location = new System.Drawing.Point(589, 20);
		this.btnPrinter.Name = "btnPrinter";
		this.btnPrinter.Size = new System.Drawing.Size(90, 25);
		this.btnPrinter.TabIndex = 284;
		this.btnPrinter.Text = "فتح الطابعة";
		this.btnPrinter.UseVisualStyleBackColor = true;
		this.btnPrint.Font = new System.Drawing.Font("Tahoma", 14.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnPrint.Location = new System.Drawing.Point(696, 119);
		this.btnPrint.Name = "btnPrint";
		this.btnPrint.Size = new System.Drawing.Size(214, 70);
		this.btnPrint.TabIndex = 283;
		this.btnPrint.Text = "طباعة";
		this.btnPrint.UseVisualStyleBackColor = true;
		this.GroupBox5.Controls.Add(this.txtBar_tn);
		this.GroupBox5.Controls.Add(this.Label58);
		this.GroupBox5.Controls.Add(this.txtBar_tk);
		this.GroupBox5.Controls.Add(this.Label59);
		this.GroupBox5.Controls.Add(this.txtBar_H);
		this.GroupBox5.Controls.Add(this.txtBar_y);
		this.GroupBox5.Controls.Add(this.txtBar_x);
		this.GroupBox5.Controls.Add(this.Label60);
		this.GroupBox5.Controls.Add(this.Label61);
		this.GroupBox5.Controls.Add(this.Label62);
		this.GroupBox5.ForeColor = System.Drawing.Color.White;
		this.GroupBox5.Location = new System.Drawing.Point(17, 141);
		this.GroupBox5.Name = "GroupBox5";
		this.GroupBox5.Size = new System.Drawing.Size(231, 148);
		this.GroupBox5.TabIndex = 282;
		this.GroupBox5.TabStop = false;
		this.GroupBox5.Text = "مقاسات الباركود";
		this.txtBar_tn.Location = new System.Drawing.Point(130, 120);
		this.txtBar_tn.Name = "txtBar_tn";
		this.txtBar_tn.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtBar_tn.Size = new System.Drawing.Size(41, 20);
		this.txtBar_tn.TabIndex = 13;
		this.txtBar_tn.Text = "4";
		this.txtBar_tn.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label58.AutoSize = true;
		this.Label58.ForeColor = System.Drawing.Color.White;
		this.Label58.Location = new System.Drawing.Point(6, 123);
		this.Label58.Name = "Label58";
		this.Label58.Size = new System.Drawing.Size(82, 13);
		this.Label58.TabIndex = 12;
		this.Label58.Text = "Wide Bar Width";
		this.txtBar_tk.Location = new System.Drawing.Point(130, 91);
		this.txtBar_tk.Name = "txtBar_tk";
		this.txtBar_tk.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtBar_tk.Size = new System.Drawing.Size(41, 20);
		this.txtBar_tk.TabIndex = 11;
		this.txtBar_tk.Text = "2";
		this.txtBar_tk.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label59.AutoSize = true;
		this.Label59.ForeColor = System.Drawing.Color.White;
		this.Label59.Location = new System.Drawing.Point(6, 94);
		this.Label59.Name = "Label59";
		this.Label59.Size = new System.Drawing.Size(91, 13);
		this.Label59.TabIndex = 10;
		this.Label59.Text = "Narrow Bar Width";
		this.txtBar_H.Location = new System.Drawing.Point(102, 32);
		this.txtBar_H.Name = "txtBar_H";
		this.txtBar_H.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtBar_H.Size = new System.Drawing.Size(69, 20);
		this.txtBar_H.TabIndex = 9;
		this.txtBar_H.Text = "4";
		this.txtBar_H.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtBar_y.Location = new System.Drawing.Point(29, 61);
		this.txtBar_y.Name = "txtBar_y";
		this.txtBar_y.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtBar_y.Size = new System.Drawing.Size(67, 20);
		this.txtBar_y.TabIndex = 8;
		this.txtBar_y.Text = "1";
		this.txtBar_y.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtBar_x.Location = new System.Drawing.Point(29, 32);
		this.txtBar_x.Name = "txtBar_x";
		this.txtBar_x.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtBar_x.Size = new System.Drawing.Size(67, 20);
		this.txtBar_x.TabIndex = 7;
		this.txtBar_x.Text = "2";
		this.txtBar_x.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label60.AutoSize = true;
		this.Label60.ForeColor = System.Drawing.Color.White;
		this.Label60.Location = new System.Drawing.Point(6, 35);
		this.Label60.Name = "Label60";
		this.Label60.Size = new System.Drawing.Size(14, 13);
		this.Label60.TabIndex = 6;
		this.Label60.Text = "X";
		this.Label61.AutoSize = true;
		this.Label61.ForeColor = System.Drawing.Color.White;
		this.Label61.Location = new System.Drawing.Point(177, 35);
		this.Label61.Name = "Label61";
		this.Label61.Size = new System.Drawing.Size(35, 13);
		this.Label61.TabIndex = 5;
		this.Label61.Text = "ارتفاع";
		this.Label62.AutoSize = true;
		this.Label62.ForeColor = System.Drawing.Color.White;
		this.Label62.Location = new System.Drawing.Point(6, 63);
		this.Label62.Name = "Label62";
		this.Label62.Size = new System.Drawing.Size(14, 13);
		this.Label62.TabIndex = 4;
		this.Label62.Text = "Y";
		this.GroupBox1.Controls.Add(this.txtW);
		this.GroupBox1.Controls.Add(this.txtH);
		this.GroupBox1.Controls.Add(this.txtHn);
		this.GroupBox1.Controls.Add(this.Label55);
		this.GroupBox1.Controls.Add(this.Label56);
		this.GroupBox1.Controls.Add(this.Label57);
		this.GroupBox1.ForeColor = System.Drawing.Color.White;
		this.GroupBox1.Location = new System.Drawing.Point(15, 21);
		this.GroupBox1.Name = "GroupBox1";
		this.GroupBox1.Size = new System.Drawing.Size(231, 108);
		this.GroupBox1.TabIndex = 281;
		this.GroupBox1.TabStop = false;
		this.GroupBox1.Text = "مقاس الطابع بالملي";
		this.txtW.Location = new System.Drawing.Point(16, 50);
		this.txtW.Name = "txtW";
		this.txtW.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtW.Size = new System.Drawing.Size(64, 20);
		this.txtW.TabIndex = 9;
		this.txtW.Text = "40";
		this.txtW.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtH.Location = new System.Drawing.Point(16, 76);
		this.txtH.Name = "txtH";
		this.txtH.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtH.Size = new System.Drawing.Size(64, 20);
		this.txtH.TabIndex = 8;
		this.txtH.Text = "25";
		this.txtH.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtHn.Location = new System.Drawing.Point(16, 23);
		this.txtHn.Name = "txtHn";
		this.txtHn.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtHn.Size = new System.Drawing.Size(64, 20);
		this.txtHn.TabIndex = 7;
		this.txtHn.Text = "15";
		this.txtHn.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label55.AutoSize = true;
		this.Label55.ForeColor = System.Drawing.Color.White;
		this.Label55.Location = new System.Drawing.Point(85, 26);
		this.Label55.Name = "Label55";
		this.Label55.Size = new System.Drawing.Size(69, 13);
		this.Label55.TabIndex = 6;
		this.Label55.Text = "حرارة الطباعة";
		this.Label56.AutoSize = true;
		this.Label56.ForeColor = System.Drawing.Color.White;
		this.Label56.Location = new System.Drawing.Point(85, 53);
		this.Label56.Name = "Label56";
		this.Label56.Size = new System.Drawing.Size(35, 13);
		this.Label56.TabIndex = 5;
		this.Label56.Text = "العرض";
		this.Label57.AutoSize = true;
		this.Label57.ForeColor = System.Drawing.Color.White;
		this.Label57.Location = new System.Drawing.Point(86, 79);
		this.Label57.Name = "Label57";
		this.Label57.Size = new System.Drawing.Size(33, 13);
		this.Label57.TabIndex = 4;
		this.Label57.Text = "الطول";
		this.cmbPrinter.Location = new System.Drawing.Point(363, 20);
		this.cmbPrinter.Name = "cmbPrinter";
		this.cmbPrinter.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.cmbPrinter.Size = new System.Drawing.Size(220, 20);
		this.cmbPrinter.TabIndex = 280;
		this.cmbPrinter.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.TabPage3.BackColor = System.Drawing.Color.FromArgb(192, 255, 192);
		this.TabPage3.Controls.Add(this.gboxSms);
		this.TabPage3.Controls.Add(this.txtSmsT_SR);
		this.TabPage3.Controls.Add(this.txtSmsT_MR);
		this.TabPage3.Controls.Add(this.txtSmsT_HR);
		this.TabPage3.Controls.Add(this.Label109);
		this.TabPage3.Controls.Add(this.txtSmsT_S);
		this.TabPage3.Controls.Add(this.txtSmsT_M);
		this.TabPage3.Controls.Add(this.txtSmsT_H);
		this.TabPage3.Controls.Add(this.ckbtnSendSmsToNumber);
		this.TabPage3.Controls.Add(this.txtSMStothisnumber);
		this.TabPage3.Controls.Add(this.txtSmsWait);
		this.TabPage3.Controls.Add(this.btnSendSmsToNumber);
		this.TabPage3.Controls.Add(this.Label23);
		this.TabPage3.Controls.Add(this.txtLoopSsms);
		this.TabPage3.Controls.Add(this.txtLoopFsms);
		this.TabPage3.Controls.Add(this.btnAddNumbersToOCsms);
		this.TabPage3.Controls.Add(this.lblCountPresms);
		this.TabPage3.Controls.Add(this.btnClearOCsms);
		this.TabPage3.Controls.Add(this.lblOCDonesms);
		this.TabPage3.Controls.Add(this.txtOCNumbersms);
		this.TabPage3.Controls.Add(this.lstOCNumberssms);
		this.TabPage3.Location = new System.Drawing.Point(4, 22);
		this.TabPage3.Name = "TabPage3";
		this.TabPage3.Padding = new System.Windows.Forms.Padding(3);
		this.TabPage3.Size = new System.Drawing.Size(934, 295);
		this.TabPage3.TabIndex = 2;
		this.TabPage3.Text = "SMS";
		this.gboxSms.Controls.Add(this.txtGboxSub);
		this.gboxSms.Controls.Add(this.btngboxSmsAdd);
		this.gboxSms.Controls.Add(this.txtGboxQty);
		this.gboxSms.Controls.Add(this.txtGboxMain);
		this.gboxSms.Location = new System.Drawing.Point(638, 128);
		this.gboxSms.Name = "gboxSms";
		this.gboxSms.Size = new System.Drawing.Size(269, 161);
		this.gboxSms.TabIndex = 1152;
		this.gboxSms.TabStop = false;
		this.txtGboxSub.BackColor = System.Drawing.Color.White;
		this.txtGboxSub.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtGboxSub.ForeColor = System.Drawing.Color.Black;
		this.txtGboxSub.Location = new System.Drawing.Point(8, 61);
		this.txtGboxSub.MaxLength = 11;
		this.txtGboxSub.Name = "txtGboxSub";
		this.txtGboxSub.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtGboxSub.Size = new System.Drawing.Size(82, 36);
		this.txtGboxSub.TabIndex = 1146;
		this.txtGboxSub.Text = "1a";
		this.txtGboxSub.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btngboxSmsAdd.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btngboxSmsAdd.Location = new System.Drawing.Point(117, 100);
		this.btngboxSmsAdd.Name = "btngboxSmsAdd";
		this.btngboxSmsAdd.Size = new System.Drawing.Size(87, 42);
		this.btngboxSmsAdd.TabIndex = 1145;
		this.btngboxSmsAdd.Text = "Add";
		this.btngboxSmsAdd.UseVisualStyleBackColor = true;
		this.txtGboxQty.BackColor = System.Drawing.Color.White;
		this.txtGboxQty.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtGboxQty.ForeColor = System.Drawing.Color.Black;
		this.txtGboxQty.Location = new System.Drawing.Point(8, 104);
		this.txtGboxQty.MaxLength = 11;
		this.txtGboxQty.Name = "txtGboxQty";
		this.txtGboxQty.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtGboxQty.Size = new System.Drawing.Size(82, 36);
		this.txtGboxQty.TabIndex = 1144;
		this.txtGboxQty.Text = "100";
		this.txtGboxQty.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtGboxMain.BackColor = System.Drawing.Color.White;
		this.txtGboxMain.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtGboxMain.ForeColor = System.Drawing.Color.Black;
		this.txtGboxMain.Location = new System.Drawing.Point(8, 19);
		this.txtGboxMain.MaxLength = 11;
		this.txtGboxMain.Name = "txtGboxMain";
		this.txtGboxMain.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtGboxMain.Size = new System.Drawing.Size(196, 36);
		this.txtGboxMain.TabIndex = 1143;
		this.txtGboxMain.Text = "5w4a6u";
		this.txtGboxMain.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtSmsT_SR.BackColor = System.Drawing.Color.FromArgb(192, 255, 192);
		this.txtSmsT_SR.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtSmsT_SR.ForeColor = System.Drawing.Color.Black;
		this.txtSmsT_SR.Location = new System.Drawing.Point(497, 236);
		this.txtSmsT_SR.MaxLength = 2;
		this.txtSmsT_SR.Name = "txtSmsT_SR";
		this.txtSmsT_SR.ReadOnly = true;
		this.txtSmsT_SR.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtSmsT_SR.Size = new System.Drawing.Size(47, 36);
		this.txtSmsT_SR.TabIndex = 1151;
		this.txtSmsT_SR.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtSmsT_MR.BackColor = System.Drawing.Color.FromArgb(192, 255, 192);
		this.txtSmsT_MR.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtSmsT_MR.ForeColor = System.Drawing.Color.Black;
		this.txtSmsT_MR.Location = new System.Drawing.Point(445, 236);
		this.txtSmsT_MR.MaxLength = 2;
		this.txtSmsT_MR.Name = "txtSmsT_MR";
		this.txtSmsT_MR.ReadOnly = true;
		this.txtSmsT_MR.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtSmsT_MR.Size = new System.Drawing.Size(47, 36);
		this.txtSmsT_MR.TabIndex = 1150;
		this.txtSmsT_MR.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtSmsT_HR.BackColor = System.Drawing.Color.FromArgb(192, 255, 192);
		this.txtSmsT_HR.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtSmsT_HR.ForeColor = System.Drawing.Color.Black;
		this.txtSmsT_HR.Location = new System.Drawing.Point(392, 236);
		this.txtSmsT_HR.MaxLength = 2;
		this.txtSmsT_HR.Name = "txtSmsT_HR";
		this.txtSmsT_HR.ReadOnly = true;
		this.txtSmsT_HR.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtSmsT_HR.Size = new System.Drawing.Size(47, 36);
		this.txtSmsT_HR.TabIndex = 1149;
		this.txtSmsT_HR.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label109.AutoSize = true;
		this.Label109.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label109.ForeColor = System.Drawing.Color.Black;
		this.Label109.Location = new System.Drawing.Point(389, 172);
		this.Label109.Name = "Label109";
		this.Label109.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label109.Size = new System.Drawing.Size(68, 17);
		this.Label109.TabIndex = 1148;
		this.Label109.Text = "Set Time";
		this.txtSmsT_S.BackColor = System.Drawing.Color.White;
		this.txtSmsT_S.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtSmsT_S.ForeColor = System.Drawing.Color.Black;
		this.txtSmsT_S.Location = new System.Drawing.Point(497, 194);
		this.txtSmsT_S.MaxLength = 2;
		this.txtSmsT_S.Name = "txtSmsT_S";
		this.txtSmsT_S.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtSmsT_S.Size = new System.Drawing.Size(47, 36);
		this.txtSmsT_S.TabIndex = 1147;
		this.txtSmsT_S.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtSmsT_M.BackColor = System.Drawing.Color.White;
		this.txtSmsT_M.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtSmsT_M.ForeColor = System.Drawing.Color.Black;
		this.txtSmsT_M.Location = new System.Drawing.Point(445, 194);
		this.txtSmsT_M.MaxLength = 2;
		this.txtSmsT_M.Name = "txtSmsT_M";
		this.txtSmsT_M.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtSmsT_M.Size = new System.Drawing.Size(47, 36);
		this.txtSmsT_M.TabIndex = 1146;
		this.txtSmsT_M.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtSmsT_H.BackColor = System.Drawing.Color.White;
		this.txtSmsT_H.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtSmsT_H.ForeColor = System.Drawing.Color.Black;
		this.txtSmsT_H.Location = new System.Drawing.Point(392, 194);
		this.txtSmsT_H.MaxLength = 2;
		this.txtSmsT_H.Name = "txtSmsT_H";
		this.txtSmsT_H.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtSmsT_H.Size = new System.Drawing.Size(47, 36);
		this.txtSmsT_H.TabIndex = 1145;
		this.txtSmsT_H.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.ckbtnSendSmsToNumber.AutoSize = true;
		this.ckbtnSendSmsToNumber.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnSendSmsToNumber.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnSendSmsToNumber.ForeColor = System.Drawing.Color.Black;
		this.ckbtnSendSmsToNumber.Location = new System.Drawing.Point(758, 42);
		this.ckbtnSendSmsToNumber.Name = "ckbtnSendSmsToNumber";
		this.ckbtnSendSmsToNumber.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnSendSmsToNumber.Size = new System.Drawing.Size(53, 17);
		this.ckbtnSendSmsToNumber.TabIndex = 1143;
		this.ckbtnSendSmsToNumber.Text = "Auto";
		this.ckbtnSendSmsToNumber.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnSendSmsToNumber.UseVisualStyleBackColor = false;
		this.txtSMStothisnumber.BackColor = System.Drawing.Color.White;
		this.txtSMStothisnumber.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtSMStothisnumber.ForeColor = System.Drawing.Color.Black;
		this.txtSMStothisnumber.Location = new System.Drawing.Point(392, 131);
		this.txtSMStothisnumber.MaxLength = 11;
		this.txtSMStothisnumber.Name = "txtSMStothisnumber";
		this.txtSMStothisnumber.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtSMStothisnumber.Size = new System.Drawing.Size(221, 36);
		this.txtSMStothisnumber.TabIndex = 1142;
		this.txtSMStothisnumber.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtSmsWait.BackColor = System.Drawing.Color.Blue;
		this.txtSmsWait.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtSmsWait.ForeColor = System.Drawing.Color.White;
		this.txtSmsWait.Location = new System.Drawing.Point(405, 42);
		this.txtSmsWait.Name = "txtSmsWait";
		this.txtSmsWait.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtSmsWait.Size = new System.Drawing.Size(50, 24);
		this.txtSmsWait.TabIndex = 1141;
		this.txtSmsWait.Text = "1";
		this.txtSmsWait.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnSendSmsToNumber.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnSendSmsToNumber.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnSendSmsToNumber.Location = new System.Drawing.Point(392, 34);
		this.btnSendSmsToNumber.Name = "btnSendSmsToNumber";
		this.btnSendSmsToNumber.Size = new System.Drawing.Size(425, 64);
		this.btnSendSmsToNumber.TabIndex = 1140;
		this.btnSendSmsToNumber.Text = "Send Sms";
		this.btnSendSmsToNumber.UseVisualStyleBackColor = false;
		this.Label23.AutoSize = true;
		this.Label23.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label23.ForeColor = System.Drawing.Color.Black;
		this.Label23.Location = new System.Drawing.Point(389, 107);
		this.Label23.Name = "Label23";
		this.Label23.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label23.Size = new System.Drawing.Size(103, 17);
		this.Label23.TabIndex = 1139;
		this.Label23.Text = "Send Number";
		this.txtLoopSsms.BackColor = System.Drawing.Color.Black;
		this.txtLoopSsms.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopSsms.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopSsms.Location = new System.Drawing.Point(823, 66);
		this.txtLoopSsms.Name = "txtLoopSsms";
		this.txtLoopSsms.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopSsms.Size = new System.Drawing.Size(44, 24);
		this.txtLoopSsms.TabIndex = 1138;
		this.txtLoopSsms.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtLoopFsms.BackColor = System.Drawing.Color.Black;
		this.txtLoopFsms.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopFsms.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopFsms.Location = new System.Drawing.Point(824, 38);
		this.txtLoopFsms.Name = "txtLoopFsms";
		this.txtLoopFsms.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopFsms.Size = new System.Drawing.Size(43, 24);
		this.txtLoopFsms.TabIndex = 1137;
		this.txtLoopFsms.Text = "1";
		this.txtLoopFsms.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnAddNumbersToOCsms.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnAddNumbersToOCsms.Location = new System.Drawing.Point(6, 17);
		this.btnAddNumbersToOCsms.Name = "btnAddNumbersToOCsms";
		this.btnAddNumbersToOCsms.Size = new System.Drawing.Size(87, 42);
		this.btnAddNumbersToOCsms.TabIndex = 1136;
		this.btnAddNumbersToOCsms.Text = "Add";
		this.btnAddNumbersToOCsms.UseVisualStyleBackColor = true;
		this.lblCountPresms.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lblCountPresms.ForeColor = System.Drawing.Color.Black;
		this.lblCountPresms.Location = new System.Drawing.Point(6, 183);
		this.lblCountPresms.Name = "lblCountPresms";
		this.lblCountPresms.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblCountPresms.Size = new System.Drawing.Size(77, 19);
		this.lblCountPresms.TabIndex = 1135;
		this.lblCountPresms.Text = "#";
		this.lblCountPresms.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.btnClearOCsms.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnClearOCsms.Location = new System.Drawing.Point(5, 232);
		this.btnClearOCsms.Name = "btnClearOCsms";
		this.btnClearOCsms.Size = new System.Drawing.Size(88, 44);
		this.btnClearOCsms.TabIndex = 1134;
		this.btnClearOCsms.Text = "Clear";
		this.btnClearOCsms.UseVisualStyleBackColor = true;
		this.lblOCDonesms.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.lblOCDonesms.ForeColor = System.Drawing.Color.Black;
		this.lblOCDonesms.Location = new System.Drawing.Point(6, 136);
		this.lblOCDonesms.Name = "lblOCDonesms";
		this.lblOCDonesms.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblOCDonesms.Size = new System.Drawing.Size(77, 19);
		this.lblOCDonesms.TabIndex = 1132;
		this.lblOCDonesms.Text = "#";
		this.lblOCDonesms.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.txtOCNumbersms.BackColor = System.Drawing.Color.White;
		this.txtOCNumbersms.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOCNumbersms.ForeColor = System.Drawing.Color.Black;
		this.txtOCNumbersms.Location = new System.Drawing.Point(100, 16);
		this.txtOCNumbersms.Name = "txtOCNumbersms";
		this.txtOCNumbersms.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOCNumbersms.Size = new System.Drawing.Size(231, 36);
		this.txtOCNumbersms.TabIndex = 1131;
		this.txtOCNumbersms.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.lstOCNumberssms.Font = new System.Drawing.Font("Tahoma", 14f, System.Drawing.FontStyle.Bold);
		this.lstOCNumberssms.FormattingEnabled = true;
		this.lstOCNumberssms.ItemHeight = 23;
		this.lstOCNumberssms.Location = new System.Drawing.Point(100, 59);
		this.lstOCNumberssms.Name = "lstOCNumberssms";
		this.lstOCNumberssms.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lstOCNumberssms.Size = new System.Drawing.Size(231, 188);
		this.lstOCNumberssms.TabIndex = 1130;
		this.TabPage5.BackColor = System.Drawing.Color.Red;
		this.TabPage5.Controls.Add(this.Label12);
		this.TabPage5.Controls.Add(this.txtGftLmt);
		this.TabPage5.Controls.Add(this.txtTotalTransVal);
		this.TabPage5.Controls.Add(this.btnTransAllMony);
		this.TabPage5.Controls.Add(this.btnVodaTrans);
		this.TabPage5.Controls.Add(this.btnRunAuto);
		this.TabPage5.Controls.Add(this.txtLoopSVC);
		this.TabPage5.Controls.Add(this.txtLoopFVC);
		this.TabPage5.Controls.Add(this.btnExnums);
		this.TabPage5.Controls.Add(this.lstNumbers);
		this.TabPage5.Controls.Add(this.txtEnumsVC);
		this.TabPage5.Controls.Add(this.btnTransInv);
		this.TabPage5.Controls.Add(this.Label9);
		this.TabPage5.Controls.Add(this.txtTransNum);
		this.TabPage5.Controls.Add(this.btnTransVal);
		this.TabPage5.Controls.Add(this.btnRunAll);
		this.TabPage5.Controls.Add(this.btnGetBal);
		this.TabPage5.Controls.Add(this.btnRun02);
		this.TabPage5.Controls.Add(this.bt);
		this.TabPage5.Controls.Add(this.btnNextItems);
		this.TabPage5.Controls.Add(this.btnWorkID);
		this.TabPage5.Controls.Add(this.Label8);
		this.TabPage5.Controls.Add(this.txtTransMoney);
		this.TabPage5.Controls.Add(this.Label6);
		this.TabPage5.Controls.Add(this.txtQtyDone);
		this.TabPage5.Controls.Add(this.Label5);
		this.TabPage5.Controls.Add(this.txtMoney);
		this.TabPage5.Controls.Add(this.Label3);
		this.TabPage5.Controls.Add(this.txtWorkID);
		this.TabPage5.Location = new System.Drawing.Point(4, 22);
		this.TabPage5.Name = "TabPage5";
		this.TabPage5.Padding = new System.Windows.Forms.Padding(3);
		this.TabPage5.Size = new System.Drawing.Size(934, 295);
		this.TabPage5.TabIndex = 4;
		this.TabPage5.Text = "VFOLd";
		this.Label12.AutoSize = true;
		this.Label12.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label12.ForeColor = System.Drawing.Color.Black;
		this.Label12.Location = new System.Drawing.Point(182, 213);
		this.Label12.Name = "Label12";
		this.Label12.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label12.Size = new System.Drawing.Size(118, 17);
		this.Label12.TabIndex = 981;
		this.Label12.Text = "تحديد عدد الهدايا";
		this.txtGftLmt.BackColor = System.Drawing.Color.White;
		this.txtGftLmt.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtGftLmt.ForeColor = System.Drawing.Color.Black;
		this.txtGftLmt.Location = new System.Drawing.Point(206, 237);
		this.txtGftLmt.Name = "txtGftLmt";
		this.txtGftLmt.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtGftLmt.Size = new System.Drawing.Size(63, 27);
		this.txtGftLmt.TabIndex = 980;
		this.txtGftLmt.Text = "1";
		this.txtGftLmt.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtTotalTransVal.BackColor = System.Drawing.Color.Black;
		this.txtTotalTransVal.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtTotalTransVal.ForeColor = System.Drawing.Color.Lime;
		this.txtTotalTransVal.Location = new System.Drawing.Point(173, 87);
		this.txtTotalTransVal.Name = "txtTotalTransVal";
		this.txtTotalTransVal.ReadOnly = true;
		this.txtTotalTransVal.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTotalTransVal.Size = new System.Drawing.Size(81, 24);
		this.txtTotalTransVal.TabIndex = 979;
		this.txtTotalTransVal.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnTransAllMony.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTransAllMony.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnTransAllMony.Location = new System.Drawing.Point(6, 235);
		this.btnTransAllMony.Name = "btnTransAllMony";
		this.btnTransAllMony.Size = new System.Drawing.Size(161, 27);
		this.btnTransAllMony.TabIndex = 978;
		this.btnTransAllMony.Text = "تحويل كامل المبلغ كاش";
		this.btnTransAllMony.UseVisualStyleBackColor = false;
		this.btnVodaTrans.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnVodaTrans.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnVodaTrans.Location = new System.Drawing.Point(450, 121);
		this.btnVodaTrans.Name = "btnVodaTrans";
		this.btnVodaTrans.Size = new System.Drawing.Size(180, 27);
		this.btnVodaTrans.TabIndex = 977;
		this.btnVodaTrans.Text = "تحويل رصيد عادى";
		this.btnVodaTrans.UseVisualStyleBackColor = false;
		this.btnRunAuto.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRunAuto.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnRunAuto.Location = new System.Drawing.Point(363, 8);
		this.btnRunAuto.Name = "btnRunAuto";
		this.btnRunAuto.Size = new System.Drawing.Size(81, 53);
		this.btnRunAuto.TabIndex = 973;
		this.btnRunAuto.Text = "تشغيل تلقائى";
		this.btnRunAuto.UseVisualStyleBackColor = false;
		this.txtLoopSVC.BackColor = System.Drawing.Color.Black;
		this.txtLoopSVC.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopSVC.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopSVC.Location = new System.Drawing.Point(323, 144);
		this.txtLoopSVC.Name = "txtLoopSVC";
		this.txtLoopSVC.ReadOnly = true;
		this.txtLoopSVC.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopSVC.Size = new System.Drawing.Size(55, 24);
		this.txtLoopSVC.TabIndex = 972;
		this.txtLoopSVC.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtLoopFVC.BackColor = System.Drawing.Color.Black;
		this.txtLoopFVC.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopFVC.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopFVC.Location = new System.Drawing.Point(263, 144);
		this.txtLoopFVC.Name = "txtLoopFVC";
		this.txtLoopFVC.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopFVC.Size = new System.Drawing.Size(54, 24);
		this.txtLoopFVC.TabIndex = 971;
		this.txtLoopFVC.Text = "1";
		this.txtLoopFVC.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnExnums.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnExnums.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnExnums.Location = new System.Drawing.Point(6, 159);
		this.btnExnums.Name = "btnExnums";
		this.btnExnums.Size = new System.Drawing.Size(162, 27);
		this.btnExnums.TabIndex = 970;
		this.btnExnums.Text = "تبديل الخطوط";
		this.btnExnums.UseVisualStyleBackColor = false;
		this.lstNumbers.Font = new System.Drawing.Font("Tahoma", 14f, System.Drawing.FontStyle.Bold);
		this.lstNumbers.FormattingEnabled = true;
		this.lstNumbers.ItemHeight = 23;
		this.lstNumbers.Location = new System.Drawing.Point(5, 38);
		this.lstNumbers.Name = "lstNumbers";
		this.lstNumbers.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lstNumbers.Size = new System.Drawing.Size(162, 73);
		this.lstNumbers.TabIndex = 969;
		this.txtEnumsVC.BackColor = System.Drawing.Color.White;
		this.txtEnumsVC.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtEnumsVC.ForeColor = System.Drawing.Color.Black;
		this.txtEnumsVC.Location = new System.Drawing.Point(109, 5);
		this.txtEnumsVC.Name = "txtEnumsVC";
		this.txtEnumsVC.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtEnumsVC.Size = new System.Drawing.Size(58, 27);
		this.txtEnumsVC.TabIndex = 907;
		this.txtEnumsVC.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnTransInv.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTransInv.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnTransInv.Location = new System.Drawing.Point(450, 92);
		this.btnTransInv.Name = "btnTransInv";
		this.btnTransInv.Size = new System.Drawing.Size(180, 27);
		this.btnTransInv.TabIndex = 906;
		this.btnTransInv.Text = "تحويل الهدية فاتورة";
		this.btnTransInv.UseVisualStyleBackColor = false;
		this.Label9.AutoSize = true;
		this.Label9.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label9.ForeColor = System.Drawing.Color.Black;
		this.Label9.Location = new System.Drawing.Point(213, 64);
		this.Label9.Name = "Label9";
		this.Label9.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label9.Size = new System.Drawing.Size(181, 17);
		this.Label9.TabIndex = 905;
		this.Label9.Text = "رقم الخط المحول له الهدية";
		this.txtTransNum.BackColor = System.Drawing.Color.White;
		this.txtTransNum.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtTransNum.ForeColor = System.Drawing.Color.Black;
		this.txtTransNum.Location = new System.Drawing.Point(263, 83);
		this.txtTransNum.MaxLength = 11;
		this.txtTransNum.Name = "txtTransNum";
		this.txtTransNum.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTransNum.Size = new System.Drawing.Size(129, 27);
		this.txtTransNum.TabIndex = 904;
		this.txtTransNum.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnTransVal.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTransVal.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnTransVal.Location = new System.Drawing.Point(450, 64);
		this.btnTransVal.Name = "btnTransVal";
		this.btnTransVal.Size = new System.Drawing.Size(180, 27);
		this.btnTransVal.TabIndex = 903;
		this.btnTransVal.Text = "تحويل الهدية رصيد";
		this.btnTransVal.UseVisualStyleBackColor = false;
		this.btnRunAll.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRunAll.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnRunAll.Location = new System.Drawing.Point(445, 159);
		this.btnRunAll.Name = "btnRunAll";
		this.btnRunAll.Size = new System.Drawing.Size(62, 55);
		this.btnRunAll.TabIndex = 902;
		this.btnRunAll.Text = "تشغيل ذكى";
		this.btnRunAll.UseVisualStyleBackColor = false;
		this.btnGetBal.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnGetBal.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnGetBal.Location = new System.Drawing.Point(450, 8);
		this.btnGetBal.Name = "btnGetBal";
		this.btnGetBal.Size = new System.Drawing.Size(180, 51);
		this.btnGetBal.TabIndex = 901;
		this.btnGetBal.Text = "استعلام عن رصيد فودافون كاش";
		this.btnGetBal.UseVisualStyleBackColor = false;
		this.btnRun02.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRun02.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnRun02.Location = new System.Drawing.Point(508, 186);
		this.btnRun02.Name = "btnRun02";
		this.btnRun02.Size = new System.Drawing.Size(122, 27);
		this.btnRun02.TabIndex = 900;
		this.btnRun02.Text = "استقبال الهدية";
		this.btnRun02.UseVisualStyleBackColor = false;
		this.bt.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.bt.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.bt.Location = new System.Drawing.Point(508, 159);
		this.bt.Name = "bt";
		this.bt.Size = new System.Drawing.Size(122, 27);
		this.bt.TabIndex = 899;
		this.bt.Text = "تحويل عادى";
		this.bt.UseVisualStyleBackColor = false;
		this.btnNextItems.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnNextItems.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnNextItems.Location = new System.Drawing.Point(6, 5);
		this.btnNextItems.Name = "btnNextItems";
		this.btnNextItems.Size = new System.Drawing.Size(102, 27);
		this.btnNextItems.TabIndex = 898;
		this.btnNextItems.Text = "هات الخطوط";
		this.btnNextItems.UseVisualStyleBackColor = false;
		this.btnWorkID.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnWorkID.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnWorkID.Location = new System.Drawing.Point(383, 232);
		this.btnWorkID.Name = "btnWorkID";
		this.btnWorkID.Size = new System.Drawing.Size(69, 27);
		this.btnWorkID.TabIndex = 897;
		this.btnWorkID.Text = "جديد";
		this.btnWorkID.UseVisualStyleBackColor = false;
		this.Label8.AutoSize = true;
		this.Label8.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label8.ForeColor = System.Drawing.Color.Black;
		this.Label8.Location = new System.Drawing.Point(349, 117);
		this.Label8.Name = "Label8";
		this.Label8.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label8.Size = new System.Drawing.Size(45, 17);
		this.Label8.TabIndex = 896;
		this.Label8.Text = "المبلغ";
		this.txtTransMoney.BackColor = System.Drawing.Color.White;
		this.txtTransMoney.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtTransMoney.ForeColor = System.Drawing.Color.Black;
		this.txtTransMoney.Location = new System.Drawing.Point(263, 114);
		this.txtTransMoney.Name = "txtTransMoney";
		this.txtTransMoney.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTransMoney.Size = new System.Drawing.Size(81, 27);
		this.txtTransMoney.TabIndex = 895;
		this.txtTransMoney.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label6.AutoSize = true;
		this.Label6.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label6.ForeColor = System.Drawing.Color.Black;
		this.Label6.Location = new System.Drawing.Point(182, 10);
		this.Label6.Name = "Label6";
		this.Label6.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label6.Size = new System.Drawing.Size(64, 17);
		this.Label6.TabIndex = 892;
		this.Label6.Text = "مسلسل";
		this.txtQtyDone.BackColor = System.Drawing.Color.White;
		this.txtQtyDone.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtQtyDone.ForeColor = System.Drawing.Color.Black;
		this.txtQtyDone.Location = new System.Drawing.Point(173, 30);
		this.txtQtyDone.Name = "txtQtyDone";
		this.txtQtyDone.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtQtyDone.Size = new System.Drawing.Size(81, 27);
		this.txtQtyDone.TabIndex = 891;
		this.txtQtyDone.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label5.AutoSize = true;
		this.Label5.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label5.ForeColor = System.Drawing.Color.Black;
		this.Label5.Location = new System.Drawing.Point(297, 10);
		this.Label5.Name = "Label5";
		this.Label5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label5.Size = new System.Drawing.Size(45, 17);
		this.Label5.TabIndex = 890;
		this.Label5.Text = "المبلغ";
		this.txtMoney.BackColor = System.Drawing.Color.White;
		this.txtMoney.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtMoney.ForeColor = System.Drawing.Color.Black;
		this.txtMoney.Location = new System.Drawing.Point(276, 30);
		this.txtMoney.Name = "txtMoney";
		this.txtMoney.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMoney.Size = new System.Drawing.Size(81, 27);
		this.txtMoney.TabIndex = 889;
		this.txtMoney.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label3.AutoSize = true;
		this.Label3.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label3.ForeColor = System.Drawing.Color.Black;
		this.Label3.Location = new System.Drawing.Point(542, 240);
		this.Label3.Name = "Label3";
		this.Label3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label3.Size = new System.Drawing.Size(90, 17);
		this.Label3.TabIndex = 886;
		this.Label3.Text = "رقم التشغيل";
		this.txtWorkID.BackColor = System.Drawing.Color.White;
		this.txtWorkID.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtWorkID.ForeColor = System.Drawing.Color.Black;
		this.txtWorkID.Location = new System.Drawing.Point(458, 232);
		this.txtWorkID.Name = "txtWorkID";
		this.txtWorkID.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtWorkID.Size = new System.Drawing.Size(81, 27);
		this.txtWorkID.TabIndex = 885;
		this.txtWorkID.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.TabPage14.BackColor = System.Drawing.Color.Red;
		this.TabPage14.Controls.Add(this.txtTotalTransValP);
		this.TabPage14.Controls.Add(this.btnTransValP);
		this.TabPage14.Controls.Add(this.Label48);
		this.TabPage14.Controls.Add(this.txtTransMoneyP);
		this.TabPage14.Controls.Add(this.txtReplyPower);
		this.TabPage14.Controls.Add(this.Button2);
		this.TabPage14.Controls.Add(this.txtUssdP2);
		this.TabPage14.Controls.Add(this.btnRunPowe2);
		this.TabPage14.Controls.Add(this.txtTempxxp);
		this.TabPage14.Controls.Add(this.Label47);
		this.TabPage14.Controls.Add(this.txtTransNumP);
		this.TabPage14.Controls.Add(this.txtLoopSVCP);
		this.TabPage14.Controls.Add(this.txtLoopFVCP);
		this.TabPage14.Controls.Add(this.Label45);
		this.TabPage14.Controls.Add(this.txtQtyDoneP);
		this.TabPage14.Controls.Add(this.txtUssdP1);
		this.TabPage14.Controls.Add(this.btnRunPower);
		this.TabPage14.Controls.Add(this.btnAutoSendPower);
		this.TabPage14.Controls.Add(this.lstNumbersP);
		this.TabPage14.Controls.Add(this.txtEnumsVCP);
		this.TabPage14.Controls.Add(this.btnNextItemsP);
		this.TabPage14.Location = new System.Drawing.Point(4, 22);
		this.TabPage14.Name = "TabPage14";
		this.TabPage14.Padding = new System.Windows.Forms.Padding(3);
		this.TabPage14.Size = new System.Drawing.Size(934, 295);
		this.TabPage14.TabIndex = 14;
		this.TabPage14.Text = "VFPower";
		this.txtTotalTransValP.BackColor = System.Drawing.Color.Black;
		this.txtTotalTransValP.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtTotalTransValP.ForeColor = System.Drawing.Color.Lime;
		this.txtTotalTransValP.Location = new System.Drawing.Point(292, 172);
		this.txtTotalTransValP.Name = "txtTotalTransValP";
		this.txtTotalTransValP.ReadOnly = true;
		this.txtTotalTransValP.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTotalTransValP.Size = new System.Drawing.Size(81, 24);
		this.txtTotalTransValP.TabIndex = 1010;
		this.txtTotalTransValP.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnTransValP.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTransValP.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnTransValP.Location = new System.Drawing.Point(378, 170);
		this.btnTransValP.Name = "btnTransValP";
		this.btnTransValP.Size = new System.Drawing.Size(187, 27);
		this.btnTransValP.TabIndex = 1009;
		this.btnTransValP.Text = "تحويل الهدية رصيد";
		this.btnTransValP.UseVisualStyleBackColor = false;
		this.Label48.AutoSize = true;
		this.Label48.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label48.ForeColor = System.Drawing.Color.Black;
		this.Label48.Location = new System.Drawing.Point(309, 206);
		this.Label48.Name = "Label48";
		this.Label48.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label48.Size = new System.Drawing.Size(45, 17);
		this.Label48.TabIndex = 1008;
		this.Label48.Text = "المبلغ";
		this.txtTransMoneyP.BackColor = System.Drawing.Color.White;
		this.txtTransMoneyP.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtTransMoneyP.ForeColor = System.Drawing.Color.Black;
		this.txtTransMoneyP.Location = new System.Drawing.Point(291, 236);
		this.txtTransMoneyP.Name = "txtTransMoneyP";
		this.txtTransMoneyP.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTransMoneyP.Size = new System.Drawing.Size(81, 27);
		this.txtTransMoneyP.TabIndex = 1007;
		this.txtTransMoneyP.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtReplyPower.BackColor = System.Drawing.Color.Black;
		this.txtReplyPower.BorderStyle = System.Windows.Forms.BorderStyle.None;
		this.txtReplyPower.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtReplyPower.ForeColor = System.Drawing.Color.White;
		this.txtReplyPower.Location = new System.Drawing.Point(353, 107);
		this.txtReplyPower.MaxLength = 1;
		this.txtReplyPower.Name = "txtReplyPower";
		this.txtReplyPower.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtReplyPower.Size = new System.Drawing.Size(37, 17);
		this.txtReplyPower.TabIndex = 1006;
		this.txtReplyPower.TabStop = false;
		this.txtReplyPower.Text = "0";
		this.txtReplyPower.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Button2.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.Button2.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.Button2.ForeColor = System.Drawing.Color.Black;
		this.Button2.Location = new System.Drawing.Point(337, 95);
		this.Button2.Name = "Button2";
		this.Button2.Size = new System.Drawing.Size(161, 39);
		this.Button2.TabIndex = 1005;
		this.Button2.Text = "الReply By اختيار رقم ";
		this.Button2.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.Button2.UseVisualStyleBackColor = false;
		this.txtUssdP2.BackColor = System.Drawing.Color.White;
		this.txtUssdP2.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtUssdP2.ForeColor = System.Drawing.Color.Black;
		this.txtUssdP2.Location = new System.Drawing.Point(172, 14);
		this.txtUssdP2.Name = "txtUssdP2";
		this.txtUssdP2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtUssdP2.Size = new System.Drawing.Size(159, 27);
		this.txtUssdP2.TabIndex = 1004;
		this.txtUssdP2.Text = "*1*15*0#";
		this.btnRunPowe2.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRunPowe2.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnRunPowe2.Location = new System.Drawing.Point(171, 47);
		this.btnRunPowe2.Name = "btnRunPowe2";
		this.btnRunPowe2.Size = new System.Drawing.Size(162, 42);
		this.btnRunPowe2.TabIndex = 1003;
		this.btnRunPowe2.Text = "تنفيذ";
		this.btnRunPowe2.UseVisualStyleBackColor = false;
		this.txtTempxxp.BackColor = System.Drawing.Color.FromArgb(224, 224, 224);
		this.txtTempxxp.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtTempxxp.ForeColor = System.Drawing.Color.Black;
		this.txtTempxxp.Location = new System.Drawing.Point(4, 239);
		this.txtTempxxp.Name = "txtTempxxp";
		this.txtTempxxp.ReadOnly = true;
		this.txtTempxxp.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTempxxp.Size = new System.Drawing.Size(243, 27);
		this.txtTempxxp.TabIndex = 1002;
		this.Label47.AutoSize = true;
		this.Label47.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label47.ForeColor = System.Drawing.Color.Black;
		this.Label47.Location = new System.Drawing.Point(415, 206);
		this.Label47.Name = "Label47";
		this.Label47.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label47.Size = new System.Drawing.Size(117, 17);
		this.Label47.TabIndex = 1001;
		this.Label47.Text = "المحول له الهدية";
		this.txtTransNumP.BackColor = System.Drawing.Color.White;
		this.txtTransNumP.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtTransNumP.ForeColor = System.Drawing.Color.Black;
		this.txtTransNumP.Location = new System.Drawing.Point(378, 231);
		this.txtTransNumP.MaxLength = 11;
		this.txtTransNumP.Name = "txtTransNumP";
		this.txtTransNumP.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTransNumP.Size = new System.Drawing.Size(187, 36);
		this.txtTransNumP.TabIndex = 1000;
		this.txtTransNumP.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtLoopSVCP.BackColor = System.Drawing.Color.Black;
		this.txtLoopSVCP.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopSVCP.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopSVCP.Location = new System.Drawing.Point(565, 44);
		this.txtLoopSVCP.Name = "txtLoopSVCP";
		this.txtLoopSVCP.ReadOnly = true;
		this.txtLoopSVCP.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopSVCP.Size = new System.Drawing.Size(55, 24);
		this.txtLoopSVCP.TabIndex = 990;
		this.txtLoopSVCP.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtLoopFVCP.BackColor = System.Drawing.Color.Black;
		this.txtLoopFVCP.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopFVCP.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopFVCP.Location = new System.Drawing.Point(566, 17);
		this.txtLoopFVCP.Name = "txtLoopFVCP";
		this.txtLoopFVCP.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopFVCP.Size = new System.Drawing.Size(54, 24);
		this.txtLoopFVCP.TabIndex = 989;
		this.txtLoopFVCP.Text = "1";
		this.txtLoopFVCP.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label45.AutoSize = true;
		this.Label45.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label45.ForeColor = System.Drawing.Color.Black;
		this.Label45.Location = new System.Drawing.Point(100, 147);
		this.Label45.Name = "Label45";
		this.Label45.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label45.Size = new System.Drawing.Size(64, 17);
		this.Label45.TabIndex = 988;
		this.Label45.Text = "مسلسل";
		this.txtQtyDoneP.BackColor = System.Drawing.Color.White;
		this.txtQtyDoneP.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtQtyDoneP.ForeColor = System.Drawing.Color.Black;
		this.txtQtyDoneP.Location = new System.Drawing.Point(6, 147);
		this.txtQtyDoneP.Name = "txtQtyDoneP";
		this.txtQtyDoneP.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtQtyDoneP.Size = new System.Drawing.Size(81, 27);
		this.txtQtyDoneP.TabIndex = 987;
		this.txtQtyDoneP.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtUssdP1.BackColor = System.Drawing.Color.White;
		this.txtUssdP1.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtUssdP1.ForeColor = System.Drawing.Color.Black;
		this.txtUssdP1.Location = new System.Drawing.Point(337, 14);
		this.txtUssdP1.Name = "txtUssdP1";
		this.txtUssdP1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtUssdP1.Size = new System.Drawing.Size(159, 27);
		this.txtUssdP1.TabIndex = 986;
		this.txtUssdP1.Text = "*1*2#";
		this.btnRunPower.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRunPower.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnRunPower.Location = new System.Drawing.Point(336, 47);
		this.btnRunPower.Name = "btnRunPower";
		this.btnRunPower.Size = new System.Drawing.Size(162, 42);
		this.btnRunPower.TabIndex = 985;
		this.btnRunPower.Text = "تنفيذ";
		this.btnRunPower.UseVisualStyleBackColor = false;
		this.btnAutoSendPower.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnAutoSendPower.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnAutoSendPower.Location = new System.Drawing.Point(3, 177);
		this.btnAutoSendPower.Name = "btnAutoSendPower";
		this.btnAutoSendPower.Size = new System.Drawing.Size(244, 54);
		this.btnAutoSendPower.TabIndex = 984;
		this.btnAutoSendPower.Text = "ارسال الى كل الخطوط المحددة";
		this.btnAutoSendPower.UseVisualStyleBackColor = false;
		this.lstNumbersP.Font = new System.Drawing.Font("Tahoma", 14f, System.Drawing.FontStyle.Bold);
		this.lstNumbersP.FormattingEnabled = true;
		this.lstNumbersP.ItemHeight = 23;
		this.lstNumbersP.Location = new System.Drawing.Point(6, 44);
		this.lstNumbersP.Name = "lstNumbersP";
		this.lstNumbersP.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lstNumbersP.Size = new System.Drawing.Size(162, 27);
		this.lstNumbersP.TabIndex = 972;
		this.txtEnumsVCP.BackColor = System.Drawing.Color.White;
		this.txtEnumsVCP.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtEnumsVCP.ForeColor = System.Drawing.Color.Black;
		this.txtEnumsVCP.Location = new System.Drawing.Point(106, 11);
		this.txtEnumsVCP.Name = "txtEnumsVCP";
		this.txtEnumsVCP.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtEnumsVCP.Size = new System.Drawing.Size(58, 27);
		this.txtEnumsVCP.TabIndex = 971;
		this.txtEnumsVCP.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnNextItemsP.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnNextItemsP.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnNextItemsP.Location = new System.Drawing.Point(3, 11);
		this.btnNextItemsP.Name = "btnNextItemsP";
		this.btnNextItemsP.Size = new System.Drawing.Size(102, 27);
		this.btnNextItemsP.TabIndex = 970;
		this.btnNextItemsP.Text = "هات الخطوط";
		this.btnNextItemsP.UseVisualStyleBackColor = false;
		this.TabPage12.BackColor = System.Drawing.Color.Red;
		this.TabPage12.Controls.Add(this.txtLoopSSD);
		this.TabPage12.Controls.Add(this.txtLoopFSD);
		this.TabPage12.Controls.Add(this.btnGetVodaBal);
		this.TabPage12.Controls.Add(this.btnChkOK);
		this.TabPage12.Controls.Add(this.btnSA3edhmCancel);
		this.TabPage12.Controls.Add(this.btnViewSa3edList);
		this.TabPage12.Controls.Add(this.Label36);
		this.TabPage12.Controls.Add(this.Label35);
		this.TabPage12.Controls.Add(this.txtSa3edhmV);
		this.TabPage12.Controls.Add(this.btnSA3edhmTrans);
		this.TabPage12.Controls.Add(this.txtSA3edhmReq);
		this.TabPage12.Controls.Add(this.btnSA3edhmR5);
		this.TabPage12.Controls.Add(this.btnSA3edhmR4);
		this.TabPage12.Controls.Add(this.btnSA3edhmR3);
		this.TabPage12.Controls.Add(this.btnSA3edhmR2);
		this.TabPage12.Controls.Add(this.btnSA3edhmR1);
		this.TabPage12.Controls.Add(this.btnSA3edhmRDell);
		this.TabPage12.Controls.Add(this.btnSA3edhmRAdd);
		this.TabPage12.Controls.Add(this.txtSA3edhmNum);
		this.TabPage12.Controls.Add(this.btnSA3edhmReg);
		this.TabPage12.Location = new System.Drawing.Point(4, 22);
		this.TabPage12.Name = "TabPage12";
		this.TabPage12.Padding = new System.Windows.Forms.Padding(3);
		this.TabPage12.Size = new System.Drawing.Size(934, 295);
		this.TabPage12.TabIndex = 11;
		this.TabPage12.Text = "Helping";
		this.txtLoopSSD.BackColor = System.Drawing.Color.Black;
		this.txtLoopSSD.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopSSD.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopSSD.Location = new System.Drawing.Point(417, 92);
		this.txtLoopSSD.Name = "txtLoopSSD";
		this.txtLoopSSD.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopSSD.Size = new System.Drawing.Size(55, 24);
		this.txtLoopSSD.TabIndex = 993;
		this.txtLoopSSD.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtLoopFSD.BackColor = System.Drawing.Color.Black;
		this.txtLoopFSD.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopFSD.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopFSD.Location = new System.Drawing.Point(418, 68);
		this.txtLoopFSD.Name = "txtLoopFSD";
		this.txtLoopFSD.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopFSD.Size = new System.Drawing.Size(54, 24);
		this.txtLoopFSD.TabIndex = 992;
		this.txtLoopFSD.Text = "1";
		this.txtLoopFSD.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnGetVodaBal.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnGetVodaBal.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnGetVodaBal.Location = new System.Drawing.Point(698, 222);
		this.btnGetVodaBal.Name = "btnGetVodaBal";
		this.btnGetVodaBal.Size = new System.Drawing.Size(210, 66);
		this.btnGetVodaBal.TabIndex = 982;
		this.btnGetVodaBal.Text = "استعلام عن الرصيد العادى للخط";
		this.btnGetVodaBal.UseVisualStyleBackColor = false;
		this.btnChkOK.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnChkOK.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnChkOK.ForeColor = System.Drawing.Color.Black;
		this.btnChkOK.Location = new System.Drawing.Point(804, 86);
		this.btnChkOK.Name = "btnChkOK";
		this.btnChkOK.Size = new System.Drawing.Size(104, 66);
		this.btnChkOK.TabIndex = 981;
		this.btnChkOK.Text = "مراجعة التطابق";
		this.btnChkOK.UseVisualStyleBackColor = false;
		this.btnSA3edhmCancel.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnSA3edhmCancel.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnSA3edhmCancel.ForeColor = System.Drawing.Color.Black;
		this.btnSA3edhmCancel.Location = new System.Drawing.Point(14, 221);
		this.btnSA3edhmCancel.Name = "btnSA3edhmCancel";
		this.btnSA3edhmCancel.Size = new System.Drawing.Size(94, 38);
		this.btnSA3edhmCancel.TabIndex = 980;
		this.btnSA3edhmCancel.Text = "الغاء";
		this.btnSA3edhmCancel.UseVisualStyleBackColor = false;
		this.btnViewSa3edList.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnViewSa3edList.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnViewSa3edList.ForeColor = System.Drawing.Color.Black;
		this.btnViewSa3edList.Location = new System.Drawing.Point(698, 14);
		this.btnViewSa3edList.Name = "btnViewSa3edList";
		this.btnViewSa3edList.Size = new System.Drawing.Size(212, 66);
		this.btnViewSa3edList.TabIndex = 979;
		this.btnViewSa3edList.Text = "عرض قائمة الارقام";
		this.btnViewSa3edList.UseVisualStyleBackColor = false;
		this.Label36.AutoSize = true;
		this.Label36.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold);
		this.Label36.ForeColor = System.Drawing.Color.Black;
		this.Label36.Location = new System.Drawing.Point(546, 137);
		this.Label36.Name = "Label36";
		this.Label36.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label36.Size = new System.Drawing.Size(117, 19);
		this.Label36.TabIndex = 978;
		this.Label36.Text = "مسلسل الرقم";
		this.Label35.AutoSize = true;
		this.Label35.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.Label35.ForeColor = System.Drawing.Color.Black;
		this.Label35.Location = new System.Drawing.Point(577, 24);
		this.Label35.Name = "Label35";
		this.Label35.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label35.Size = new System.Drawing.Size(66, 24);
		this.Label35.TabIndex = 977;
		this.Label35.Text = "المبلغ";
		this.txtSa3edhmV.BackColor = System.Drawing.Color.White;
		this.txtSa3edhmV.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtSa3edhmV.ForeColor = System.Drawing.Color.Black;
		this.txtSa3edhmV.Location = new System.Drawing.Point(478, 18);
		this.txtSa3edhmV.Name = "txtSa3edhmV";
		this.txtSa3edhmV.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtSa3edhmV.Size = new System.Drawing.Size(90, 36);
		this.txtSa3edhmV.TabIndex = 976;
		this.txtSa3edhmV.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnSA3edhmTrans.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnSA3edhmTrans.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnSA3edhmTrans.ForeColor = System.Drawing.Color.Black;
		this.btnSA3edhmTrans.Location = new System.Drawing.Point(478, 59);
		this.btnSA3edhmTrans.Name = "btnSA3edhmTrans";
		this.btnSA3edhmTrans.Size = new System.Drawing.Size(165, 57);
		this.btnSA3edhmTrans.TabIndex = 911;
		this.btnSA3edhmTrans.Text = "تحويل";
		this.btnSA3edhmTrans.UseVisualStyleBackColor = false;
		this.txtSA3edhmReq.BackColor = System.Drawing.Color.White;
		this.txtSA3edhmReq.Font = new System.Drawing.Font("Tahoma", 20f, System.Drawing.FontStyle.Bold);
		this.txtSA3edhmReq.ForeColor = System.Drawing.Color.Black;
		this.txtSA3edhmReq.Location = new System.Drawing.Point(478, 123);
		this.txtSA3edhmReq.MaxLength = 11;
		this.txtSA3edhmReq.Name = "txtSA3edhmReq";
		this.txtSA3edhmReq.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtSA3edhmReq.Size = new System.Drawing.Size(62, 40);
		this.txtSA3edhmReq.TabIndex = 910;
		this.btnSA3edhmR5.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnSA3edhmR5.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnSA3edhmR5.ForeColor = System.Drawing.Color.Black;
		this.btnSA3edhmR5.Location = new System.Drawing.Point(116, 222);
		this.btnSA3edhmR5.Name = "btnSA3edhmR5";
		this.btnSA3edhmR5.Size = new System.Drawing.Size(32, 38);
		this.btnSA3edhmR5.TabIndex = 908;
		this.btnSA3edhmR5.Text = "5";
		this.btnSA3edhmR5.UseVisualStyleBackColor = false;
		this.btnSA3edhmR4.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnSA3edhmR4.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnSA3edhmR4.ForeColor = System.Drawing.Color.Black;
		this.btnSA3edhmR4.Location = new System.Drawing.Point(152, 222);
		this.btnSA3edhmR4.Name = "btnSA3edhmR4";
		this.btnSA3edhmR4.Size = new System.Drawing.Size(32, 38);
		this.btnSA3edhmR4.TabIndex = 907;
		this.btnSA3edhmR4.Text = "4";
		this.btnSA3edhmR4.UseVisualStyleBackColor = false;
		this.btnSA3edhmR3.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnSA3edhmR3.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnSA3edhmR3.ForeColor = System.Drawing.Color.Black;
		this.btnSA3edhmR3.Location = new System.Drawing.Point(188, 222);
		this.btnSA3edhmR3.Name = "btnSA3edhmR3";
		this.btnSA3edhmR3.Size = new System.Drawing.Size(32, 38);
		this.btnSA3edhmR3.TabIndex = 906;
		this.btnSA3edhmR3.Text = "3";
		this.btnSA3edhmR3.UseVisualStyleBackColor = false;
		this.btnSA3edhmR2.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnSA3edhmR2.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnSA3edhmR2.ForeColor = System.Drawing.Color.Black;
		this.btnSA3edhmR2.Location = new System.Drawing.Point(224, 222);
		this.btnSA3edhmR2.Name = "btnSA3edhmR2";
		this.btnSA3edhmR2.Size = new System.Drawing.Size(32, 38);
		this.btnSA3edhmR2.TabIndex = 905;
		this.btnSA3edhmR2.Text = "2";
		this.btnSA3edhmR2.UseVisualStyleBackColor = false;
		this.btnSA3edhmR1.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnSA3edhmR1.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnSA3edhmR1.ForeColor = System.Drawing.Color.Black;
		this.btnSA3edhmR1.Location = new System.Drawing.Point(260, 222);
		this.btnSA3edhmR1.Name = "btnSA3edhmR1";
		this.btnSA3edhmR1.Size = new System.Drawing.Size(32, 38);
		this.btnSA3edhmR1.TabIndex = 904;
		this.btnSA3edhmR1.Text = "1";
		this.btnSA3edhmR1.UseVisualStyleBackColor = false;
		this.btnSA3edhmRDell.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnSA3edhmRDell.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnSA3edhmRDell.ForeColor = System.Drawing.Color.Black;
		this.btnSA3edhmRDell.Location = new System.Drawing.Point(14, 179);
		this.btnSA3edhmRDell.Name = "btnSA3edhmRDell";
		this.btnSA3edhmRDell.Size = new System.Drawing.Size(278, 38);
		this.btnSA3edhmRDell.TabIndex = 903;
		this.btnSA3edhmRDell.Text = "حذف من قائمة ساعدهم";
		this.btnSA3edhmRDell.UseVisualStyleBackColor = false;
		this.btnSA3edhmRAdd.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnSA3edhmRAdd.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnSA3edhmRAdd.ForeColor = System.Drawing.Color.Black;
		this.btnSA3edhmRAdd.Location = new System.Drawing.Point(6, 94);
		this.btnSA3edhmRAdd.Name = "btnSA3edhmRAdd";
		this.btnSA3edhmRAdd.Size = new System.Drawing.Size(151, 38);
		this.btnSA3edhmRAdd.TabIndex = 902;
		this.btnSA3edhmRAdd.Text = "اضافة الرقم";
		this.btnSA3edhmRAdd.UseVisualStyleBackColor = false;
		this.txtSA3edhmNum.BackColor = System.Drawing.Color.White;
		this.txtSA3edhmNum.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtSA3edhmNum.ForeColor = System.Drawing.Color.Black;
		this.txtSA3edhmNum.Location = new System.Drawing.Point(6, 61);
		this.txtSA3edhmNum.MaxLength = 11;
		this.txtSA3edhmNum.Name = "txtSA3edhmNum";
		this.txtSA3edhmNum.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtSA3edhmNum.Size = new System.Drawing.Size(150, 27);
		this.txtSA3edhmNum.TabIndex = 901;
		this.btnSA3edhmReg.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnSA3edhmReg.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnSA3edhmReg.ForeColor = System.Drawing.Color.Black;
		this.btnSA3edhmReg.Location = new System.Drawing.Point(6, 14);
		this.btnSA3edhmReg.Name = "btnSA3edhmReg";
		this.btnSA3edhmReg.Size = new System.Drawing.Size(151, 38);
		this.btnSA3edhmReg.TabIndex = 900;
		this.btnSA3edhmReg.Text = "اشتراك فى الخدمة";
		this.btnSA3edhmReg.UseVisualStyleBackColor = false;
		this.TabPage13.BackColor = System.Drawing.Color.Red;
		this.TabPage13.Controls.Add(this.txtArrayOut);
		this.TabPage13.Controls.Add(this.lblCorrectNumber);
		this.TabPage13.Controls.Add(this.Label41);
		this.TabPage13.Controls.Add(this.Label43);
		this.TabPage13.Controls.Add(this.btnAutoVCnormCon);
		this.TabPage13.Controls.Add(this.Label44);
		this.TabPage13.Controls.Add(this.txtTransNum2Con);
		this.TabPage13.Controls.Add(this.txtCashNextMasterCon);
		this.TabPage13.Controls.Add(this.lblMainCon);
		this.TabPage13.Controls.Add(this.Label46);
		this.TabPage13.Controls.Add(this.txtMonyMnCon);
		this.TabPage13.Controls.Add(this.btnGetBal2Con);
		this.TabPage13.Location = new System.Drawing.Point(4, 22);
		this.TabPage13.Name = "TabPage13";
		this.TabPage13.Padding = new System.Windows.Forms.Padding(3);
		this.TabPage13.Size = new System.Drawing.Size(934, 295);
		this.TabPage13.TabIndex = 13;
		this.TabPage13.Text = "VFDec";
		this.txtArrayOut.BackColor = System.Drawing.Color.Black;
		this.txtArrayOut.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtArrayOut.ForeColor = System.Drawing.Color.Lime;
		this.txtArrayOut.Location = new System.Drawing.Point(6, 89);
		this.txtArrayOut.Multiline = true;
		this.txtArrayOut.Name = "txtArrayOut";
		this.txtArrayOut.ScrollBars = System.Windows.Forms.ScrollBars.Vertical;
		this.txtArrayOut.Size = new System.Drawing.Size(277, 178);
		this.txtArrayOut.TabIndex = 1014;
		this.lblCorrectNumber.BackColor = System.Drawing.Color.FromArgb(128, 255, 255);
		this.lblCorrectNumber.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblCorrectNumber.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold);
		this.lblCorrectNumber.ForeColor = System.Drawing.Color.Black;
		this.lblCorrectNumber.Location = new System.Drawing.Point(291, 236);
		this.lblCorrectNumber.Name = "lblCorrectNumber";
		this.lblCorrectNumber.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblCorrectNumber.Size = new System.Drawing.Size(37, 31);
		this.lblCorrectNumber.TabIndex = 1013;
		this.lblCorrectNumber.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.Label41.AutoSize = true;
		this.Label41.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label41.ForeColor = System.Drawing.Color.Black;
		this.Label41.Location = new System.Drawing.Point(752, 149);
		this.Label41.Name = "Label41";
		this.Label41.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label41.Size = new System.Drawing.Size(115, 17);
		this.Label41.TabIndex = 1011;
		this.Label41.Text = "الاساسى التالى";
		this.Label43.AutoSize = true;
		this.Label43.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label43.ForeColor = System.Drawing.Color.Black;
		this.Label43.Location = new System.Drawing.Point(787, 23);
		this.Label43.Name = "Label43";
		this.Label43.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label43.Size = new System.Drawing.Size(45, 17);
		this.Label43.TabIndex = 1010;
		this.Label43.Text = "المبلغ";
		this.btnAutoVCnormCon.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnAutoVCnormCon.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnAutoVCnormCon.Location = new System.Drawing.Point(250, 15);
		this.btnAutoVCnormCon.Name = "btnAutoVCnormCon";
		this.btnAutoVCnormCon.Size = new System.Drawing.Size(161, 54);
		this.btnAutoVCnormCon.TabIndex = 1009;
		this.btnAutoVCnormCon.Text = "تشغيل ذكى مشروط";
		this.btnAutoVCnormCon.UseVisualStyleBackColor = false;
		this.Label44.AutoSize = true;
		this.Label44.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label44.ForeColor = System.Drawing.Color.Black;
		this.Label44.Location = new System.Drawing.Point(43, 10);
		this.Label44.Name = "Label44";
		this.Label44.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label44.Size = new System.Drawing.Size(117, 17);
		this.Label44.TabIndex = 1008;
		this.Label44.Text = "المحول له الهدية";
		this.txtTransNum2Con.BackColor = System.Drawing.Color.White;
		this.txtTransNum2Con.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtTransNum2Con.ForeColor = System.Drawing.Color.Black;
		this.txtTransNum2Con.Location = new System.Drawing.Point(6, 32);
		this.txtTransNum2Con.MaxLength = 11;
		this.txtTransNum2Con.Name = "txtTransNum2Con";
		this.txtTransNum2Con.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTransNum2Con.Size = new System.Drawing.Size(187, 36);
		this.txtTransNum2Con.TabIndex = 1007;
		this.txtTransNum2Con.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtCashNextMasterCon.BackColor = System.Drawing.Color.White;
		this.txtCashNextMasterCon.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtCashNextMasterCon.ForeColor = System.Drawing.Color.Black;
		this.txtCashNextMasterCon.Location = new System.Drawing.Point(704, 170);
		this.txtCashNextMasterCon.MaxLength = 11;
		this.txtCashNextMasterCon.Name = "txtCashNextMasterCon";
		this.txtCashNextMasterCon.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtCashNextMasterCon.Size = new System.Drawing.Size(202, 36);
		this.txtCashNextMasterCon.TabIndex = 1006;
		this.txtCashNextMasterCon.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.lblMainCon.BackColor = System.Drawing.Color.FromArgb(128, 255, 255);
		this.lblMainCon.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblMainCon.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.lblMainCon.ForeColor = System.Drawing.Color.Black;
		this.lblMainCon.Location = new System.Drawing.Point(704, 100);
		this.lblMainCon.Name = "lblMainCon";
		this.lblMainCon.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblMainCon.Size = new System.Drawing.Size(202, 38);
		this.lblMainCon.TabIndex = 1005;
		this.lblMainCon.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.Label46.AutoSize = true;
		this.Label46.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label46.ForeColor = System.Drawing.Color.Black;
		this.Label46.Location = new System.Drawing.Point(772, 81);
		this.Label46.Name = "Label46";
		this.Label46.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label46.Size = new System.Drawing.Size(72, 17);
		this.Label46.TabIndex = 1004;
		this.Label46.Text = "الاساسى";
		this.txtMonyMnCon.BackColor = System.Drawing.Color.White;
		this.txtMonyMnCon.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtMonyMnCon.ForeColor = System.Drawing.Color.Black;
		this.txtMonyMnCon.Location = new System.Drawing.Point(758, 43);
		this.txtMonyMnCon.Name = "txtMonyMnCon";
		this.txtMonyMnCon.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMonyMnCon.Size = new System.Drawing.Size(99, 36);
		this.txtMonyMnCon.TabIndex = 1003;
		this.txtMonyMnCon.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnGetBal2Con.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnGetBal2Con.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnGetBal2Con.Location = new System.Drawing.Point(704, 215);
		this.btnGetBal2Con.Name = "btnGetBal2Con";
		this.btnGetBal2Con.Size = new System.Drawing.Size(202, 37);
		this.btnGetBal2Con.TabIndex = 1002;
		this.btnGetBal2Con.Text = "استعلام عن رصيدالكاش";
		this.btnGetBal2Con.UseVisualStyleBackColor = false;
		this.TabPage6.BackColor = System.Drawing.Color.Red;
		this.TabPage6.Controls.Add(this.txtNextPortNum);
		this.TabPage6.Controls.Add(this.txtRemTimeVC);
		this.TabPage6.Controls.Add(this.btnVCChargeToSelf);
		this.TabPage6.Controls.Add(this.txtLoopSvc2);
		this.TabPage6.Controls.Add(this.txtLoopFvc2);
		this.TabPage6.Controls.Add(this.btnVC6);
		this.TabPage6.Controls.Add(this.txtMoneyMS6Dly);
		this.TabPage6.Controls.Add(this.txtMoneyMS5Dly);
		this.TabPage6.Controls.Add(this.txtMoneyMS4Dly);
		this.TabPage6.Controls.Add(this.txtMoneyMS3Dly);
		this.TabPage6.Controls.Add(this.Label31);
		this.TabPage6.Controls.Add(this.Label19);
		this.TabPage6.Controls.Add(this.Label18);
		this.TabPage6.Controls.Add(this.Label17);
		this.TabPage6.Controls.Add(this.Label16);
		this.TabPage6.Controls.Add(this.Label15);
		this.TabPage6.Controls.Add(this.txtMoneyMS6);
		this.TabPage6.Controls.Add(this.txtMoneyMS5);
		this.TabPage6.Controls.Add(this.txtMoneyMS4);
		this.TabPage6.Controls.Add(this.txtMoneyMS3);
		this.TabPage6.Controls.Add(this.txtMoneyMS2);
		this.TabPage6.Controls.Add(this.Label13);
		this.TabPage6.Controls.Add(this.txtMS02);
		this.TabPage6.Controls.Add(this.btnTransToA);
		this.TabPage6.Controls.Add(this.Label10);
		this.TabPage6.Controls.Add(this.btnArrangIT);
		this.TabPage6.Controls.Add(this.txtPassMs);
		this.TabPage6.Controls.Add(this.Label7);
		this.TabPage6.Controls.Add(this.txtMS01);
		this.TabPage6.Controls.Add(this.btnGetBalMS);
		this.TabPage6.Controls.Add(this.btnTransTo);
		this.TabPage6.Controls.Add(this.btnTransFromMS);
		this.TabPage6.Controls.Add(this.Label4);
		this.TabPage6.Location = new System.Drawing.Point(4, 22);
		this.TabPage6.Name = "TabPage6";
		this.TabPage6.Padding = new System.Windows.Forms.Padding(3);
		this.TabPage6.Size = new System.Drawing.Size(934, 295);
		this.TabPage6.TabIndex = 5;
		this.TabPage6.Text = "VFMaster";
		this.txtNextPortNum.BackColor = System.Drawing.Color.Black;
		this.txtNextPortNum.Font = new System.Drawing.Font("Tahoma", 20f, System.Drawing.FontStyle.Bold);
		this.txtNextPortNum.ForeColor = System.Drawing.Color.Lime;
		this.txtNextPortNum.Location = new System.Drawing.Point(195, 175);
		this.txtNextPortNum.Name = "txtNextPortNum";
		this.txtNextPortNum.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtNextPortNum.Size = new System.Drawing.Size(41, 40);
		this.txtNextPortNum.TabIndex = 985;
		this.txtNextPortNum.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtRemTimeVC.BackColor = System.Drawing.Color.Black;
		this.txtRemTimeVC.Font = new System.Drawing.Font("Tahoma", 20f, System.Drawing.FontStyle.Bold);
		this.txtRemTimeVC.ForeColor = System.Drawing.Color.Lime;
		this.txtRemTimeVC.Location = new System.Drawing.Point(237, 175);
		this.txtRemTimeVC.Name = "txtRemTimeVC";
		this.txtRemTimeVC.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtRemTimeVC.Size = new System.Drawing.Size(142, 40);
		this.txtRemTimeVC.TabIndex = 982;
		this.txtRemTimeVC.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnVCChargeToSelf.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnVCChargeToSelf.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnVCChargeToSelf.Location = new System.Drawing.Point(167, 228);
		this.btnVCChargeToSelf.Name = "btnVCChargeToSelf";
		this.btnVCChargeToSelf.Size = new System.Drawing.Size(314, 36);
		this.btnVCChargeToSelf.TabIndex = 989;
		this.btnVCChargeToSelf.Text = "شحن كل خط بالمبلغ من نفسة من فودافون كاش";
		this.btnVCChargeToSelf.UseVisualStyleBackColor = false;
		this.txtLoopSvc2.BackColor = System.Drawing.Color.Black;
		this.txtLoopSvc2.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopSvc2.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopSvc2.Location = new System.Drawing.Point(106, 238);
		this.txtLoopSvc2.Name = "txtLoopSvc2";
		this.txtLoopSvc2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopSvc2.Size = new System.Drawing.Size(55, 24);
		this.txtLoopSvc2.TabIndex = 991;
		this.txtLoopSvc2.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtLoopFvc2.BackColor = System.Drawing.Color.Black;
		this.txtLoopFvc2.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopFvc2.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopFvc2.Location = new System.Drawing.Point(107, 214);
		this.txtLoopFvc2.Name = "txtLoopFvc2";
		this.txtLoopFvc2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopFvc2.Size = new System.Drawing.Size(54, 24);
		this.txtLoopFvc2.TabIndex = 990;
		this.txtLoopFvc2.Text = "1";
		this.txtLoopFvc2.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnVC6.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnVC6.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnVC6.Location = new System.Drawing.Point(14, 218);
		this.btnVC6.Name = "btnVC6";
		this.btnVC6.Size = new System.Drawing.Size(86, 44);
		this.btnVC6.TabIndex = 992;
		this.btnVC6.Text = "*6#";
		this.btnVC6.UseVisualStyleBackColor = false;
		this.txtMoneyMS6Dly.BackColor = System.Drawing.Color.FromArgb(255, 192, 192);
		this.txtMoneyMS6Dly.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtMoneyMS6Dly.ForeColor = System.Drawing.Color.Black;
		this.txtMoneyMS6Dly.Location = new System.Drawing.Point(385, 129);
		this.txtMoneyMS6Dly.Name = "txtMoneyMS6Dly";
		this.txtMoneyMS6Dly.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMoneyMS6Dly.Size = new System.Drawing.Size(53, 27);
		this.txtMoneyMS6Dly.TabIndex = 972;
		this.txtMoneyMS6Dly.Text = "0";
		this.txtMoneyMS6Dly.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMoneyMS5Dly.BackColor = System.Drawing.Color.FromArgb(255, 192, 192);
		this.txtMoneyMS5Dly.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtMoneyMS5Dly.ForeColor = System.Drawing.Color.Black;
		this.txtMoneyMS5Dly.Location = new System.Drawing.Point(385, 100);
		this.txtMoneyMS5Dly.Name = "txtMoneyMS5Dly";
		this.txtMoneyMS5Dly.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMoneyMS5Dly.Size = new System.Drawing.Size(53, 27);
		this.txtMoneyMS5Dly.TabIndex = 971;
		this.txtMoneyMS5Dly.Text = "0";
		this.txtMoneyMS5Dly.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMoneyMS4Dly.BackColor = System.Drawing.Color.FromArgb(255, 192, 192);
		this.txtMoneyMS4Dly.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtMoneyMS4Dly.ForeColor = System.Drawing.Color.Black;
		this.txtMoneyMS4Dly.Location = new System.Drawing.Point(385, 70);
		this.txtMoneyMS4Dly.Name = "txtMoneyMS4Dly";
		this.txtMoneyMS4Dly.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMoneyMS4Dly.Size = new System.Drawing.Size(53, 27);
		this.txtMoneyMS4Dly.TabIndex = 970;
		this.txtMoneyMS4Dly.Text = "0";
		this.txtMoneyMS4Dly.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMoneyMS3Dly.BackColor = System.Drawing.Color.FromArgb(255, 192, 192);
		this.txtMoneyMS3Dly.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtMoneyMS3Dly.ForeColor = System.Drawing.Color.Black;
		this.txtMoneyMS3Dly.Location = new System.Drawing.Point(385, 40);
		this.txtMoneyMS3Dly.Name = "txtMoneyMS3Dly";
		this.txtMoneyMS3Dly.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMoneyMS3Dly.Size = new System.Drawing.Size(53, 27);
		this.txtMoneyMS3Dly.TabIndex = 969;
		this.txtMoneyMS3Dly.Text = "0";
		this.txtMoneyMS3Dly.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label31.AutoSize = true;
		this.Label31.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label31.ForeColor = System.Drawing.Color.White;
		this.Label31.Location = new System.Drawing.Point(392, 8);
		this.Label31.Name = "Label31";
		this.Label31.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label31.Size = new System.Drawing.Size(46, 17);
		this.Label31.TabIndex = 967;
		this.Label31.Text = "دقيقة";
		this.Label19.AutoSize = true;
		this.Label19.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label19.ForeColor = System.Drawing.Color.White;
		this.Label19.Location = new System.Drawing.Point(288, 147);
		this.Label19.Name = "Label19";
		this.Label19.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label19.Size = new System.Drawing.Size(17, 17);
		this.Label19.TabIndex = 966;
		this.Label19.Text = "6";
		this.Label18.AutoSize = true;
		this.Label18.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label18.ForeColor = System.Drawing.Color.White;
		this.Label18.Location = new System.Drawing.Point(288, 118);
		this.Label18.Name = "Label18";
		this.Label18.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label18.Size = new System.Drawing.Size(17, 17);
		this.Label18.TabIndex = 965;
		this.Label18.Text = "5";
		this.Label17.AutoSize = true;
		this.Label17.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label17.ForeColor = System.Drawing.Color.White;
		this.Label17.Location = new System.Drawing.Point(288, 91);
		this.Label17.Name = "Label17";
		this.Label17.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label17.Size = new System.Drawing.Size(17, 17);
		this.Label17.TabIndex = 964;
		this.Label17.Text = "4";
		this.Label16.AutoSize = true;
		this.Label16.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label16.ForeColor = System.Drawing.Color.White;
		this.Label16.Location = new System.Drawing.Point(288, 62);
		this.Label16.Name = "Label16";
		this.Label16.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label16.Size = new System.Drawing.Size(17, 17);
		this.Label16.TabIndex = 963;
		this.Label16.Text = "3";
		this.Label15.AutoSize = true;
		this.Label15.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label15.ForeColor = System.Drawing.Color.White;
		this.Label15.Location = new System.Drawing.Point(288, 34);
		this.Label15.Name = "Label15";
		this.Label15.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label15.Size = new System.Drawing.Size(17, 17);
		this.Label15.TabIndex = 962;
		this.Label15.Text = "2";
		this.txtMoneyMS6.BackColor = System.Drawing.Color.White;
		this.txtMoneyMS6.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtMoneyMS6.ForeColor = System.Drawing.Color.Black;
		this.txtMoneyMS6.Location = new System.Drawing.Point(308, 142);
		this.txtMoneyMS6.Name = "txtMoneyMS6";
		this.txtMoneyMS6.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMoneyMS6.Size = new System.Drawing.Size(75, 27);
		this.txtMoneyMS6.TabIndex = 960;
		this.txtMoneyMS6.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMoneyMS5.BackColor = System.Drawing.Color.White;
		this.txtMoneyMS5.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtMoneyMS5.ForeColor = System.Drawing.Color.Black;
		this.txtMoneyMS5.Location = new System.Drawing.Point(308, 113);
		this.txtMoneyMS5.Name = "txtMoneyMS5";
		this.txtMoneyMS5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMoneyMS5.Size = new System.Drawing.Size(75, 27);
		this.txtMoneyMS5.TabIndex = 959;
		this.txtMoneyMS5.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMoneyMS4.BackColor = System.Drawing.Color.White;
		this.txtMoneyMS4.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtMoneyMS4.ForeColor = System.Drawing.Color.Black;
		this.txtMoneyMS4.Location = new System.Drawing.Point(308, 86);
		this.txtMoneyMS4.Name = "txtMoneyMS4";
		this.txtMoneyMS4.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMoneyMS4.Size = new System.Drawing.Size(75, 27);
		this.txtMoneyMS4.TabIndex = 958;
		this.txtMoneyMS4.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMoneyMS3.BackColor = System.Drawing.Color.White;
		this.txtMoneyMS3.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtMoneyMS3.ForeColor = System.Drawing.Color.Black;
		this.txtMoneyMS3.Location = new System.Drawing.Point(308, 57);
		this.txtMoneyMS3.Name = "txtMoneyMS3";
		this.txtMoneyMS3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMoneyMS3.Size = new System.Drawing.Size(75, 27);
		this.txtMoneyMS3.TabIndex = 957;
		this.txtMoneyMS3.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMoneyMS2.BackColor = System.Drawing.Color.White;
		this.txtMoneyMS2.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtMoneyMS2.ForeColor = System.Drawing.Color.Black;
		this.txtMoneyMS2.Location = new System.Drawing.Point(308, 29);
		this.txtMoneyMS2.Name = "txtMoneyMS2";
		this.txtMoneyMS2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMoneyMS2.Size = new System.Drawing.Size(75, 27);
		this.txtMoneyMS2.TabIndex = 956;
		this.txtMoneyMS2.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label13.AutoSize = true;
		this.Label13.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label13.ForeColor = System.Drawing.Color.White;
		this.Label13.Location = new System.Drawing.Point(150, 92);
		this.Label13.Name = "Label13";
		this.Label13.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label13.Size = new System.Drawing.Size(94, 17);
		this.Label13.TabIndex = 955;
		this.Label13.Text = "خط الماستر2";
		this.txtMS02.BackColor = System.Drawing.Color.White;
		this.txtMS02.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtMS02.ForeColor = System.Drawing.Color.Black;
		this.txtMS02.Location = new System.Drawing.Point(18, 86);
		this.txtMS02.MaxLength = 11;
		this.txtMS02.Name = "txtMS02";
		this.txtMS02.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMS02.Size = new System.Drawing.Size(126, 27);
		this.txtMS02.TabIndex = 954;
		this.txtMS02.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnTransToA.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTransToA.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnTransToA.Location = new System.Drawing.Point(720, 133);
		this.btnTransToA.Name = "btnTransToA";
		this.btnTransToA.Size = new System.Drawing.Size(186, 65);
		this.btnTransToA.TabIndex = 953;
		this.btnTransToA.Text = "سحب كل الرصيد من الخطوط كاش";
		this.btnTransToA.UseVisualStyleBackColor = false;
		this.Label10.AutoSize = true;
		this.Label10.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label10.ForeColor = System.Drawing.Color.White;
		this.Label10.Location = new System.Drawing.Point(97, 35);
		this.Label10.Name = "Label10";
		this.Label10.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label10.Size = new System.Drawing.Size(146, 17);
		this.Label10.TabIndex = 900;
		this.Label10.Text = "كلمة سر خط الماستر";
		this.btnArrangIT.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnArrangIT.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnArrangIT.Location = new System.Drawing.Point(18, 116);
		this.btnArrangIT.Name = "btnArrangIT";
		this.btnArrangIT.Size = new System.Drawing.Size(126, 27);
		this.btnArrangIT.TabIndex = 952;
		this.btnArrangIT.Text = "ترتيب الخطوط";
		this.btnArrangIT.UseVisualStyleBackColor = false;
		this.txtPassMs.BackColor = System.Drawing.Color.White;
		this.txtPassMs.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtPassMs.ForeColor = System.Drawing.Color.Black;
		this.txtPassMs.Location = new System.Drawing.Point(18, 30);
		this.txtPassMs.MaxLength = 6;
		this.txtPassMs.Name = "txtPassMs";
		this.txtPassMs.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtPassMs.Size = new System.Drawing.Size(77, 27);
		this.txtPassMs.TabIndex = 899;
		this.Label7.AutoSize = true;
		this.Label7.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label7.ForeColor = System.Drawing.Color.White;
		this.Label7.Location = new System.Drawing.Point(150, 61);
		this.Label7.Name = "Label7";
		this.Label7.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label7.Size = new System.Drawing.Size(94, 17);
		this.Label7.TabIndex = 950;
		this.Label7.Text = "خط الماستر1";
		this.txtMS01.BackColor = System.Drawing.Color.White;
		this.txtMS01.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtMS01.ForeColor = System.Drawing.Color.Black;
		this.txtMS01.Location = new System.Drawing.Point(18, 57);
		this.txtMS01.MaxLength = 11;
		this.txtMS01.Name = "txtMS01";
		this.txtMS01.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMS01.Size = new System.Drawing.Size(126, 27);
		this.txtMS01.TabIndex = 947;
		this.txtMS01.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnGetBalMS.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnGetBalMS.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnGetBalMS.Location = new System.Drawing.Point(14, 149);
		this.btnGetBalMS.Name = "btnGetBalMS";
		this.btnGetBalMS.Size = new System.Drawing.Size(126, 49);
		this.btnGetBalMS.TabIndex = 906;
		this.btnGetBalMS.Text = "استعلام عن الرصيد";
		this.btnGetBalMS.UseVisualStyleBackColor = false;
		this.btnTransTo.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTransTo.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnTransTo.Location = new System.Drawing.Point(720, 70);
		this.btnTransTo.Name = "btnTransTo";
		this.btnTransTo.Size = new System.Drawing.Size(186, 48);
		this.btnTransTo.TabIndex = 905;
		this.btnTransTo.Text = "سحب رصيد من الخطوط";
		this.btnTransTo.UseVisualStyleBackColor = false;
		this.btnTransFromMS.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTransFromMS.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnTransFromMS.Location = new System.Drawing.Point(720, 14);
		this.btnTransFromMS.Name = "btnTransFromMS";
		this.btnTransFromMS.Size = new System.Drawing.Size(186, 51);
		this.btnTransFromMS.TabIndex = 904;
		this.btnTransFromMS.Text = "تحويل من الماستر";
		this.btnTransFromMS.UseVisualStyleBackColor = false;
		this.Label4.AutoSize = true;
		this.Label4.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label4.ForeColor = System.Drawing.Color.White;
		this.Label4.Location = new System.Drawing.Point(321, 8);
		this.Label4.Name = "Label4";
		this.Label4.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label4.Size = new System.Drawing.Size(45, 17);
		this.Label4.TabIndex = 903;
		this.Label4.Text = "المبلغ";
		this.tabTayer.BackColor = System.Drawing.Color.FromArgb(192, 0, 0);
		this.tabTayer.Controls.Add(this.ckbtnTayerPullAllBalsMony);
		this.tabTayer.Controls.Add(this.btnTayerPullAllBalsMony);
		this.tabTayer.Controls.Add(this.btnTayerKikOut);
		this.tabTayer.Controls.Add(this.Label90);
		this.tabTayer.Controls.Add(this.btnAddCodeToTayer);
		this.tabTayer.Controls.Add(this.txtCodeTayer);
		this.tabTayer.Controls.Add(this.ckbtnTayerPullAllBals);
		this.tabTayer.Controls.Add(this.btnTayerPullAllBals);
		this.tabTayer.Controls.Add(this.ckbtnTayerSeries);
		this.tabTayer.Controls.Add(this.CheckBox2);
		this.tabTayer.Controls.Add(this.txtTayerF);
		this.tabTayer.Controls.Add(this.txtTayerS);
		this.tabTayer.Controls.Add(this.ckTayerGetBal);
		this.tabTayer.Controls.Add(this.btnTayerfromMtoN);
		this.tabTayer.Controls.Add(this.Label80);
		this.tabTayer.Controls.Add(this.TextBox1);
		this.tabTayer.Controls.Add(this.btnAutoVC_ChargeTayer);
		this.tabTayer.Controls.Add(this.Label70);
		this.tabTayer.Controls.Add(this.txtTayerPass);
		this.tabTayer.Controls.Add(this.ckTayerSub);
		this.tabTayer.Controls.Add(this.txtTayerSub);
		this.tabTayer.Controls.Add(this.btnTayerEX);
		this.tabTayer.Controls.Add(this.btnTayerSeries);
		this.tabTayer.Controls.Add(this.Label75);
		this.tabTayer.Controls.Add(this.Label79);
		this.tabTayer.Controls.Add(this.txtTayerNextMain);
		this.tabTayer.Controls.Add(this.lblTayerMain);
		this.tabTayer.Controls.Add(this.Label81);
		this.tabTayer.Controls.Add(this.txtTayerValue);
		this.tabTayer.Controls.Add(this.btnTayerGetBal);
		this.tabTayer.Location = new System.Drawing.Point(4, 22);
		this.tabTayer.Name = "tabTayer";
		this.tabTayer.Padding = new System.Windows.Forms.Padding(3);
		this.tabTayer.Size = new System.Drawing.Size(934, 295);
		this.tabTayer.TabIndex = 23;
		this.tabTayer.Text = "Tayer";
		this.ckbtnTayerPullAllBalsMony.AutoSize = true;
		this.ckbtnTayerPullAllBalsMony.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnTayerPullAllBalsMony.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnTayerPullAllBalsMony.ForeColor = System.Drawing.Color.Black;
		this.ckbtnTayerPullAllBalsMony.Location = new System.Drawing.Point(355, 17);
		this.ckbtnTayerPullAllBalsMony.Name = "ckbtnTayerPullAllBalsMony";
		this.ckbtnTayerPullAllBalsMony.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnTayerPullAllBalsMony.Size = new System.Drawing.Size(53, 17);
		this.ckbtnTayerPullAllBalsMony.TabIndex = 1101;
		this.ckbtnTayerPullAllBalsMony.Text = "Auto";
		this.ckbtnTayerPullAllBalsMony.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnTayerPullAllBalsMony.UseVisualStyleBackColor = false;
		this.btnTayerPullAllBalsMony.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTayerPullAllBalsMony.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnTayerPullAllBalsMony.Location = new System.Drawing.Point(211, 14);
		this.btnTayerPullAllBalsMony.Name = "btnTayerPullAllBalsMony";
		this.btnTayerPullAllBalsMony.Size = new System.Drawing.Size(203, 87);
		this.btnTayerPullAllBalsMony.TabIndex = 1100;
		this.btnTayerPullAllBalsMony.Text = "سحب من الكل الى النالى";
		this.btnTayerPullAllBalsMony.UseVisualStyleBackColor = false;
		this.btnTayerKikOut.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTayerKikOut.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnTayerKikOut.Location = new System.Drawing.Point(726, 108);
		this.btnTayerKikOut.Name = "btnTayerKikOut";
		this.btnTayerKikOut.Size = new System.Drawing.Size(189, 52);
		this.btnTayerKikOut.TabIndex = 1099;
		this.btnTayerKikOut.Text = "Opt-Out";
		this.btnTayerKikOut.UseVisualStyleBackColor = false;
		this.Label90.AutoSize = true;
		this.Label90.Font = new System.Drawing.Font("Tahoma", 20f, System.Drawing.FontStyle.Bold);
		this.Label90.ForeColor = System.Drawing.Color.Black;
		this.Label90.Location = new System.Drawing.Point(718, 68);
		this.Label90.Name = "Label90";
		this.Label90.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label90.Size = new System.Drawing.Size(33, 33);
		this.Label90.TabIndex = 1098;
		this.Label90.Text = "A";
		this.btnAddCodeToTayer.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnAddCodeToTayer.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnAddCodeToTayer.Location = new System.Drawing.Point(726, 8);
		this.btnAddCodeToTayer.Name = "btnAddCodeToTayer";
		this.btnAddCodeToTayer.Size = new System.Drawing.Size(189, 52);
		this.btnAddCodeToTayer.TabIndex = 1097;
		this.btnAddCodeToTayer.Text = "Opt-in";
		this.btnAddCodeToTayer.UseVisualStyleBackColor = false;
		this.txtCodeTayer.BackColor = System.Drawing.Color.White;
		this.txtCodeTayer.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtCodeTayer.ForeColor = System.Drawing.Color.Black;
		this.txtCodeTayer.Location = new System.Drawing.Point(757, 66);
		this.txtCodeTayer.MaxLength = 20;
		this.txtCodeTayer.Name = "txtCodeTayer";
		this.txtCodeTayer.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtCodeTayer.Size = new System.Drawing.Size(158, 36);
		this.txtCodeTayer.TabIndex = 1095;
		this.txtCodeTayer.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.ckbtnTayerPullAllBals.AutoSize = true;
		this.ckbtnTayerPullAllBals.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnTayerPullAllBals.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnTayerPullAllBals.ForeColor = System.Drawing.Color.Black;
		this.ckbtnTayerPullAllBals.Location = new System.Drawing.Point(858, 205);
		this.ckbtnTayerPullAllBals.Name = "ckbtnTayerPullAllBals";
		this.ckbtnTayerPullAllBals.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnTayerPullAllBals.Size = new System.Drawing.Size(53, 17);
		this.ckbtnTayerPullAllBals.TabIndex = 1094;
		this.ckbtnTayerPullAllBals.Text = "Auto";
		this.ckbtnTayerPullAllBals.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnTayerPullAllBals.UseVisualStyleBackColor = false;
		this.btnTayerPullAllBals.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTayerPullAllBals.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnTayerPullAllBals.Location = new System.Drawing.Point(714, 202);
		this.btnTayerPullAllBals.Name = "btnTayerPullAllBals";
		this.btnTayerPullAllBals.Size = new System.Drawing.Size(203, 87);
		this.btnTayerPullAllBals.TabIndex = 1093;
		this.btnTayerPullAllBals.Text = "سحب كل رصيد الطاير على الاساسى التالى";
		this.btnTayerPullAllBals.UseVisualStyleBackColor = false;
		this.ckbtnTayerSeries.AutoSize = true;
		this.ckbtnTayerSeries.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnTayerSeries.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnTayerSeries.ForeColor = System.Drawing.Color.Black;
		this.ckbtnTayerSeries.Location = new System.Drawing.Point(564, 10);
		this.ckbtnTayerSeries.Name = "ckbtnTayerSeries";
		this.ckbtnTayerSeries.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnTayerSeries.Size = new System.Drawing.Size(53, 17);
		this.ckbtnTayerSeries.TabIndex = 1092;
		this.ckbtnTayerSeries.Text = "Auto";
		this.ckbtnTayerSeries.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnTayerSeries.UseVisualStyleBackColor = false;
		this.CheckBox2.AutoSize = true;
		this.CheckBox2.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.CheckBox2.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.CheckBox2.ForeColor = System.Drawing.Color.Black;
		this.CheckBox2.Location = new System.Drawing.Point(127, 23);
		this.CheckBox2.Name = "CheckBox2";
		this.CheckBox2.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.CheckBox2.Size = new System.Drawing.Size(53, 17);
		this.CheckBox2.TabIndex = 1091;
		this.CheckBox2.Text = "Auto";
		this.CheckBox2.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.CheckBox2.UseVisualStyleBackColor = false;
		this.txtTayerF.BackColor = System.Drawing.Color.Black;
		this.txtTayerF.Font = new System.Drawing.Font("Tahoma", 13f, System.Drawing.FontStyle.Bold);
		this.txtTayerF.ForeColor = System.Drawing.Color.Lime;
		this.txtTayerF.Location = new System.Drawing.Point(138, 87);
		this.txtTayerF.Name = "txtTayerF";
		this.txtTayerF.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTayerF.Size = new System.Drawing.Size(42, 28);
		this.txtTayerF.TabIndex = 1089;
		this.txtTayerF.Text = "3";
		this.txtTayerF.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtTayerS.BackColor = System.Drawing.Color.Black;
		this.txtTayerS.Font = new System.Drawing.Font("Tahoma", 13f, System.Drawing.FontStyle.Bold);
		this.txtTayerS.ForeColor = System.Drawing.Color.Lime;
		this.txtTayerS.Location = new System.Drawing.Point(138, 116);
		this.txtTayerS.Name = "txtTayerS";
		this.txtTayerS.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTayerS.Size = new System.Drawing.Size(42, 28);
		this.txtTayerS.TabIndex = 1090;
		this.txtTayerS.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.ckTayerGetBal.AutoSize = true;
		this.ckTayerGetBal.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckTayerGetBal.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckTayerGetBal.ForeColor = System.Drawing.Color.Black;
		this.ckTayerGetBal.Location = new System.Drawing.Point(127, 161);
		this.ckTayerGetBal.Name = "ckTayerGetBal";
		this.ckTayerGetBal.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckTayerGetBal.Size = new System.Drawing.Size(53, 17);
		this.ckTayerGetBal.TabIndex = 1088;
		this.ckTayerGetBal.Text = "Auto";
		this.ckTayerGetBal.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckTayerGetBal.UseVisualStyleBackColor = false;
		this.btnTayerfromMtoN.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTayerfromMtoN.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnTayerfromMtoN.Location = new System.Drawing.Point(417, 250);
		this.btnTayerfromMtoN.Name = "btnTayerfromMtoN";
		this.btnTayerfromMtoN.Size = new System.Drawing.Size(202, 37);
		this.btnTayerfromMtoN.TabIndex = 1087;
		this.btnTayerfromMtoN.Text = "من الاساسى للاساسى التالى";
		this.btnTayerfromMtoN.UseVisualStyleBackColor = false;
		this.Label80.AutoSize = true;
		this.Label80.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label80.ForeColor = System.Drawing.Color.Black;
		this.Label80.Location = new System.Drawing.Point(35, 82);
		this.Label80.Name = "Label80";
		this.Label80.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label80.Size = new System.Drawing.Size(87, 17);
		this.Label80.TabIndex = 1086;
		this.Label80.Text = "مبلغ الشحن";
		this.TextBox1.BackColor = System.Drawing.Color.White;
		this.TextBox1.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.TextBox1.ForeColor = System.Drawing.Color.Black;
		this.TextBox1.Location = new System.Drawing.Point(17, 105);
		this.TextBox1.Name = "TextBox1";
		this.TextBox1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.TextBox1.Size = new System.Drawing.Size(115, 36);
		this.TextBox1.TabIndex = 1085;
		this.TextBox1.Text = "10";
		this.TextBox1.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnAutoVC_ChargeTayer.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnAutoVC_ChargeTayer.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnAutoVC_ChargeTayer.Location = new System.Drawing.Point(14, 19);
		this.btnAutoVC_ChargeTayer.Name = "btnAutoVC_ChargeTayer";
		this.btnAutoVC_ChargeTayer.Size = new System.Drawing.Size(166, 57);
		this.btnAutoVC_ChargeTayer.TabIndex = 1084;
		this.btnAutoVC_ChargeTayer.Text = "شحن من طاير";
		this.btnAutoVC_ChargeTayer.UseVisualStyleBackColor = false;
		this.Label70.AutoSize = true;
		this.Label70.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label70.ForeColor = System.Drawing.Color.Black;
		this.Label70.Location = new System.Drawing.Point(35, 227);
		this.Label70.Name = "Label70";
		this.Label70.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label70.Size = new System.Drawing.Size(113, 17);
		this.Label70.TabIndex = 1083;
		this.Label70.Text = "كلمة مرور الطاير";
		this.txtTayerPass.BackColor = System.Drawing.Color.White;
		this.txtTayerPass.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtTayerPass.ForeColor = System.Drawing.Color.Black;
		this.txtTayerPass.Location = new System.Drawing.Point(38, 250);
		this.txtTayerPass.MaxLength = 4;
		this.txtTayerPass.Name = "txtTayerPass";
		this.txtTayerPass.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTayerPass.Size = new System.Drawing.Size(104, 36);
		this.txtTayerPass.TabIndex = 1082;
		this.txtTayerPass.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.ckTayerSub.AutoSize = true;
		this.ckTayerSub.BackColor = System.Drawing.Color.FromArgb(192, 0, 0);
		this.ckTayerSub.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckTayerSub.Location = new System.Drawing.Point(486, 112);
		this.ckTayerSub.Name = "ckTayerSub";
		this.ckTayerSub.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckTayerSub.Size = new System.Drawing.Size(56, 17);
		this.ckTayerSub.TabIndex = 1073;
		this.ckTayerSub.Text = "خصم ";
		this.ckTayerSub.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckTayerSub.UseVisualStyleBackColor = false;
		this.txtTayerSub.BackColor = System.Drawing.Color.White;
		this.txtTayerSub.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtTayerSub.ForeColor = System.Drawing.Color.Black;
		this.txtTayerSub.Location = new System.Drawing.Point(418, 108);
		this.txtTayerSub.MaxLength = 100;
		this.txtTayerSub.Name = "txtTayerSub";
		this.txtTayerSub.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTayerSub.Size = new System.Drawing.Size(68, 24);
		this.txtTayerSub.TabIndex = 1072;
		this.txtTayerSub.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnTayerEX.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTayerEX.Font = new System.Drawing.Font("Tahoma", 7f, System.Drawing.FontStyle.Bold);
		this.btnTayerEX.Location = new System.Drawing.Point(418, 179);
		this.btnTayerEX.Name = "btnTayerEX";
		this.btnTayerEX.Size = new System.Drawing.Size(42, 23);
		this.btnTayerEX.TabIndex = 1071;
		this.btnTayerEX.Text = "||";
		this.btnTayerEX.UseVisualStyleBackColor = false;
		this.btnTayerSeries.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTayerSeries.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnTayerSeries.Location = new System.Drawing.Point(417, 6);
		this.btnTayerSeries.Name = "btnTayerSeries";
		this.btnTayerSeries.Size = new System.Drawing.Size(203, 59);
		this.btnTayerSeries.TabIndex = 1070;
		this.btnTayerSeries.Text = "متتالى";
		this.btnTayerSeries.UseVisualStyleBackColor = false;
		this.Label75.AutoSize = true;
		this.Label75.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.Label75.ForeColor = System.Drawing.Color.Black;
		this.Label75.Location = new System.Drawing.Point(518, 183);
		this.Label75.Name = "Label75";
		this.Label75.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label75.Size = new System.Drawing.Size(94, 13);
		this.Label75.TabIndex = 1069;
		this.Label75.Text = "الاساسى التالى";
		this.Label79.AutoSize = true;
		this.Label79.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label79.ForeColor = System.Drawing.Color.Black;
		this.Label79.Location = new System.Drawing.Point(537, 78);
		this.Label79.Name = "Label79";
		this.Label79.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label79.Size = new System.Drawing.Size(88, 17);
		this.Label79.TabIndex = 1068;
		this.Label79.Text = "مبلغ التحويل";
		this.txtTayerNextMain.BackColor = System.Drawing.Color.White;
		this.txtTayerNextMain.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtTayerNextMain.ForeColor = System.Drawing.Color.Black;
		this.txtTayerNextMain.Location = new System.Drawing.Point(417, 208);
		this.txtTayerNextMain.MaxLength = 11;
		this.txtTayerNextMain.Name = "txtTayerNextMain";
		this.txtTayerNextMain.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTayerNextMain.Size = new System.Drawing.Size(202, 36);
		this.txtTayerNextMain.TabIndex = 1067;
		this.txtTayerNextMain.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.lblTayerMain.BackColor = System.Drawing.Color.FromArgb(128, 255, 255);
		this.lblTayerMain.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblTayerMain.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.lblTayerMain.ForeColor = System.Drawing.Color.Black;
		this.lblTayerMain.Location = new System.Drawing.Point(418, 138);
		this.lblTayerMain.Name = "lblTayerMain";
		this.lblTayerMain.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblTayerMain.Size = new System.Drawing.Size(202, 38);
		this.lblTayerMain.TabIndex = 1066;
		this.lblTayerMain.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.Label81.AutoSize = true;
		this.Label81.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label81.ForeColor = System.Drawing.Color.Black;
		this.Label81.Location = new System.Drawing.Point(547, 116);
		this.Label81.Name = "Label81";
		this.Label81.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label81.Size = new System.Drawing.Size(72, 17);
		this.Label81.TabIndex = 1065;
		this.Label81.Text = "الاساسى";
		this.txtTayerValue.BackColor = System.Drawing.Color.White;
		this.txtTayerValue.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtTayerValue.ForeColor = System.Drawing.Color.Black;
		this.txtTayerValue.Location = new System.Drawing.Point(417, 68);
		this.txtTayerValue.Name = "txtTayerValue";
		this.txtTayerValue.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTayerValue.Size = new System.Drawing.Size(114, 36);
		this.txtTayerValue.TabIndex = 1064;
		this.txtTayerValue.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnTayerGetBal.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTayerGetBal.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnTayerGetBal.Location = new System.Drawing.Point(14, 160);
		this.btnTayerGetBal.Name = "btnTayerGetBal";
		this.btnTayerGetBal.Size = new System.Drawing.Size(167, 61);
		this.btnTayerGetBal.TabIndex = 1063;
		this.btnTayerGetBal.Text = "استعلام عن رصيدالطاير";
		this.btnTayerGetBal.UseVisualStyleBackColor = false;
		this.tabEzoo.BackColor = System.Drawing.Color.Purple;
		this.tabEzoo.Controls.Add(this.ckbtnTal2aGetBal);
		this.tabEzoo.Controls.Add(this.ckTal2a);
		this.tabEzoo.Controls.Add(this.btnTal2aTransferFromOrange);
		this.tabEzoo.Controls.Add(this.Label102);
		this.tabEzoo.Controls.Add(this.txtTl2aOrangeValue);
		this.tabEzoo.Controls.Add(this.btnTal2aTransferVoda);
		this.tabEzoo.Controls.Add(this.btnTal2aGetBal);
		this.tabEzoo.Controls.Add(this.Label86);
		this.tabEzoo.Controls.Add(this.txtTl2aToVodaNumber);
		this.tabEzoo.Controls.Add(this.txtTl2aVodaValue);
		this.tabEzoo.Location = new System.Drawing.Point(4, 22);
		this.tabEzoo.Name = "tabEzoo";
		this.tabEzoo.Size = new System.Drawing.Size(934, 295);
		this.tabEzoo.TabIndex = 28;
		this.tabEzoo.Text = "EZOO Tal2a";
		this.ckbtnTal2aGetBal.AutoSize = true;
		this.ckbtnTal2aGetBal.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckbtnTal2aGetBal.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckbtnTal2aGetBal.ForeColor = System.Drawing.Color.Black;
		this.ckbtnTal2aGetBal.Location = new System.Drawing.Point(842, 222);
		this.ckbtnTal2aGetBal.Name = "ckbtnTal2aGetBal";
		this.ckbtnTal2aGetBal.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckbtnTal2aGetBal.Size = new System.Drawing.Size(42, 17);
		this.ckbtnTal2aGetBal.TabIndex = 1116;
		this.ckbtnTal2aGetBal.Text = "AU";
		this.ckbtnTal2aGetBal.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckbtnTal2aGetBal.UseVisualStyleBackColor = false;
		this.ckTal2a.AutoSize = true;
		this.ckTal2a.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckTal2a.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckTal2a.ForeColor = System.Drawing.Color.Black;
		this.ckTal2a.Location = new System.Drawing.Point(24, 37);
		this.ckTal2a.Name = "ckTal2a";
		this.ckTal2a.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckTal2a.Size = new System.Drawing.Size(75, 17);
		this.ckTal2a.TabIndex = 1013;
		this.ckTal2a.Text = "Arrange ";
		this.ckTal2a.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckTal2a.UseVisualStyleBackColor = false;
		this.btnTal2aTransferFromOrange.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTal2aTransferFromOrange.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnTal2aTransferFromOrange.Location = new System.Drawing.Point(315, 101);
		this.btnTal2aTransferFromOrange.Name = "btnTal2aTransferFromOrange";
		this.btnTal2aTransferFromOrange.Size = new System.Drawing.Size(198, 51);
		this.btnTal2aTransferFromOrange.TabIndex = 1012;
		this.btnTal2aTransferFromOrange.Text = "Transfer to Voda";
		this.btnTal2aTransferFromOrange.UseVisualStyleBackColor = false;
		this.Label102.AutoSize = true;
		this.Label102.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label102.ForeColor = System.Drawing.Color.Black;
		this.Label102.Location = new System.Drawing.Point(453, 73);
		this.Label102.Name = "Label102";
		this.Label102.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label102.Size = new System.Drawing.Size(45, 17);
		this.Label102.TabIndex = 1011;
		this.Label102.Text = "المبلغ";
		this.txtTl2aOrangeValue.BackColor = System.Drawing.Color.White;
		this.txtTl2aOrangeValue.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtTl2aOrangeValue.ForeColor = System.Drawing.Color.Black;
		this.txtTl2aOrangeValue.Location = new System.Drawing.Point(315, 59);
		this.txtTl2aOrangeValue.Name = "txtTl2aOrangeValue";
		this.txtTl2aOrangeValue.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTl2aOrangeValue.Size = new System.Drawing.Size(132, 36);
		this.txtTl2aOrangeValue.TabIndex = 1010;
		this.txtTl2aOrangeValue.Text = "30000";
		this.txtTl2aOrangeValue.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnTal2aTransferVoda.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTal2aTransferVoda.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnTal2aTransferVoda.Location = new System.Drawing.Point(24, 222);
		this.btnTal2aTransferVoda.Name = "btnTal2aTransferVoda";
		this.btnTal2aTransferVoda.Size = new System.Drawing.Size(208, 51);
		this.btnTal2aTransferVoda.TabIndex = 1009;
		this.btnTal2aTransferVoda.Text = "Transfer to Tal2a";
		this.btnTal2aTransferVoda.UseVisualStyleBackColor = false;
		this.btnTal2aGetBal.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTal2aGetBal.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnTal2aGetBal.Location = new System.Drawing.Point(689, 220);
		this.btnTal2aGetBal.Name = "btnTal2aGetBal";
		this.btnTal2aGetBal.Size = new System.Drawing.Size(198, 53);
		this.btnTal2aGetBal.TabIndex = 1008;
		this.btnTal2aGetBal.Text = "استعلام عن رصيدالكاش";
		this.btnTal2aGetBal.UseVisualStyleBackColor = false;
		this.Label86.AutoSize = true;
		this.Label86.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label86.ForeColor = System.Drawing.Color.Black;
		this.Label86.Location = new System.Drawing.Point(172, 150);
		this.Label86.Name = "Label86";
		this.Label86.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label86.Size = new System.Drawing.Size(45, 17);
		this.Label86.TabIndex = 1006;
		this.Label86.Text = "المبلغ";
		this.txtTl2aToVodaNumber.BackColor = System.Drawing.Color.White;
		this.txtTl2aToVodaNumber.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtTl2aToVodaNumber.ForeColor = System.Drawing.Color.Black;
		this.txtTl2aToVodaNumber.Location = new System.Drawing.Point(24, 180);
		this.txtTl2aToVodaNumber.MaxLength = 11;
		this.txtTl2aToVodaNumber.Name = "txtTl2aToVodaNumber";
		this.txtTl2aToVodaNumber.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTl2aToVodaNumber.Size = new System.Drawing.Size(202, 36);
		this.txtTl2aToVodaNumber.TabIndex = 1005;
		this.txtTl2aToVodaNumber.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtTl2aVodaValue.BackColor = System.Drawing.Color.White;
		this.txtTl2aVodaValue.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtTl2aVodaValue.ForeColor = System.Drawing.Color.Black;
		this.txtTl2aVodaValue.Location = new System.Drawing.Point(24, 136);
		this.txtTl2aVodaValue.Name = "txtTl2aVodaValue";
		this.txtTl2aVodaValue.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTl2aVodaValue.Size = new System.Drawing.Size(132, 36);
		this.txtTl2aVodaValue.TabIndex = 1002;
		this.txtTl2aVodaValue.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.tab365.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.tab365.Controls.Add(this.chkTransGiftAutoSpVal365);
		this.tab365.Controls.Add(this.txtLoopSSD365_f);
		this.tab365.Controls.Add(this.txtLoopFSD365_f);
		this.tab365.Controls.Add(this.txtGetgft365_2);
		this.tab365.Controls.Add(this.chkAuto365EXE_f);
		this.tab365.Controls.Add(this.txtGetgft365_f);
		this.tab365.Controls.Add(this.btnApply36590_f);
		this.tab365.Controls.Add(this.txtLoopSSD365Gft);
		this.tab365.Controls.Add(this.txtLoopFSD365Gft);
		this.tab365.Controls.Add(this.chkNoCharge50);
		this.tab365.Controls.Add(this.chkAuto365Trans);
		this.tab365.Controls.Add(this.chk250int);
		this.tab365.Controls.Add(this.chkApply365);
		this.tab365.Controls.Add(this.chkAuto365EXE);
		this.tab365.Controls.Add(this.chkFast365);
		this.tab365.Controls.Add(this.btnAuto365);
		this.tab365.Controls.Add(this.txtGetgft365);
		this.tab365.Controls.Add(this.txtVCForceMony365);
		this.tab365.Controls.Add(this.btnTransGiftAutoSpVal365);
		this.tab365.Controls.Add(this.Label54);
		this.tab365.Controls.Add(this.txtTransNum2365Gft);
		this.tab365.Controls.Add(this.txtLoopSSD365);
		this.tab365.Controls.Add(this.txtLoopFSD365);
		this.tab365.Controls.Add(this.btnApply36590);
		this.tab365.Controls.Add(this.chkChargeOnSame365);
		this.tab365.Controls.Add(this.Label52);
		this.tab365.Controls.Add(this.Label53);
		this.tab365.Controls.Add(this.txtTransNum2365);
		this.tab365.Controls.Add(this.txtMonyMn365);
		this.tab365.Controls.Add(this.btnApply365);
		this.tab365.Location = new System.Drawing.Point(4, 22);
		this.tab365.Name = "tab365";
		this.tab365.Padding = new System.Windows.Forms.Padding(3);
		this.tab365.Size = new System.Drawing.Size(934, 295);
		this.tab365.TabIndex = 15;
		this.tab365.Text = "365";
		this.chkTransGiftAutoSpVal365.AutoSize = true;
		this.chkTransGiftAutoSpVal365.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.chkTransGiftAutoSpVal365.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkTransGiftAutoSpVal365.ForeColor = System.Drawing.Color.RoyalBlue;
		this.chkTransGiftAutoSpVal365.Location = new System.Drawing.Point(66, 227);
		this.chkTransGiftAutoSpVal365.Name = "chkTransGiftAutoSpVal365";
		this.chkTransGiftAutoSpVal365.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkTransGiftAutoSpVal365.Size = new System.Drawing.Size(49, 17);
		this.chkTransGiftAutoSpVal365.TabIndex = 1046;
		this.chkTransGiftAutoSpVal365.Text = "عداد";
		this.chkTransGiftAutoSpVal365.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkTransGiftAutoSpVal365.UseVisualStyleBackColor = false;
		this.chkTransGiftAutoSpVal365.Visible = false;
		this.txtLoopSSD365_f.BackColor = System.Drawing.Color.Black;
		this.txtLoopSSD365_f.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopSSD365_f.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopSSD365_f.Location = new System.Drawing.Point(592, 22);
		this.txtLoopSSD365_f.Name = "txtLoopSSD365_f";
		this.txtLoopSSD365_f.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopSSD365_f.Size = new System.Drawing.Size(47, 24);
		this.txtLoopSSD365_f.TabIndex = 1045;
		this.txtLoopSSD365_f.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtLoopFSD365_f.BackColor = System.Drawing.Color.Black;
		this.txtLoopFSD365_f.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopFSD365_f.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopFSD365_f.Location = new System.Drawing.Point(540, 22);
		this.txtLoopFSD365_f.Name = "txtLoopFSD365_f";
		this.txtLoopFSD365_f.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopFSD365_f.Size = new System.Drawing.Size(46, 24);
		this.txtLoopFSD365_f.TabIndex = 1044;
		this.txtLoopFSD365_f.Text = "1";
		this.txtLoopFSD365_f.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtGetgft365_2.BackColor = System.Drawing.Color.White;
		this.txtGetgft365_2.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtGetgft365_2.ForeColor = System.Drawing.Color.Black;
		this.txtGetgft365_2.Location = new System.Drawing.Point(14, 139);
		this.txtGetgft365_2.Name = "txtGetgft365_2";
		this.txtGetgft365_2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtGetgft365_2.Size = new System.Drawing.Size(214, 27);
		this.txtGetgft365_2.TabIndex = 1043;
		this.txtGetgft365_2.Text = "*365*91#";
		this.chkAuto365EXE_f.AutoSize = true;
		this.chkAuto365EXE_f.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.chkAuto365EXE_f.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkAuto365EXE_f.ForeColor = System.Drawing.Color.Black;
		this.chkAuto365EXE_f.Location = new System.Drawing.Point(838, 18);
		this.chkAuto365EXE_f.Name = "chkAuto365EXE_f";
		this.chkAuto365EXE_f.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkAuto365EXE_f.Size = new System.Drawing.Size(53, 17);
		this.chkAuto365EXE_f.TabIndex = 1042;
		this.chkAuto365EXE_f.Text = "Auto";
		this.chkAuto365EXE_f.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkAuto365EXE_f.UseVisualStyleBackColor = false;
		this.txtGetgft365_f.BackColor = System.Drawing.Color.White;
		this.txtGetgft365_f.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtGetgft365_f.ForeColor = System.Drawing.Color.Black;
		this.txtGetgft365_f.Location = new System.Drawing.Point(475, 51);
		this.txtGetgft365_f.Name = "txtGetgft365_f";
		this.txtGetgft365_f.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtGetgft365_f.Size = new System.Drawing.Size(164, 27);
		this.txtGetgft365_f.TabIndex = 1041;
		this.txtGetgft365_f.Text = "*365*90#";
		this.btnApply36590_f.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnApply36590_f.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnApply36590_f.Location = new System.Drawing.Point(716, 42);
		this.btnApply36590_f.Name = "btnApply36590_f";
		this.btnApply36590_f.Size = new System.Drawing.Size(175, 36);
		this.btnApply36590_f.TabIndex = 1040;
		this.btnApply36590_f.Text = "تنفيذ";
		this.btnApply36590_f.UseVisualStyleBackColor = false;
		this.txtLoopSSD365Gft.BackColor = System.Drawing.Color.FromArgb(128, 128, 255);
		this.txtLoopSSD365Gft.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopSSD365Gft.ForeColor = System.Drawing.Color.Black;
		this.txtLoopSSD365Gft.Location = new System.Drawing.Point(13, 242);
		this.txtLoopSSD365Gft.Name = "txtLoopSSD365Gft";
		this.txtLoopSSD365Gft.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopSSD365Gft.Size = new System.Drawing.Size(50, 24);
		this.txtLoopSSD365Gft.TabIndex = 1039;
		this.txtLoopSSD365Gft.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtLoopSSD365Gft.Visible = false;
		this.txtLoopFSD365Gft.BackColor = System.Drawing.Color.FromArgb(128, 128, 255);
		this.txtLoopFSD365Gft.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopFSD365Gft.ForeColor = System.Drawing.Color.Black;
		this.txtLoopFSD365Gft.Location = new System.Drawing.Point(14, 217);
		this.txtLoopFSD365Gft.Name = "txtLoopFSD365Gft";
		this.txtLoopFSD365Gft.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopFSD365Gft.Size = new System.Drawing.Size(49, 24);
		this.txtLoopFSD365Gft.TabIndex = 1038;
		this.txtLoopFSD365Gft.Text = "1";
		this.txtLoopFSD365Gft.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtLoopFSD365Gft.Visible = false;
		this.chkNoCharge50.AutoSize = true;
		this.chkNoCharge50.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.chkNoCharge50.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkNoCharge50.ForeColor = System.Drawing.Color.Black;
		this.chkNoCharge50.Location = new System.Drawing.Point(492, 84);
		this.chkNoCharge50.Name = "chkNoCharge50";
		this.chkNoCharge50.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkNoCharge50.Size = new System.Drawing.Size(141, 17);
		this.chkNoCharge50.TabIndex = 1037;
		this.chkNoCharge50.Text = "ممنوع شحن الهدية 50";
		this.chkNoCharge50.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkNoCharge50.UseVisualStyleBackColor = false;
		this.chkNoCharge50.Visible = false;
		this.chkAuto365Trans.AutoSize = true;
		this.chkAuto365Trans.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.chkAuto365Trans.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkAuto365Trans.ForeColor = System.Drawing.Color.Black;
		this.chkAuto365Trans.Location = new System.Drawing.Point(175, 225);
		this.chkAuto365Trans.Name = "chkAuto365Trans";
		this.chkAuto365Trans.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkAuto365Trans.Size = new System.Drawing.Size(53, 17);
		this.chkAuto365Trans.TabIndex = 1036;
		this.chkAuto365Trans.Text = "Auto";
		this.chkAuto365Trans.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkAuto365Trans.UseVisualStyleBackColor = false;
		this.chk250int.AutoSize = true;
		this.chk250int.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.chk250int.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chk250int.Location = new System.Drawing.Point(508, 110);
		this.chk250int.Name = "chk250int";
		this.chk250int.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chk250int.Size = new System.Drawing.Size(124, 17);
		this.chk250int.TabIndex = 1035;
		this.chk250int.Text = "علم على 250 وحدة";
		this.chk250int.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chk250int.UseVisualStyleBackColor = false;
		this.chkApply365.AutoSize = true;
		this.chkApply365.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.chkApply365.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkApply365.ForeColor = System.Drawing.Color.Black;
		this.chkApply365.Location = new System.Drawing.Point(838, 87);
		this.chkApply365.Name = "chkApply365";
		this.chkApply365.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkApply365.Size = new System.Drawing.Size(53, 17);
		this.chkApply365.TabIndex = 1026;
		this.chkApply365.Text = "Auto";
		this.chkApply365.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkApply365.UseVisualStyleBackColor = false;
		this.chkAuto365EXE.AutoSize = true;
		this.chkAuto365EXE.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.chkAuto365EXE.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkAuto365EXE.ForeColor = System.Drawing.Color.Black;
		this.chkAuto365EXE.Location = new System.Drawing.Point(175, 48);
		this.chkAuto365EXE.Name = "chkAuto365EXE";
		this.chkAuto365EXE.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkAuto365EXE.Size = new System.Drawing.Size(53, 17);
		this.chkAuto365EXE.TabIndex = 1025;
		this.chkAuto365EXE.Text = "Auto";
		this.chkAuto365EXE.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkAuto365EXE.UseVisualStyleBackColor = false;
		this.chkFast365.AutoSize = true;
		this.chkFast365.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.chkFast365.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkFast365.Location = new System.Drawing.Point(540, 137);
		this.chkFast365.Name = "chkFast365";
		this.chkFast365.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkFast365.Size = new System.Drawing.Size(99, 17);
		this.chkFast365.TabIndex = 1024;
		this.chkFast365.Text = "استعلام سريع";
		this.chkFast365.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkFast365.UseVisualStyleBackColor = false;
		this.btnAuto365.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnAuto365.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnAuto365.Location = new System.Drawing.Point(14, 9);
		this.btnAuto365.Name = "btnAuto365";
		this.btnAuto365.Size = new System.Drawing.Size(222, 33);
		this.btnAuto365.TabIndex = 1023;
		this.btnAuto365.Text = "تشغيل ذكى استقبال وتحويل";
		this.btnAuto365.UseVisualStyleBackColor = false;
		this.txtGetgft365.BackColor = System.Drawing.Color.White;
		this.txtGetgft365.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtGetgft365.ForeColor = System.Drawing.Color.Black;
		this.txtGetgft365.Location = new System.Drawing.Point(14, 101);
		this.txtGetgft365.Name = "txtGetgft365";
		this.txtGetgft365.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtGetgft365.Size = new System.Drawing.Size(214, 27);
		this.txtGetgft365.TabIndex = 1022;
		this.txtGetgft365.Text = "*365*90#";
		this.txtVCForceMony365.BackColor = System.Drawing.Color.White;
		this.txtVCForceMony365.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold);
		this.txtVCForceMony365.ForeColor = System.Drawing.Color.Black;
		this.txtVCForceMony365.Location = new System.Drawing.Point(13, 186);
		this.txtVCForceMony365.Name = "txtVCForceMony365";
		this.txtVCForceMony365.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtVCForceMony365.Size = new System.Drawing.Size(50, 27);
		this.txtVCForceMony365.TabIndex = 1021;
		this.txtVCForceMony365.Text = "0";
		this.txtVCForceMony365.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnTransGiftAutoSpVal365.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnTransGiftAutoSpVal365.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnTransGiftAutoSpVal365.Location = new System.Drawing.Point(65, 172);
		this.btnTransGiftAutoSpVal365.Name = "btnTransGiftAutoSpVal365";
		this.btnTransGiftAutoSpVal365.Size = new System.Drawing.Size(163, 49);
		this.btnTransGiftAutoSpVal365.TabIndex = 1020;
		this.btnTransGiftAutoSpVal365.Text = "شحن الهدية رصيد";
		this.btnTransGiftAutoSpVal365.UseVisualStyleBackColor = false;
		this.Label54.AutoSize = true;
		this.Label54.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.Label54.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label54.ForeColor = System.Drawing.Color.Black;
		this.Label54.Location = new System.Drawing.Point(459, 195);
		this.Label54.Name = "Label54";
		this.Label54.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label54.Size = new System.Drawing.Size(186, 17);
		this.Label54.TabIndex = 1019;
		this.Label54.Text = "الخط مستقبل شحن الهدية ";
		this.txtTransNum2365Gft.BackColor = System.Drawing.Color.White;
		this.txtTransNum2365Gft.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtTransNum2365Gft.ForeColor = System.Drawing.Color.Black;
		this.txtTransNum2365Gft.Location = new System.Drawing.Point(452, 221);
		this.txtTransNum2365Gft.MaxLength = 11;
		this.txtTransNum2365Gft.Name = "txtTransNum2365Gft";
		this.txtTransNum2365Gft.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTransNum2365Gft.Size = new System.Drawing.Size(187, 36);
		this.txtTransNum2365Gft.TabIndex = 1018;
		this.txtTransNum2365Gft.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtLoopSSD365.BackColor = System.Drawing.Color.Black;
		this.txtLoopSSD365.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopSSD365.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopSSD365.Location = new System.Drawing.Point(181, 71);
		this.txtLoopSSD365.Name = "txtLoopSSD365";
		this.txtLoopSSD365.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopSSD365.Size = new System.Drawing.Size(47, 24);
		this.txtLoopSSD365.TabIndex = 1017;
		this.txtLoopSSD365.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtLoopFSD365.BackColor = System.Drawing.Color.Black;
		this.txtLoopFSD365.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.txtLoopFSD365.ForeColor = System.Drawing.Color.Lime;
		this.txtLoopFSD365.Location = new System.Drawing.Point(129, 71);
		this.txtLoopFSD365.Name = "txtLoopFSD365";
		this.txtLoopFSD365.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtLoopFSD365.Size = new System.Drawing.Size(46, 24);
		this.txtLoopFSD365.TabIndex = 1016;
		this.txtLoopFSD365.Text = "1";
		this.txtLoopFSD365.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnApply36590.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnApply36590.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnApply36590.Location = new System.Drawing.Point(14, 45);
		this.btnApply36590.Name = "btnApply36590";
		this.btnApply36590.Size = new System.Drawing.Size(109, 50);
		this.btnApply36590.TabIndex = 1015;
		this.btnApply36590.Text = "تنفيذ";
		this.btnApply36590.UseVisualStyleBackColor = false;
		this.chkChargeOnSame365.AutoSize = true;
		this.chkChargeOnSame365.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.chkChargeOnSame365.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkChargeOnSame365.Location = new System.Drawing.Point(454, 160);
		this.chkChargeOnSame365.Name = "chkChargeOnSame365";
		this.chkChargeOnSame365.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkChargeOnSame365.Size = new System.Drawing.Size(175, 17);
		this.chkChargeOnSame365.TabIndex = 1014;
		this.chkChargeOnSame365.Text = "شحن الهدية على نفس الرقم";
		this.chkChargeOnSame365.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkChargeOnSame365.UseVisualStyleBackColor = false;
		this.Label52.AutoSize = true;
		this.Label52.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label52.ForeColor = System.Drawing.Color.Black;
		this.Label52.Location = new System.Drawing.Point(789, 165);
		this.Label52.Name = "Label52";
		this.Label52.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label52.Size = new System.Drawing.Size(113, 17);
		this.Label52.TabIndex = 1013;
		this.Label52.Text = "المبلغ المشحون";
		this.Label53.AutoSize = true;
		this.Label53.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.Label53.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label53.ForeColor = System.Drawing.Color.Black;
		this.Label53.Location = new System.Drawing.Point(724, 198);
		this.Label53.Name = "Label53";
		this.Label53.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label53.Size = new System.Drawing.Size(178, 17);
		this.Label53.TabIndex = 1012;
		this.Label53.Text = "الخط مستقبل الرصيد  365";
		this.txtTransNum2365.BackColor = System.Drawing.Color.White;
		this.txtTransNum2365.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtTransNum2365.ForeColor = System.Drawing.Color.Black;
		this.txtTransNum2365.Location = new System.Drawing.Point(716, 221);
		this.txtTransNum2365.MaxLength = 11;
		this.txtTransNum2365.Name = "txtTransNum2365";
		this.txtTransNum2365.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtTransNum2365.Size = new System.Drawing.Size(187, 36);
		this.txtTransNum2365.TabIndex = 1011;
		this.txtTransNum2365.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtMonyMn365.BackColor = System.Drawing.Color.White;
		this.txtMonyMn365.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtMonyMn365.ForeColor = System.Drawing.Color.Black;
		this.txtMonyMn365.Location = new System.Drawing.Point(716, 156);
		this.txtMonyMn365.Name = "txtMonyMn365";
		this.txtMonyMn365.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMonyMn365.Size = new System.Drawing.Size(70, 36);
		this.txtMonyMn365.TabIndex = 1010;
		this.txtMonyMn365.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnApply365.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnApply365.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnApply365.Location = new System.Drawing.Point(716, 110);
		this.btnApply365.Name = "btnApply365";
		this.btnApply365.Size = new System.Drawing.Size(175, 45);
		this.btnApply365.TabIndex = 985;
		this.btnApply365.Text = "*365#";
		this.btnApply365.UseVisualStyleBackColor = false;
		this.tabpoints.BackColor = System.Drawing.Color.Red;
		this.tabpoints.Controls.Add(this.txtRet07);
		this.tabpoints.Controls.Add(this.txtRet08);
		this.tabpoints.Controls.Add(this.chkCh8);
		this.tabpoints.Controls.Add(this.chkCh7);
		this.tabpoints.Controls.Add(this.txtPointsF);
		this.tabpoints.Controls.Add(this.txtPointsS);
		this.tabpoints.Controls.Add(this.btnAutoVC_ChargePoints);
		this.tabpoints.Controls.Add(this.Label69);
		this.tabpoints.Controls.Add(this.lblMainPoints);
		this.tabpoints.Controls.Add(this.Label71);
		this.tabpoints.Controls.Add(this.txtPointsValue);
		this.tabpoints.Controls.Add(this.lblNum8);
		this.tabpoints.Controls.Add(this.lblNum7);
		this.tabpoints.Location = new System.Drawing.Point(4, 22);
		this.tabpoints.Margin = new System.Windows.Forms.Padding(3, 2, 3, 2);
		this.tabpoints.Name = "tabpoints";
		this.tabpoints.Padding = new System.Windows.Forms.Padding(3, 2, 3, 2);
		this.tabpoints.Size = new System.Drawing.Size(934, 295);
		this.tabpoints.TabIndex = 19;
		this.tabpoints.Text = "Points";
		this.txtRet07.BackColor = System.Drawing.Color.Black;
		this.txtRet07.Font = new System.Drawing.Font("Arial", 10.25f, System.Drawing.FontStyle.Bold);
		this.txtRet07.ForeColor = System.Drawing.Color.Cyan;
		this.txtRet07.Location = new System.Drawing.Point(250, 179);
		this.txtRet07.Multiline = true;
		this.txtRet07.Name = "txtRet07";
		this.txtRet07.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.txtRet07.ScrollBars = System.Windows.Forms.ScrollBars.Vertical;
		this.txtRet07.Size = new System.Drawing.Size(192, 98);
		this.txtRet07.TabIndex = 1076;
		this.txtRet08.BackColor = System.Drawing.Color.Black;
		this.txtRet08.Font = new System.Drawing.Font("Arial", 10.25f, System.Drawing.FontStyle.Bold);
		this.txtRet08.ForeColor = System.Drawing.Color.Cyan;
		this.txtRet08.Location = new System.Drawing.Point(22, 180);
		this.txtRet08.Multiline = true;
		this.txtRet08.Name = "txtRet08";
		this.txtRet08.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.txtRet08.ScrollBars = System.Windows.Forms.ScrollBars.Vertical;
		this.txtRet08.Size = new System.Drawing.Size(193, 97);
		this.txtRet08.TabIndex = 1075;
		this.chkCh8.AutoSize = true;
		this.chkCh8.Checked = true;
		this.chkCh8.CheckState = System.Windows.Forms.CheckState.Checked;
		this.chkCh8.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkCh8.Location = new System.Drawing.Point(216, 154);
		this.chkCh8.Name = "chkCh8";
		this.chkCh8.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkCh8.Size = new System.Drawing.Size(15, 14);
		this.chkCh8.TabIndex = 1074;
		this.chkCh8.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkCh8.UseVisualStyleBackColor = true;
		this.chkCh7.AutoSize = true;
		this.chkCh7.Checked = true;
		this.chkCh7.CheckState = System.Windows.Forms.CheckState.Checked;
		this.chkCh7.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkCh7.Location = new System.Drawing.Point(448, 154);
		this.chkCh7.Name = "chkCh7";
		this.chkCh7.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkCh7.Size = new System.Drawing.Size(15, 14);
		this.chkCh7.TabIndex = 1073;
		this.chkCh7.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkCh7.UseVisualStyleBackColor = true;
		this.txtPointsF.BackColor = System.Drawing.Color.Black;
		this.txtPointsF.Font = new System.Drawing.Font("Tahoma", 13f, System.Drawing.FontStyle.Bold);
		this.txtPointsF.ForeColor = System.Drawing.Color.Lime;
		this.txtPointsF.Location = new System.Drawing.Point(475, 18);
		this.txtPointsF.Name = "txtPointsF";
		this.txtPointsF.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtPointsF.Size = new System.Drawing.Size(42, 28);
		this.txtPointsF.TabIndex = 1071;
		this.txtPointsF.Text = "3";
		this.txtPointsF.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtPointsS.BackColor = System.Drawing.Color.Black;
		this.txtPointsS.Font = new System.Drawing.Font("Tahoma", 13f, System.Drawing.FontStyle.Bold);
		this.txtPointsS.ForeColor = System.Drawing.Color.Lime;
		this.txtPointsS.Location = new System.Drawing.Point(429, 17);
		this.txtPointsS.Name = "txtPointsS";
		this.txtPointsS.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtPointsS.Size = new System.Drawing.Size(40, 28);
		this.txtPointsS.TabIndex = 1072;
		this.txtPointsS.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnAutoVC_ChargePoints.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnAutoVC_ChargePoints.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnAutoVC_ChargePoints.Location = new System.Drawing.Point(22, 17);
		this.btnAutoVC_ChargePoints.Name = "btnAutoVC_ChargePoints";
		this.btnAutoVC_ChargePoints.Size = new System.Drawing.Size(197, 66);
		this.btnAutoVC_ChargePoints.TabIndex = 1068;
		this.btnAutoVC_ChargePoints.Text = "شحن من كاش";
		this.btnAutoVC_ChargePoints.UseVisualStyleBackColor = false;
		this.Label69.AutoSize = true;
		this.Label69.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label69.ForeColor = System.Drawing.Color.Black;
		this.Label69.Location = new System.Drawing.Point(279, 31);
		this.Label69.Name = "Label69";
		this.Label69.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label69.Size = new System.Drawing.Size(45, 17);
		this.Label69.TabIndex = 1067;
		this.Label69.Text = "المبلغ";
		this.lblMainPoints.BackColor = System.Drawing.Color.FromArgb(255, 192, 192);
		this.lblMainPoints.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblMainPoints.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.lblMainPoints.ForeColor = System.Drawing.Color.Black;
		this.lblMainPoints.Location = new System.Drawing.Point(420, 54);
		this.lblMainPoints.Name = "lblMainPoints";
		this.lblMainPoints.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblMainPoints.Size = new System.Drawing.Size(202, 38);
		this.lblMainPoints.TabIndex = 1066;
		this.lblMainPoints.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.Label71.AutoSize = true;
		this.Label71.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label71.ForeColor = System.Drawing.Color.Black;
		this.Label71.Location = new System.Drawing.Point(550, 31);
		this.Label71.Name = "Label71";
		this.Label71.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label71.Size = new System.Drawing.Size(72, 17);
		this.Label71.TabIndex = 1065;
		this.Label71.Text = "الاساسى";
		this.txtPointsValue.BackColor = System.Drawing.Color.White;
		this.txtPointsValue.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtPointsValue.ForeColor = System.Drawing.Color.Black;
		this.txtPointsValue.Location = new System.Drawing.Point(255, 58);
		this.txtPointsValue.Name = "txtPointsValue";
		this.txtPointsValue.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtPointsValue.Size = new System.Drawing.Size(84, 36);
		this.txtPointsValue.TabIndex = 1064;
		this.txtPointsValue.Text = "10";
		this.txtPointsValue.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.lblNum8.BackColor = System.Drawing.Color.White;
		this.lblNum8.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.lblNum8.ForeColor = System.Drawing.Color.Black;
		this.lblNum8.Location = new System.Drawing.Point(22, 137);
		this.lblNum8.MaxLength = 11;
		this.lblNum8.Name = "lblNum8";
		this.lblNum8.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblNum8.Size = new System.Drawing.Size(187, 36);
		this.lblNum8.TabIndex = 998;
		this.lblNum8.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.lblNum7.BackColor = System.Drawing.Color.White;
		this.lblNum7.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.lblNum7.ForeColor = System.Drawing.Color.Black;
		this.lblNum7.Location = new System.Drawing.Point(255, 136);
		this.lblNum7.MaxLength = 11;
		this.lblNum7.Name = "lblNum7";
		this.lblNum7.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblNum7.Size = new System.Drawing.Size(187, 36);
		this.lblNum7.TabIndex = 997;
		this.lblNum7.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.tabON.BackColor = System.Drawing.Color.Red;
		this.tabON.Controls.Add(this.btnONtopup);
		this.tabON.Controls.Add(this.btnONGift);
		this.tabON.Controls.Add(this.btnGetBal2ON);
		this.tabON.Controls.Add(this.btnAutoGet);
		this.tabON.Controls.Add(this.btnPic);
		this.tabON.Controls.Add(this.lblONnumQ);
		this.tabON.Controls.Add(this.lblONvQ);
		this.tabON.Controls.Add(this.lblONmcQ);
		this.tabON.Controls.Add(this.txtQryOrder);
		this.tabON.Controls.Add(this.lblONnum6);
		this.tabON.Controls.Add(this.txtONorder6);
		this.tabON.Controls.Add(this.lblONv6);
		this.tabON.Controls.Add(this.lblONmc6);
		this.tabON.Controls.Add(this.lblONnum5);
		this.tabON.Controls.Add(this.txtONorder5);
		this.tabON.Controls.Add(this.lblONv5);
		this.tabON.Controls.Add(this.lblONmc5);
		this.tabON.Controls.Add(this.lblONnum4);
		this.tabON.Controls.Add(this.txtONorder4);
		this.tabON.Controls.Add(this.lblONv4);
		this.tabON.Controls.Add(this.lblONmc4);
		this.tabON.Controls.Add(this.lblONnum3);
		this.tabON.Controls.Add(this.txtONorder3);
		this.tabON.Controls.Add(this.lblONv3);
		this.tabON.Controls.Add(this.lblONmc3);
		this.tabON.Controls.Add(this.lblONnum2);
		this.tabON.Controls.Add(this.txtONorder2);
		this.tabON.Controls.Add(this.lblONv2);
		this.tabON.Controls.Add(this.lblONmc2);
		this.tabON.Controls.Add(this.lblONnum1);
		this.tabON.Controls.Add(this.txtONorder1);
		this.tabON.Controls.Add(this.lblONed);
		this.tabON.Controls.Add(this.lblONv1);
		this.tabON.Controls.Add(this.lblONmc1);
		this.tabON.Controls.Add(this.ckOnOut);
		this.tabON.Controls.Add(this.btnOnOut);
		this.tabON.Controls.Add(this.Label64);
		this.tabON.Controls.Add(this.txtOnValue);
		this.tabON.Location = new System.Drawing.Point(4, 22);
		this.tabON.Name = "tabON";
		this.tabON.Size = new System.Drawing.Size(934, 295);
		this.tabON.TabIndex = 18;
		this.tabON.Text = "ON";
		this.btnONtopup.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnONtopup.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnONtopup.Location = new System.Drawing.Point(558, 178);
		this.btnONtopup.Name = "btnONtopup";
		this.btnONtopup.Size = new System.Drawing.Size(75, 53);
		this.btnONtopup.TabIndex = 1093;
		this.btnONtopup.Text = "TopUP";
		this.btnONtopup.UseVisualStyleBackColor = false;
		this.btnONGift.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnONGift.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnONGift.Location = new System.Drawing.Point(558, 124);
		this.btnONGift.Name = "btnONGift";
		this.btnONGift.Size = new System.Drawing.Size(75, 53);
		this.btnONGift.TabIndex = 1092;
		this.btnONGift.Text = "Gift";
		this.btnONGift.UseVisualStyleBackColor = false;
		this.btnGetBal2ON.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnGetBal2ON.Font = new System.Drawing.Font("Tahoma", 8.75f, System.Drawing.FontStyle.Bold);
		this.btnGetBal2ON.Location = new System.Drawing.Point(433, 206);
		this.btnGetBal2ON.Name = "btnGetBal2ON";
		this.btnGetBal2ON.Size = new System.Drawing.Size(121, 40);
		this.btnGetBal2ON.TabIndex = 1091;
		this.btnGetBal2ON.Text = "VF BAl";
		this.btnGetBal2ON.UseVisualStyleBackColor = false;
		this.btnAutoGet.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnAutoGet.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnAutoGet.Location = new System.Drawing.Point(271, 93);
		this.btnAutoGet.Name = "btnAutoGet";
		this.btnAutoGet.Size = new System.Drawing.Size(75, 59);
		this.btnAutoGet.TabIndex = 1090;
		this.btnAutoGet.Text = "Auto Get";
		this.btnAutoGet.UseVisualStyleBackColor = false;
		this.btnAutoGet.Visible = false;
		this.btnPic.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnPic.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnPic.Location = new System.Drawing.Point(252, 164);
		this.btnPic.Name = "btnPic";
		this.btnPic.Size = new System.Drawing.Size(130, 39);
		this.btnPic.TabIndex = 1089;
		this.btnPic.Text = "Export";
		this.btnPic.UseVisualStyleBackColor = false;
		this.btnPic.Visible = false;
		this.lblONnumQ.AutoSize = true;
		this.lblONnumQ.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONnumQ.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.lblONnumQ.ForeColor = System.Drawing.Color.Black;
		this.lblONnumQ.Location = new System.Drawing.Point(3, 250);
		this.lblONnumQ.Name = "lblONnumQ";
		this.lblONnumQ.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONnumQ.Size = new System.Drawing.Size(28, 17);
		this.lblONnumQ.TabIndex = 1088;
		this.lblONnumQ.Text = "#1";
		this.lblONvQ.AutoSize = true;
		this.lblONvQ.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONvQ.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.lblONvQ.ForeColor = System.Drawing.Color.Black;
		this.lblONvQ.Location = new System.Drawing.Point(191, 250);
		this.lblONvQ.Name = "lblONvQ";
		this.lblONvQ.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONvQ.Size = new System.Drawing.Size(19, 17);
		this.lblONvQ.TabIndex = 1087;
		this.lblONvQ.Text = "#";
		this.lblONmcQ.AutoSize = true;
		this.lblONmcQ.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONmcQ.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.lblONmcQ.ForeColor = System.Drawing.Color.Black;
		this.lblONmcQ.Location = new System.Drawing.Point(4, 271);
		this.lblONmcQ.Name = "lblONmcQ";
		this.lblONmcQ.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONmcQ.Size = new System.Drawing.Size(17, 17);
		this.lblONmcQ.TabIndex = 1086;
		this.lblONmcQ.Text = "$";
		this.txtQryOrder.BackColor = System.Drawing.Color.White;
		this.txtQryOrder.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtQryOrder.ForeColor = System.Drawing.Color.Black;
		this.txtQryOrder.Location = new System.Drawing.Point(3, 204);
		this.txtQryOrder.Name = "txtQryOrder";
		this.txtQryOrder.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtQryOrder.Size = new System.Drawing.Size(410, 36);
		this.txtQryOrder.TabIndex = 1085;
		this.txtQryOrder.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.lblONnum6.AutoSize = true;
		this.lblONnum6.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONnum6.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblONnum6.ForeColor = System.Drawing.Color.Black;
		this.lblONnum6.Location = new System.Drawing.Point(3, 171);
		this.lblONnum6.Name = "lblONnum6";
		this.lblONnum6.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONnum6.Size = new System.Drawing.Size(39, 24);
		this.lblONnum6.TabIndex = 1084;
		this.lblONnum6.Text = "#6";
		this.txtONorder6.BackColor = System.Drawing.Color.White;
		this.txtONorder6.Font = new System.Drawing.Font("Tahoma", 13f, System.Drawing.FontStyle.Bold);
		this.txtONorder6.ForeColor = System.Drawing.Color.Black;
		this.txtONorder6.Location = new System.Drawing.Point(433, 171);
		this.txtONorder6.MaxLength = 11;
		this.txtONorder6.Name = "txtONorder6";
		this.txtONorder6.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtONorder6.Size = new System.Drawing.Size(119, 28);
		this.txtONorder6.TabIndex = 1083;
		this.txtONorder6.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.lblONv6.AutoSize = true;
		this.lblONv6.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONv6.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblONv6.ForeColor = System.Drawing.Color.Black;
		this.lblONv6.Location = new System.Drawing.Point(385, 171);
		this.lblONv6.Name = "lblONv6";
		this.lblONv6.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONv6.Size = new System.Drawing.Size(26, 24);
		this.lblONv6.TabIndex = 1081;
		this.lblONv6.Text = "#";
		this.lblONmc6.AutoSize = true;
		this.lblONmc6.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONmc6.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblONmc6.ForeColor = System.Drawing.Color.Black;
		this.lblONmc6.Location = new System.Drawing.Point(167, 171);
		this.lblONmc6.Name = "lblONmc6";
		this.lblONmc6.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONmc6.Size = new System.Drawing.Size(23, 24);
		this.lblONmc6.TabIndex = 1080;
		this.lblONmc6.Text = "$";
		this.lblONnum5.AutoSize = true;
		this.lblONnum5.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONnum5.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblONnum5.ForeColor = System.Drawing.Color.Black;
		this.lblONnum5.Location = new System.Drawing.Point(3, 139);
		this.lblONnum5.Name = "lblONnum5";
		this.lblONnum5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONnum5.Size = new System.Drawing.Size(39, 24);
		this.lblONnum5.TabIndex = 1079;
		this.lblONnum5.Text = "#5";
		this.txtONorder5.BackColor = System.Drawing.Color.White;
		this.txtONorder5.Font = new System.Drawing.Font("Tahoma", 13f, System.Drawing.FontStyle.Bold);
		this.txtONorder5.ForeColor = System.Drawing.Color.Black;
		this.txtONorder5.Location = new System.Drawing.Point(433, 139);
		this.txtONorder5.MaxLength = 11;
		this.txtONorder5.Name = "txtONorder5";
		this.txtONorder5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtONorder5.Size = new System.Drawing.Size(119, 28);
		this.txtONorder5.TabIndex = 1078;
		this.txtONorder5.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.lblONv5.AutoSize = true;
		this.lblONv5.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONv5.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblONv5.ForeColor = System.Drawing.Color.Black;
		this.lblONv5.Location = new System.Drawing.Point(385, 139);
		this.lblONv5.Name = "lblONv5";
		this.lblONv5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONv5.Size = new System.Drawing.Size(26, 24);
		this.lblONv5.TabIndex = 1076;
		this.lblONv5.Text = "#";
		this.lblONmc5.AutoSize = true;
		this.lblONmc5.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONmc5.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblONmc5.ForeColor = System.Drawing.Color.Black;
		this.lblONmc5.Location = new System.Drawing.Point(167, 139);
		this.lblONmc5.Name = "lblONmc5";
		this.lblONmc5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONmc5.Size = new System.Drawing.Size(23, 24);
		this.lblONmc5.TabIndex = 1075;
		this.lblONmc5.Text = "$";
		this.lblONnum4.AutoSize = true;
		this.lblONnum4.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONnum4.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblONnum4.ForeColor = System.Drawing.Color.Black;
		this.lblONnum4.Location = new System.Drawing.Point(3, 107);
		this.lblONnum4.Name = "lblONnum4";
		this.lblONnum4.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONnum4.Size = new System.Drawing.Size(39, 24);
		this.lblONnum4.TabIndex = 1074;
		this.lblONnum4.Text = "#4";
		this.txtONorder4.BackColor = System.Drawing.Color.White;
		this.txtONorder4.Font = new System.Drawing.Font("Tahoma", 13f, System.Drawing.FontStyle.Bold);
		this.txtONorder4.ForeColor = System.Drawing.Color.Black;
		this.txtONorder4.Location = new System.Drawing.Point(433, 107);
		this.txtONorder4.MaxLength = 11;
		this.txtONorder4.Name = "txtONorder4";
		this.txtONorder4.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtONorder4.Size = new System.Drawing.Size(119, 28);
		this.txtONorder4.TabIndex = 1073;
		this.txtONorder4.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.lblONv4.AutoSize = true;
		this.lblONv4.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONv4.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblONv4.ForeColor = System.Drawing.Color.Black;
		this.lblONv4.Location = new System.Drawing.Point(385, 107);
		this.lblONv4.Name = "lblONv4";
		this.lblONv4.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONv4.Size = new System.Drawing.Size(26, 24);
		this.lblONv4.TabIndex = 1071;
		this.lblONv4.Text = "#";
		this.lblONmc4.AutoSize = true;
		this.lblONmc4.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONmc4.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblONmc4.ForeColor = System.Drawing.Color.Black;
		this.lblONmc4.Location = new System.Drawing.Point(167, 107);
		this.lblONmc4.Name = "lblONmc4";
		this.lblONmc4.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONmc4.Size = new System.Drawing.Size(23, 24);
		this.lblONmc4.TabIndex = 1070;
		this.lblONmc4.Text = "$";
		this.lblONnum3.AutoSize = true;
		this.lblONnum3.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONnum3.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblONnum3.ForeColor = System.Drawing.Color.Black;
		this.lblONnum3.Location = new System.Drawing.Point(3, 75);
		this.lblONnum3.Name = "lblONnum3";
		this.lblONnum3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONnum3.Size = new System.Drawing.Size(39, 24);
		this.lblONnum3.TabIndex = 1069;
		this.lblONnum3.Text = "#3";
		this.txtONorder3.BackColor = System.Drawing.Color.White;
		this.txtONorder3.Font = new System.Drawing.Font("Tahoma", 13f, System.Drawing.FontStyle.Bold);
		this.txtONorder3.ForeColor = System.Drawing.Color.Black;
		this.txtONorder3.Location = new System.Drawing.Point(433, 75);
		this.txtONorder3.MaxLength = 11;
		this.txtONorder3.Name = "txtONorder3";
		this.txtONorder3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtONorder3.Size = new System.Drawing.Size(119, 28);
		this.txtONorder3.TabIndex = 1068;
		this.txtONorder3.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.lblONv3.AutoSize = true;
		this.lblONv3.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONv3.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblONv3.ForeColor = System.Drawing.Color.Black;
		this.lblONv3.Location = new System.Drawing.Point(385, 75);
		this.lblONv3.Name = "lblONv3";
		this.lblONv3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONv3.Size = new System.Drawing.Size(26, 24);
		this.lblONv3.TabIndex = 1066;
		this.lblONv3.Text = "#";
		this.lblONmc3.AutoSize = true;
		this.lblONmc3.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONmc3.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblONmc3.ForeColor = System.Drawing.Color.Black;
		this.lblONmc3.Location = new System.Drawing.Point(167, 75);
		this.lblONmc3.Name = "lblONmc3";
		this.lblONmc3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONmc3.Size = new System.Drawing.Size(23, 24);
		this.lblONmc3.TabIndex = 1065;
		this.lblONmc3.Text = "$";
		this.lblONnum2.AutoSize = true;
		this.lblONnum2.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONnum2.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblONnum2.ForeColor = System.Drawing.Color.Black;
		this.lblONnum2.Location = new System.Drawing.Point(3, 43);
		this.lblONnum2.Name = "lblONnum2";
		this.lblONnum2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONnum2.Size = new System.Drawing.Size(39, 24);
		this.lblONnum2.TabIndex = 1064;
		this.lblONnum2.Text = "#2";
		this.txtONorder2.BackColor = System.Drawing.Color.White;
		this.txtONorder2.Font = new System.Drawing.Font("Tahoma", 13f, System.Drawing.FontStyle.Bold);
		this.txtONorder2.ForeColor = System.Drawing.Color.Black;
		this.txtONorder2.Location = new System.Drawing.Point(433, 43);
		this.txtONorder2.MaxLength = 11;
		this.txtONorder2.Name = "txtONorder2";
		this.txtONorder2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtONorder2.Size = new System.Drawing.Size(119, 28);
		this.txtONorder2.TabIndex = 1063;
		this.txtONorder2.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.lblONv2.AutoSize = true;
		this.lblONv2.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONv2.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblONv2.ForeColor = System.Drawing.Color.Black;
		this.lblONv2.Location = new System.Drawing.Point(385, 43);
		this.lblONv2.Name = "lblONv2";
		this.lblONv2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONv2.Size = new System.Drawing.Size(26, 24);
		this.lblONv2.TabIndex = 1061;
		this.lblONv2.Text = "#";
		this.lblONmc2.AutoSize = true;
		this.lblONmc2.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONmc2.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblONmc2.ForeColor = System.Drawing.Color.Black;
		this.lblONmc2.Location = new System.Drawing.Point(167, 43);
		this.lblONmc2.Name = "lblONmc2";
		this.lblONmc2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONmc2.Size = new System.Drawing.Size(23, 24);
		this.lblONmc2.TabIndex = 1060;
		this.lblONmc2.Text = "$";
		this.lblONnum1.AutoSize = true;
		this.lblONnum1.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONnum1.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblONnum1.ForeColor = System.Drawing.Color.Black;
		this.lblONnum1.Location = new System.Drawing.Point(3, 11);
		this.lblONnum1.Name = "lblONnum1";
		this.lblONnum1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONnum1.Size = new System.Drawing.Size(39, 24);
		this.lblONnum1.TabIndex = 1059;
		this.lblONnum1.Text = "#1";
		this.txtONorder1.BackColor = System.Drawing.Color.White;
		this.txtONorder1.Font = new System.Drawing.Font("Tahoma", 13f, System.Drawing.FontStyle.Bold);
		this.txtONorder1.ForeColor = System.Drawing.Color.Black;
		this.txtONorder1.Location = new System.Drawing.Point(433, 11);
		this.txtONorder1.MaxLength = 11;
		this.txtONorder1.Name = "txtONorder1";
		this.txtONorder1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtONorder1.Size = new System.Drawing.Size(119, 28);
		this.txtONorder1.TabIndex = 1058;
		this.txtONorder1.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.lblONed.AutoSize = true;
		this.lblONed.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONed.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblONed.ForeColor = System.Drawing.Color.Black;
		this.lblONed.Location = new System.Drawing.Point(561, 11);
		this.lblONed.Name = "lblONed";
		this.lblONed.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONed.Size = new System.Drawing.Size(26, 24);
		this.lblONed.TabIndex = 1057;
		this.lblONed.Text = "#";
		this.lblONv1.AutoSize = true;
		this.lblONv1.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONv1.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblONv1.ForeColor = System.Drawing.Color.Black;
		this.lblONv1.Location = new System.Drawing.Point(385, 11);
		this.lblONv1.Name = "lblONv1";
		this.lblONv1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONv1.Size = new System.Drawing.Size(26, 24);
		this.lblONv1.TabIndex = 1056;
		this.lblONv1.Text = "#";
		this.lblONmc1.AutoSize = true;
		this.lblONmc1.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.lblONmc1.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.lblONmc1.ForeColor = System.Drawing.Color.Black;
		this.lblONmc1.Location = new System.Drawing.Point(167, 11);
		this.lblONmc1.Name = "lblONmc1";
		this.lblONmc1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblONmc1.Size = new System.Drawing.Size(23, 24);
		this.lblONmc1.TabIndex = 1055;
		this.lblONmc1.Text = "$";
		this.ckOnOut.AutoSize = true;
		this.ckOnOut.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.ckOnOut.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckOnOut.ForeColor = System.Drawing.Color.Black;
		this.ckOnOut.Location = new System.Drawing.Point(589, 45);
		this.ckOnOut.Name = "ckOnOut";
		this.ckOnOut.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckOnOut.Size = new System.Drawing.Size(41, 17);
		this.ckOnOut.TabIndex = 1054;
		this.ckOnOut.Text = "Au";
		this.ckOnOut.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckOnOut.UseVisualStyleBackColor = false;
		this.btnOnOut.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnOnOut.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnOnOut.Location = new System.Drawing.Point(558, 43);
		this.btnOnOut.Name = "btnOnOut";
		this.btnOnOut.Size = new System.Drawing.Size(75, 80);
		this.btnOnOut.TabIndex = 1053;
		this.btnOnOut.Text = "Online Get";
		this.btnOnOut.UseVisualStyleBackColor = false;
		this.Label64.AutoSize = true;
		this.Label64.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.Label64.ForeColor = System.Drawing.Color.Black;
		this.Label64.Location = new System.Drawing.Point(557, 268);
		this.Label64.Name = "Label64";
		this.Label64.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label64.Size = new System.Drawing.Size(46, 17);
		this.Label64.TabIndex = 1052;
		this.Label64.Text = "Value";
		this.txtOnValue.BackColor = System.Drawing.Color.White;
		this.txtOnValue.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtOnValue.ForeColor = System.Drawing.Color.Black;
		this.txtOnValue.Location = new System.Drawing.Point(433, 253);
		this.txtOnValue.Name = "txtOnValue";
		this.txtOnValue.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtOnValue.Size = new System.Drawing.Size(121, 36);
		this.txtOnValue.TabIndex = 1051;
		this.txtOnValue.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.TabPage2.Controls.Add(this.RBEts);
		this.TabPage2.Controls.Add(this.RBVoda);
		this.TabPage2.Controls.Add(this.btnApplyCards2);
		this.TabPage2.Controls.Add(this.btnApplyCards);
		this.TabPage2.Controls.Add(this.btnAddCards);
		this.TabPage2.Controls.Add(this.ckCards);
		this.TabPage2.Controls.Add(this.lblCardsQty);
		this.TabPage2.Controls.Add(this.cmbEvalue);
		this.TabPage2.Controls.Add(this.txtChSS);
		this.TabPage2.Location = new System.Drawing.Point(4, 22);
		this.TabPage2.Name = "TabPage2";
		this.TabPage2.Padding = new System.Windows.Forms.Padding(3);
		this.TabPage2.Size = new System.Drawing.Size(934, 295);
		this.TabPage2.TabIndex = 1;
		this.TabPage2.Text = "TopUp";
		this.TabPage2.UseVisualStyleBackColor = true;
		this.TabPage8.Controls.Add(this.lstNames);
		this.TabPage8.Controls.Add(this.lstNum);
		this.TabPage8.Controls.Add(this.btnRefreshMsg);
		this.TabPage8.Controls.Add(this.txtEnote);
		this.TabPage8.Controls.Add(this.txtSvrName);
		this.TabPage8.Controls.Add(this.txtSrvMsg);
		this.TabPage8.Controls.Add(this.txtMobnum);
		this.TabPage8.Controls.Add(this.btnSendSms);
		this.TabPage8.Controls.Add(this.Button1);
		this.TabPage8.Location = new System.Drawing.Point(4, 22);
		this.TabPage8.Name = "TabPage8";
		this.TabPage8.Size = new System.Drawing.Size(934, 295);
		this.TabPage8.TabIndex = 7;
		this.TabPage8.Text = "Services";
		this.TabPage8.UseVisualStyleBackColor = true;
		this.lstNames.Font = new System.Drawing.Font("Tahoma", 14f, System.Drawing.FontStyle.Bold);
		this.lstNames.FormattingEnabled = true;
		this.lstNames.ItemHeight = 23;
		this.lstNames.Location = new System.Drawing.Point(253, 14);
		this.lstNames.Name = "lstNames";
		this.lstNames.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lstNames.Size = new System.Drawing.Size(216, 142);
		this.lstNames.TabIndex = 972;
		this.lstNum.Font = new System.Drawing.Font("Tahoma", 14f, System.Drawing.FontStyle.Bold);
		this.lstNum.FormattingEnabled = true;
		this.lstNum.ItemHeight = 23;
		this.lstNum.Location = new System.Drawing.Point(475, 45);
		this.lstNum.Name = "lstNum";
		this.lstNum.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lstNum.Size = new System.Drawing.Size(138, 96);
		this.lstNum.TabIndex = 971;
		this.btnRefreshMsg.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnRefreshMsg.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnRefreshMsg.Location = new System.Drawing.Point(475, 15);
		this.btnRefreshMsg.Name = "btnRefreshMsg";
		this.btnRefreshMsg.Size = new System.Drawing.Size(138, 27);
		this.btnRefreshMsg.TabIndex = 970;
		this.btnRefreshMsg.Text = "تحديث الارقام";
		this.btnRefreshMsg.UseVisualStyleBackColor = false;
		this.txtEnote.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.txtEnote.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtEnote.ForeColor = System.Drawing.Color.Black;
		this.txtEnote.Location = new System.Drawing.Point(14, 147);
		this.txtEnote.Name = "txtEnote";
		this.txtEnote.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtEnote.Size = new System.Drawing.Size(233, 27);
		this.txtEnote.TabIndex = 938;
		this.txtSvrName.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.txtSvrName.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtSvrName.ForeColor = System.Drawing.Color.Black;
		this.txtSvrName.Location = new System.Drawing.Point(14, 114);
		this.txtSvrName.Name = "txtSvrName";
		this.txtSvrName.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtSvrName.Size = new System.Drawing.Size(233, 27);
		this.txtSvrName.TabIndex = 937;
		this.txtSrvMsg.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.txtSrvMsg.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtSrvMsg.ForeColor = System.Drawing.Color.Black;
		this.txtSrvMsg.Location = new System.Drawing.Point(14, 79);
		this.txtSrvMsg.Name = "txtSrvMsg";
		this.txtSrvMsg.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtSrvMsg.Size = new System.Drawing.Size(233, 27);
		this.txtSrvMsg.TabIndex = 936;
		this.txtMobnum.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.txtMobnum.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtMobnum.ForeColor = System.Drawing.Color.Black;
		this.txtMobnum.Location = new System.Drawing.Point(107, 47);
		this.txtMobnum.Name = "txtMobnum";
		this.txtMobnum.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtMobnum.Size = new System.Drawing.Size(140, 27);
		this.txtMobnum.TabIndex = 933;
		this.btnSendSms.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnSendSms.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.btnSendSms.ForeColor = System.Drawing.Color.Black;
		this.btnSendSms.Location = new System.Drawing.Point(14, 14);
		this.btnSendSms.Name = "btnSendSms";
		this.btnSendSms.Size = new System.Drawing.Size(233, 27);
		this.btnSendSms.TabIndex = 935;
		this.btnSendSms.Text = "ارسال";
		this.btnSendSms.UseVisualStyleBackColor = false;
		this.Button1.BackColor = System.Drawing.Color.FromArgb(192, 255, 192);
		this.Button1.Font = new System.Drawing.Font("Tahoma", 8.25f, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, 0);
		this.Button1.Location = new System.Drawing.Point(34, 211);
		this.Button1.Name = "Button1";
		this.Button1.Size = new System.Drawing.Size(167, 27);
		this.Button1.TabIndex = 932;
		this.Button1.Text = "اضافة ارقام الخدمات";
		this.Button1.UseVisualStyleBackColor = false;
		this.TabPage9.Controls.Add(this.btnPast);
		this.TabPage9.Controls.Add(this.Label22);
		this.TabPage9.Controls.Add(this.Label20);
		this.TabPage9.Controls.Add(this.dataViewGridQryChrg);
		this.TabPage9.Controls.Add(this.dataViewGridQryBal);
		this.TabPage9.Controls.Add(this.txtNumQry);
		this.TabPage9.Location = new System.Drawing.Point(4, 22);
		this.TabPage9.Name = "TabPage9";
		this.TabPage9.Padding = new System.Windows.Forms.Padding(3);
		this.TabPage9.Size = new System.Drawing.Size(934, 295);
		this.TabPage9.TabIndex = 8;
		this.TabPage9.Text = "BalQry";
		this.TabPage9.UseVisualStyleBackColor = true;
		this.btnPast.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnPast.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnPast.Location = new System.Drawing.Point(356, 9);
		this.btnPast.Name = "btnPast";
		this.btnPast.Size = new System.Drawing.Size(61, 27);
		this.btnPast.TabIndex = 1001;
		this.btnPast.Text = "لصق";
		this.btnPast.UseVisualStyleBackColor = false;
		this.Label22.AutoSize = true;
		this.Label22.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.Label22.ForeColor = System.Drawing.Color.Black;
		this.Label22.Location = new System.Drawing.Point(10, 17);
		this.Label22.Name = "Label22";
		this.Label22.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label22.Size = new System.Drawing.Size(62, 19);
		this.Label22.TabIndex = 1000;
		this.Label22.Text = "الشحن";
		this.Label20.AutoSize = true;
		this.Label20.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.Label20.ForeColor = System.Drawing.Color.Black;
		this.Label20.Location = new System.Drawing.Point(279, 17);
		this.Label20.Name = "Label20";
		this.Label20.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label20.Size = new System.Drawing.Size(64, 19);
		this.Label20.TabIndex = 999;
		this.Label20.Text = "الارصدة";
		this.dataViewGridQryChrg.AllowUserToAddRows = false;
		this.dataViewGridQryChrg.AllowUserToDeleteRows = false;
		this.dataViewGridQryChrg.BackgroundColor = System.Drawing.Color.FromArgb(192, 255, 255);
		dataGridViewCellStyle6.Alignment = System.Windows.Forms.DataGridViewContentAlignment.MiddleCenter;
		dataGridViewCellStyle6.BackColor = System.Drawing.Color.FromArgb(192, 255, 255);
		dataGridViewCellStyle6.Font = new System.Drawing.Font("Tahoma", 9f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		dataGridViewCellStyle6.ForeColor = System.Drawing.Color.Black;
		dataGridViewCellStyle6.SelectionBackColor = System.Drawing.SystemColors.Highlight;
		dataGridViewCellStyle6.SelectionForeColor = System.Drawing.SystemColors.HighlightText;
		dataGridViewCellStyle6.WrapMode = System.Windows.Forms.DataGridViewTriState.True;
		this.dataViewGridQryChrg.ColumnHeadersDefaultCellStyle = dataGridViewCellStyle6;
		this.dataViewGridQryChrg.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;
		dataGridViewCellStyle7.Alignment = System.Windows.Forms.DataGridViewContentAlignment.MiddleLeft;
		dataGridViewCellStyle7.BackColor = System.Drawing.SystemColors.Window;
		dataGridViewCellStyle7.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		dataGridViewCellStyle7.ForeColor = System.Drawing.Color.Black;
		dataGridViewCellStyle7.SelectionBackColor = System.Drawing.SystemColors.Highlight;
		dataGridViewCellStyle7.SelectionForeColor = System.Drawing.SystemColors.HighlightText;
		dataGridViewCellStyle7.WrapMode = System.Windows.Forms.DataGridViewTriState.True;
		this.dataViewGridQryChrg.DefaultCellStyle = dataGridViewCellStyle7;
		this.dataViewGridQryChrg.Location = new System.Drawing.Point(9, 44);
		this.dataViewGridQryChrg.Name = "dataViewGridQryChrg";
		this.dataViewGridQryChrg.ReadOnly = true;
		this.dataViewGridQryChrg.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.dataViewGridQryChrg.RowHeadersWidth = 51;
		this.dataViewGridQryChrg.Size = new System.Drawing.Size(268, 222);
		this.dataViewGridQryChrg.TabIndex = 990;
		this.dataViewGridQryBal.AllowUserToAddRows = false;
		this.dataViewGridQryBal.AllowUserToDeleteRows = false;
		this.dataViewGridQryBal.BackgroundColor = System.Drawing.Color.FromArgb(192, 255, 255);
		dataGridViewCellStyle8.Alignment = System.Windows.Forms.DataGridViewContentAlignment.MiddleCenter;
		dataGridViewCellStyle8.BackColor = System.Drawing.Color.FromArgb(192, 255, 255);
		dataGridViewCellStyle8.Font = new System.Drawing.Font("Tahoma", 9f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		dataGridViewCellStyle8.ForeColor = System.Drawing.Color.Black;
		dataGridViewCellStyle8.SelectionBackColor = System.Drawing.SystemColors.Highlight;
		dataGridViewCellStyle8.SelectionForeColor = System.Drawing.SystemColors.HighlightText;
		dataGridViewCellStyle8.WrapMode = System.Windows.Forms.DataGridViewTriState.True;
		this.dataViewGridQryBal.ColumnHeadersDefaultCellStyle = dataGridViewCellStyle8;
		this.dataViewGridQryBal.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;
		dataGridViewCellStyle9.Alignment = System.Windows.Forms.DataGridViewContentAlignment.MiddleLeft;
		dataGridViewCellStyle9.BackColor = System.Drawing.SystemColors.Window;
		dataGridViewCellStyle9.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		dataGridViewCellStyle9.ForeColor = System.Drawing.Color.Black;
		dataGridViewCellStyle9.SelectionBackColor = System.Drawing.SystemColors.Highlight;
		dataGridViewCellStyle9.SelectionForeColor = System.Drawing.SystemColors.HighlightText;
		dataGridViewCellStyle9.WrapMode = System.Windows.Forms.DataGridViewTriState.True;
		this.dataViewGridQryBal.DefaultCellStyle = dataGridViewCellStyle9;
		this.dataViewGridQryBal.Location = new System.Drawing.Point(283, 44);
		this.dataViewGridQryBal.Name = "dataViewGridQryBal";
		this.dataViewGridQryBal.ReadOnly = true;
		this.dataViewGridQryBal.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.dataViewGridQryBal.RowHeadersWidth = 51;
		this.dataViewGridQryBal.Size = new System.Drawing.Size(335, 222);
		this.dataViewGridQryBal.TabIndex = 989;
		this.txtNumQry.BackColor = System.Drawing.Color.FromArgb(128, 255, 255);
		this.txtNumQry.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtNumQry.ForeColor = System.Drawing.Color.Black;
		this.txtNumQry.Location = new System.Drawing.Point(423, 12);
		this.txtNumQry.MaxLength = 11;
		this.txtNumQry.Name = "txtNumQry";
		this.txtNumQry.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtNumQry.Size = new System.Drawing.Size(194, 27);
		this.txtNumQry.TabIndex = 737;
		this.TabPage10.Controls.Add(this.lblSavePath);
		this.TabPage10.Controls.Add(this.btnSaveAS);
		this.TabPage10.Controls.Add(this.btnExport2);
		this.TabPage10.Controls.Add(this.btnQryQry);
		this.TabPage10.Controls.Add(this.lblQryTotal);
		this.TabPage10.Controls.Add(this.lstQryBal);
		this.TabPage10.Controls.Add(this.lstQryNumbers);
		this.TabPage10.Controls.Add(this.txtEnumsVCQry);
		this.TabPage10.Controls.Add(this.btnGetQry);
		this.TabPage10.Location = new System.Drawing.Point(4, 22);
		this.TabPage10.Name = "TabPage10";
		this.TabPage10.Padding = new System.Windows.Forms.Padding(3);
		this.TabPage10.Size = new System.Drawing.Size(934, 295);
		this.TabPage10.TabIndex = 9;
		this.TabPage10.Text = "GrpBalQry";
		this.TabPage10.UseVisualStyleBackColor = true;
		this.lblSavePath.BackColor = System.Drawing.Color.FromArgb(128, 128, 255);
		this.lblSavePath.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblSavePath.Font = new System.Drawing.Font("Tahoma", 6.75f, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, 0);
		this.lblSavePath.ForeColor = System.Drawing.Color.Black;
		this.lblSavePath.Location = new System.Drawing.Point(429, 216);
		this.lblSavePath.Name = "lblSavePath";
		this.lblSavePath.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblSavePath.Size = new System.Drawing.Size(142, 38);
		this.lblSavePath.TabIndex = 985;
		this.lblSavePath.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.btnSaveAS.Location = new System.Drawing.Point(373, 216);
		this.btnSaveAS.Name = "btnSaveAS";
		this.btnSaveAS.Size = new System.Drawing.Size(45, 44);
		this.btnSaveAS.TabIndex = 984;
		this.btnSaveAS.Text = "مكان الحفظ";
		this.btnSaveAS.UseVisualStyleBackColor = true;
		this.btnExport2.Location = new System.Drawing.Point(325, 216);
		this.btnExport2.Name = "btnExport2";
		this.btnExport2.Size = new System.Drawing.Size(48, 44);
		this.btnExport2.TabIndex = 983;
		this.btnExport2.Text = "تصدير";
		this.btnExport2.UseVisualStyleBackColor = true;
		this.btnQryQry.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnQryQry.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnQryQry.Location = new System.Drawing.Point(457, 49);
		this.btnQryQry.Name = "btnQryQry";
		this.btnQryQry.Size = new System.Drawing.Size(102, 27);
		this.btnQryQry.TabIndex = 982;
		this.btnQryQry.Text = "استعلام";
		this.btnQryQry.UseVisualStyleBackColor = false;
		this.lblQryTotal.BackColor = System.Drawing.Color.Yellow;
		this.lblQryTotal.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblQryTotal.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.lblQryTotal.ForeColor = System.Drawing.Color.Black;
		this.lblQryTotal.Location = new System.Drawing.Point(393, 83);
		this.lblQryTotal.Name = "lblQryTotal";
		this.lblQryTotal.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblQryTotal.Size = new System.Drawing.Size(166, 27);
		this.lblQryTotal.TabIndex = 981;
		this.lblQryTotal.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lstQryBal.Font = new System.Drawing.Font("Tahoma", 14f, System.Drawing.FontStyle.Bold);
		this.lstQryBal.FormattingEnabled = true;
		this.lstQryBal.ItemHeight = 23;
		this.lstQryBal.Location = new System.Drawing.Point(182, 5);
		this.lstQryBal.Name = "lstQryBal";
		this.lstQryBal.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lstQryBal.Size = new System.Drawing.Size(124, 142);
		this.lstQryBal.TabIndex = 973;
		this.lstQryNumbers.Font = new System.Drawing.Font("Tahoma", 14f, System.Drawing.FontStyle.Bold);
		this.lstQryNumbers.FormattingEnabled = true;
		this.lstQryNumbers.ItemHeight = 23;
		this.lstQryNumbers.Location = new System.Drawing.Point(14, 5);
		this.lstQryNumbers.Name = "lstQryNumbers";
		this.lstQryNumbers.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lstQryNumbers.Size = new System.Drawing.Size(162, 142);
		this.lstQryNumbers.TabIndex = 972;
		this.txtEnumsVCQry.BackColor = System.Drawing.Color.White;
		this.txtEnumsVCQry.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtEnumsVCQry.ForeColor = System.Drawing.Color.Black;
		this.txtEnumsVCQry.Location = new System.Drawing.Point(393, 14);
		this.txtEnumsVCQry.Name = "txtEnumsVCQry";
		this.txtEnumsVCQry.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtEnumsVCQry.Size = new System.Drawing.Size(58, 27);
		this.txtEnumsVCQry.TabIndex = 971;
		this.txtEnumsVCQry.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnGetQry.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnGetQry.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnGetQry.Location = new System.Drawing.Point(457, 14);
		this.btnGetQry.Name = "btnGetQry";
		this.btnGetQry.Size = new System.Drawing.Size(102, 27);
		this.btnGetQry.TabIndex = 970;
		this.btnGetQry.Text = "هات الخطوط";
		this.btnGetQry.UseVisualStyleBackColor = false;
		this.chkAutoMain.AutoSize = true;
		this.chkAutoMain.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkAutoMain.ForeColor = System.Drawing.Color.Cyan;
		this.chkAutoMain.Location = new System.Drawing.Point(40, 128);
		this.chkAutoMain.Name = "chkAutoMain";
		this.chkAutoMain.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkAutoMain.Size = new System.Drawing.Size(182, 17);
		this.chkAutoMain.TabIndex = 1013;
		this.chkAutoMain.Text = "اختيار تلقائى للاساسى التالى";
		this.chkAutoMain.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkAutoMain.UseVisualStyleBackColor = true;
		this.ckUseNextMain.AutoSize = true;
		this.ckUseNextMain.Checked = true;
		this.ckUseNextMain.CheckState = System.Windows.Forms.CheckState.Checked;
		this.ckUseNextMain.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckUseNextMain.ForeColor = System.Drawing.Color.White;
		this.ckUseNextMain.Location = new System.Drawing.Point(61, 145);
		this.ckUseNextMain.Name = "ckUseNextMain";
		this.ckUseNextMain.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckUseNextMain.Size = new System.Drawing.Size(161, 17);
		this.ckUseNextMain.TabIndex = 1051;
		this.ckUseNextMain.Text = "استعمال الاساسى التالى";
		this.ckUseNextMain.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckUseNextMain.UseVisualStyleBackColor = true;
		this.chkUse365inprcss.AutoSize = true;
		this.chkUse365inprcss.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.chkUse365inprcss.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkUse365inprcss.Location = new System.Drawing.Point(143, 247);
		this.chkUse365inprcss.Name = "chkUse365inprcss";
		this.chkUse365inprcss.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkUse365inprcss.Size = new System.Drawing.Size(77, 17);
		this.chkUse365inprcss.TabIndex = 1017;
		this.chkUse365inprcss.Text = "ادراج 365";
		this.chkUse365inprcss.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkUse365inprcss.UseVisualStyleBackColor = false;
		this.chkUse365inprcss10.AutoSize = true;
		this.chkUse365inprcss10.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.chkUse365inprcss10.Enabled = false;
		this.chkUse365inprcss10.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkUse365inprcss10.Location = new System.Drawing.Point(116, 230);
		this.chkUse365inprcss10.Name = "chkUse365inprcss10";
		this.chkUse365inprcss10.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkUse365inprcss10.Size = new System.Drawing.Size(104, 17);
		this.chkUse365inprcss10.TabIndex = 1048;
		this.chkUse365inprcss10.Text = "شحن ال5 ب10";
		this.chkUse365inprcss10.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkUse365inprcss10.UseVisualStyleBackColor = false;
		this.chkSqn.AutoSize = true;
		this.chkSqn.Checked = true;
		this.chkSqn.CheckState = System.Windows.Forms.CheckState.Checked;
		this.chkSqn.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkSqn.ForeColor = System.Drawing.Color.White;
		this.chkSqn.Location = new System.Drawing.Point(77, 162);
		this.chkSqn.Name = "chkSqn";
		this.chkSqn.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkSqn.Size = new System.Drawing.Size(145, 17);
		this.chkSqn.TabIndex = 1007;
		this.chkSqn.Text = "ممنوع التكرار لفودافون";
		this.chkSqn.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkSqn.UseVisualStyleBackColor = true;
		this.chkTransferAllNormalVoda.AutoSize = true;
		this.chkTransferAllNormalVoda.BackColor = System.Drawing.Color.Lime;
		this.chkTransferAllNormalVoda.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkTransferAllNormalVoda.Location = new System.Drawing.Point(15, 111);
		this.chkTransferAllNormalVoda.Name = "chkTransferAllNormalVoda";
		this.chkTransferAllNormalVoda.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkTransferAllNormalVoda.Size = new System.Drawing.Size(207, 17);
		this.chkTransferAllNormalVoda.TabIndex = 1011;
		this.chkTransferAllNormalVoda.Text = "تحويل كامل الرصيد العادى من الكل";
		this.chkTransferAllNormalVoda.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkTransferAllNormalVoda.UseVisualStyleBackColor = false;
		this.ckUse910.AutoSize = true;
		this.ckUse910.BackColor = System.Drawing.Color.FromArgb(192, 192, 255);
		this.ckUse910.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckUse910.Location = new System.Drawing.Point(81, 264);
		this.ckUse910.Name = "ckUse910";
		this.ckUse910.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckUse910.Size = new System.Drawing.Size(139, 17);
		this.ckUse910.TabIndex = 1016;
		this.ckUse910.Text = "استعمال كود *9*10#";
		this.ckUse910.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckUse910.UseVisualStyleBackColor = false;
		this.chkChargeOnSame.AutoSize = true;
		this.chkChargeOnSame.BackColor = System.Drawing.Color.Lime;
		this.chkChargeOnSame.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkChargeOnSame.Location = new System.Drawing.Point(47, 94);
		this.chkChargeOnSame.Name = "chkChargeOnSame";
		this.chkChargeOnSame.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkChargeOnSame.Size = new System.Drawing.Size(175, 17);
		this.chkChargeOnSame.TabIndex = 1009;
		this.chkChargeOnSame.Text = "شحن الهدية على نفس الرقم";
		this.chkChargeOnSame.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkChargeOnSame.UseVisualStyleBackColor = false;
		this.btnCancelTrans.BackColor = System.Drawing.Color.FromArgb(255, 192, 192);
		this.btnCancelTrans.Font = new System.Drawing.Font("Tahoma", 15f, System.Drawing.FontStyle.Bold);
		this.btnCancelTrans.Location = new System.Drawing.Point(976, 4);
		this.btnCancelTrans.Name = "btnCancelTrans";
		this.btnCancelTrans.Size = new System.Drawing.Size(190, 35);
		this.btnCancelTrans.TabIndex = 984;
		this.btnCancelTrans.Text = "STOP";
		this.btnCancelTrans.UseVisualStyleBackColor = false;
		this.btn3G.BackColor = System.Drawing.Color.Green;
		this.btn3G.Font = new System.Drawing.Font("Arial", 8f, System.Drawing.FontStyle.Bold);
		this.btn3G.Location = new System.Drawing.Point(173, 224);
		this.btn3G.Name = "btn3G";
		this.btn3G.Size = new System.Drawing.Size(59, 25);
		this.btn3G.TabIndex = 952;
		this.btn3G.Text = "3G Only";
		this.btn3G.UseVisualStyleBackColor = false;
		this.chkStop.AutoSize = true;
		this.chkStop.BackColor = System.Drawing.Color.FromArgb(255, 192, 192);
		this.chkStop.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.chkStop.ForeColor = System.Drawing.Color.FromArgb(192, 0, 0);
		this.chkStop.Location = new System.Drawing.Point(982, 12);
		this.chkStop.Name = "chkStop";
		this.chkStop.Size = new System.Drawing.Size(60, 21);
		this.chkStop.TabIndex = 975;
		this.chkStop.Text = "Stop";
		this.chkStop.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkStop.UseVisualStyleBackColor = false;
		this.lblGifts01.BackColor = System.Drawing.Color.Black;
		this.lblGifts01.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblGifts01.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblGifts01.ForeColor = System.Drawing.Color.Yellow;
		this.lblGifts01.Location = new System.Drawing.Point(923, 71);
		this.lblGifts01.Name = "lblGifts01";
		this.lblGifts01.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblGifts01.Size = new System.Drawing.Size(47, 27);
		this.lblGifts01.TabIndex = 976;
		this.lblGifts01.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblGifts02.BackColor = System.Drawing.Color.Black;
		this.lblGifts02.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblGifts02.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblGifts02.ForeColor = System.Drawing.Color.Yellow;
		this.lblGifts02.Location = new System.Drawing.Point(481, 71);
		this.lblGifts02.Name = "lblGifts02";
		this.lblGifts02.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblGifts02.Size = new System.Drawing.Size(37, 27);
		this.lblGifts02.TabIndex = 977;
		this.lblGifts02.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblGifts03.BackColor = System.Drawing.Color.Black;
		this.lblGifts03.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblGifts03.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblGifts03.ForeColor = System.Drawing.Color.Yellow;
		this.lblGifts03.Location = new System.Drawing.Point(42, 71);
		this.lblGifts03.Name = "lblGifts03";
		this.lblGifts03.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblGifts03.Size = new System.Drawing.Size(37, 27);
		this.lblGifts03.TabIndex = 978;
		this.lblGifts03.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblGifts04.BackColor = System.Drawing.Color.Black;
		this.lblGifts04.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblGifts04.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblGifts04.ForeColor = System.Drawing.Color.Yellow;
		this.lblGifts04.Location = new System.Drawing.Point(923, 247);
		this.lblGifts04.Name = "lblGifts04";
		this.lblGifts04.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblGifts04.Size = new System.Drawing.Size(47, 27);
		this.lblGifts04.TabIndex = 979;
		this.lblGifts04.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblGifts05.BackColor = System.Drawing.Color.Black;
		this.lblGifts05.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblGifts05.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblGifts05.ForeColor = System.Drawing.Color.Yellow;
		this.lblGifts05.Location = new System.Drawing.Point(481, 247);
		this.lblGifts05.Name = "lblGifts05";
		this.lblGifts05.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblGifts05.Size = new System.Drawing.Size(37, 27);
		this.lblGifts05.TabIndex = 980;
		this.lblGifts05.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblGifts06.BackColor = System.Drawing.Color.Black;
		this.lblGifts06.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblGifts06.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblGifts06.ForeColor = System.Drawing.Color.Yellow;
		this.lblGifts06.Location = new System.Drawing.Point(42, 247);
		this.lblGifts06.Name = "lblGifts06";
		this.lblGifts06.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblGifts06.Size = new System.Drawing.Size(37, 27);
		this.lblGifts06.TabIndex = 981;
		this.lblGifts06.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.SFD.DefaultExt = "*.jpg";
		this.chkAutoDell.AutoSize = true;
		this.chkAutoDell.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkAutoDell.ForeColor = System.Drawing.Color.Cyan;
		this.chkAutoDell.Location = new System.Drawing.Point(41, 77);
		this.chkAutoDell.Name = "chkAutoDell";
		this.chkAutoDell.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkAutoDell.Size = new System.Drawing.Size(181, 17);
		this.chkAutoDell.TabIndex = 985;
		this.chkAutoDell.Text = "حذف تلقائى للرسائل المقروئة";
		this.chkAutoDell.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkAutoDell.UseVisualStyleBackColor = true;
		this.ODfile.FileName = "OFD";
		this.lblGiftV1.BackColor = System.Drawing.Color.Black;
		this.lblGiftV1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblGiftV1.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblGiftV1.ForeColor = System.Drawing.Color.Yellow;
		this.lblGiftV1.Location = new System.Drawing.Point(971, 71);
		this.lblGiftV1.Name = "lblGiftV1";
		this.lblGiftV1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblGiftV1.Size = new System.Drawing.Size(36, 27);
		this.lblGiftV1.TabIndex = 986;
		this.lblGiftV1.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblGiftV2.BackColor = System.Drawing.Color.Black;
		this.lblGiftV2.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblGiftV2.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblGiftV2.ForeColor = System.Drawing.Color.Yellow;
		this.lblGiftV2.Location = new System.Drawing.Point(519, 71);
		this.lblGiftV2.Name = "lblGiftV2";
		this.lblGiftV2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblGiftV2.Size = new System.Drawing.Size(35, 27);
		this.lblGiftV2.TabIndex = 988;
		this.lblGiftV2.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblGiftV3.BackColor = System.Drawing.Color.Black;
		this.lblGiftV3.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblGiftV3.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblGiftV3.ForeColor = System.Drawing.Color.Yellow;
		this.lblGiftV3.Location = new System.Drawing.Point(80, 71);
		this.lblGiftV3.Name = "lblGiftV3";
		this.lblGiftV3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblGiftV3.Size = new System.Drawing.Size(35, 27);
		this.lblGiftV3.TabIndex = 990;
		this.lblGiftV3.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblGiftV4.BackColor = System.Drawing.Color.Black;
		this.lblGiftV4.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblGiftV4.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblGiftV4.ForeColor = System.Drawing.Color.Yellow;
		this.lblGiftV4.Location = new System.Drawing.Point(971, 247);
		this.lblGiftV4.Name = "lblGiftV4";
		this.lblGiftV4.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblGiftV4.Size = new System.Drawing.Size(36, 27);
		this.lblGiftV4.TabIndex = 992;
		this.lblGiftV4.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblGiftV5.BackColor = System.Drawing.Color.Black;
		this.lblGiftV5.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblGiftV5.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblGiftV5.ForeColor = System.Drawing.Color.Yellow;
		this.lblGiftV5.Location = new System.Drawing.Point(519, 247);
		this.lblGiftV5.Name = "lblGiftV5";
		this.lblGiftV5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblGiftV5.Size = new System.Drawing.Size(35, 27);
		this.lblGiftV5.TabIndex = 994;
		this.lblGiftV5.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblGiftV6.BackColor = System.Drawing.Color.Black;
		this.lblGiftV6.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblGiftV6.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblGiftV6.ForeColor = System.Drawing.Color.Yellow;
		this.lblGiftV6.Location = new System.Drawing.Point(80, 247);
		this.lblGiftV6.Name = "lblGiftV6";
		this.lblGiftV6.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblGiftV6.Size = new System.Drawing.Size(35, 27);
		this.lblGiftV6.TabIndex = 996;
		this.lblGiftV6.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblGifttotal6.BackColor = System.Drawing.Color.Black;
		this.lblGifttotal6.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblGifttotal6.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblGifttotal6.ForeColor = System.Drawing.Color.Yellow;
		this.lblGifttotal6.Location = new System.Drawing.Point(117, 247);
		this.lblGifttotal6.Name = "lblGifttotal6";
		this.lblGifttotal6.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblGifttotal6.Size = new System.Drawing.Size(103, 27);
		this.lblGifttotal6.TabIndex = 1003;
		this.lblGifttotal6.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblGifttotal5.BackColor = System.Drawing.Color.Black;
		this.lblGifttotal5.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblGifttotal5.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblGifttotal5.ForeColor = System.Drawing.Color.Yellow;
		this.lblGifttotal5.Location = new System.Drawing.Point(555, 247);
		this.lblGifttotal5.Name = "lblGifttotal5";
		this.lblGifttotal5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblGifttotal5.Size = new System.Drawing.Size(103, 27);
		this.lblGifttotal5.TabIndex = 1002;
		this.lblGifttotal5.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblGifttotal4.BackColor = System.Drawing.Color.Black;
		this.lblGifttotal4.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblGifttotal4.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblGifttotal4.ForeColor = System.Drawing.Color.Yellow;
		this.lblGifttotal4.Location = new System.Drawing.Point(1008, 247);
		this.lblGifttotal4.Name = "lblGifttotal4";
		this.lblGifttotal4.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblGifttotal4.Size = new System.Drawing.Size(102, 27);
		this.lblGifttotal4.TabIndex = 1001;
		this.lblGifttotal4.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblGifttotal3.BackColor = System.Drawing.Color.Black;
		this.lblGifttotal3.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblGifttotal3.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblGifttotal3.ForeColor = System.Drawing.Color.Yellow;
		this.lblGifttotal3.Location = new System.Drawing.Point(117, 71);
		this.lblGifttotal3.Name = "lblGifttotal3";
		this.lblGifttotal3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblGifttotal3.Size = new System.Drawing.Size(103, 27);
		this.lblGifttotal3.TabIndex = 1000;
		this.lblGifttotal3.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblGifttotal2.BackColor = System.Drawing.Color.Black;
		this.lblGifttotal2.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblGifttotal2.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblGifttotal2.ForeColor = System.Drawing.Color.Yellow;
		this.lblGifttotal2.Location = new System.Drawing.Point(555, 71);
		this.lblGifttotal2.Name = "lblGifttotal2";
		this.lblGifttotal2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblGifttotal2.Size = new System.Drawing.Size(103, 27);
		this.lblGifttotal2.TabIndex = 999;
		this.lblGifttotal2.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblGifttotal1.BackColor = System.Drawing.Color.Black;
		this.lblGifttotal1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblGifttotal1.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblGifttotal1.ForeColor = System.Drawing.Color.Yellow;
		this.lblGifttotal1.Location = new System.Drawing.Point(1008, 71);
		this.lblGifttotal1.Name = "lblGifttotal1";
		this.lblGifttotal1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblGifttotal1.Size = new System.Drawing.Size(102, 27);
		this.lblGifttotal1.TabIndex = 998;
		this.lblGifttotal1.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.btnRefreshComs.BackColor = System.Drawing.Color.FromArgb(192, 255, 255);
		this.btnRefreshComs.Font = new System.Drawing.Font("Arial", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnRefreshComs.Location = new System.Drawing.Point(6, 50);
		this.btnRefreshComs.Name = "btnRefreshComs";
		this.btnRefreshComs.Size = new System.Drawing.Size(75, 37);
		this.btnRefreshComs.TabIndex = 1004;
		this.btnRefreshComs.Text = "Coms";
		this.btnRefreshComs.UseVisualStyleBackColor = false;
		this.btnGetSimsGifts.BackColor = System.Drawing.Color.FromArgb(255, 224, 192);
		this.btnGetSimsGifts.Font = new System.Drawing.Font("Tahoma", 8.25f, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, 0);
		this.btnGetSimsGifts.ForeColor = System.Drawing.Color.Black;
		this.btnGetSimsGifts.Location = new System.Drawing.Point(106, 126);
		this.btnGetSimsGifts.Name = "btnGetSimsGifts";
		this.btnGetSimsGifts.Size = new System.Drawing.Size(126, 36);
		this.btnGetSimsGifts.TabIndex = 1005;
		this.btnGetSimsGifts.Text = "اعادة تشغيل الهدايا";
		this.btnGetSimsGifts.UseVisualStyleBackColor = false;
		this.btnGetInfo.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnGetInfo.Font = new System.Drawing.Font("Arial Narrow", 7.25f, System.Drawing.FontStyle.Bold);
		this.btnGetInfo.ForeColor = System.Drawing.Color.Black;
		this.btnGetInfo.Location = new System.Drawing.Point(6, 262);
		this.btnGetInfo.Name = "btnGetInfo";
		this.btnGetInfo.Size = new System.Drawing.Size(40, 24);
		this.btnGetInfo.TabIndex = 1006;
		this.btnGetInfo.Text = "Inf";
		this.btnGetInfo.UseVisualStyleBackColor = false;
		this.chkAutoRes.AutoSize = true;
		this.chkAutoRes.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkAutoRes.ForeColor = System.Drawing.Color.Cyan;
		this.chkAutoRes.Location = new System.Drawing.Point(40, 196);
		this.chkAutoRes.Name = "chkAutoRes";
		this.chkAutoRes.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkAutoRes.Size = new System.Drawing.Size(182, 17);
		this.chkAutoRes.TabIndex = 944;
		this.chkAutoRes.Text = "اعادة التشغيل التلقائى للمودم";
		this.chkAutoRes.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkAutoRes.UseVisualStyleBackColor = true;
		this.chkDelSms.AutoSize = true;
		this.chkDelSms.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.chkDelSms.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkDelSms.ForeColor = System.Drawing.Color.Black;
		this.chkDelSms.Location = new System.Drawing.Point(159, 114);
		this.chkDelSms.Name = "chkDelSms";
		this.chkDelSms.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkDelSms.Size = new System.Drawing.Size(41, 17);
		this.chkDelSms.TabIndex = 1010;
		this.chkDelSms.Text = "Au";
		this.chkDelSms.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkDelSms.UseVisualStyleBackColor = false;
		this.chkReadsms.AutoSize = true;
		this.chkReadsms.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.chkReadsms.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkReadsms.ForeColor = System.Drawing.Color.Black;
		this.chkReadsms.Location = new System.Drawing.Point(156, 83);
		this.chkReadsms.Name = "chkReadsms";
		this.chkReadsms.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkReadsms.Size = new System.Drawing.Size(41, 17);
		this.chkReadsms.TabIndex = 1011;
		this.chkReadsms.Text = "Au";
		this.chkReadsms.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkReadsms.UseVisualStyleBackColor = false;
		this.TabControl1.Controls.Add(this.TabPage11);
		this.TabControl1.Controls.Add(this.TabPage15);
		this.TabControl1.Controls.Add(this.TabPage16);
		this.TabControl1.Controls.Add(this.TabPage17);
		this.TabControl1.Controls.Add(this.tabServer);
		this.TabControl1.Location = new System.Drawing.Point(1094, 393);
		this.TabControl1.Name = "TabControl1";
		this.TabControl1.SelectedIndex = 0;
		this.TabControl1.Size = new System.Drawing.Size(246, 322);
		this.TabControl1.TabIndex = 1012;
		this.TabPage11.BackColor = System.Drawing.Color.Black;
		this.TabPage11.Controls.Add(this.btnSA);
		this.TabPage11.Controls.Add(this.btnDeSA);
		this.TabPage11.Controls.Add(this.txtInfo);
		this.TabPage11.Controls.Add(this.btnInvertSelection);
		this.TabPage11.Controls.Add(this.btnSADwn);
		this.TabPage11.Controls.Add(this.txtLoopF);
		this.TabPage11.Controls.Add(this.btnUp);
		this.TabPage11.Controls.Add(this.BtnOO);
		this.TabPage11.Controls.Add(this.txtLoopS);
		this.TabPage11.Controls.Add(this.btnVV);
		this.TabPage11.Location = new System.Drawing.Point(4, 22);
		this.TabPage11.Name = "TabPage11";
		this.TabPage11.Padding = new System.Windows.Forms.Padding(3);
		this.TabPage11.Size = new System.Drawing.Size(238, 296);
		this.TabPage11.TabIndex = 3;
		this.TabPage11.Text = "Main";
		this.btnInvertSelection.BackColor = System.Drawing.Color.FromArgb(192, 255, 255);
		this.btnInvertSelection.Enabled = false;
		this.btnInvertSelection.Font = new System.Drawing.Font("Tahoma", 8.25f, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, 0);
		this.btnInvertSelection.Location = new System.Drawing.Point(141, 103);
		this.btnInvertSelection.Name = "btnInvertSelection";
		this.btnInvertSelection.Size = new System.Drawing.Size(81, 44);
		this.btnInvertSelection.TabIndex = 1013;
		this.btnInvertSelection.Text = "INV";
		this.btnInvertSelection.UseVisualStyleBackColor = false;
		this.btnSADwn.BackColor = System.Drawing.Color.FromArgb(192, 255, 192);
		this.btnSADwn.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnSADwn.Location = new System.Drawing.Point(117, 147);
		this.btnSADwn.Name = "btnSADwn";
		this.btnSADwn.Size = new System.Drawing.Size(105, 42);
		this.btnSADwn.TabIndex = 1014;
		this.btnSADwn.Text = "Dwn";
		this.btnSADwn.UseVisualStyleBackColor = false;
		this.btnUp.BackColor = System.Drawing.Color.FromArgb(192, 255, 192);
		this.btnUp.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnUp.Location = new System.Drawing.Point(6, 148);
		this.btnUp.Name = "btnUp";
		this.btnUp.Size = new System.Drawing.Size(105, 41);
		this.btnUp.TabIndex = 1015;
		this.btnUp.Text = "UP";
		this.btnUp.UseVisualStyleBackColor = false;
		this.BtnOO.BackColor = System.Drawing.Color.DarkOrange;
		this.BtnOO.Font = new System.Drawing.Font("Tahoma", 9f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.BtnOO.Location = new System.Drawing.Point(130, 7);
		this.BtnOO.Name = "BtnOO";
		this.BtnOO.Size = new System.Drawing.Size(92, 51);
		this.BtnOO.TabIndex = 1021;
		this.BtnOO.UseVisualStyleBackColor = false;
		this.btnVV.BackColor = System.Drawing.Color.Red;
		this.btnVV.Font = new System.Drawing.Font("Tahoma", 9f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnVV.Location = new System.Drawing.Point(49, 7);
		this.btnVV.Name = "btnVV";
		this.btnVV.Size = new System.Drawing.Size(77, 51);
		this.btnVV.TabIndex = 1020;
		this.btnVV.UseVisualStyleBackColor = false;
		this.TabPage15.BackColor = System.Drawing.Color.Black;
		this.TabPage15.Controls.Add(this.txtWebSign);
		this.TabPage15.Controls.Add(this.btnCC);
		this.TabPage15.Controls.Add(this.chkReadsms);
		this.TabPage15.Controls.Add(this.chkDelSms);
		this.TabPage15.Controls.Add(this.btnGetInfo);
		this.TabPage15.Controls.Add(this.btnClearSMS);
		this.TabPage15.Controls.Add(this.btnReadSms);
		this.TabPage15.Controls.Add(this.txt205);
		this.TabPage15.Controls.Add(this.btnUssdReset);
		this.TabPage15.Controls.Add(this.btnGetOut);
		this.TabPage15.Location = new System.Drawing.Point(4, 22);
		this.TabPage15.Name = "TabPage15";
		this.TabPage15.Padding = new System.Windows.Forms.Padding(3);
		this.TabPage15.Size = new System.Drawing.Size(238, 296);
		this.TabPage15.TabIndex = 0;
		this.TabPage15.Text = "Gen";
		this.txtWebSign.BackColor = System.Drawing.Color.Lime;
		this.txtWebSign.Font = new System.Drawing.Font("Tahoma", 18f, System.Drawing.FontStyle.Bold);
		this.txtWebSign.ForeColor = System.Drawing.Color.Black;
		this.txtWebSign.Location = new System.Drawing.Point(6, 218);
		this.txtWebSign.MaxLength = 15;
		this.txtWebSign.Name = "txtWebSign";
		this.txtWebSign.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtWebSign.Size = new System.Drawing.Size(199, 36);
		this.txtWebSign.TabIndex = 1098;
		this.txtWebSign.Text = "ADD";
		this.txtWebSign.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.btnCC.BackColor = System.Drawing.Color.FromArgb(192, 255, 192);
		this.btnCC.Font = new System.Drawing.Font("Tahoma", 8.25f, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, 0);
		this.btnCC.Location = new System.Drawing.Point(52, 261);
		this.btnCC.Name = "btnCC";
		this.btnCC.Size = new System.Drawing.Size(87, 24);
		this.btnCC.TabIndex = 1016;
		this.btnCC.Text = "Copy Nums";
		this.btnCC.UseVisualStyleBackColor = false;
		this.TabPage16.BackColor = System.Drawing.Color.Black;
		this.TabPage16.Controls.Add(this.btn2G);
		this.TabPage16.Controls.Add(this.btnNumbers);
		this.TabPage16.Controls.Add(this.btnNumbers2);
		this.TabPage16.Controls.Add(this.btnNumbers3);
		this.TabPage16.Controls.Add(this.btnFawrySms);
		this.TabPage16.Controls.Add(this.btnRR);
		this.TabPage16.Controls.Add(this.btnRefreshEmpty);
		this.TabPage16.Controls.Add(this.btnGetSimsGifts);
		this.TabPage16.Controls.Add(this.btn3G);
		this.TabPage16.Controls.Add(this.btnRefreshMissed);
		this.TabPage16.Controls.Add(this.btnRefreshComs);
		this.TabPage16.Controls.Add(this.btnResetMissed);
		this.TabPage16.Controls.Add(this.btnGetSims);
		this.TabPage16.Location = new System.Drawing.Point(4, 22);
		this.TabPage16.Name = "TabPage16";
		this.TabPage16.Padding = new System.Windows.Forms.Padding(3);
		this.TabPage16.Size = new System.Drawing.Size(238, 296);
		this.TabPage16.TabIndex = 1;
		this.TabPage16.Text = "C1";
		this.btn2G.BackColor = System.Drawing.Color.Green;
		this.btn2G.Font = new System.Drawing.Font("Arial", 8f, System.Drawing.FontStyle.Bold);
		this.btn2G.Location = new System.Drawing.Point(173, 255);
		this.btn2G.Name = "btn2G";
		this.btn2G.Size = new System.Drawing.Size(59, 25);
		this.btn2G.TabIndex = 1006;
		this.btn2G.Text = "2G Only";
		this.btn2G.UseVisualStyleBackColor = false;
		this.TabPage17.BackColor = System.Drawing.Color.FromArgb(64, 0, 64);
		this.TabPage17.Controls.Add(this.ckSetThisNumberToValedPeriod);
		this.TabPage17.Controls.Add(this.chkSafeMode);
		this.TabPage17.Controls.Add(this.chkIgnorSms);
		this.TabPage17.Controls.Add(this.chkAutoMain);
		this.TabPage17.Controls.Add(this.chkSlowRead);
		this.TabPage17.Controls.Add(this.ckUseNextMain);
		this.TabPage17.Controls.Add(this.chkAutoRes);
		this.TabPage17.Controls.Add(this.chkAutoDell);
		this.TabPage17.Controls.Add(this.ckBox);
		this.TabPage17.Controls.Add(this.ckME);
		this.TabPage17.Controls.Add(this.chkTransferAllNormalVoda);
		this.TabPage17.Controls.Add(this.chkSqn);
		this.TabPage17.Controls.Add(this.chkUse365inprcss);
		this.TabPage17.Controls.Add(this.chkChargeOnSame);
		this.TabPage17.Controls.Add(this.chkUse365inprcss10);
		this.TabPage17.Controls.Add(this.ckUse910);
		this.TabPage17.Location = new System.Drawing.Point(4, 22);
		this.TabPage17.Margin = new System.Windows.Forms.Padding(3, 2, 3, 2);
		this.TabPage17.Name = "TabPage17";
		this.TabPage17.Padding = new System.Windows.Forms.Padding(3, 2, 3, 2);
		this.TabPage17.Size = new System.Drawing.Size(238, 296);
		this.TabPage17.TabIndex = 2;
		this.TabPage17.Text = "options";
		this.ckSetThisNumberToValedPeriod.AutoSize = true;
		this.ckSetThisNumberToValedPeriod.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.ckSetThisNumberToValedPeriod.ForeColor = System.Drawing.Color.White;
		this.ckSetThisNumberToValedPeriod.Location = new System.Drawing.Point(116, 179);
		this.ckSetThisNumberToValedPeriod.Name = "ckSetThisNumberToValedPeriod";
		this.ckSetThisNumberToValedPeriod.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.ckSetThisNumberToValedPeriod.Size = new System.Drawing.Size(106, 17);
		this.ckSetThisNumberToValedPeriod.TabIndex = 1052;
		this.ckSetThisNumberToValedPeriod.Text = "صلاحية للخطوط";
		this.ckSetThisNumberToValedPeriod.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.ckSetThisNumberToValedPeriod.UseVisualStyleBackColor = true;
		this.chkSafeMode.AutoSize = true;
		this.chkSafeMode.BackColor = System.Drawing.Color.FromArgb(128, 255, 255);
		this.chkSafeMode.Enabled = false;
		this.chkSafeMode.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.chkSafeMode.ForeColor = System.Drawing.Color.Black;
		this.chkSafeMode.Location = new System.Drawing.Point(108, 10);
		this.chkSafeMode.Name = "chkSafeMode";
		this.chkSafeMode.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.chkSafeMode.Size = new System.Drawing.Size(114, 17);
		this.chkSafeMode.TabIndex = 1012;
		this.chkSafeMode.Text = "نظام العمل الامن";
		this.chkSafeMode.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
		this.chkSafeMode.UseVisualStyleBackColor = false;
		this.tabServer.Controls.Add(this.Label103);
		this.tabServer.Controls.Add(this.txtNumberToAddinRobot);
		this.tabServer.Controls.Add(this.lbladdedtoQry);
		this.tabServer.Controls.Add(this.btnSaveASqry);
		this.tabServer.Controls.Add(this.btnExport2qry);
		this.tabServer.Controls.Add(this.btnwebQry);
		this.tabServer.Controls.Add(this.lblQryCount);
		this.tabServer.Controls.Add(this.Label91);
		this.tabServer.Controls.Add(this.txtWebQryMonth);
		this.tabServer.Controls.Add(this.Label34);
		this.tabServer.Controls.Add(this.txtWebQryDay);
		this.tabServer.Controls.Add(this.lstWebQry);
		this.tabServer.Controls.Add(this.Label33);
		this.tabServer.Controls.Add(this.Label32);
		this.tabServer.Controls.Add(this.txtWebQryOperator);
		this.tabServer.Controls.Add(this.txtWebQrySign);
		this.tabServer.Location = new System.Drawing.Point(4, 22);
		this.tabServer.Name = "tabServer";
		this.tabServer.Size = new System.Drawing.Size(238, 296);
		this.tabServer.TabIndex = 4;
		this.tabServer.Text = "Server";
		this.tabServer.UseVisualStyleBackColor = true;
		this.Label103.AutoSize = true;
		this.Label103.Font = new System.Drawing.Font("Tahoma", 8.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.Label103.ForeColor = System.Drawing.Color.Black;
		this.Label103.Location = new System.Drawing.Point(5, 51);
		this.Label103.Name = "Label103";
		this.Label103.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label103.Size = new System.Drawing.Size(51, 13);
		this.Label103.TabIndex = 1128;
		this.Label103.Text = "Number";
		this.txtNumberToAddinRobot.BackColor = System.Drawing.Color.White;
		this.txtNumberToAddinRobot.Font = new System.Drawing.Font("Tahoma", 9.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtNumberToAddinRobot.ForeColor = System.Drawing.Color.Black;
		this.txtNumberToAddinRobot.Location = new System.Drawing.Point(8, 71);
		this.txtNumberToAddinRobot.MaxLength = 15;
		this.txtNumberToAddinRobot.Name = "txtNumberToAddinRobot";
		this.txtNumberToAddinRobot.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtNumberToAddinRobot.Size = new System.Drawing.Size(142, 23);
		this.txtNumberToAddinRobot.TabIndex = 1127;
		this.txtNumberToAddinRobot.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.lbladdedtoQry.AutoSize = true;
		this.lbladdedtoQry.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.lbladdedtoQry.ForeColor = System.Drawing.Color.Black;
		this.lbladdedtoQry.Location = new System.Drawing.Point(13, 138);
		this.lbladdedtoQry.Name = "lbladdedtoQry";
		this.lbladdedtoQry.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lbladdedtoQry.Size = new System.Drawing.Size(19, 17);
		this.lbladdedtoQry.TabIndex = 1126;
		this.lbladdedtoQry.Text = "#";
		this.btnSaveASqry.Location = new System.Drawing.Point(156, 54);
		this.btnSaveASqry.Name = "btnSaveASqry";
		this.btnSaveASqry.Size = new System.Drawing.Size(74, 33);
		this.btnSaveASqry.TabIndex = 1125;
		this.btnSaveASqry.Text = "مكان الحفظ";
		this.btnSaveASqry.UseVisualStyleBackColor = true;
		this.btnExport2qry.Location = new System.Drawing.Point(156, 89);
		this.btnExport2qry.Name = "btnExport2qry";
		this.btnExport2qry.Size = new System.Drawing.Size(74, 38);
		this.btnExport2qry.TabIndex = 1124;
		this.btnExport2qry.Text = "تصدير";
		this.btnExport2qry.UseVisualStyleBackColor = true;
		this.btnwebQry.BackColor = System.Drawing.SystemColors.ButtonFace;
		this.btnwebQry.Font = new System.Drawing.Font("Tahoma", 8.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.btnwebQry.Location = new System.Drawing.Point(8, 97);
		this.btnwebQry.Name = "btnwebQry";
		this.btnwebQry.Size = new System.Drawing.Size(142, 35);
		this.btnwebQry.TabIndex = 1123;
		this.btnwebQry.Text = "Get All Numbers";
		this.btnwebQry.UseVisualStyleBackColor = false;
		this.lblQryCount.AutoSize = true;
		this.lblQryCount.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.lblQryCount.ForeColor = System.Drawing.Color.Black;
		this.lblQryCount.Location = new System.Drawing.Point(104, 138);
		this.lblQryCount.Name = "lblQryCount";
		this.lblQryCount.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblQryCount.Size = new System.Drawing.Size(19, 17);
		this.lblQryCount.TabIndex = 1122;
		this.lblQryCount.Text = "#";
		this.Label91.AutoSize = true;
		this.Label91.Font = new System.Drawing.Font("Tahoma", 8.25f, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, 0);
		this.Label91.ForeColor = System.Drawing.Color.Black;
		this.Label91.Location = new System.Drawing.Point(130, 34);
		this.Label91.Name = "Label91";
		this.Label91.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label91.Size = new System.Drawing.Size(37, 13);
		this.Label91.TabIndex = 1121;
		this.Label91.Text = "Month";
		this.txtWebQryMonth.BackColor = System.Drawing.Color.White;
		this.txtWebQryMonth.Font = new System.Drawing.Font("Tahoma", 8.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtWebQryMonth.ForeColor = System.Drawing.Color.Black;
		this.txtWebQryMonth.Location = new System.Drawing.Point(173, 31);
		this.txtWebQryMonth.Name = "txtWebQryMonth";
		this.txtWebQryMonth.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtWebQryMonth.Size = new System.Drawing.Size(57, 21);
		this.txtWebQryMonth.TabIndex = 1120;
		this.txtWebQryMonth.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label34.AutoSize = true;
		this.Label34.Font = new System.Drawing.Font("Tahoma", 8.25f, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, 0);
		this.Label34.ForeColor = System.Drawing.Color.Black;
		this.Label34.Location = new System.Drawing.Point(141, 12);
		this.Label34.Name = "Label34";
		this.Label34.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label34.Size = new System.Drawing.Size(26, 13);
		this.Label34.TabIndex = 1119;
		this.Label34.Text = "Day";
		this.txtWebQryDay.BackColor = System.Drawing.Color.White;
		this.txtWebQryDay.Font = new System.Drawing.Font("Tahoma", 8.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtWebQryDay.ForeColor = System.Drawing.Color.Black;
		this.txtWebQryDay.Location = new System.Drawing.Point(173, 8);
		this.txtWebQryDay.Name = "txtWebQryDay";
		this.txtWebQryDay.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtWebQryDay.Size = new System.Drawing.Size(57, 21);
		this.txtWebQryDay.TabIndex = 1118;
		this.txtWebQryDay.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.lstWebQry.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.lstWebQry.FormattingEnabled = true;
		this.lstWebQry.ItemHeight = 16;
		this.lstWebQry.Location = new System.Drawing.Point(6, 161);
		this.lstWebQry.Name = "lstWebQry";
		this.lstWebQry.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lstWebQry.Size = new System.Drawing.Size(155, 100);
		this.lstWebQry.TabIndex = 1117;
		this.Label33.AutoSize = true;
		this.Label33.Font = new System.Drawing.Font("Tahoma", 8.25f, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, 0);
		this.Label33.ForeColor = System.Drawing.Color.Black;
		this.Label33.Location = new System.Drawing.Point(5, 15);
		this.Label33.Name = "Label33";
		this.Label33.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label33.Size = new System.Drawing.Size(27, 13);
		this.Label33.TabIndex = 1102;
		this.Label33.Text = "Sign";
		this.Label32.AutoSize = true;
		this.Label32.Font = new System.Drawing.Font("Tahoma", 8.25f, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, 0);
		this.Label32.ForeColor = System.Drawing.Color.Black;
		this.Label32.Location = new System.Drawing.Point(3, 33);
		this.Label32.Name = "Label32";
		this.Label32.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.Label32.Size = new System.Drawing.Size(51, 13);
		this.Label32.TabIndex = 1101;
		this.Label32.Text = "Operator";
		this.txtWebQryOperator.BackColor = System.Drawing.Color.White;
		this.txtWebQryOperator.Font = new System.Drawing.Font("Tahoma", 8.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtWebQryOperator.ForeColor = System.Drawing.Color.Black;
		this.txtWebQryOperator.Location = new System.Drawing.Point(56, 31);
		this.txtWebQryOperator.Name = "txtWebQryOperator";
		this.txtWebQryOperator.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtWebQryOperator.Size = new System.Drawing.Size(57, 21);
		this.txtWebQryOperator.TabIndex = 1100;
		this.txtWebQryOperator.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtWebQrySign.BackColor = System.Drawing.Color.Lime;
		this.txtWebQrySign.Font = new System.Drawing.Font("Tahoma", 8.25f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 0);
		this.txtWebQrySign.ForeColor = System.Drawing.Color.Black;
		this.txtWebQrySign.Location = new System.Drawing.Point(38, 8);
		this.txtWebQrySign.MaxLength = 15;
		this.txtWebQrySign.Name = "txtWebQrySign";
		this.txtWebQrySign.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtWebQrySign.Size = new System.Drawing.Size(97, 21);
		this.txtWebQrySign.TabIndex = 1099;
		this.txtWebQrySign.Text = "ADD";
		this.txtWebQrySign.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.txtDelayInSC.BackColor = System.Drawing.Color.White;
		this.txtDelayInSC.Font = new System.Drawing.Font("Tahoma", 12f, System.Drawing.FontStyle.Bold);
		this.txtDelayInSC.ForeColor = System.Drawing.Color.Black;
		this.txtDelayInSC.Location = new System.Drawing.Point(1041, 515);
		this.txtDelayInSC.Name = "txtDelayInSC";
		this.txtDelayInSC.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtDelayInSC.Size = new System.Drawing.Size(50, 27);
		this.txtDelayInSC.TabIndex = 1012;
		this.txtDelayInSC.Text = "0";
		this.txtDelayInSC.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.cktxtDelayInSC.Appearance = System.Windows.Forms.Appearance.Button;
		this.cktxtDelayInSC.BackColor = System.Drawing.Color.FromArgb(255, 255, 128);
		this.cktxtDelayInSC.Font = new System.Drawing.Font("Tahoma", 8f, System.Drawing.FontStyle.Bold);
		this.cktxtDelayInSC.ForeColor = System.Drawing.Color.Black;
		this.cktxtDelayInSC.Location = new System.Drawing.Point(953, 512);
		this.cktxtDelayInSC.Name = "cktxtDelayInSC";
		this.cktxtDelayInSC.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.cktxtDelayInSC.Size = new System.Drawing.Size(138, 34);
		this.cktxtDelayInSC.TabIndex = 1103;
		this.cktxtDelayInSC.Text = "0";
		this.cktxtDelayInSC.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.cktxtDelayInSC.UseVisualStyleBackColor = false;
		this.lblChargeDone1.BackColor = System.Drawing.Color.Black;
		this.lblChargeDone1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblChargeDone1.Font = new System.Drawing.Font("Tahoma", 9f, System.Drawing.FontStyle.Bold);
		this.lblChargeDone1.ForeColor = System.Drawing.Color.Yellow;
		this.lblChargeDone1.Location = new System.Drawing.Point(1041, 42);
		this.lblChargeDone1.Name = "lblChargeDone1";
		this.lblChargeDone1.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblChargeDone1.Size = new System.Drawing.Size(69, 27);
		this.lblChargeDone1.TabIndex = 1013;
		this.lblChargeDone1.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblChargeDone1.Visible = false;
		this.lblChargeDone2.BackColor = System.Drawing.Color.Black;
		this.lblChargeDone2.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblChargeDone2.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblChargeDone2.ForeColor = System.Drawing.Color.Yellow;
		this.lblChargeDone2.Location = new System.Drawing.Point(589, 42);
		this.lblChargeDone2.Name = "lblChargeDone2";
		this.lblChargeDone2.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblChargeDone2.Size = new System.Drawing.Size(69, 27);
		this.lblChargeDone2.TabIndex = 1014;
		this.lblChargeDone2.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblChargeDone2.Visible = false;
		this.lblChargeDone3.BackColor = System.Drawing.Color.Black;
		this.lblChargeDone3.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblChargeDone3.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblChargeDone3.ForeColor = System.Drawing.Color.Yellow;
		this.lblChargeDone3.Location = new System.Drawing.Point(151, 42);
		this.lblChargeDone3.Name = "lblChargeDone3";
		this.lblChargeDone3.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblChargeDone3.Size = new System.Drawing.Size(69, 27);
		this.lblChargeDone3.TabIndex = 1015;
		this.lblChargeDone3.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblChargeDone3.Visible = false;
		this.lblChargeDone4.BackColor = System.Drawing.Color.Black;
		this.lblChargeDone4.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblChargeDone4.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblChargeDone4.ForeColor = System.Drawing.Color.Yellow;
		this.lblChargeDone4.Location = new System.Drawing.Point(1041, 216);
		this.lblChargeDone4.Name = "lblChargeDone4";
		this.lblChargeDone4.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblChargeDone4.Size = new System.Drawing.Size(69, 27);
		this.lblChargeDone4.TabIndex = 1016;
		this.lblChargeDone4.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblChargeDone4.Visible = false;
		this.lblChargeDone5.BackColor = System.Drawing.Color.Black;
		this.lblChargeDone5.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblChargeDone5.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblChargeDone5.ForeColor = System.Drawing.Color.Yellow;
		this.lblChargeDone5.Location = new System.Drawing.Point(589, 216);
		this.lblChargeDone5.Name = "lblChargeDone5";
		this.lblChargeDone5.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblChargeDone5.Size = new System.Drawing.Size(69, 27);
		this.lblChargeDone5.TabIndex = 1017;
		this.lblChargeDone5.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblChargeDone5.Visible = false;
		this.lblChargeDone6.BackColor = System.Drawing.Color.Black;
		this.lblChargeDone6.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblChargeDone6.Font = new System.Drawing.Font("Tahoma", 11f, System.Drawing.FontStyle.Bold);
		this.lblChargeDone6.ForeColor = System.Drawing.Color.Yellow;
		this.lblChargeDone6.Location = new System.Drawing.Point(151, 216);
		this.lblChargeDone6.Name = "lblChargeDone6";
		this.lblChargeDone6.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblChargeDone6.Size = new System.Drawing.Size(69, 27);
		this.lblChargeDone6.TabIndex = 1018;
		this.lblChargeDone6.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblChargeDone6.Visible = false;
		this.gboxLock.Anchor = System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left | System.Windows.Forms.AnchorStyles.Right;
		this.gboxLock.Controls.Add(this.btnLockNo);
		this.gboxLock.Controls.Add(this.btnLockOK);
		this.gboxLock.Controls.Add(this.Label67);
		this.gboxLock.Controls.Add(this.Label65);
		this.gboxLock.Controls.Add(this.txtEproc);
		this.gboxLock.Controls.Add(this.lblCard5);
		this.gboxLock.Controls.Add(this.lblCard6);
		this.gboxLock.Controls.Add(this.lblCard3);
		this.gboxLock.Controls.Add(this.lblCard2);
		this.gboxLock.Controls.Add(this.lblCard4);
		this.gboxLock.Controls.Add(this.lblCard1);
		this.gboxLock.Location = new System.Drawing.Point(1346, 4);
		this.gboxLock.Name = "gboxLock";
		this.gboxLock.Size = new System.Drawing.Size(2612, 1243);
		this.gboxLock.TabIndex = 1019;
		this.gboxLock.TabStop = false;
		this.gboxLock.Text = "GroupBox3";
		this.btnLockNo.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
		this.btnLockNo.Font = new System.Drawing.Font("Tahoma", 30f);
		this.btnLockNo.ForeColor = System.Drawing.Color.Red;
		this.btnLockNo.Location = new System.Drawing.Point(321, 503);
		this.btnLockNo.Name = "btnLockNo";
		this.btnLockNo.Size = new System.Drawing.Size(286, 99);
		this.btnLockNo.TabIndex = 3;
		this.btnLockNo.Text = "غير موافق";
		this.btnLockNo.UseVisualStyleBackColor = true;
		this.btnLockOK.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
		this.btnLockOK.Font = new System.Drawing.Font("Tahoma", 30f);
		this.btnLockOK.ForeColor = System.Drawing.Color.Red;
		this.btnLockOK.Location = new System.Drawing.Point(908, 505);
		this.btnLockOK.Name = "btnLockOK";
		this.btnLockOK.Size = new System.Drawing.Size(246, 99);
		this.btnLockOK.TabIndex = 2;
		this.btnLockOK.Text = "موافق";
		this.btnLockOK.UseVisualStyleBackColor = true;
		this.Label67.AutoEllipsis = true;
		this.Label67.Font = new System.Drawing.Font("Arial", 27.75f, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, 178);
		this.Label67.ForeColor = System.Drawing.Color.Red;
		this.Label67.Location = new System.Drawing.Point(39, 154);
		this.Label67.Name = "Label67";
		this.Label67.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
		this.Label67.Size = new System.Drawing.Size(1251, 317);
		this.Label67.TabIndex = 1;
		this.Label67.Text = resources.GetString("Label67.Text");
		this.Label67.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.Label65.Anchor = System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left | System.Windows.Forms.AnchorStyles.Right;
		this.Label65.AutoSize = true;
		this.Label65.Font = new System.Drawing.Font("Arial Rounded MT Bold", 72f, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, 0);
		this.Label65.ForeColor = System.Drawing.Color.Red;
		this.Label65.Location = new System.Drawing.Point(526, 16);
		this.Label65.Name = "Label65";
		this.Label65.Size = new System.Drawing.Size(267, 111);
		this.Label65.TabIndex = 0;
		this.Label65.Text = "تحـذيـر";
		this.Label65.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.lblLastCheck.BackColor = System.Drawing.Color.Black;
		this.lblLastCheck.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
		this.lblLastCheck.Font = new System.Drawing.Font("Tahoma", 10f, System.Drawing.FontStyle.Bold);
		this.lblLastCheck.ForeColor = System.Drawing.Color.Red;
		this.lblLastCheck.Location = new System.Drawing.Point(953, 549);
		this.lblLastCheck.Name = "lblLastCheck";
		this.lblLastCheck.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.lblLastCheck.Size = new System.Drawing.Size(138, 159);
		this.lblLastCheck.TabIndex = 1022;
		this.lblLastCheck.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
		this.txtInfoSize.Location = new System.Drawing.Point(258, 58);
		this.txtInfoSize.Name = "txtInfoSize";
		this.txtInfoSize.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtInfoSize.Size = new System.Drawing.Size(67, 20);
		this.txtInfoSize.TabIndex = 11;
		this.txtInfoSize.Text = "35";
		this.txtInfoSize.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label89.AutoSize = true;
		this.Label89.ForeColor = System.Drawing.Color.White;
		this.Label89.Location = new System.Drawing.Point(215, 62);
		this.Label89.Name = "Label89";
		this.Label89.Size = new System.Drawing.Size(37, 13);
		this.Label89.TabIndex = 10;
		this.Label89.Text = "# Size";
		this.txtInfoSizeH.Location = new System.Drawing.Point(96, 62);
		this.txtInfoSizeH.Name = "txtInfoSizeH";
		this.txtInfoSizeH.RightToLeft = System.Windows.Forms.RightToLeft.No;
		this.txtInfoSizeH.Size = new System.Drawing.Size(67, 20);
		this.txtInfoSizeH.TabIndex = 13;
		this.txtInfoSizeH.Text = "47";
		this.txtInfoSizeH.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
		this.Label110.AutoSize = true;
		this.Label110.ForeColor = System.Drawing.Color.White;
		this.Label110.Location = new System.Drawing.Point(23, 66);
		this.Label110.Name = "Label110";
		this.Label110.Size = new System.Drawing.Size(67, 13);
		this.Label110.TabIndex = 12;
		this.Label110.Text = "Number Size";
		base.AutoScaleDimensions = new System.Drawing.SizeF(6f, 13f);
		base.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
		this.BackColor = System.Drawing.Color.Black;
		base.ClientSize = new System.Drawing.Size(1352, 722);
		base.Controls.Add(this.gboxLock);
		base.Controls.Add(this.lblLastCheck);
		base.Controls.Add(this.btnClear);
		base.Controls.Add(this.lblChargeDone6);
		base.Controls.Add(this.lblChargeDone5);
		base.Controls.Add(this.lblChargeDone4);
		base.Controls.Add(this.txtDelayInSC);
		base.Controls.Add(this.chkStop);
		base.Controls.Add(this.btnSaveOut);
		base.Controls.Add(this.lblChargeDone3);
		base.Controls.Add(this.lblChargeDone2);
		base.Controls.Add(this.lblChargeDone1);
		base.Controls.Add(this.TabControl1);
		base.Controls.Add(this.lblGifttotal6);
		base.Controls.Add(this.lblGifttotal5);
		base.Controls.Add(this.lblGifttotal4);
		base.Controls.Add(this.btnCancelTrans);
		base.Controls.Add(this.lblGifttotal3);
		base.Controls.Add(this.lblGifttotal2);
		base.Controls.Add(this.lblGifttotal1);
		base.Controls.Add(this.lblGiftV6);
		base.Controls.Add(this.lblGiftV5);
		base.Controls.Add(this.lblGiftV4);
		base.Controls.Add(this.lblGiftV3);
		base.Controls.Add(this.btnRefresh);
		base.Controls.Add(this.lblGiftV2);
		base.Controls.Add(this.lblGiftV1);
		base.Controls.Add(this.lblGifts06);
		base.Controls.Add(this.lblGifts05);
		base.Controls.Add(this.lblGifts04);
		base.Controls.Add(this.lblGifts03);
		base.Controls.Add(this.lblGifts02);
		base.Controls.Add(this.lblGifts01);
		base.Controls.Add(this.MainTC);
		base.Controls.Add(this.chkCh6);
		base.Controls.Add(this.chkCh5);
		base.Controls.Add(this.chkCh4);
		base.Controls.Add(this.chkCh3);
		base.Controls.Add(this.chkCh2);
		base.Controls.Add(this.chkCh1);
		base.Controls.Add(this.lblBal6);
		base.Controls.Add(this.lblBal5);
		base.Controls.Add(this.lblBal4);
		base.Controls.Add(this.lblBal3);
		base.Controls.Add(this.lblBal2);
		base.Controls.Add(this.lblBal1);
		base.Controls.Add(this.lblNum6);
		base.Controls.Add(this.lblNum5);
		base.Controls.Add(this.lblNum4);
		base.Controls.Add(this.lblNum3);
		base.Controls.Add(this.lblNum2);
		base.Controls.Add(this.lblNum1);
		base.Controls.Add(this.txtRet06);
		base.Controls.Add(this.txtRet05);
		base.Controls.Add(this.txtRet04);
		base.Controls.Add(this.txtRet03);
		base.Controls.Add(this.txtRet02);
		base.Controls.Add(this.txtRet01);
		base.Controls.Add(this.lblPort6);
		base.Controls.Add(this.lblPort5);
		base.Controls.Add(this.lblProgress);
		base.Controls.Add(this.lblPort4);
		base.Controls.Add(this.lblPort3);
		base.Controls.Add(this.lblPort2);
		base.Controls.Add(this.lblPort1);
		base.Controls.Add(this.cktxtDelayInSC);
		this.ForeColor = System.Drawing.Color.Black;
		base.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedSingle;
		base.Icon = (System.Drawing.Icon)resources.GetObject("$this.Icon");
		base.Name = "frmUssd";
		this.RightToLeft = System.Windows.Forms.RightToLeft.No;
		base.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen;
		this.Text = "MTUSSD AI SYSTEM";
		base.WindowState = System.Windows.Forms.FormWindowState.Maximized;
		this.MainTC.ResumeLayout(false);
		this.VodaCashPAnel.ResumeLayout(false);
		this.VodaCashPAnel.PerformLayout();
		this.tabvc2.ResumeLayout(false);
		this.tabvc2.PerformLayout();
		this.tab365_2.ResumeLayout(false);
		this.tab365_2.PerformLayout();
		this.TabPage4.ResumeLayout(false);
		this.TabPage4.PerformLayout();
		this.tabOcash.ResumeLayout(false);
		this.tabOcash.PerformLayout();
		this.tabOCCon.ResumeLayout(false);
		this.tabOCCon.PerformLayout();
		this.tabOCMaster.ResumeLayout(false);
		this.tabOCMaster.PerformLayout();
		this.tabOCGifts.ResumeLayout(false);
		this.tabOCGifts.PerformLayout();
		this.tabOCSetup.ResumeLayout(false);
		this.tabOCSetup.PerformLayout();
		this.tabOrngInv.ResumeLayout(false);
		this.tabOrngInv.PerformLayout();
		((System.ComponentModel.ISupportInitialize)this.dataViewGrid).EndInit();
		this.TabPage1.ResumeLayout(false);
		this.TabPage1.PerformLayout();
		this.TabPage7.ResumeLayout(false);
		this.TabPage7.PerformLayout();
		this.tabPrint.ResumeLayout(false);
		this.tabPrint.PerformLayout();
		this.GroupBox2.ResumeLayout(false);
		this.GroupBox2.PerformLayout();
		this.GroupBox5.ResumeLayout(false);
		this.GroupBox5.PerformLayout();
		this.GroupBox1.ResumeLayout(false);
		this.GroupBox1.PerformLayout();
		this.TabPage3.ResumeLayout(false);
		this.TabPage3.PerformLayout();
		this.gboxSms.ResumeLayout(false);
		this.gboxSms.PerformLayout();
		this.TabPage5.ResumeLayout(false);
		this.TabPage5.PerformLayout();
		this.TabPage14.ResumeLayout(false);
		this.TabPage14.PerformLayout();
		this.TabPage12.ResumeLayout(false);
		this.TabPage12.PerformLayout();
		this.TabPage13.ResumeLayout(false);
		this.TabPage13.PerformLayout();
		this.TabPage6.ResumeLayout(false);
		this.TabPage6.PerformLayout();
		this.tabTayer.ResumeLayout(false);
		this.tabTayer.PerformLayout();
		this.tabEzoo.ResumeLayout(false);
		this.tabEzoo.PerformLayout();
		this.tab365.ResumeLayout(false);
		this.tab365.PerformLayout();
		this.tabpoints.ResumeLayout(false);
		this.tabpoints.PerformLayout();
		this.tabON.ResumeLayout(false);
		this.tabON.PerformLayout();
		this.TabPage2.ResumeLayout(false);
		this.TabPage2.PerformLayout();
		this.TabPage8.ResumeLayout(false);
		this.TabPage8.PerformLayout();
		this.TabPage9.ResumeLayout(false);
		this.TabPage9.PerformLayout();
		((System.ComponentModel.ISupportInitialize)this.dataViewGridQryChrg).EndInit();
		((System.ComponentModel.ISupportInitialize)this.dataViewGridQryBal).EndInit();
		this.TabPage10.ResumeLayout(false);
		this.TabPage10.PerformLayout();
		this.TabControl1.ResumeLayout(false);
		this.TabPage11.ResumeLayout(false);
		this.TabPage11.PerformLayout();
		this.TabPage15.ResumeLayout(false);
		this.TabPage15.PerformLayout();
		this.TabPage16.ResumeLayout(false);
		this.TabPage17.ResumeLayout(false);
		this.TabPage17.PerformLayout();
		this.tabServer.ResumeLayout(false);
		this.tabServer.PerformLayout();
		this.gboxLock.ResumeLayout(false);
		this.gboxLock.PerformLayout();
		base.ResumeLayout(false);
		base.PerformLayout();
	}

	[DllImport("tsclib.dll", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	private static extern void openport([MarshalAs(UnmanagedType.VBByRefStr)] ref string PrinterName);

	[DllImport("tsclib.dll", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	private static extern void closeport();

	[DllImport("tsclib.dll", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	private static extern void sendcommand([MarshalAs(UnmanagedType.VBByRefStr)] ref string command_Renamed);

	[DllImport("tsclib.dll", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	private static extern void setup([MarshalAs(UnmanagedType.VBByRefStr)] ref string LabelWidth, [MarshalAs(UnmanagedType.VBByRefStr)] ref string LabelHeight, [MarshalAs(UnmanagedType.VBByRefStr)] ref string Speed, [MarshalAs(UnmanagedType.VBByRefStr)] ref string Density, [MarshalAs(UnmanagedType.VBByRefStr)] ref string Sensor, [MarshalAs(UnmanagedType.VBByRefStr)] ref string Vertical, [MarshalAs(UnmanagedType.VBByRefStr)] ref string Offset);

	[DllImport("tsclib.dll", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	private static extern void downloadpcx([MarshalAs(UnmanagedType.VBByRefStr)] ref string Filename, [MarshalAs(UnmanagedType.VBByRefStr)] ref string ImageName);

	[DllImport("tsclib.dll", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	private static extern void barcode([MarshalAs(UnmanagedType.VBByRefStr)] ref string X, [MarshalAs(UnmanagedType.VBByRefStr)] ref string Y, [MarshalAs(UnmanagedType.VBByRefStr)] ref string CodeType, [MarshalAs(UnmanagedType.VBByRefStr)] ref string Height_Renamed, [MarshalAs(UnmanagedType.VBByRefStr)] ref string Readable, [MarshalAs(UnmanagedType.VBByRefStr)] ref string rotation, [MarshalAs(UnmanagedType.VBByRefStr)] ref string Narrow, [MarshalAs(UnmanagedType.VBByRefStr)] ref string Wide, [MarshalAs(UnmanagedType.VBByRefStr)] ref string Code);

	[DllImport("tsclib.dll", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	private static extern void printerfont([MarshalAs(UnmanagedType.VBByRefStr)] ref string X, [MarshalAs(UnmanagedType.VBByRefStr)] ref string Y, [MarshalAs(UnmanagedType.VBByRefStr)] ref string FontName, [MarshalAs(UnmanagedType.VBByRefStr)] ref string rotation, [MarshalAs(UnmanagedType.VBByRefStr)] ref string Xmul, [MarshalAs(UnmanagedType.VBByRefStr)] ref string Ymul, [MarshalAs(UnmanagedType.VBByRefStr)] ref string Content);

	[DllImport("tsclib.dll", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	private static extern void clearbuffer();

	[DllImport("tsclib.dll", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	private static extern void printlabel([MarshalAs(UnmanagedType.VBByRefStr)] ref string NumberOfSet, [MarshalAs(UnmanagedType.VBByRefStr)] ref string NumberOfCopy);

	[DllImport("tsclib.dll", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	private static extern void formfeed();

	[DllImport("tsclib.dll", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	private static extern void nobackfeed();

	[DllImport("tsclib.dll", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	private static extern void windowsfont(short X, short Y, short fontheight_Renamed, short rotation, short fontstyle, short fontunderline, [MarshalAs(UnmanagedType.VBByRefStr)] ref string FaceName, [MarshalAs(UnmanagedType.VBByRefStr)] ref string TextContent);

	private string CreatPrintCodeDIVTSPLDLL(string Ename1, string Ename2)
	{
		double num = Conversion.Val(txtH.Text) / 2.0;
		string PrinterName = cmbPrinter.Text.Trim();
		openport(ref PrinterName);
		clearbuffer();
		TextBox textBox = txtW;
		PrinterName = textBox.Text;
		TextBox textBox2;
		string LabelHeight = (textBox2 = txtH).Text;
		string Speed = "6.0";
		string Density = Conversion.Val(txtHn.Text).ToString();
		string Sensor = "0";
		string Vertical = "3";
		string Offset = "0";
		setup(ref PrinterName, ref LabelHeight, ref Speed, ref Density, ref Sensor, ref Vertical, ref Offset);
		textBox2.Text = LabelHeight;
		textBox.Text = PrinterName;
		Offset = "DIRECTION 1";
		sendcommand(ref Offset);
		checked
		{
			short num2 = (short)Math.Round(Conversion.Val(txtInfoX.Text) * 8.0);
			short num3 = (short)Math.Round(Conversion.Val(txtInfoY.Text) * 8.0);
			short fontheight_Renamed = (short)Math.Round(Conversion.Val(txtInfoSize.Text));
			Offset = "ARIAL";
			Vertical = txtInfoT.Text.ToString();
			windowsfont(num2, num3, fontheight_Renamed, 0, 0, 0, ref Offset, ref Vertical);
			short num4 = (short)Math.Round(Conversion.Val(txtBar_x.Text) * 8.0);
			short num5 = (short)Math.Round(Conversion.Val(txtBar_y.Text) * 8.0);
			short fontheight_Renamed2 = (short)Math.Round(Conversion.Val(txtInfoSizeH.Text));
			Vertical = "ARIAL";
			Offset = Ename1.ToString();
			windowsfont(num4, num5, fontheight_Renamed2, 0, 0, 0, ref Vertical, ref Offset);
			Offset = Strings.Format(Conversion.Val(txtBar_x.Text) * 8.0, "####");
			Vertical = Strings.Format((Conversion.Val(txtBar_y.Text) + Conversion.Val(txtBar_H.Text) + 2.0) * 8.0, "####");
			Sensor = "128";
			Density = Strings.Format(Conversion.Val(txtBar_H.Text) * 8.0, "####");
			Speed = "0";
			LabelHeight = "0";
			PrinterName = Strings.Format(Conversion.Val(txtBar_tk.Text), "0");
			string Wide = Strings.Format(Conversion.Val(txtBar_tn.Text), "0");
			string Code = Ename1.Trim();
			barcode(ref Offset, ref Vertical, ref Sensor, ref Density, ref Speed, ref LabelHeight, ref PrinterName, ref Wide, ref Code);
			short num6 = (short)Math.Round(Conversion.Val(txtInfoX.Text) * 8.0);
			short num7 = (short)Math.Round((num + Conversion.Val(txtInfoY.Text)) * 8.0);
			short fontheight_Renamed3 = (short)Math.Round(Conversion.Val(txtInfoSize.Text));
			Code = "ARIAL";
			Wide = txtInfoT.Text.ToString();
			windowsfont(num6, num7, fontheight_Renamed3, 0, 0, 0, ref Code, ref Wide);
			short num8 = (short)Math.Round(Conversion.Val(txtBar_x.Text) * 8.0);
			short num9 = (short)Math.Round((num + Conversion.Val(txtBar_y.Text)) * 8.0);
			short fontheight_Renamed4 = (short)Math.Round(Conversion.Val(txtInfoSizeH.Text));
			Wide = "ARIAL";
			Code = Ename2.ToString();
			windowsfont(num8, num9, fontheight_Renamed4, 0, 0, 0, ref Wide, ref Code);
			Code = Strings.Format(Conversion.Val(txtBar_x.Text) * 8.0, "####");
			Wide = Strings.Format((num + 2.0 + Conversion.Val(txtBar_y.Text) + Conversion.Val(txtBar_H.Text)) * 8.0, "####");
			PrinterName = "128";
			LabelHeight = Strings.Format(Conversion.Val(txtBar_H.Text) * 8.0, "####");
			Speed = "0";
			Density = "0";
			Sensor = Strings.Format(Conversion.Val(txtBar_tk.Text), "0");
			Vertical = Strings.Format(Conversion.Val(txtBar_tn.Text), "0");
			Offset = Ename2.Trim();
			barcode(ref Code, ref Wide, ref PrinterName, ref LabelHeight, ref Speed, ref Density, ref Sensor, ref Vertical, ref Offset);
			Offset = "1";
			Vertical = "1";
			printlabel(ref Offset, ref Vertical);
			closeport();
			return "0";
		}
	}

	private string CreatPrintCodeDIVTSPLDLL_2in1(string Ename1)
	{
		double num = Conversion.Val(txtH.Text) / 2.0;
		string PrinterName = cmbPrinter.Text.Trim();
		openport(ref PrinterName);
		clearbuffer();
		TextBox textBox = txtW;
		PrinterName = textBox.Text;
		TextBox textBox2;
		string LabelHeight = (textBox2 = txtH).Text;
		string Speed = "6.0";
		string Density = Conversion.Val(txtHn.Text).ToString();
		string Sensor = "0";
		string Vertical = "3";
		string Offset = "0";
		setup(ref PrinterName, ref LabelHeight, ref Speed, ref Density, ref Sensor, ref Vertical, ref Offset);
		textBox2.Text = LabelHeight;
		textBox.Text = PrinterName;
		Offset = "DIRECTION 1";
		sendcommand(ref Offset);
		checked
		{
			short num2 = (short)Math.Round(Conversion.Val(txtInfoX.Text) * 8.0);
			short num3 = (short)Math.Round(Conversion.Val(txtInfoY.Text) * 8.0);
			short fontheight_Renamed = (short)Math.Round(Conversion.Val(txtInfoSize.Text));
			Offset = "ARIAL";
			Vertical = txtInfoT.Text.ToString();
			windowsfont(num2, num3, fontheight_Renamed, 0, 0, 0, ref Offset, ref Vertical);
			short num4 = (short)Math.Round(Conversion.Val(txtBar_x.Text) * 8.0);
			short num5 = (short)Math.Round(Conversion.Val(txtBar_y.Text) * 8.0);
			short fontheight_Renamed2 = (short)Math.Round(Conversion.Val(txtInfoSizeH.Text));
			Vertical = "ARIAL";
			Offset = Ename1.ToString();
			windowsfont(num4, num5, fontheight_Renamed2, 0, 0, 0, ref Vertical, ref Offset);
			Offset = Strings.Format(Conversion.Val(txtBar_x.Text) * 8.0, "####");
			Vertical = Strings.Format((Conversion.Val(txtBar_y.Text) + Conversion.Val(txtBar_H.Text) + 2.0) * 8.0, "####");
			Sensor = "128";
			Density = Strings.Format(Conversion.Val(txtBar_H.Text) * 8.0, "####");
			Speed = "0";
			LabelHeight = "0";
			PrinterName = Strings.Format(Conversion.Val(txtBar_tk.Text), "0");
			string Wide = Strings.Format(Conversion.Val(txtBar_tn.Text), "0");
			string Code = Ename1.Trim();
			barcode(ref Offset, ref Vertical, ref Sensor, ref Density, ref Speed, ref LabelHeight, ref PrinterName, ref Wide, ref Code);
			Code = "1";
			Wide = "1";
			printlabel(ref Code, ref Wide);
			closeport();
			return "0";
		}
	}

	private void ClearStoredSa3ed()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		int num6 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 111:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_000f;
						case 4:
							goto IL_0014;
						case 5:
							goto IL_0029;
						case 6:
							goto IL_0037;
						default:
							goto end_IL_0001;
						case 7:
							goto end_IL_0001_2;
						}
						goto default;
					}
					IL_0014:
					num2 = 4;
					StoredSa3ed_Nums[num5, num6] = "";
					goto IL_0029;
					IL_0029:
					num2 = 5;
					num6 = checked(num6 + 1);
					if (num6 <= 49)
					{
						goto IL_0014;
					}
					goto IL_0037;
					IL_000f:
					num2 = 3;
					num6 = 0;
					goto IL_0014;
					IL_0037:
					num2 = 6;
					num5 = checked(num5 + 1);
					if (num5 > 6)
					{
						goto end_IL_0001_2;
					}
					goto IL_000f;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_000f;
					end_IL_0001:
					break;
				}
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 111;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_2:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void CkStoredSa3ed()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		bool flag = default(bool);
		int num5 = default(int);
		int num6 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
						ProjectData.ClearProjectError();
						num3 = -2;
						goto IL_000b;
					case 427:
						{
							num = num2;
							switch ((num3 <= -2) ? 1 : num3)
							{
							case 1:
								break;
							default:
								goto end_IL_0001;
							}
							int num4 = unchecked(num + 1);
							num = 0;
							switch (num4)
							{
							case 1:
								break;
							case 2:
								goto IL_000b;
							case 3:
								goto IL_0010;
							case 4:
								goto IL_0015;
							case 5:
								goto IL_0019;
							case 6:
								goto IL_0052;
							case 7:
								goto IL_0081;
							case 8:
							case 9:
							case 10:
								goto IL_008a;
							case 11:
								goto IL_0095;
							case 12:
								goto IL_00a7;
							case 13:
								goto IL_00b5;
							case 15:
								goto IL_00dd;
							case 16:
								goto IL_0101;
							case 17:
								goto end_IL_0001_2;
							default:
								goto end_IL_0001;
							case 14:
							case 18:
							case 19:
								goto end_IL_0001_3;
							}
							goto default;
						}
						IL_00b5:
						num2 = 13;
						txtInfo.Text = "جميع ارقام القوائم متطابقة\r\n" + txtInfo.Text;
						goto end_IL_0001_3;
						IL_00dd:
						num2 = 15;
						txtInfo.Text = "%%%%%  تحذير  %%%%%\r\n" + txtInfo.Text;
						goto IL_0101;
						IL_00a7:
						num2 = 12;
						if (!flag)
						{
							goto IL_00b5;
						}
						goto IL_00dd;
						IL_0101:
						num2 = 16;
						txtInfo.Text = "ارقام غير متطابقة بالقوائم \r\n" + txtInfo.Text;
						break;
						IL_000b:
						num2 = 2;
						flag = false;
						goto IL_0010;
						IL_0010:
						num2 = 3;
						num5 = 1;
						goto IL_0015;
						IL_0015:
						num2 = 4;
						num6 = 1;
						goto IL_0019;
						IL_0019:
						num2 = 5;
						if ((StoredSa3ed_Nums[num6, num5].Length == 11) & (StoredSa3ed_Nums[num6 + 1, num5].Length == 11))
						{
							goto IL_0052;
						}
						goto IL_008a;
						IL_0052:
						num2 = 6;
						if (Operators.CompareString(StoredSa3ed_Nums[num6, num5], StoredSa3ed_Nums[num6 + 1, num5], TextCompare: false) != 0)
						{
							goto IL_0081;
						}
						goto IL_008a;
						IL_0081:
						num2 = 7;
						flag = true;
						goto IL_008a;
						IL_008a:
						num2 = 10;
						num6++;
						if (num6 <= 5)
						{
							goto IL_0019;
						}
						goto IL_0095;
						IL_0095:
						num2 = 11;
						num5++;
						if (num5 <= 40)
						{
							goto IL_0015;
						}
						goto IL_00a7;
						end_IL_0001_2:
						break;
					}
					num2 = 17;
					txtInfo.Text = "%%%%%  تحذير  %%%%%\r\n" + txtInfo.Text;
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 427;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void AddToStoredSa3ed(Label eIndex, string retstr)
	{
		int num = default(int);
		if (Operators.CompareString(eIndex.Text, lblPort1.Text, TextCompare: false) == 0)
		{
			num = 1;
		}
		if (Operators.CompareString(eIndex.Text, lblPort2.Text, TextCompare: false) == 0)
		{
			num = 2;
		}
		if (Operators.CompareString(eIndex.Text, lblPort3.Text, TextCompare: false) == 0)
		{
			num = 3;
		}
		if (Operators.CompareString(eIndex.Text, lblPort4.Text, TextCompare: false) == 0)
		{
			num = 4;
		}
		if (Operators.CompareString(eIndex.Text, lblPort5.Text, TextCompare: false) == 0)
		{
			num = 5;
		}
		if (Operators.CompareString(eIndex.Text, lblPort6.Text, TextCompare: false) == 0)
		{
			num = 6;
		}
		string text = "";
		int num2 = 1;
		checked
		{
			do
			{
				string value = num2 + ":";
				if (retstr.Contains(value))
				{
					int num3 = retstr.IndexOf(value);
					string text2 = retstr.Substring(num3 + 3, 11).Trim();
					StoredSa3ed_Nums[num, num2] = text2;
					text = text + "\r\n" + num2 + " - " + text2 + "\r\n";
					Application.DoEvents();
				}
				num2++;
			}
			while (num2 <= 40);
			text = "--------------------------\r\n" + text + "\r\n--------------------------";
			if (Operators.CompareString(eIndex.Text, lblPort1.Text, TextCompare: false) == 0)
			{
				txtRet01.Text = text + "\r\n" + txtRet01.Text;
			}
			if (Operators.CompareString(eIndex.Text, lblPort2.Text, TextCompare: false) == 0)
			{
				txtRet02.Text = text + "\r\n" + txtRet02.Text;
			}
			if (Operators.CompareString(eIndex.Text, lblPort3.Text, TextCompare: false) == 0)
			{
				txtRet03.Text = text + "\r\n" + txtRet03.Text;
			}
			if (Operators.CompareString(eIndex.Text, lblPort4.Text, TextCompare: false) == 0)
			{
				txtRet04.Text = text + "\r\n" + txtRet04.Text;
			}
			if (Operators.CompareString(eIndex.Text, lblPort5.Text, TextCompare: false) == 0)
			{
				txtRet05.Text = text + "\r\n" + txtRet05.Text;
			}
			if (Operators.CompareString(eIndex.Text, lblPort6.Text, TextCompare: false) == 0)
			{
				txtRet06.Text = text + "\r\n" + txtRet06.Text;
			}
		}
	}

	private void Reset()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 101:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					objData = new CData(Application.StartupPath + "\\maindb.ngm");
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 3;
				objDataChg = new CData(Application.StartupPath + "\\Data\\mainvalue.ngm");
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 101;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void AddSmsTofawry(string eeTel, string EEcode, int EEmony)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 335:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0049;
						case 5:
						case 6:
							goto IL_006b;
						case 7:
							goto IL_0073;
						case 8:
							goto IL_0081;
						case 9:
							goto IL_008f;
						case 10:
							goto IL_00a4;
						case 11:
							goto IL_00b9;
						case 12:
							goto IL_00d3;
						case 13:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 14:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_00a4:
					num2 = 10;
					text = text + " '" + EEcode + "' , ";
					goto IL_00b9;
					IL_00b9:
					num2 = 11;
					text = text + " '" + Conversions.ToString(EEmony) + "' , ";
					goto IL_00d3;
					IL_008f:
					num2 = 9;
					text = text + " '" + eeTel + "' , ";
					goto IL_00a4;
					IL_00d3:
					num2 = 12;
					text = text + "'" + txtEproc.Text + "') ";
					break;
					IL_000b:
					num2 = 2;
					objDataTabletemp = objData.QueryDatabase("SELECT enum FROM Smsfawry where enum = '" + eeTel + "' and ecode = '" + EEcode + "' ");
					goto IL_0049;
					IL_0049:
					num2 = 3;
					if (objDataTabletemp.Rows.Count > 0)
					{
						goto end_IL_0001_3;
					}
					goto IL_006b;
					IL_006b:
					num2 = 6;
					text = "Insert Into Smsfawry ";
					goto IL_0073;
					IL_0073:
					num2 = 7;
					text += "(enum,ecode,f1,eproc)";
					goto IL_0081;
					IL_0081:
					num2 = 8;
					text += "Values (";
					goto IL_008f;
					end_IL_0001_2:
					break;
				}
				num2 = 13;
				objData.DatabaseCommand(text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 335;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void GetCardData(string EEOrder)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1255:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0015;
						case 4:
							goto IL_0036;
						case 5:
							goto IL_0059;
						case 6:
							goto IL_0077;
						case 7:
							goto IL_00a5;
						case 8:
							goto IL_00d3;
						case 9:
							goto IL_0101;
						case 11:
							goto IL_0134;
						case 12:
							goto IL_0148;
						case 13:
							goto IL_015c;
						case 16:
							goto IL_0177;
						case 17:
							goto IL_018d;
						case 18:
							goto IL_01b1;
						case 19:
							goto IL_01d0;
						case 20:
							goto IL_01ff;
						case 21:
							goto IL_022e;
						case 22:
							goto IL_025d;
						case 24:
							goto IL_0290;
						case 25:
							goto IL_02a4;
						case 26:
							goto IL_02b8;
						case 29:
							goto IL_02d3;
						case 30:
							goto IL_02e9;
						case 31:
							goto IL_030d;
						case 32:
							goto IL_032c;
						case 33:
							goto IL_035b;
						case 34:
							goto IL_038a;
						case 35:
							goto IL_03b9;
						case 37:
							goto IL_03ec;
						case 38:
							goto IL_0400;
						case 39:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 10:
						case 14:
						case 15:
						case 23:
						case 27:
						case 28:
						case 36:
						case 40:
						case 41:
						case 42:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_03b9:
					num2 = 35;
					txtQryOrder.Text = Conversions.ToString(objDataTabletemp.Rows[0]["eproc"]);
					goto end_IL_0001_3;
					IL_03ec:
					num2 = 37;
					lblONnumQ.Text = "";
					goto IL_0400;
					IL_038a:
					num2 = 34;
					lblONvQ.Text = Conversions.ToString(objDataTabletemp.Rows[0]["f1"]);
					goto IL_03b9;
					IL_0400:
					num2 = 38;
					lblONmcQ.Text = "Not Found";
					break;
					IL_000b:
					num2 = 2;
					EEOrder = EEOrder.Trim();
					goto IL_0015;
					IL_0015:
					num2 = 3;
					if ((EEOrder.Length >= 5) & (EEOrder.Length < 8))
					{
						goto IL_0036;
					}
					goto IL_0177;
					IL_0036:
					num2 = 4;
					objDataTabletemp = objData.QueryDatabase("SELECT * FROM cashyou where eproc = '" + EEOrder + "' ");
					goto IL_0059;
					IL_0059:
					num2 = 5;
					if (objDataTabletemp.Rows.Count > 0)
					{
						goto IL_0077;
					}
					goto IL_0134;
					IL_0077:
					num2 = 6;
					lblONnumQ.Text = Conversions.ToString(objDataTabletemp.Rows[0]["ecode"]);
					goto IL_00a5;
					IL_00a5:
					num2 = 7;
					lblONmcQ.Text = Conversions.ToString(objDataTabletemp.Rows[0]["enum"]);
					goto IL_00d3;
					IL_00d3:
					num2 = 8;
					lblONvQ.Text = Conversions.ToString(objDataTabletemp.Rows[0]["f1"]);
					goto IL_0101;
					IL_0101:
					num2 = 9;
					txtQryOrder.Text = Conversions.ToString(objDataTabletemp.Rows[0]["eproc"]);
					goto end_IL_0001_3;
					IL_0134:
					num2 = 11;
					lblONnumQ.Text = "";
					goto IL_0148;
					IL_0148:
					num2 = 12;
					lblONmcQ.Text = "Not Found";
					goto IL_015c;
					IL_015c:
					num2 = 13;
					lblONvQ.Text = "";
					goto end_IL_0001_3;
					IL_0177:
					num2 = 16;
					if (EEOrder.Length == 16)
					{
						goto IL_018d;
					}
					goto IL_02d3;
					IL_018d:
					num2 = 17;
					objDataTabletemp = objData.QueryDatabase("SELECT * FROM cashyou where enum = '" + EEOrder + "' ");
					goto IL_01b1;
					IL_01b1:
					num2 = 18;
					if (objDataTabletemp.Rows.Count > 0)
					{
						goto IL_01d0;
					}
					goto IL_0290;
					IL_01d0:
					num2 = 19;
					lblONnumQ.Text = Conversions.ToString(objDataTabletemp.Rows[0]["ecode"]);
					goto IL_01ff;
					IL_01ff:
					num2 = 20;
					lblONmcQ.Text = Conversions.ToString(objDataTabletemp.Rows[0]["enum"]);
					goto IL_022e;
					IL_022e:
					num2 = 21;
					lblONvQ.Text = Conversions.ToString(objDataTabletemp.Rows[0]["f1"]);
					goto IL_025d;
					IL_025d:
					num2 = 22;
					txtQryOrder.Text = Conversions.ToString(objDataTabletemp.Rows[0]["eproc"]);
					goto end_IL_0001_3;
					IL_0290:
					num2 = 24;
					lblONnumQ.Text = "";
					goto IL_02a4;
					IL_02a4:
					num2 = 25;
					lblONmcQ.Text = "Not Found";
					goto IL_02b8;
					IL_02b8:
					num2 = 26;
					lblONvQ.Text = "";
					goto end_IL_0001_3;
					IL_02d3:
					num2 = 29;
					if (EEOrder.Length != 11)
					{
						goto end_IL_0001_3;
					}
					goto IL_02e9;
					IL_02e9:
					num2 = 30;
					objDataTabletemp = objData.QueryDatabase("SELECT * FROM cashyou where ecode = '" + EEOrder + "' ");
					goto IL_030d;
					IL_030d:
					num2 = 31;
					if (objDataTabletemp.Rows.Count > 0)
					{
						goto IL_032c;
					}
					goto IL_03ec;
					IL_032c:
					num2 = 32;
					lblONnumQ.Text = Conversions.ToString(objDataTabletemp.Rows[0]["ecode"]);
					goto IL_035b;
					IL_035b:
					num2 = 33;
					lblONmcQ.Text = Conversions.ToString(objDataTabletemp.Rows[0]["enum"]);
					goto IL_038a;
					end_IL_0001_2:
					break;
				}
				num2 = 39;
				lblONvQ.Text = "";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1255;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void AddCardDataToDB(string eeTel, string EEmc, string EEvcc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					string text = "Insert Into cashyou ";
					text += "(enum,ecode,f1,eproc)";
					text += "Values (";
					text = text + " '" + EEmc + "' , ";
					text = text + " '" + eeTel + "' , ";
					text = text + " '" + EEvcc + "' , ";
					text += "'0') ";
					objData.DatabaseCommand(text);
					txtInfo.Text = "Saved " + eeTel + "\r\n" + txtInfo.Text;
					goto end_IL_0001;
				}
				case 202:
					num = -1;
					switch (num2)
					{
					case 2:
						txtInfo.Text = "Error " + eeTel + "\r\n" + txtInfo.Text;
						goto end_IL_0001;
					}
					break;
				}
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 202;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void UpdateCardData(string EEmc, string EEOrder)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					string text = "update cashyou set eproc =";
					text = text + " '" + EEOrder + "' where enum =";
					text = text + " '" + EEmc + "'";
					objData.DatabaseCommand(text);
					txtInfo.Text = "Saved " + EEOrder + "\r\n" + txtInfo.Text;
					goto end_IL_0001;
				}
				case 148:
					num = -1;
					switch (num2)
					{
					case 2:
						txtInfo.Text = "Error " + EEOrder + "\r\n" + txtInfo.Text;
						goto end_IL_0001;
					}
					break;
				}
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 148;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void AddSmsToAman(string eeTel, string EEcode)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 324:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0049;
						case 5:
						case 6:
							goto IL_006b;
						case 7:
							goto IL_0073;
						case 8:
							goto IL_0081;
						case 9:
							goto IL_008f;
						case 10:
							goto IL_00a4;
						case 11:
							goto IL_00b9;
						case 12:
							goto IL_00c8;
						case 13:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 14:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_00a4:
					num2 = 10;
					text = text + " '" + EEcode + "' , ";
					goto IL_00b9;
					IL_00b9:
					num2 = 11;
					text += " '0' , ";
					goto IL_00c8;
					IL_008f:
					num2 = 9;
					text = text + " '" + eeTel + "' , ";
					goto IL_00a4;
					IL_00c8:
					num2 = 12;
					text = text + "'" + txtEproc.Text + "') ";
					break;
					IL_000b:
					num2 = 2;
					objDataTabletemp = objData.QueryDatabase("SELECT enum FROM smssave05 where enum = '" + eeTel + "' and ecode = '" + EEcode + "' ");
					goto IL_0049;
					IL_0049:
					num2 = 3;
					if (objDataTabletemp.Rows.Count > 0)
					{
						goto end_IL_0001_3;
					}
					goto IL_006b;
					IL_006b:
					num2 = 6;
					text = "Insert Into smssave05 ";
					goto IL_0073;
					IL_0073:
					num2 = 7;
					text += "(enum,ecode,f1,eproc)";
					goto IL_0081;
					IL_0081:
					num2 = 8;
					text += "Values (";
					goto IL_008f;
					end_IL_0001_2:
					break;
				}
				num2 = 13;
				objData.DatabaseCommand(text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 324;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void AddSmsToVoda(string eeTel, string EEcode, int EEmony)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 335:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0049;
						case 5:
						case 6:
							goto IL_006b;
						case 7:
							goto IL_0073;
						case 8:
							goto IL_0081;
						case 9:
							goto IL_008f;
						case 10:
							goto IL_00a4;
						case 11:
							goto IL_00b9;
						case 12:
							goto IL_00d3;
						case 13:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 14:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_00a4:
					num2 = 10;
					text = text + " '" + EEcode + "' , ";
					goto IL_00b9;
					IL_00b9:
					num2 = 11;
					text = text + " '" + Conversions.ToString(EEmony) + "' , ";
					goto IL_00d3;
					IL_008f:
					num2 = 9;
					text = text + " '" + eeTel + "' , ";
					goto IL_00a4;
					IL_00d3:
					num2 = 12;
					text = text + "'" + txtEproc.Text + "') ";
					break;
					IL_000b:
					num2 = 2;
					objDataTabletemp = objData.QueryDatabase("SELECT enum FROM smsvoda where enum = '" + eeTel + "' and ecode = '" + EEcode + "' ");
					goto IL_0049;
					IL_0049:
					num2 = 3;
					if (objDataTabletemp.Rows.Count > 0)
					{
						goto end_IL_0001_3;
					}
					goto IL_006b;
					IL_006b:
					num2 = 6;
					text = "Insert Into smsvoda ";
					goto IL_0073;
					IL_0073:
					num2 = 7;
					text += "(enum,ecode,f1,eproc)";
					goto IL_0081;
					IL_0081:
					num2 = 8;
					text += "Values (";
					goto IL_008f;
					end_IL_0001_2:
					break;
				}
				num2 = 13;
				objData.DatabaseCommand(text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 335;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void AddSmsToVodaShebs(string eeTel, string EEcode, int EEmony)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 308:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_002e;
						case 5:
						case 6:
							goto IL_0050;
						case 7:
							goto IL_0058;
						case 8:
							goto IL_0066;
						case 9:
							goto IL_0074;
						case 10:
							goto IL_0089;
						case 11:
							goto IL_009e;
						case 12:
							goto IL_00b8;
						case 13:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 14:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0089:
					num2 = 10;
					text = text + " '" + EEcode + "' , ";
					goto IL_009e;
					IL_009e:
					num2 = 11;
					text = text + " '" + Conversions.ToString(EEmony) + "' , ";
					goto IL_00b8;
					IL_0074:
					num2 = 9;
					text = text + " '" + eeTel + "' , ";
					goto IL_0089;
					IL_00b8:
					num2 = 12;
					text = text + "'" + txtEproc.Text + "') ";
					break;
					IL_000b:
					num2 = 2;
					objDataTabletemp = objData.QueryDatabase("SELECT enum FROM smsvoda where ecode = '" + EEcode + "' ");
					goto IL_002e;
					IL_002e:
					num2 = 3;
					if (objDataTabletemp.Rows.Count > 0)
					{
						goto end_IL_0001_3;
					}
					goto IL_0050;
					IL_0050:
					num2 = 6;
					text = "Insert Into smsvoda ";
					goto IL_0058;
					IL_0058:
					num2 = 7;
					text += "(enum,ecode,f1,eproc)";
					goto IL_0066;
					IL_0066:
					num2 = 8;
					text += "Values (";
					goto IL_0074;
					end_IL_0001_2:
					break;
				}
				num2 = 13;
				objData.DatabaseCommand(text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 308;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void GetEvalues()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		int num6 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 235:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0036;
						case 6:
						case 7:
							goto IL_0058;
						case 8:
							goto IL_0072;
						case 9:
							goto IL_00a5;
						default:
							goto end_IL_0001;
						case 5:
						case 10:
							goto end_IL_0001_2;
						}
						goto default;
					}
					IL_00ac:
					if (num5 > num6)
					{
						goto end_IL_0001_2;
					}
					goto IL_0072;
					IL_0072:
					num2 = 8;
					cmbEvalue.Items.Add(RuntimeHelpers.GetObjectValue(objDataTabletemp.Rows[num5]["evalue"]));
					goto IL_00a5;
					IL_0058:
					num2 = 7;
					num6 = checked(objDataTabletemp.Rows.Count - 1);
					num5 = 0;
					goto IL_00ac;
					IL_00a5:
					num2 = 9;
					num5 = checked(num5 + 1);
					goto IL_00ac;
					IL_000b:
					num2 = 2;
					cmbEvalue.Items.Clear();
					goto IL_001e;
					IL_001e:
					num2 = 3;
					objDataTabletemp = objData.QueryDatabase("SELECT distinct evalue FROM cardscharge where estatus = 0 ");
					goto IL_0036;
					IL_0036:
					num2 = 4;
					if (objDataTabletemp.Rows.Count <= 0)
					{
						goto end_IL_0001_2;
					}
					goto IL_0058;
					end_IL_0001:
					break;
				}
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 235;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_2:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void GetEvaluesForVal(int EEval)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 188:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001c;
						case 5:
							goto IL_0043;
						case 4:
						case 6:
						case 7:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 8:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					if (RBEts.Checked)
					{
						goto IL_001c;
					}
					goto IL_0043;
					IL_001c:
					num2 = 3;
					objDataTabletemp = objData.QueryDatabase("SELECT evalue FROM cardscharge where eets = 0 and estatus = 0 and evalue = " + Conversions.ToString(EEval));
					break;
					IL_0043:
					num2 = 5;
					objDataTabletemp = objData.QueryDatabase("SELECT evalue FROM cardscharge where eets = 1 and  estatus = 0 and evalue = " + Conversions.ToString(EEval));
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 7;
				lblCardsQty.Text = Conversions.ToString(objDataTabletemp.Rows.Count);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 188;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void fillBoxsWithCardsVCP1()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		int num6 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 260:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_000f;
						case 4:
							goto IL_0022;
						case 5:
							goto IL_0054;
						case 7:
							goto IL_0071;
						case 8:
							goto IL_008b;
						case 9:
							goto IL_00be;
						default:
							goto end_IL_0001;
						case 6:
						case 10:
							goto end_IL_0001_2;
						}
						goto default;
					}
					IL_00c5:
					if (num5 > num6)
					{
						goto end_IL_0001_2;
					}
					goto IL_008b;
					IL_008b:
					num2 = 8;
					lstNumbersP.Items.Add(RuntimeHelpers.GetObjectValue(objDataTabletemp.Rows[num5]["mobnum"]));
					goto IL_00be;
					IL_0071:
					num2 = 7;
					num6 = checked(objDataTabletemp.Rows.Count - 1);
					num5 = 0;
					goto IL_00c5;
					IL_00be:
					num2 = 9;
					num5 = checked(num5 + 1);
					goto IL_00c5;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_000f;
					IL_000f:
					num2 = 3;
					lstNumbersP.Items.Clear();
					goto IL_0022;
					IL_0022:
					num2 = 4;
					objDataTabletemp = objData.QueryDatabase("SELECT mobnum FROM vcnums where enums = " + Conversions.ToString(Conversion.Val(txtEnumsVCP.Text)));
					goto IL_0054;
					IL_0054:
					num2 = 5;
					if (objDataTabletemp.Rows.Count < 1)
					{
						goto end_IL_0001_2;
					}
					goto IL_0071;
					end_IL_0001:
					break;
				}
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 260;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_2:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void fillBoxsWithCardsVC()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		int num6 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 270:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_000f;
						case 4:
							goto IL_0022;
						case 5:
							goto IL_0054;
						case 7:
						case 8:
							goto IL_0073;
						case 9:
							goto IL_008d;
						case 10:
							goto IL_00c1;
						default:
							goto end_IL_0001;
						case 6:
						case 11:
							goto end_IL_0001_2;
						}
						goto default;
					}
					IL_00c8:
					if (num5 > num6)
					{
						goto end_IL_0001_2;
					}
					goto IL_008d;
					IL_008d:
					num2 = 9;
					lstNumbers.Items.Add(RuntimeHelpers.GetObjectValue(objDataTabletemp.Rows[num5]["mobnum"]));
					goto IL_00c1;
					IL_0073:
					num2 = 8;
					num6 = checked(objDataTabletemp.Rows.Count - 1);
					num5 = 0;
					goto IL_00c8;
					IL_00c1:
					num2 = 10;
					num5 = checked(num5 + 1);
					goto IL_00c8;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_000f;
					IL_000f:
					num2 = 3;
					lstNumbers.Items.Clear();
					goto IL_0022;
					IL_0022:
					num2 = 4;
					objDataTabletemp = objData.QueryDatabase("SELECT mobnum FROM vcnums where   enums = " + Conversions.ToString(Conversion.Val(txtEnumsVC.Text)));
					goto IL_0054;
					IL_0054:
					num2 = 5;
					if (objDataTabletemp.Rows.Count < 1)
					{
						goto end_IL_0001_2;
					}
					goto IL_0073;
					end_IL_0001:
					break;
				}
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 270;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_2:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void fillBoxsWithCards()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
						ProjectData.ClearProjectError();
						num3 = -2;
						goto IL_000b;
					case 1111:
						{
							num = num2;
							switch ((num3 <= -2) ? 1 : num3)
							{
							case 1:
								break;
							default:
								goto end_IL_0001;
							}
							int num4 = unchecked(num + 1);
							num = 0;
							switch (num4)
							{
							case 1:
								break;
							case 2:
								goto IL_000b;
							case 3:
								goto IL_000f;
							case 4:
								goto IL_0022;
							case 6:
								goto IL_0072;
							case 5:
							case 7:
							case 8:
								goto IL_00bf;
							case 10:
							case 11:
								goto IL_00e1;
							case 12:
								goto IL_0102;
							case 13:
								goto IL_0131;
							case 14:
							case 15:
								goto IL_013a;
							case 17:
								goto IL_015b;
							case 18:
								goto IL_017c;
							case 19:
								goto IL_01ab;
							case 20:
							case 21:
								goto IL_01b4;
							case 23:
								goto IL_01d5;
							case 24:
								goto IL_01f6;
							case 25:
								goto IL_0225;
							case 26:
							case 27:
								goto IL_022e;
							case 29:
								goto IL_024f;
							case 30:
								goto IL_0270;
							case 31:
								goto IL_029f;
							case 32:
							case 33:
								goto IL_02a8;
							case 35:
								goto IL_02c9;
							case 36:
								goto IL_02ea;
							case 37:
								goto IL_0319;
							case 38:
							case 39:
								goto IL_0322;
							case 41:
								goto IL_0340;
							case 42:
								goto end_IL_0001_2;
							default:
								goto end_IL_0001;
							case 9:
							case 16:
							case 22:
							case 28:
							case 34:
							case 40:
							case 43:
							case 44:
								goto end_IL_0001_3;
							}
							goto default;
						}
						IL_0319:
						num2 = 37;
						num5++;
						goto IL_0322;
						IL_0322:
						num2 = 39;
						if (num5 == objDataTabletemp.Rows.Count)
						{
							goto end_IL_0001_3;
						}
						goto IL_0340;
						IL_02ea:
						num2 = 36;
						lblCard5.Text = Conversions.ToString(objDataTabletemp.Rows[num5]["cardid"]);
						goto IL_0319;
						IL_0340:
						num2 = 41;
						if (lblNum6.Text.Trim().Length <= 0)
						{
							goto end_IL_0001_3;
						}
						break;
						IL_000b:
						num2 = 2;
						num5 = 0;
						goto IL_000f;
						IL_000f:
						num2 = 3;
						if (RBEts.Checked)
						{
							goto IL_0022;
						}
						goto IL_0072;
						IL_0022:
						num2 = 4;
						objDataTabletemp = objData.QueryDatabase("SELECT cardid FROM cardscharge where  eets = 0 and estatus = " + Conversions.ToString(Conversion.Val(txtChSS.Text)) + " and evalue = " + Conversions.ToString(Conversion.Val(cmbEvalue.Text)));
						goto IL_00bf;
						IL_0072:
						num2 = 6;
						objDataTabletemp = objData.QueryDatabase("SELECT cardid FROM cardscharge where  eets = 1 and estatus = " + Conversions.ToString(Conversion.Val(txtChSS.Text)) + " and evalue = " + Conversions.ToString(Conversion.Val(cmbEvalue.Text)));
						goto IL_00bf;
						IL_00bf:
						num2 = 8;
						if (objDataTabletemp.Rows.Count < 1)
						{
							goto end_IL_0001_3;
						}
						goto IL_00e1;
						IL_00e1:
						num2 = 11;
						if (lblNum1.Text.Trim().Length > 0)
						{
							goto IL_0102;
						}
						goto IL_013a;
						IL_0102:
						num2 = 12;
						lblCard1.Text = Conversions.ToString(objDataTabletemp.Rows[num5]["cardid"]);
						goto IL_0131;
						IL_0131:
						num2 = 13;
						num5++;
						goto IL_013a;
						IL_013a:
						num2 = 15;
						if (num5 == objDataTabletemp.Rows.Count)
						{
							goto end_IL_0001_3;
						}
						goto IL_015b;
						IL_015b:
						num2 = 17;
						if (lblNum2.Text.Trim().Length > 0)
						{
							goto IL_017c;
						}
						goto IL_01b4;
						IL_017c:
						num2 = 18;
						lblCard2.Text = Conversions.ToString(objDataTabletemp.Rows[num5]["cardid"]);
						goto IL_01ab;
						IL_01ab:
						num2 = 19;
						num5++;
						goto IL_01b4;
						IL_01b4:
						num2 = 21;
						if (num5 == objDataTabletemp.Rows.Count)
						{
							goto end_IL_0001_3;
						}
						goto IL_01d5;
						IL_01d5:
						num2 = 23;
						if (lblNum3.Text.Trim().Length > 0)
						{
							goto IL_01f6;
						}
						goto IL_022e;
						IL_01f6:
						num2 = 24;
						lblCard3.Text = Conversions.ToString(objDataTabletemp.Rows[num5]["cardid"]);
						goto IL_0225;
						IL_0225:
						num2 = 25;
						num5++;
						goto IL_022e;
						IL_022e:
						num2 = 27;
						if (num5 == objDataTabletemp.Rows.Count)
						{
							goto end_IL_0001_3;
						}
						goto IL_024f;
						IL_024f:
						num2 = 29;
						if (lblNum4.Text.Trim().Length > 0)
						{
							goto IL_0270;
						}
						goto IL_02a8;
						IL_0270:
						num2 = 30;
						lblCard4.Text = Conversions.ToString(objDataTabletemp.Rows[num5]["cardid"]);
						goto IL_029f;
						IL_029f:
						num2 = 31;
						num5++;
						goto IL_02a8;
						IL_02a8:
						num2 = 33;
						if (num5 == objDataTabletemp.Rows.Count)
						{
							goto end_IL_0001_3;
						}
						goto IL_02c9;
						IL_02c9:
						num2 = 35;
						if (lblNum5.Text.Trim().Length > 0)
						{
							goto IL_02ea;
						}
						goto IL_0322;
						end_IL_0001_2:
						break;
					}
					num2 = 42;
					lblCard6.Text = Conversions.ToString(objDataTabletemp.Rows[num5]["cardid"]);
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1111;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void AddCardTochargedarch(string cardIDx, string Telnum)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 232:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0021;
						case 5:
							goto IL_002f;
						case 6:
							goto IL_0043;
						case 7:
							goto IL_0060;
						case 8:
							goto IL_0074;
						case 9:
							goto IL_0083;
						case 10:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 11:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0060:
					num2 = 7;
					text = text + "'" + Telnum + "') ";
					goto IL_0074;
					IL_0074:
					num2 = 8;
					objData.DatabaseCommand(text);
					goto IL_0083;
					IL_0043:
					num2 = 6;
					text = text + "#" + Conversions.ToString(DateTime.Today) + "#, ";
					goto IL_0060;
					IL_0083:
					num2 = 9;
					text = "update  cardscharge set estatus = 1 where cardid = '" + cardIDx + "'";
					break;
					IL_000b:
					num2 = 2;
					text = "Insert Into cardschargearch ";
					goto IL_0013;
					IL_0013:
					num2 = 3;
					text += "(cardid,xdate,etel)";
					goto IL_0021;
					IL_0021:
					num2 = 4;
					text += "Values (";
					goto IL_002f;
					IL_002f:
					num2 = 5;
					text = text + "'" + cardIDx + "' , ";
					goto IL_0043;
					end_IL_0001_2:
					break;
				}
				num2 = 10;
				objData.DatabaseCommand(text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 232;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void AddRepTofawryReq(string eeTel, string EEcode)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 302:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0049;
						case 5:
						case 6:
							goto IL_0068;
						case 7:
							goto IL_0070;
						case 8:
							goto IL_007e;
						case 9:
							goto IL_008c;
						case 10:
							goto IL_00a1;
						case 11:
							goto IL_00b6;
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_008c:
					num2 = 9;
					text = text + " '" + eeTel + "' , ";
					goto IL_00a1;
					IL_00a1:
					num2 = 10;
					text = text + " '" + EEcode + "' , ";
					goto IL_00b6;
					IL_007e:
					num2 = 8;
					text += "Values (";
					goto IL_008c;
					IL_00b6:
					num2 = 11;
					text = text + "'" + txtEproc.Text + "') ";
					break;
					IL_000b:
					num2 = 2;
					objDataTabletemp = objData.QueryDatabase("SELECT enum FROM smssave01 where enum = '" + eeTel + "' and ecode = '" + EEcode + "'");
					goto IL_0049;
					IL_0049:
					num2 = 3;
					if (objDataTabletemp.Rows.Count > 0)
					{
						goto end_IL_0001_3;
					}
					goto IL_0068;
					IL_0068:
					num2 = 6;
					text = "Insert Into smssave01 ";
					goto IL_0070;
					IL_0070:
					num2 = 7;
					text += "(enum,ecode,eproc)";
					goto IL_007e;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				objData.DatabaseCommand(text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 302;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void AddRepToWechatReq(string eeTel, string EEcode)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 324:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_005f;
						case 5:
						case 6:
							goto IL_007e;
						case 7:
							goto IL_0086;
						case 8:
							goto IL_0094;
						case 9:
							goto IL_00a2;
						case 10:
							goto IL_00b7;
						case 11:
							goto IL_00cc;
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_00a2:
					num2 = 9;
					text = text + " '" + eeTel + "' , ";
					goto IL_00b7;
					IL_00b7:
					num2 = 10;
					text = text + " '" + EEcode + "' , ";
					goto IL_00cc;
					IL_0094:
					num2 = 8;
					text += "Values (";
					goto IL_00a2;
					IL_00cc:
					num2 = 11;
					text = text + "'" + txtEproc.Text + "') ";
					break;
					IL_000b:
					num2 = 2;
					objDataTabletemp = objData.QueryDatabase("SELECT enum FROM smssave03 where enum = '" + eeTel + "' and ecode = '" + EEcode + "' and eproc = '" + txtEproc.Text + "'");
					goto IL_005f;
					IL_005f:
					num2 = 3;
					if (objDataTabletemp.Rows.Count > 0)
					{
						goto end_IL_0001_3;
					}
					goto IL_007e;
					IL_007e:
					num2 = 6;
					text = "Insert Into smssave03 ";
					goto IL_0086;
					IL_0086:
					num2 = 7;
					text += "(enum,ecode,eproc)";
					goto IL_0094;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				objData.DatabaseCommand(text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 324;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void AddRepToCaremReq(string eeTel, string EEcode)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 324:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_005f;
						case 5:
						case 6:
							goto IL_007e;
						case 7:
							goto IL_0086;
						case 8:
							goto IL_0094;
						case 9:
							goto IL_00a2;
						case 10:
							goto IL_00b7;
						case 11:
							goto IL_00cc;
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_00a2:
					num2 = 9;
					text = text + " '" + eeTel + "' , ";
					goto IL_00b7;
					IL_00b7:
					num2 = 10;
					text = text + " '" + EEcode + "' , ";
					goto IL_00cc;
					IL_0094:
					num2 = 8;
					text += "Values (";
					goto IL_00a2;
					IL_00cc:
					num2 = 11;
					text = text + "'" + txtEproc.Text + "') ";
					break;
					IL_000b:
					num2 = 2;
					objDataTabletemp = objData.QueryDatabase("SELECT enum FROM smssave02 where enum = '" + eeTel + "' and ecode = '" + EEcode + "' and eproc = '" + txtEproc.Text + "'");
					goto IL_005f;
					IL_005f:
					num2 = 3;
					if (objDataTabletemp.Rows.Count > 0)
					{
						goto end_IL_0001_3;
					}
					goto IL_007e;
					IL_007e:
					num2 = 6;
					text = "Insert Into smssave02 ";
					goto IL_0086;
					IL_0086:
					num2 = 7;
					text += "(enum,ecode,eproc)";
					goto IL_0094;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				objData.DatabaseCommand(text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 324;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void AddRepTowhatsReq(string eeTel, string EEcode)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 324:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_005f;
						case 5:
						case 6:
							goto IL_007e;
						case 7:
							goto IL_0086;
						case 8:
							goto IL_0094;
						case 9:
							goto IL_00a2;
						case 10:
							goto IL_00b7;
						case 11:
							goto IL_00cc;
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_00a2:
					num2 = 9;
					text = text + " '" + eeTel + "' , ";
					goto IL_00b7;
					IL_00b7:
					num2 = 10;
					text = text + " '" + EEcode + "' , ";
					goto IL_00cc;
					IL_0094:
					num2 = 8;
					text += "Values (";
					goto IL_00a2;
					IL_00cc:
					num2 = 11;
					text = text + "'" + txtEproc.Text + "') ";
					break;
					IL_000b:
					num2 = 2;
					objDataTabletemp = objData.QueryDatabase("SELECT enum FROM smssave04 where enum = '" + eeTel + "' and ecode = '" + EEcode + "' and eproc = '" + txtEproc.Text + "'");
					goto IL_005f;
					IL_005f:
					num2 = 3;
					if (objDataTabletemp.Rows.Count > 0)
					{
						goto end_IL_0001_3;
					}
					goto IL_007e;
					IL_007e:
					num2 = 6;
					text = "Insert Into smssave04 ";
					goto IL_0086;
					IL_0086:
					num2 = 7;
					text += "(enum,ecode,eproc)";
					goto IL_0094;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				objData.DatabaseCommand(text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 324;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ReadSMSSM30E(Label Exxc, TextBox EretScrn, Label lblEEE, Label lblEtel)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		int eEmony = default(int);
		int num5 = default(int);
		int num6 = default(int);
		int num7 = default(int);
		int[] array2 = default(int[]);
		int num11 = default(int);
		SerialPort serialPort = default(SerialPort);
		string text2 = default(string);
		int num12 = default(int);
		int num13 = default(int);
		string text3 = default(string);
		byte[] bytes = default(byte[]);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					string[] array;
					int num8;
					int num9;
					int num10;
					int num14;
					int num15;
					switch (try0001_dispatch)
					{
					default:
						ProjectData.ClearProjectError();
						num3 = -2;
						goto IL_000b;
					case 10027:
						{
							num = num2;
							switch ((num3 <= -2) ? 1 : num3)
							{
							case 1:
								break;
							default:
								goto end_IL_0001;
							}
							int num4 = unchecked(num + 1);
							num = 0;
							switch (num4)
							{
							case 1:
								break;
							case 2:
								goto IL_000b;
							case 3:
								goto IL_0015;
							case 4:
								goto IL_001a;
							case 5:
								goto IL_001f;
							case 6:
								goto IL_0024;
							case 7:
								goto IL_0029;
							case 8:
								goto IL_0034;
							case 9:
								goto IL_0039;
							case 10:
								goto IL_0043;
							case 11:
								goto IL_0054;
							case 12:
								goto IL_0067;
							case 13:
								goto IL_0072;
							case 14:
								goto IL_007b;
							case 15:
								goto IL_0085;
							case 16:
								goto IL_008e;
							case 17:
								goto IL_009e;
							case 18:
								goto IL_00a9;
							case 19:
								goto IL_00b9;
							case 20:
								goto IL_00c4;
							case 21:
								goto IL_00d8;
							case 23:
								goto IL_00ec;
							case 22:
							case 24:
							case 25:
								goto IL_00fd;
							case 26:
								goto IL_010b;
							case 27:
								goto IL_0114;
							case 28:
								goto IL_011a;
							case 29:
								goto IL_0128;
							case 30:
								goto IL_0134;
							case 31:
								goto IL_0166;
							case 32:
								goto IL_018c;
							case 33:
								goto IL_01a4;
							case 34:
								goto IL_01b6;
							case 36:
								goto IL_01c9;
							case 37:
								goto IL_020a;
							case 38:
								goto IL_0218;
							case 41:
								goto IL_0247;
							case 40:
							case 43:
							case 44:
							case 45:
								goto IL_0272;
							case 46:
								goto IL_027b;
							case 42:
							case 47:
								goto IL_028d;
							case 48:
								goto IL_029c;
							case 50:
							case 51:
								goto IL_02b7;
							case 52:
								goto IL_02cb;
							case 53:
								goto IL_02d2;
							case 54:
								goto IL_02e4;
							case 55:
								goto IL_02ee;
							case 56:
								goto IL_02fc;
							case 57:
								goto IL_030a;
							case 58:
								goto IL_0318;
							case 59:
								goto IL_0326;
							case 60:
								goto IL_0334;
							case 61:
								goto IL_0355;
							case 62:
								goto IL_035b;
							case 63:
								goto IL_0369;
							case 64:
								goto IL_0375;
							case 65:
								goto IL_03a7;
							case 66:
								goto IL_03cd;
							case 67:
								goto IL_03e2;
							case 68:
								goto IL_03ec;
							case 71:
								goto IL_03fa;
							case 70:
							case 73:
							case 74:
								goto IL_0415;
							case 75:
								goto IL_041e;
							case 76:
								goto IL_0430;
							case 69:
							case 78:
							case 79:
								goto IL_044a;
							case 80:
								goto IL_0451;
							case 81:
								goto IL_0475;
							case 82:
								goto IL_049b;
							case 83:
								goto IL_04b1;
							case 84:
								goto IL_04c2;
							case 85:
								goto IL_04de;
							case 86:
								goto IL_04ef;
							case 87:
								goto IL_0517;
							case 88:
								goto IL_0533;
							case 89:
								goto IL_0544;
							case 90:
								goto IL_056c;
							case 91:
								goto IL_0588;
							case 92:
								goto IL_0599;
							case 93:
								goto IL_05b5;
							case 94:
								goto IL_05c6;
							case 95:
								goto IL_05ee;
							case 96:
								goto IL_060a;
							case 97:
								goto IL_061b;
							case 98:
								goto IL_0643;
							case 99:
								goto IL_065f;
							case 100:
								goto IL_0670;
							case 101:
								goto IL_06a8;
							case 102:
								goto IL_06bd;
							case 103:
								goto IL_06ce;
							case 104:
							case 105:
								goto IL_0721;
							case 106:
								goto IL_0735;
							case 107:
								goto IL_0745;
							case 108:
							case 109:
								goto IL_075c;
							case 110:
								goto IL_0773;
							case 112:
								goto IL_0791;
							case 114:
								goto IL_07af;
							case 116:
								goto IL_07cd;
							case 118:
								goto IL_07eb;
							case 120:
								goto IL_0809;
							case 122:
								goto IL_0827;
							case 124:
								goto IL_0845;
							case 126:
								goto IL_0863;
							case 128:
								goto IL_0881;
							case 130:
								goto IL_08a2;
							case 132:
								goto IL_08c3;
							case 134:
								goto IL_08e4;
							case 136:
								goto IL_0905;
							case 138:
								goto IL_0926;
							case 140:
								goto IL_0947;
							case 142:
								goto IL_0968;
							case 144:
								goto IL_0989;
							case 146:
								goto IL_09aa;
							case 148:
								goto IL_09cb;
							case 150:
								goto IL_09ec;
							case 152:
								goto IL_0a0d;
							case 154:
								goto IL_0a2e;
							case 156:
								goto IL_0a4f;
							case 158:
								goto IL_0a70;
							case 160:
								goto IL_0a91;
							case 162:
								goto IL_0ab2;
							case 164:
								goto IL_0ad3;
							case 166:
								goto IL_0af4;
							case 168:
								goto IL_0b15;
							case 170:
								goto IL_0b36;
							case 172:
								goto IL_0b57;
							case 174:
								goto IL_0b78;
							case 176:
								goto IL_0b99;
							case 178:
								goto IL_0bba;
							case 180:
								goto IL_0bdb;
							case 182:
								goto IL_0bfc;
							case 184:
								goto IL_0c1d;
							case 186:
								goto IL_0c3e;
							case 188:
								goto IL_0c5f;
							case 190:
								goto IL_0c80;
							case 192:
								goto IL_0ca1;
							case 194:
								goto IL_0cc2;
							case 196:
								goto IL_0ce3;
							case 198:
								goto IL_0d04;
							case 200:
								goto IL_0d25;
							case 202:
								goto IL_0d46;
							case 204:
								goto IL_0d67;
							case 206:
								goto IL_0d88;
							case 208:
								goto IL_0da9;
							case 210:
								goto IL_0dca;
							case 212:
								goto IL_0deb;
							case 214:
								goto IL_0e0c;
							case 216:
								goto IL_0e2d;
							case 218:
								goto IL_0e4e;
							case 220:
								goto IL_0e6f;
							case 222:
								goto IL_0e90;
							case 224:
								goto IL_0eb1;
							case 226:
								goto IL_0ed2;
							case 228:
								goto IL_0ef3;
							case 230:
								goto IL_0f14;
							case 232:
								goto IL_0f35;
							case 234:
								goto IL_0f56;
							case 236:
								goto IL_0f77;
							case 238:
								goto IL_0f98;
							case 240:
								goto IL_0fb9;
							case 242:
								goto IL_0fda;
							case 244:
								goto IL_0ffb;
							case 246:
								goto IL_101c;
							case 248:
								goto IL_103d;
							case 250:
								goto IL_105e;
							case 252:
								goto IL_107f;
							case 254:
								goto IL_10a0;
							case 256:
								goto IL_10c1;
							case 258:
								goto IL_10e2;
							case 260:
								goto IL_1103;
							case 262:
								goto IL_1124;
							case 264:
								goto IL_1145;
							case 266:
								goto IL_1166;
							case 268:
								goto IL_1187;
							case 270:
								goto IL_11a8;
							case 272:
								goto IL_11c9;
							case 274:
								goto IL_11ea;
							case 276:
								goto IL_120b;
							case 278:
								goto IL_122c;
							case 280:
								goto IL_124d;
							case 282:
								goto IL_126e;
							case 284:
								goto IL_128f;
							case 286:
								goto IL_12b0;
							case 288:
								goto IL_12d1;
							case 290:
								goto IL_12f2;
							case 292:
								goto IL_1313;
							case 294:
								goto IL_1334;
							case 296:
								goto IL_1355;
							case 298:
								goto IL_1376;
							case 300:
								goto IL_1397;
							case 302:
								goto IL_13b8;
							case 304:
								goto IL_13d9;
							case 306:
								goto IL_13fa;
							case 308:
								goto IL_141b;
							case 310:
								goto IL_143c;
							case 312:
								goto IL_145d;
							case 314:
								goto IL_147e;
							case 316:
								goto IL_149f;
							case 318:
								goto IL_14c0;
							case 320:
								goto IL_14e1;
							case 322:
								goto IL_1502;
							case 324:
								goto IL_1523;
							case 326:
								goto IL_1541;
							case 328:
								goto IL_155f;
							case 330:
							case 331:
								goto IL_157f;
							case 332:
								goto IL_159c;
							case 111:
							case 113:
							case 115:
							case 117:
							case 119:
							case 121:
							case 123:
							case 125:
							case 127:
							case 129:
							case 131:
							case 133:
							case 135:
							case 137:
							case 139:
							case 141:
							case 143:
							case 145:
							case 147:
							case 149:
							case 151:
							case 153:
							case 155:
							case 157:
							case 159:
							case 161:
							case 163:
							case 165:
							case 167:
							case 169:
							case 171:
							case 173:
							case 175:
							case 177:
							case 179:
							case 181:
							case 183:
							case 185:
							case 187:
							case 189:
							case 191:
							case 193:
							case 195:
							case 197:
							case 199:
							case 201:
							case 203:
							case 205:
							case 207:
							case 209:
							case 211:
							case 213:
							case 215:
							case 217:
							case 219:
							case 221:
							case 223:
							case 225:
							case 227:
							case 229:
							case 231:
							case 233:
							case 235:
							case 237:
							case 239:
							case 241:
							case 243:
							case 245:
							case 247:
							case 249:
							case 251:
							case 253:
							case 255:
							case 257:
							case 259:
							case 261:
							case 263:
							case 265:
							case 267:
							case 269:
							case 271:
							case 273:
							case 275:
							case 277:
							case 279:
							case 281:
							case 283:
							case 285:
							case 287:
							case 289:
							case 291:
							case 293:
							case 295:
							case 297:
							case 299:
							case 301:
							case 303:
							case 305:
							case 307:
							case 309:
							case 311:
							case 313:
							case 315:
							case 317:
							case 319:
							case 321:
							case 323:
							case 325:
							case 327:
							case 329:
							case 333:
								goto IL_15c0;
							case 334:
								goto IL_15dc;
							case 335:
								goto IL_15f4;
							case 336:
								goto IL_1616;
							case 337:
							case 338:
								goto IL_1640;
							case 339:
								goto IL_165c;
							case 340:
								goto IL_1674;
							case 341:
								goto IL_1697;
							case 342:
							case 343:
								goto IL_16b4;
							case 344:
								goto IL_16d0;
							case 345:
								goto IL_16e8;
							case 346:
								goto IL_170b;
							case 347:
							case 348:
								goto IL_1728;
							case 349:
								goto IL_1744;
							case 350:
								goto IL_175c;
							case 351:
								goto IL_1774;
							case 353:
							case 354:
								goto IL_1791;
							case 355:
								goto IL_17ad;
							case 356:
								goto IL_17c5;
							case 357:
								goto IL_17ed;
							case 359:
							case 360:
								goto IL_180a;
							case 361:
								goto IL_1826;
							case 362:
								goto IL_183e;
							case 363:
								goto IL_1866;
							case 365:
							case 366:
								goto IL_1883;
							case 367:
								goto IL_18a2;
							case 368:
								goto IL_18ba;
							case 369:
								goto IL_18dd;
							case 370:
								goto IL_18f5;
							case 371:
								goto IL_1913;
							case 373:
							case 374:
								goto IL_1932;
							case 375:
								goto IL_1951;
							case 376:
								goto IL_1969;
							case 377:
								goto IL_198c;
							case 378:
								goto IL_19a4;
							case 379:
								goto IL_19c2;
							case 381:
							case 382:
								goto IL_19e1;
							case 383:
								goto IL_1a00;
							case 384:
								goto IL_1a18;
							case 385:
								goto IL_1a3b;
							case 386:
								goto IL_1a53;
							case 387:
								goto IL_1a71;
							case 389:
							case 390:
								goto IL_1a90;
							case 391:
								goto IL_1aaa;
							case 392:
								goto IL_1ad7;
							case 393:
								goto IL_1aef;
							case 394:
								goto IL_1b0b;
							case 396:
							case 397:
								goto IL_1b2a;
							case 398:
								goto IL_1b49;
							case 399:
								goto IL_1b61;
							case 400:
								goto IL_1b85;
							case 401:
								goto IL_1ba3;
							case 402:
								goto IL_1bc2;
							case 404:
							case 405:
								goto IL_1bdf;
							case 406:
								goto IL_1bfb;
							case 407:
								goto IL_1c13;
							case 408:
								goto IL_1c31;
							case 410:
							case 411:
								goto IL_1c50;
							case 412:
								goto IL_1c6c;
							case 413:
								goto IL_1c84;
							case 414:
								goto IL_1ca2;
							case 416:
							case 417:
								goto IL_1cc1;
							case 418:
								goto IL_1cdd;
							case 419:
								goto IL_1cf5;
							case 420:
								goto IL_1d13;
							case 422:
							case 423:
								goto IL_1d32;
							case 424:
								goto IL_1d4e;
							case 425:
								goto IL_1d66;
							case 426:
								goto IL_1d84;
							case 428:
							case 429:
								goto IL_1da3;
							case 430:
								goto IL_1dbf;
							case 431:
								goto IL_1dd7;
							case 432:
								goto IL_1e03;
							case 434:
							case 435:
								goto IL_1e1a;
							case 436:
								goto IL_1e47;
							case 437:
								goto IL_1e5f;
							case 438:
								goto IL_1e7d;
							case 440:
							case 441:
								goto IL_1e9c;
							case 442:
								goto IL_1ec9;
							case 443:
								goto IL_1ee1;
							case 444:
								goto IL_1eff;
							case 72:
							case 77:
							case 352:
							case 358:
							case 364:
							case 372:
							case 380:
							case 388:
							case 395:
							case 403:
							case 409:
							case 415:
							case 421:
							case 427:
							case 433:
							case 439:
							case 445:
							case 446:
							case 447:
							case 448:
							case 449:
								goto IL_1f20;
							case 450:
								goto IL_1f2c;
							case 451:
								goto IL_1f40;
							case 452:
								goto IL_1f57;
							case 453:
								goto IL_1f69;
							case 454:
								goto IL_1f8d;
							case 455:
								goto IL_1f9e;
							case 456:
								goto IL_1faa;
							case 457:
							case 458:
								goto IL_1fbd;
							case 459:
								goto IL_1fcb;
							case 460:
								goto end_IL_0001_2;
							default:
								goto end_IL_0001;
							case 35:
							case 39:
							case 49:
							case 461:
								goto end_IL_0001_3;
							}
							goto default;
						}
						IL_1eff:
						num2 = 444;
						AddSmsToVodaShebs(lblEtel.Text, text, eEmony);
						goto IL_1f20;
						IL_1f20:
						num2 = 449;
						Application.DoEvents();
						goto IL_1f2c;
						IL_1ee1:
						num2 = 443;
						text = msgSrng.Substring(num5 + 3, 14).Trim();
						goto IL_1eff;
						IL_1f2c:
						num2 = 450;
						num6 += -1;
						goto IL_1f38;
						IL_000b:
						num2 = 2;
						array = new string[101];
						goto IL_0015;
						IL_0015:
						num2 = 3;
						num7 = 0;
						goto IL_001a;
						IL_001a:
						num2 = 4;
						num8 = 0;
						goto IL_001f;
						IL_001f:
						num2 = 5;
						num9 = 0;
						goto IL_0024;
						IL_0024:
						num2 = 6;
						num10 = -1;
						goto IL_0029;
						IL_0029:
						num2 = 7;
						array2 = new int[41];
						goto IL_0034;
						IL_0034:
						num2 = 8;
						num11 = 0;
						goto IL_0039;
						IL_0039:
						num2 = 9;
						serialPort = new SerialPort();
						goto IL_0043;
						IL_0043:
						num2 = 10;
						serialPort.PortName = Exxc.Text;
						goto IL_0054;
						IL_0054:
						num2 = 11;
						if (!serialPort.IsOpen)
						{
							goto IL_0067;
						}
						goto IL_0072;
						IL_0067:
						num2 = 12;
						serialPort.Open();
						goto IL_0072;
						IL_0072:
						num2 = 13;
						Application.DoEvents();
						goto IL_007b;
						IL_007b:
						num2 = 14;
						text2 = "";
						goto IL_0085;
						IL_0085:
						num2 = 15;
						Application.DoEvents();
						goto IL_008e;
						IL_008e:
						num2 = 16;
						serialPort.WriteLine("AT+CMGF=1\r");
						goto IL_009e;
						IL_009e:
						num2 = 17;
						Thread.Sleep(100);
						goto IL_00a9;
						IL_00a9:
						num2 = 18;
						serialPort.WriteLine("AT+CNMI=1,1,0,0,0\r");
						goto IL_00b9;
						IL_00b9:
						num2 = 19;
						Thread.Sleep(100);
						goto IL_00c4;
						IL_00c4:
						num2 = 20;
						if (ckME.Checked)
						{
							goto IL_00d8;
						}
						goto IL_00ec;
						IL_00d8:
						num2 = 21;
						serialPort.WriteLine("AT+CPMS=\"ME\"\r");
						goto IL_00fd;
						IL_00ec:
						num2 = 23;
						serialPort.WriteLine("AT+CPMS=\"SM\"\r");
						goto IL_00fd;
						IL_00fd:
						num2 = 25;
						Thread.Sleep(1000);
						goto IL_010b;
						IL_010b:
						num2 = 26;
						Application.DoEvents();
						goto IL_0114;
						IL_0114:
						num2 = 27;
						num6 = 0;
						goto IL_011a;
						IL_011a:
						num2 = 28;
						Thread.Sleep(150);
						goto IL_0128;
						IL_0128:
						num2 = 29;
						text2 = serialPort.ReadExisting();
						goto IL_0134;
						IL_0134:
						num2 = 30;
						if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text2) >= 2))
						{
							goto IL_0166;
						}
						goto IL_018c;
						IL_0166:
						num2 = 31;
						txtInfo.Text = text2 + "\r\n" + txtInfo.Text;
						goto IL_018c;
						IL_018c:
						num2 = 32;
						if (text2.Contains("+CPMS:"))
						{
							goto IL_01a4;
						}
						goto IL_0272;
						IL_01a4:
						num2 = 33;
						num7 = text2.IndexOf("+CPMS:", 0);
						goto IL_01b6;
						IL_01b6:
						num2 = 34;
						if (num7 == -1)
						{
							goto end_IL_0001_3;
						}
						goto IL_01c9;
						IL_01c9:
						num2 = 36;
						num12 = (int)Math.Round(Conversion.Val(text2.Substring(num7 + 6, 3).Trim('\r').Trim()
							.Trim(',')));
						goto IL_020a;
						IL_020a:
						num2 = 37;
						if (num12 == 0)
						{
							goto IL_0218;
						}
						goto IL_0247;
						IL_0218:
						num2 = 38;
						lblProgress.Text = Exxc.Text + " count " + Conversions.ToString(num12);
						goto end_IL_0001_3;
						IL_0247:
						num2 = 41;
						lblProgress.Text = Exxc.Text + " count " + Conversions.ToString(num12);
						goto IL_028d;
						IL_0272:
						num2 = 45;
						Application.DoEvents();
						goto IL_027b;
						IL_027b:
						num2 = 46;
						num6++;
						if (num6 <= 30)
						{
							goto IL_011a;
						}
						goto IL_028d;
						IL_028d:
						num2 = 47;
						if (num13 == 30)
						{
							goto IL_029c;
						}
						goto IL_02b7;
						IL_029c:
						num2 = 48;
						lblProgress.Text = "خطء فى قراءة عدد الرسائل";
						goto end_IL_0001_3;
						IL_02b7:
						num2 = 51;
						if (chkSlowRead.Checked)
						{
							goto IL_02cb;
						}
						goto IL_02d2;
						IL_02cb:
						num2 = 52;
						num12 = 30;
						goto IL_02d2;
						IL_02d2:
						num2 = 53;
						num14 = num12 - 1;
						num6 = num14;
						goto IL_1f38;
						IL_1f38:
						if (num6 >= 0)
						{
							goto IL_02e4;
						}
						goto IL_1f40;
						IL_1f40:
						num2 = 451;
						if (chkAutoDell.Checked)
						{
							goto IL_1f57;
						}
						goto IL_1fbd;
						IL_1f57:
						num2 = 452;
						num15 = num12 - 1;
						num6 = num15;
						goto IL_1fb6;
						IL_1fb6:
						if (num6 >= 0)
						{
							goto IL_1f69;
						}
						goto IL_1fbd;
						IL_1f69:
						num2 = 453;
						serialPort.WriteLine("AT+CMGD=" + num6 + "\r");
						goto IL_1f8d;
						IL_1f8d:
						num2 = 454;
						Thread.Sleep(300);
						goto IL_1f9e;
						IL_1f9e:
						num2 = 455;
						Application.DoEvents();
						goto IL_1faa;
						IL_1faa:
						num2 = 456;
						num6 += -1;
						goto IL_1fb6;
						IL_1fbd:
						num2 = 458;
						serialPort.Close();
						goto IL_1fcb;
						IL_1fcb:
						num2 = 459;
						serialPort.Dispose();
						break;
						IL_02e4:
						num2 = 54;
						msgIndex = 0;
						goto IL_02ee;
						IL_02ee:
						num2 = 55;
						msgStat = "";
						goto IL_02fc;
						IL_02fc:
						num2 = 56;
						msgSentNum = "";
						goto IL_030a;
						IL_030a:
						num2 = 57;
						msgSentD = "";
						goto IL_0318;
						IL_0318:
						num2 = 58;
						msgSentT = "";
						goto IL_0326;
						IL_0326:
						num2 = 59;
						msgSrng = "";
						goto IL_0334;
						IL_0334:
						num2 = 60;
						serialPort.WriteLine("AT+CMGR=" + num6 + "\r");
						goto IL_0355;
						IL_0355:
						num2 = 61;
						num13 = 0;
						goto IL_035b;
						IL_035b:
						num2 = 62;
						Thread.Sleep(300);
						goto IL_0369;
						IL_0369:
						num2 = 63;
						text2 = serialPort.ReadExisting();
						goto IL_0375;
						IL_0375:
						num2 = 64;
						if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text2) >= 2))
						{
							goto IL_03a7;
						}
						goto IL_03cd;
						IL_03a7:
						num2 = 65;
						txtInfo.Text = text2 + "\r\n" + txtInfo.Text;
						goto IL_03cd;
						IL_03cd:
						num2 = 66;
						if (text2.Contains("+CMGR:"))
						{
							goto IL_03e2;
						}
						goto IL_03fa;
						IL_03e2:
						num2 = 67;
						array2[num11] = num6;
						goto IL_03ec;
						IL_03ec:
						num2 = 68;
						num11++;
						goto IL_044a;
						IL_03fa:
						num2 = 71;
						if (!text2.Contains("\r\nOK"))
						{
							goto IL_0415;
						}
						goto IL_1f20;
						IL_0415:
						num2 = 74;
						Application.DoEvents();
						goto IL_041e;
						IL_041e:
						num2 = 75;
						num13++;
						if (num13 <= 30)
						{
							goto IL_035b;
						}
						goto IL_0430;
						IL_0430:
						num2 = 76;
						if (num13 < 30)
						{
							goto IL_044a;
						}
						goto IL_1f20;
						IL_044a:
						num2 = 79;
						text3 = text2;
						goto IL_0451;
						IL_0451:
						num2 = 80;
						if (Conversion.Val(txtUssdc8.Text) == 205.0)
						{
							goto IL_0475;
						}
						goto IL_049b;
						IL_0475:
						num2 = 81;
						txtInfo.Text = txtInfo.Text + "\r\n" + text2;
						goto IL_049b;
						IL_049b:
						num2 = 82;
						if (text2.Length > 6)
						{
							goto IL_04b1;
						}
						goto IL_1f20;
						IL_04b1:
						num2 = 83;
						num5 = text3.IndexOf("+CMGR:");
						goto IL_04c2;
						IL_04c2:
						num2 = 84;
						text3 = text3.Substring(num5 + 6, text3.Length - num5 - 6);
						goto IL_04de;
						IL_04de:
						num2 = 85;
						num5 = text3.IndexOf(",");
						goto IL_04ef;
						IL_04ef:
						num2 = 86;
						msgStat = text3.Substring(0, num5).Trim('"').Trim();
						goto IL_0517;
						IL_0517:
						num2 = 87;
						text3 = text3.Substring(num5 + 1, text3.Length - num5 - 1);
						goto IL_0533;
						IL_0533:
						num2 = 88;
						num5 = text3.IndexOf(",");
						goto IL_0544;
						IL_0544:
						num2 = 89;
						msgSentNum = text3.Substring(0, num5).Trim('"').Trim();
						goto IL_056c;
						IL_056c:
						num2 = 90;
						text3 = text3.Substring(num5 + 1, text3.Length - num5 - 1);
						goto IL_0588;
						IL_0588:
						num2 = 91;
						num5 = text3.IndexOf(",");
						goto IL_0599;
						IL_0599:
						num2 = 92;
						text3 = text3.Substring(num5 + 1, text3.Length - num5 - 1);
						goto IL_05b5;
						IL_05b5:
						num2 = 93;
						num5 = text3.IndexOf(",");
						goto IL_05c6;
						IL_05c6:
						num2 = 94;
						msgSentD = text3.Substring(0, num5).Trim('"').Trim();
						goto IL_05ee;
						IL_05ee:
						num2 = 95;
						text3 = text3.Substring(num5 + 1, text3.Length - num5 - 1);
						goto IL_060a;
						IL_060a:
						num2 = 96;
						num5 = text3.IndexOf("\r\n");
						goto IL_061b;
						IL_061b:
						num2 = 97;
						msgSentT = text3.Substring(0, num5).Trim('"').Trim();
						goto IL_0643;
						IL_0643:
						num2 = 98;
						text3 = text3.Substring(num5 + 1, text3.Length - num5 - 1);
						goto IL_065f;
						IL_065f:
						num2 = 99;
						num5 = text3.IndexOf("\r\n\r\nOK");
						goto IL_0670;
						IL_0670:
						num2 = 100;
						msgSrng = text3.Substring(0, num5).Trim('"').Trim('\r')
							.Trim();
						goto IL_06a8;
						IL_06a8:
						num2 = 101;
						num5 = msgSrng.IndexOf("\r\n");
						goto IL_06bd;
						IL_06bd:
						num2 = 102;
						if (num5 >= 0)
						{
							goto IL_06ce;
						}
						goto IL_0721;
						IL_06ce:
						num2 = 103;
						msgSrng = msgSrng.Substring(0, num5).Trim('"').Trim()
							.Trim('"')
							.Trim('\r')
							.Trim();
						goto IL_0721;
						IL_0721:
						num2 = 105;
						if (encoding_mod.chkMsgCode(msgSrng))
						{
							goto IL_0735;
						}
						goto IL_075c;
						IL_0735:
						num2 = 106;
						bytes = encoding_mod.StrToByteArray(msgSrng);
						goto IL_0745;
						IL_0745:
						num2 = 107;
						msgSrng = Encoding.BigEndianUnicode.GetString(bytes);
						goto IL_075c;
						IL_075c:
						num2 = 109;
						if (chkIgnorSms.Checked)
						{
							goto IL_0773;
						}
						goto IL_157f;
						IL_0773:
						num2 = 110;
						if (!msgSrng.Contains("Reply By 1 تستمتع"))
						{
							goto IL_0791;
						}
						goto IL_15c0;
						IL_0791:
						num2 = 112;
						if (!msgSrng.Contains("دقيقة لأى رقم"))
						{
							goto IL_07af;
						}
						goto IL_15c0;
						IL_07af:
						num2 = 114;
						if (!msgSrng.Contains("مشتريات  من راية"))
						{
							goto IL_07cd;
						}
						goto IL_15c0;
						IL_07cd:
						num2 = 116;
						if (!msgSrng.Contains("ت و ميجابيت"))
						{
							goto IL_07eb;
						}
						goto IL_15c0;
						IL_07eb:
						num2 = 118;
						if (!msgSrng.Contains("جنيه ضريبة"))
						{
							goto IL_0809;
						}
						goto IL_15c0;
						IL_0809:
						num2 = 120;
						if (!msgSrng.Contains("رسايل مجانية يومية لأرقام "))
						{
							goto IL_0827;
						}
						goto IL_15c0;
						IL_0827:
						num2 = 122;
						if (!msgSrng.Contains("وانت غير متاح"))
						{
							goto IL_0845;
						}
						goto IL_15c0;
						IL_0845:
						num2 = 124;
						if (!msgSrng.Contains("أضعاف الشحنة "))
						{
							goto IL_0863;
						}
						goto IL_15c0;
						IL_0863:
						num2 = 126;
						if (!msgSrng.Contains("ميكس لأى"))
						{
							goto IL_0881;
						}
						goto IL_15c0;
						IL_0881:
						num2 = 128;
						if (!msgSrng.Contains("اكتر واكسب هدية"))
						{
							goto IL_08a2;
						}
						goto IL_15c0;
						IL_08a2:
						num2 = 130;
						if (!msgSrng.Contains("تم تفعيل الخط"))
						{
							goto IL_08c3;
						}
						goto IL_15c0;
						IL_08c3:
						num2 = 132;
						if (!msgSrng.Contains("إعداد ضبط جهازك"))
						{
							goto IL_08e4;
						}
						goto IL_15c0;
						IL_08e4:
						num2 = 134;
						if (!msgSrng.Contains("موقعنا بعد حفظ رسالة"))
						{
							goto IL_0905;
						}
						goto IL_15c0;
						IL_0905:
						num2 = 136;
						if (!msgSrng.Contains("ليتم سداده عند"))
						{
							goto IL_0926;
						}
						goto IL_15c0;
						IL_0926:
						num2 = 138;
						if (!msgSrng.Contains("من اتصالات لرقمك"))
						{
							goto IL_0947;
						}
						goto IL_15c0;
						IL_0947:
						num2 = 140;
						if (!msgSrng.Contains("دقائق ببلاش"))
						{
							goto IL_0968;
						}
						goto IL_15c0;
						IL_0968:
						num2 = 142;
						if (!msgSrng.Contains("قرش"))
						{
							goto IL_0989;
						}
						goto IL_15c0;
						IL_0989:
						num2 = 144;
						if (!msgSrng.Contains("ممكن تكسب"))
						{
							goto IL_09aa;
						}
						goto IL_15c0;
						IL_09aa:
						num2 = 146;
						if (!msgSrng.Contains("كتير"))
						{
							goto IL_09cb;
						}
						goto IL_15c0;
						IL_09cb:
						num2 = 148;
						if (!msgSrng.Contains("ببلاش"))
						{
							goto IL_09ec;
						}
						goto IL_15c0;
						IL_09ec:
						num2 = 150;
						if (!msgSrng.Contains("مجاني"))
						{
							goto IL_0a0d;
						}
						goto IL_15c0;
						IL_0a0d:
						num2 = 152;
						if (!msgSrng.Contains("تحويل الباقة"))
						{
							goto IL_0a2e;
						}
						goto IL_15c0;
						IL_0a2e:
						num2 = 154;
						if (!msgSrng.Contains("دلوقتي"))
						{
							goto IL_0a4f;
						}
						goto IL_15c0;
						IL_0a4f:
						num2 = 156;
						if (!msgSrng.Contains("أو زور تطبيق"))
						{
							goto IL_0a70;
						}
						goto IL_15c0;
						IL_0a70:
						num2 = 158;
						if (!msgSrng.Contains("هدايا تانية"))
						{
							goto IL_0a91;
						}
						goto IL_15c0;
						IL_0a91:
						num2 = 160;
						if (!msgSrng.Contains("ميجا بايتس"))
						{
							goto IL_0ab2;
						}
						goto IL_15c0;
						IL_0ab2:
						num2 = 162;
						if (!msgSrng.Contains("عجلة الحظ"))
						{
							goto IL_0ad3;
						}
						goto IL_15c0;
						IL_0ad3:
						num2 = 164;
						if (!msgSrng.Contains("عشان تاخد"))
						{
							goto IL_0af4;
						}
						goto IL_15c0;
						IL_0af4:
						num2 = 166;
						if (!msgSrng.Contains("تصفح الانترنت"))
						{
							goto IL_0b15;
						}
						goto IL_15c0;
						IL_0b15:
						num2 = 168;
						if (!msgSrng.Contains("goo.gl"))
						{
							goto IL_0b36;
						}
						goto IL_15c0;
						IL_0b36:
						num2 = 170;
						if (!msgSrng.Contains("نزل برنامج"))
						{
							goto IL_0b57;
						}
						goto IL_15c0;
						IL_0b57:
						num2 = 172;
						if (!msgSrng.Contains("يرجى حفظها"))
						{
							goto IL_0b78;
						}
						goto IL_15c0;
						IL_0b78:
						num2 = 174;
						if (!msgSrng.Contains("Etisalat"))
						{
							goto IL_0b99;
						}
						goto IL_15c0;
						IL_0b99:
						num2 = 176;
						if (!msgSrng.Contains("عروض"))
						{
							goto IL_0bba;
						}
						goto IL_15c0;
						IL_0bba:
						num2 = 178;
						if (!msgSrng.Contains("EyGosL"))
						{
							goto IL_0bdb;
						}
						goto IL_15c0;
						IL_0bdb:
						num2 = 180;
						if (!msgSrng.Contains("الفترة القادمة"))
						{
							goto IL_0bfc;
						}
						goto IL_15c0;
						IL_0bfc:
						num2 = 182;
						if (!msgSrng.Contains("ماندو"))
						{
							goto IL_0c1d;
						}
						goto IL_15c0;
						IL_0c1d:
						num2 = 184;
						if (!msgSrng.Contains("رمضان"))
						{
							goto IL_0c3e;
						}
						goto IL_15c0;
						IL_0c3e:
						num2 = 186;
						if (!msgSrng.Contains("downLoad"))
						{
							goto IL_0c5f;
						}
						goto IL_15c0;
						IL_0c5f:
						num2 = 188;
						if (!msgSrng.Contains("الانترنت"))
						{
							goto IL_0c80;
						}
						goto IL_15c0;
						IL_0c80:
						num2 = 190;
						if (!msgSrng.Contains("http"))
						{
							goto IL_0ca1;
						}
						goto IL_15c0;
						IL_0ca1:
						num2 = 192;
						if (!msgSrng.Contains("راية"))
						{
							goto IL_0cc2;
						}
						goto IL_15c0;
						IL_0cc2:
						num2 = 194;
						if (!msgSrng.Contains("جاوب"))
						{
							goto IL_0ce3;
						}
						goto IL_15c0;
						IL_0ce3:
						num2 = 196;
						if (!msgSrng.Contains("دقايق"))
						{
							goto IL_0d04;
						}
						goto IL_15c0;
						IL_0d04:
						num2 = 198;
						if (!msgSrng.Contains("استهلاكك و رصيدك"))
						{
							goto IL_0d25;
						}
						goto IL_15c0;
						IL_0d25:
						num2 = 200;
						if (!msgSrng.Contains("Ana Vodafone"))
						{
							goto IL_0d46;
						}
						goto IL_15c0;
						IL_0d46:
						num2 = 202;
						if (!msgSrng.Contains("anavodafone"))
						{
							goto IL_0d67;
						}
						goto IL_15c0;
						IL_0d67:
						num2 = 204;
						if (!msgSrng.Contains("مع فودافون واريال"))
						{
							goto IL_0d88;
						}
						goto IL_15c0;
						IL_0d88:
						num2 = 206;
						if (!msgSrng.Contains("نت دلوقتى على نظام"))
						{
							goto IL_0da9;
						}
						goto IL_15c0;
						IL_0da9:
						num2 = 208;
						if (!msgSrng.Contains("ستخدمهم براحتك"))
						{
							goto IL_0dca;
						}
						goto IL_15c0;
						IL_0dca:
						num2 = 210;
						if (!msgSrng.Contains("فودافون الشبكة رقم"))
						{
							goto IL_0deb;
						}
						goto IL_15c0;
						IL_0deb:
						num2 = 212;
						if (!msgSrng.Contains("أوتدفع فاتورة"))
						{
							goto IL_0e0c;
						}
						goto IL_15c0;
						IL_0e0c:
						num2 = 214;
						if (!msgSrng.Contains("قيمة معاملتك"))
						{
							goto IL_0e2d;
						}
						goto IL_15c0;
						IL_0e2d:
						num2 = 216;
						if (!msgSrng.Contains("فودافون كاش عن طريق"))
						{
							goto IL_0e4e;
						}
						goto IL_15c0;
						IL_0e4e:
						num2 = 218;
						if (!msgSrng.Contains("وحدات بحد أقصى"))
						{
							goto IL_0e6f;
						}
						goto IL_15c0;
						IL_0e6f:
						num2 = 220;
						if (!msgSrng.Contains("المياه والغاز"))
						{
							goto IL_0e90;
						}
						goto IL_15c0;
						IL_0e90:
						num2 = 222;
						if (!msgSrng.Contains("عندك فلوس قد"))
						{
							goto IL_0eb1;
						}
						goto IL_15c0;
						IL_0eb1:
						num2 = 224;
						if (!msgSrng.Contains("اشحن بقيمة الباقة"))
						{
							goto IL_0ed2;
						}
						goto IL_15c0;
						IL_0ed2:
						num2 = 226;
						if (!msgSrng.Contains("سلفني شكرا\u064b متاحة"))
						{
							goto IL_0ef3;
						}
						goto IL_15c0;
						IL_0ef3:
						num2 = 228;
						if (!msgSrng.Contains("نت الان علي نظام"))
						{
							goto IL_0f14;
						}
						goto IL_15c0;
						IL_0f14:
						num2 = 230;
						if (!msgSrng.Contains("مناسبة السنة الجديدة"))
						{
							goto IL_0f35;
						}
						goto IL_15c0;
						IL_0f35:
						num2 = 232;
						if (!msgSrng.Contains("دملك أسهل طريقة تشحن"))
						{
							goto IL_0f56;
						}
						goto IL_15c0;
						IL_0f56:
						num2 = 234;
						if (!msgSrng.Contains("انضمامك لبرنامج النقاط من اتصالات"))
						{
							goto IL_0f77;
						}
						goto IL_15c0;
						IL_0f77:
						num2 = 236;
						if (!msgSrng.Contains("نقطة يمكنك الاستعلام"))
						{
							goto IL_0f98;
						}
						goto IL_15c0;
						IL_0f98:
						num2 = 238;
						if (!msgSrng.Contains("مامك لبرنامج النقاط من اتصالات"))
						{
							goto IL_0fb9;
						}
						goto IL_15c0;
						IL_0fb9:
						num2 = 240;
						if (!msgSrng.Contains("تكلم 450 دقيقة"))
						{
							goto IL_0fda;
						}
						goto IL_15c0;
						IL_0fda:
						num2 = 242;
						if (!msgSrng.Contains("1*011*"))
						{
							goto IL_0ffb;
						}
						goto IL_15c0;
						IL_0ffb:
						num2 = 244;
						if (!msgSrng.Contains("خلال يوم"))
						{
							goto IL_101c;
						}
						goto IL_15c0;
						IL_101c:
						num2 = 246;
						if (!msgSrng.Contains("كسبت 10 أضعاف الشحنه"))
						{
							goto IL_103d;
						}
						goto IL_15c0;
						IL_103d:
						num2 = 248;
						if (!msgSrng.Contains("ميجابايتس لمدة 24 ساعة"))
						{
							goto IL_105e;
						}
						goto IL_15c0;
						IL_105e:
						num2 = 250;
						if (!msgSrng.Contains("ستمتع بهديتك"))
						{
							goto IL_107f;
						}
						goto IL_15c0;
						IL_107f:
						num2 = 252;
						if (!msgSrng.Contains("تمتع ب 100 دقيقة لأرقا"))
						{
							goto IL_10a0;
						}
						goto IL_15c0;
						IL_10a0:
						num2 = 254;
						if (!msgSrng.Contains("ستنى رساله تانيه"))
						{
							goto IL_10c1;
						}
						goto IL_15c0;
						IL_10c1:
						num2 = 256;
						if (!msgSrng.Contains("استمتع ب 25 دقيقة لأرقام"))
						{
							goto IL_10e2;
						}
						goto IL_15c0;
						IL_10e2:
						num2 = 258;
						if (!msgSrng.Contains("انيه بتفاصيل هديه"))
						{
							goto IL_1103;
						}
						goto IL_15c0;
						IL_1103:
						num2 = 260;
						if (!msgSrng.Contains("أرقام فودافون لمدة"))
						{
							goto IL_1124;
						}
						goto IL_15c0;
						IL_1124:
						num2 = 262;
						if (!msgSrng.Contains("دقيقة لأرقام فودافون"))
						{
							goto IL_1145;
						}
						goto IL_15c0;
						IL_1145:
						num2 = 264;
						if (!msgSrng.Contains("تانيه بتفاصيل هديه"))
						{
							goto IL_1166;
						}
						goto IL_15c0;
						IL_1166:
						num2 = 266;
						if (!msgSrng.Contains("anavodafone"))
						{
							goto IL_1187;
						}
						goto IL_15c0;
						IL_1187:
						num2 = 268;
						if (!msgSrng.Contains("الحة حتي"))
						{
							goto IL_11a8;
						}
						goto IL_15c0;
						IL_11a8:
						num2 = 270;
						if (!msgSrng.Contains("للحصول علي الهدية"))
						{
							goto IL_11c9;
						}
						goto IL_15c0;
						IL_11c9:
						num2 = 272;
						if (!msgSrng.Contains("ن مليونير"))
						{
							goto IL_11ea;
						}
						goto IL_15c0;
						IL_11ea:
						num2 = 274;
						if (!msgSrng.Contains("ور اقرب COM فوري"))
						{
							goto IL_120b;
						}
						goto IL_15c0;
						IL_120b:
						num2 = 276;
						if (!msgSrng.Contains("إكسب لحد"))
						{
							goto IL_122c;
						}
						goto IL_15c0;
						IL_122c:
						num2 = 278;
						if (!msgSrng.Contains("كل متستخدم فودافون"))
						{
							goto IL_124d;
						}
						goto IL_15c0;
						IL_124d:
						num2 = 280;
						if (!msgSrng.Contains("تم استلام مبلغ"))
						{
							goto IL_126e;
						}
						goto IL_15c0;
						IL_126e:
						num2 = 282;
						if (!msgSrng.Contains("كل إيداع أو تحويل فلوس"))
						{
							goto IL_128f;
						}
						goto IL_15c0;
						IL_128f:
						num2 = 284;
						if (!msgSrng.Contains("ونلاين بڤودافون"))
						{
							goto IL_12b0;
						}
						goto IL_15c0;
						IL_12b0:
						num2 = 286;
						if (!msgSrng.Contains("في المائة خصم"))
						{
							goto IL_12d1;
						}
						goto IL_15c0;
						IL_12d1:
						num2 = 288;
						if (!msgSrng.Contains("vf.eg/vfca"))
						{
							goto IL_12f2;
						}
						goto IL_15c0;
						IL_12f2:
						num2 = 290;
						if (!msgSrng.Contains("علي سوق, جوميا, نون"))
						{
							goto IL_1313;
						}
						goto IL_15c0;
						IL_1313:
						num2 = 292;
						if (!msgSrng.Contains("ة الكورة مع مدرج فودافون"))
						{
							goto IL_1334;
						}
						goto IL_15c0;
						IL_1334:
						num2 = 294;
						if (!msgSrng.Contains("تم تحويل"))
						{
							goto IL_1355;
						}
						goto IL_15c0;
						IL_1355:
						num2 = 296;
						if (!msgSrng.Contains("وحدة ساري"))
						{
							goto IL_1376;
						}
						goto IL_15c0;
						IL_1376:
						num2 = 298;
						if (!msgSrng.Contains("تدفع أو تحول"))
						{
							goto IL_1397;
						}
						goto IL_15c0;
						IL_1397:
						num2 = 300;
						if (!msgSrng.Contains("كاش هي محفظة"))
						{
							goto IL_13b8;
						}
						goto IL_15c0;
						IL_13b8:
						num2 = 302;
						if (!msgSrng.Contains("إعرف أكتر عن فودافون"))
						{
							goto IL_13d9;
						}
						goto IL_15c0;
						IL_13d9:
						num2 = 304;
						if (!msgSrng.Contains(" الجهاز القومي لتنظيم"))
						{
							goto IL_13fa;
						}
						goto IL_15c0;
						IL_13fa:
						num2 = 306;
						if (!msgSrng.Contains("بعلمه أن في حالة غلق الخط"))
						{
							goto IL_141b;
						}
						goto IL_15c0;
						IL_141b:
						num2 = 308;
						if (!msgSrng.Contains("أحد فروعنا في خلال"))
						{
							goto IL_143c;
						}
						goto IL_15c0;
						IL_143c:
						num2 = 310;
						if (!msgSrng.Contains("ب ويحق له استرداد"))
						{
							goto IL_145d;
						}
						goto IL_15c0;
						IL_145d:
						num2 = 312;
						if (!msgSrng.Contains("م السري والاحتفاظ"))
						{
							goto IL_147e;
						}
						goto IL_15c0;
						IL_147e:
						num2 = 314;
						if (!msgSrng.Contains("لة معرفة الغير به او سرقة اليح"))
						{
							goto IL_149f;
						}
						goto IL_15c0;
						IL_149f:
						num2 = 316;
						if (!msgSrng.Contains("دمة الرد الصوتي التفاعلي"))
						{
							goto IL_14c0;
						}
						goto IL_15c0;
						IL_14c0:
						num2 = 318;
						if (!msgSrng.Contains("سن سعر في مصر لأول م"))
						{
							goto IL_14e1;
						}
						goto IL_15c0;
						IL_14e1:
						num2 = 320;
						if (!msgSrng.Contains("م كلم #7*9*"))
						{
							goto IL_1502;
						}
						goto IL_15c0;
						IL_1502:
						num2 = 322;
						if (!msgSrng.Contains("حسابك فى فودافون"))
						{
							goto IL_1523;
						}
						goto IL_15c0;
						IL_1523:
						num2 = 324;
						if (!msgSrng.Contains("*365*2#"))
						{
							goto IL_1541;
						}
						goto IL_15c0;
						IL_1541:
						num2 = 326;
						if (!msgSrng.Contains("عاكش رصيد"))
						{
							goto IL_155f;
						}
						goto IL_15c0;
						IL_155f:
						num2 = 328;
						if (!msgSrng.Contains("فليكس"))
						{
							goto IL_157f;
						}
						goto IL_15c0;
						IL_157f:
						num2 = 331;
						EretScrn.Text = "-------------------------\r\n" + EretScrn.Text;
						goto IL_159c;
						IL_159c:
						num2 = 332;
						EretScrn.Text = msgSrng + "\r\n" + EretScrn.Text;
						goto IL_15c0;
						IL_15c0:
						num2 = 333;
						if (msgSrng.Contains("Your new balance is"))
						{
							goto IL_15dc;
						}
						goto IL_1640;
						IL_15dc:
						num2 = 334;
						num5 = msgSrng.IndexOf("balance is");
						goto IL_15f4;
						IL_15f4:
						num2 = 335;
						if (Conversion.Val(lblEEE.Text) == 0.0)
						{
							goto IL_1616;
						}
						goto IL_1640;
						IL_1616:
						num2 = 336;
						lblEEE.Text = Conversions.ToString(Conversion.Val(msgSrng.Substring(num5 + 10, 6)));
						goto IL_1640;
						IL_1640:
						num2 = 338;
						if (msgSrng.Contains("Careem PIN"))
						{
							goto IL_165c;
						}
						goto IL_16b4;
						IL_165c:
						num2 = 339;
						num5 = msgSrng.IndexOf("PIN");
						goto IL_1674;
						IL_1674:
						num2 = 340;
						num5 = (int)Math.Round(Conversion.Val(msgSrng.Substring(num5 + 4, 5)));
						goto IL_1697;
						IL_1697:
						num2 = 341;
						AddRepToCaremReq(lblEtel.Text, Conversions.ToString(num5));
						goto IL_16b4;
						IL_16b4:
						num2 = 343;
						if (msgSrng.Contains("WeChat verification code"))
						{
							goto IL_16d0;
						}
						goto IL_1728;
						IL_16d0:
						num2 = 344;
						num5 = msgSrng.IndexOf("code (");
						goto IL_16e8;
						IL_16e8:
						num2 = 345;
						num5 = (int)Math.Round(Conversion.Val(msgSrng.Substring(num5 + 6, 5)));
						goto IL_170b;
						IL_170b:
						num2 = 346;
						AddRepToWechatReq(lblEtel.Text, Conversions.ToString(num5));
						goto IL_1728;
						IL_1728:
						num2 = 348;
						if (msgSrng.Contains("WhatsApp code"))
						{
							goto IL_1744;
						}
						goto IL_1791;
						IL_1744:
						num2 = 349;
						num5 = msgSrng.IndexOf("code");
						goto IL_175c;
						IL_175c:
						num2 = 350;
						text = msgSrng.Substring(num5 + 5, 7);
						goto IL_1774;
						IL_1774:
						num2 = 351;
						AddRepTowhatsReq(lblEtel.Text, text);
						goto IL_1f20;
						IL_1791:
						num2 = 354;
						if (msgSrng.Contains("WhatsApp key"))
						{
							goto IL_17ad;
						}
						goto IL_180a;
						IL_17ad:
						num2 = 355;
						num5 = msgSrng.IndexOf("key");
						goto IL_17c5;
						IL_17c5:
						num2 = 356;
						text = msgSrng.Substring(num5 + 4, 7).Trim('.');
						goto IL_17ed;
						IL_17ed:
						num2 = 357;
						AddRepTowhatsReq(lblEtel.Text, text);
						goto IL_1f20;
						IL_180a:
						num2 = 360;
						if (msgSrng.Contains("كود واتساب"))
						{
							goto IL_1826;
						}
						goto IL_1883;
						IL_1826:
						num2 = 361;
						num5 = msgSrng.IndexOf("ساب");
						goto IL_183e;
						IL_183e:
						num2 = 362;
						text = msgSrng.Substring(num5 + 4, 7).Trim('.');
						goto IL_1866;
						IL_1866:
						num2 = 363;
						AddRepTowhatsReq(lblEtel.Text, text);
						goto IL_1f20;
						IL_1883:
						num2 = 366;
						if (msgSrng.Contains("ليك هديه"))
						{
							goto IL_18a2;
						}
						goto IL_1932;
						IL_18a2:
						num2 = 367;
						num5 = msgSrng.IndexOf("بقيمة");
						goto IL_18ba;
						IL_18ba:
						num2 = 368;
						eEmony = (int)Math.Round(Conversion.Val(msgSrng.Substring(num5 + 5, 3)));
						goto IL_18dd;
						IL_18dd:
						num2 = 369;
						num5 = msgSrng.IndexOf("بكود");
						goto IL_18f5;
						IL_18f5:
						num2 = 370;
						text = msgSrng.Substring(num5 + 4, 11).Trim();
						goto IL_1913;
						IL_1913:
						num2 = 371;
						AddSmsTofawry(lblEtel.Text, text, eEmony);
						goto IL_1f20;
						IL_1932:
						num2 = 374;
						if (msgSrng.Contains("جنية   صالحة لمدة يومين"))
						{
							goto IL_1951;
						}
						goto IL_19e1;
						IL_1951:
						num2 = 375;
						num5 = msgSrng.IndexOf("بقيمة");
						goto IL_1969;
						IL_1969:
						num2 = 376;
						eEmony = (int)Math.Round(Conversion.Val(msgSrng.Substring(num5 + 5, 3)));
						goto IL_198c;
						IL_198c:
						num2 = 377;
						num5 = msgSrng.IndexOf("د  ");
						goto IL_19a4;
						IL_19a4:
						num2 = 378;
						text = msgSrng.Substring(num5 + 3, 10).Trim();
						goto IL_19c2;
						IL_19c2:
						num2 = 379;
						AddSmsTofawry(lblEtel.Text, text, eEmony);
						goto IL_1f20;
						IL_19e1:
						num2 = 382;
						if (msgSrng.Contains("ليك هدية"))
						{
							goto IL_1a00;
						}
						goto IL_1a90;
						IL_1a00:
						num2 = 383;
						num5 = msgSrng.IndexOf("بقيمة");
						goto IL_1a18;
						IL_1a18:
						num2 = 384;
						eEmony = (int)Math.Round(Conversion.Val(msgSrng.Substring(num5 + 5, 3)));
						goto IL_1a3b;
						IL_1a3b:
						num2 = 385;
						num5 = msgSrng.IndexOf("بكود");
						goto IL_1a53;
						IL_1a53:
						num2 = 386;
						text = msgSrng.Substring(num5 + 4, 11).Trim();
						goto IL_1a71;
						IL_1a71:
						num2 = 387;
						AddSmsTofawry(lblEtel.Text, text, eEmony);
						goto IL_1f20;
						IL_1a90:
						num2 = 390;
						if (MysqlConn.MainProgLic >= 3)
						{
							goto IL_1aaa;
						}
						goto IL_1f20;
						IL_1aaa:
						num2 = 391;
						if (msgSrng.Contains(" ص") & msgSrng.Contains("40969"))
						{
							goto IL_1ad7;
						}
						goto IL_1b2a;
						IL_1ad7:
						num2 = 392;
						num5 = msgSrng.IndexOf("40969");
						goto IL_1aef;
						IL_1aef:
						num2 = 393;
						text = msgSrng.Substring(num5, 18).Trim();
						goto IL_1b0b;
						IL_1b0b:
						num2 = 394;
						AddSmsTofawry(lblEtel.Text, text, eEmony);
						goto IL_1f20;
						IL_1b2a:
						num2 = 397;
						if (msgSrng.Contains("دم الكود"))
						{
							goto IL_1b49;
						}
						goto IL_1bdf;
						IL_1b49:
						num2 = 398;
						num5 = msgSrng.IndexOf("الكود");
						goto IL_1b61;
						IL_1b61:
						num2 = 399;
						EretScrn.Text = num5 + "\r\n" + EretScrn.Text;
						goto IL_1b85;
						IL_1b85:
						num2 = 400;
						text = msgSrng.Substring(num5 + 5, 12).Trim();
						goto IL_1ba3;
						IL_1ba3:
						num2 = 401;
						EretScrn.Text = text + "\r\n" + EretScrn.Text;
						goto IL_1bc2;
						IL_1bc2:
						num2 = 402;
						AddSmsToAman(lblEtel.Text, text);
						goto IL_1f20;
						IL_1bdf:
						num2 = 405;
						if (msgSrng.Contains("كسبت شيبسي"))
						{
							goto IL_1bfb;
						}
						goto IL_1c50;
						IL_1bfb:
						num2 = 406;
						num5 = msgSrng.IndexOf("كود");
						goto IL_1c13;
						IL_1c13:
						num2 = 407;
						text = msgSrng.Substring(num5 + 3, 14).Trim();
						goto IL_1c31;
						IL_1c31:
						num2 = 408;
						AddSmsToVodaShebs(lblEtel.Text, text, eEmony);
						goto IL_1f20;
						IL_1c50:
						num2 = 411;
						if (msgSrng.Contains("كسبت 3 شيبسي"))
						{
							goto IL_1c6c;
						}
						goto IL_1cc1;
						IL_1c6c:
						num2 = 412;
						num5 = msgSrng.IndexOf("كود");
						goto IL_1c84;
						IL_1c84:
						num2 = 413;
						text = msgSrng.Substring(num5 + 3, 14).Trim();
						goto IL_1ca2;
						IL_1ca2:
						num2 = 414;
						AddSmsToVodaShebs(lblEtel.Text, text, eEmony);
						goto IL_1f20;
						IL_1cc1:
						num2 = 417;
						if (msgSrng.Contains("كسبت 5 شيبسي"))
						{
							goto IL_1cdd;
						}
						goto IL_1d32;
						IL_1cdd:
						num2 = 418;
						num5 = msgSrng.IndexOf("كود");
						goto IL_1cf5;
						IL_1cf5:
						num2 = 419;
						text = msgSrng.Substring(num5 + 3, 14).Trim();
						goto IL_1d13;
						IL_1d13:
						num2 = 420;
						AddSmsToVodaShebs(lblEtel.Text, text, eEmony);
						goto IL_1f20;
						IL_1d32:
						num2 = 423;
						if (msgSrng.Contains("كسبت2 شيبسي"))
						{
							goto IL_1d4e;
						}
						goto IL_1da3;
						IL_1d4e:
						num2 = 424;
						num5 = msgSrng.IndexOf("كود");
						goto IL_1d66;
						IL_1d66:
						num2 = 425;
						text = msgSrng.Substring(num5 + 3, 14).Trim();
						goto IL_1d84;
						IL_1d84:
						num2 = 426;
						AddSmsToVodaShebs(lblEtel.Text, text, eEmony);
						goto IL_1f20;
						IL_1da3:
						num2 = 429;
						if (msgSrng.Contains("رصيدك الحالى"))
						{
							goto IL_1dbf;
						}
						goto IL_1e1a;
						IL_1dbf:
						num2 = 430;
						num5 = msgSrng.IndexOf("الحالى");
						goto IL_1dd7;
						IL_1dd7:
						num2 = 431;
						text = Conversion.Val(msgSrng.Substring(num5 + 6, 9).Trim()).ToString();
						goto IL_1e03;
						IL_1e03:
						num2 = 432;
						OutBoxDropBal(Exxc, text);
						goto IL_1f20;
						IL_1e1a:
						num2 = 435;
						if (msgSrng.Contains("كادبورى") & msgSrng.Contains("كود"))
						{
							goto IL_1e47;
						}
						goto IL_1e9c;
						IL_1e47:
						num2 = 436;
						num5 = msgSrng.IndexOf("كود");
						goto IL_1e5f;
						IL_1e5f:
						num2 = 437;
						text = msgSrng.Substring(num5 + 3, 14).Trim();
						goto IL_1e7d;
						IL_1e7d:
						num2 = 438;
						AddSmsToVodaShebs(lblEtel.Text, text, eEmony);
						goto IL_1f20;
						IL_1e9c:
						num2 = 441;
						if (msgSrng.Contains("شيبسي") & msgSrng.Contains("كود"))
						{
							goto IL_1ec9;
						}
						goto IL_1f20;
						IL_1ec9:
						num2 = 442;
						num5 = msgSrng.IndexOf("كود");
						goto IL_1ee1;
						end_IL_0001_2:
						break;
					}
					num2 = 460;
					serialPort = null;
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 10027;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void DelSMSSM30E(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				int num5;
				int num6;
				int num7;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 372:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_000f;
						case 4:
							goto IL_0014;
						case 5:
							goto IL_0019;
						case 6:
							goto IL_0022;
						case 7:
							goto IL_0032;
						case 8:
							goto IL_0044;
						case 9:
							goto IL_004e;
						case 10:
							goto IL_0057;
						case 11:
							goto IL_0067;
						case 12:
							goto IL_0075;
						case 13:
							goto IL_0085;
						case 14:
							goto IL_0093;
						case 15:
							goto IL_00a3;
						case 16:
							goto IL_00b1;
						case 17:
							goto IL_00c1;
						case 18:
							goto IL_00d0;
						case 19:
							goto IL_00db;
						case 20:
							goto IL_00e6;
						case 21:
							goto IL_00ec;
						case 22:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 23:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_00db:
					num2 = 19;
					serialPort.Dispose();
					goto IL_00e6;
					IL_00e6:
					num2 = 20;
					serialPort = null;
					goto IL_00ec;
					IL_00d0:
					num2 = 18;
					serialPort.Close();
					goto IL_00db;
					IL_00ec:
					num2 = 21;
					Thread.Sleep(500);
					break;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_000f;
					IL_000f:
					num2 = 3;
					num6 = 0;
					goto IL_0014;
					IL_0014:
					num2 = 4;
					num7 = 0;
					goto IL_0019;
					IL_0019:
					num2 = 5;
					serialPort = new SerialPort();
					goto IL_0022;
					IL_0022:
					num2 = 6;
					serialPort.PortName = Exxc.Text;
					goto IL_0032;
					IL_0032:
					num2 = 7;
					if (!serialPort.IsOpen)
					{
						goto IL_0044;
					}
					goto IL_004e;
					IL_0044:
					num2 = 8;
					serialPort.Open();
					goto IL_004e;
					IL_004e:
					num2 = 9;
					Application.DoEvents();
					goto IL_0057;
					IL_0057:
					num2 = 10;
					serialPort.WriteLine("AT+CPMS=\"SM\"\r");
					goto IL_0067;
					IL_0067:
					num2 = 11;
					Thread.Sleep(200);
					goto IL_0075;
					IL_0075:
					num2 = 12;
					serialPort.WriteLine("AT+CMGD=1,4\r");
					goto IL_0085;
					IL_0085:
					num2 = 13;
					Thread.Sleep(250);
					goto IL_0093;
					IL_0093:
					num2 = 14;
					serialPort.WriteLine("AT+CPMS=\"ME\"\r");
					goto IL_00a3;
					IL_00a3:
					num2 = 15;
					Thread.Sleep(200);
					goto IL_00b1;
					IL_00b1:
					num2 = 16;
					serialPort.WriteLine("AT+CMGD=1,4\r");
					goto IL_00c1;
					IL_00c1:
					num2 = 17;
					Thread.Sleep(250);
					goto IL_00d0;
					end_IL_0001_2:
					break;
				}
				num2 = 22;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 372;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SelectnextMainAuto()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1061:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_003b;
						case 5:
						case 6:
							goto IL_005b;
						case 7:
							goto IL_008d;
						case 9:
						case 10:
							goto IL_00ad;
						case 11:
							goto IL_00e0;
						case 13:
						case 14:
							goto IL_0101;
						case 15:
							goto IL_0134;
						case 17:
						case 18:
							goto IL_0155;
						case 19:
							goto IL_0188;
						case 21:
						case 22:
							goto IL_01a9;
						case 23:
							goto IL_01dc;
						case 25:
						case 26:
							goto IL_01fd;
						case 27:
							goto IL_0222;
						case 28:
						case 29:
							goto IL_0238;
						case 30:
							goto IL_025d;
						case 31:
						case 32:
							goto IL_0273;
						case 33:
							goto IL_0298;
						case 34:
						case 35:
							goto IL_02ae;
						case 36:
							goto IL_02d3;
						case 37:
						case 38:
							goto IL_02e9;
						case 39:
							goto IL_030e;
						case 40:
						case 41:
							goto IL_0324;
						case 42:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 8:
						case 12:
						case 16:
						case 20:
						case 24:
						case 43:
						case 44:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_02e9:
					num2 = 38;
					if (txtRet02.Text.Substring(0, 8).Contains("تم ت"))
					{
						goto IL_030e;
					}
					goto IL_0324;
					IL_030e:
					num2 = 39;
					txtRet02.ForeColor = Color.Red;
					goto IL_0324;
					IL_02d3:
					num2 = 36;
					txtRet03.ForeColor = Color.Red;
					goto IL_02e9;
					IL_0324:
					num2 = 41;
					if (!txtRet01.Text.Substring(0, 8).Contains("تم ت"))
					{
						goto end_IL_0001_3;
					}
					break;
					IL_000b:
					num2 = 2;
					if ((lblNum6.BackColor != Color.Green) & (lblNum6.Text.Length == 11))
					{
						goto IL_003b;
					}
					goto IL_005b;
					IL_003b:
					num2 = 3;
					txtCashNextMaster.Text = lblNum6.Text;
					goto end_IL_0001_3;
					IL_005b:
					num2 = 6;
					if ((lblNum5.BackColor != Color.Green) & (lblNum5.Text.Length == 11))
					{
						goto IL_008d;
					}
					goto IL_00ad;
					IL_008d:
					num2 = 7;
					txtCashNextMaster.Text = lblNum5.Text;
					goto end_IL_0001_3;
					IL_00ad:
					num2 = 10;
					if ((lblNum4.BackColor != Color.Green) & (lblNum4.Text.Length == 11))
					{
						goto IL_00e0;
					}
					goto IL_0101;
					IL_00e0:
					num2 = 11;
					txtCashNextMaster.Text = lblNum4.Text;
					goto end_IL_0001_3;
					IL_0101:
					num2 = 14;
					if ((lblNum3.BackColor != Color.Green) & (lblNum3.Text.Length == 11))
					{
						goto IL_0134;
					}
					goto IL_0155;
					IL_0134:
					num2 = 15;
					txtCashNextMaster.Text = lblNum3.Text;
					goto end_IL_0001_3;
					IL_0155:
					num2 = 18;
					if ((lblNum2.BackColor != Color.Green) & (lblNum2.Text.Length == 11))
					{
						goto IL_0188;
					}
					goto IL_01a9;
					IL_0188:
					num2 = 19;
					txtCashNextMaster.Text = lblNum2.Text;
					goto end_IL_0001_3;
					IL_01a9:
					num2 = 22;
					if ((lblNum1.BackColor != Color.Green) & (lblNum1.Text.Length == 11))
					{
						goto IL_01dc;
					}
					goto IL_01fd;
					IL_01dc:
					num2 = 23;
					txtCashNextMaster.Text = lblNum1.Text;
					goto end_IL_0001_3;
					IL_01fd:
					num2 = 26;
					if (txtRet06.Text.Substring(0, 8).Contains("تم ت"))
					{
						goto IL_0222;
					}
					goto IL_0238;
					IL_0222:
					num2 = 27;
					txtRet06.ForeColor = Color.Red;
					goto IL_0238;
					IL_0238:
					num2 = 29;
					if (txtRet05.Text.Substring(0, 8).Contains("تم ت"))
					{
						goto IL_025d;
					}
					goto IL_0273;
					IL_025d:
					num2 = 30;
					txtRet05.ForeColor = Color.Red;
					goto IL_0273;
					IL_0273:
					num2 = 32;
					if (txtRet04.Text.Substring(0, 8).Contains("تم ت"))
					{
						goto IL_0298;
					}
					goto IL_02ae;
					IL_0298:
					num2 = 33;
					txtRet04.ForeColor = Color.Red;
					goto IL_02ae;
					IL_02ae:
					num2 = 35;
					if (txtRet03.Text.Substring(0, 8).Contains("تم ت"))
					{
						goto IL_02d3;
					}
					goto IL_02e9;
					end_IL_0001_2:
					break;
				}
				num2 = 42;
				txtRet01.ForeColor = Color.Red;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1061;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void GetDataFromRegNN()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 3093:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0023;
						case 4:
							goto IL_003b;
						case 5:
							goto IL_0053;
						case 6:
							goto IL_006b;
						case 7:
							goto IL_0083;
						case 8:
							goto IL_009b;
						case 9:
							goto IL_00b3;
						case 10:
							goto IL_00cc;
						case 11:
							goto IL_00e5;
						case 12:
							goto IL_00fe;
						case 13:
							goto IL_0117;
						case 14:
							goto IL_0130;
						case 15:
							goto IL_0149;
						case 16:
							goto IL_0162;
						case 17:
							goto IL_017b;
						case 18:
							goto IL_0194;
						case 19:
							goto IL_01ad;
						case 20:
							goto IL_01c6;
						case 21:
							goto IL_01df;
						case 22:
							goto IL_01f8;
						case 23:
							goto IL_0211;
						case 24:
							goto IL_022a;
						case 25:
							goto IL_0243;
						case 26:
							goto IL_025c;
						case 27:
							goto IL_0275;
						case 28:
							goto IL_028e;
						case 29:
							goto IL_02a7;
						case 30:
							goto IL_02c0;
						case 31:
							goto IL_02d9;
						case 32:
							goto IL_02f2;
						case 33:
							goto IL_030b;
						case 34:
							goto IL_0324;
						case 35:
							goto IL_033d;
						case 36:
							goto IL_0356;
						case 37:
							goto IL_036f;
						case 38:
							goto IL_0388;
						case 39:
							goto IL_03a1;
						case 40:
							goto IL_03ba;
						case 41:
							goto IL_03d3;
						case 42:
							goto IL_03ec;
						case 43:
							goto IL_0405;
						case 44:
							goto IL_041e;
						case 45:
							goto IL_0437;
						case 46:
							goto IL_0450;
						case 47:
							goto IL_0469;
						case 48:
							goto IL_0482;
						case 49:
							goto IL_049b;
						case 50:
							goto IL_04b4;
						case 51:
							goto IL_04cd;
						case 52:
							goto IL_04e6;
						case 53:
							goto IL_04ff;
						case 54:
							goto IL_0518;
						case 55:
							goto IL_0531;
						case 56:
							goto IL_054a;
						case 57:
							goto IL_0563;
						case 58:
							goto IL_057c;
						case 59:
							goto IL_0595;
						case 60:
							goto IL_05ae;
						case 61:
							goto IL_05c7;
						case 62:
							goto IL_05e0;
						case 63:
							goto IL_05f9;
						case 64:
							goto IL_0612;
						case 65:
							goto IL_062b;
						case 66:
							goto IL_0644;
						case 67:
							goto IL_0662;
						case 68:
							goto IL_0680;
						case 69:
							goto IL_069e;
						case 70:
							goto IL_06b7;
						case 71:
							goto IL_06d0;
						case 72:
							goto IL_06e9;
						case 73:
							goto IL_0702;
						case 74:
							goto IL_071b;
						case 75:
							goto IL_0734;
						case 76:
							goto IL_074d;
						case 77:
							goto IL_0766;
						case 78:
							goto IL_077f;
						case 79:
							goto IL_0798;
						case 80:
							goto IL_07b1;
						case 81:
							goto IL_07ca;
						case 82:
							goto IL_07e3;
						case 83:
							goto IL_07fc;
						case 84:
							goto IL_0815;
						case 85:
							goto IL_082e;
						case 86:
							goto IL_0847;
						case 87:
							goto IL_0860;
						case 88:
							goto IL_0879;
						case 89:
							goto IL_0892;
						case 90:
							goto IL_08ab;
						case 91:
							goto IL_08c4;
						case 92:
							goto IL_08dd;
						case 93:
							goto IL_08f6;
						case 94:
							goto IL_090f;
						case 95:
							goto IL_0928;
						case 96:
							goto IL_0941;
						case 97:
							goto IL_095a;
						case 98:
							goto IL_0973;
						case 99:
							goto IL_098c;
						case 100:
							goto IL_09a5;
						case 101:
							goto IL_09be;
						case 102:
							goto IL_09d7;
						case 103:
							goto IL_09f0;
						case 104:
							goto IL_0a09;
						case 105:
							goto IL_0a22;
						case 106:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 107:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_09f0:
					num2 = 103;
					txtSMStothisnumber.Text = encoding_mod.getdataFromReg("txtSMStothisnumber");
					goto IL_0a09;
					IL_0a09:
					num2 = 104;
					txtGboxMain.Text = encoding_mod.getdataFromReg("txtGboxMain");
					goto IL_0a22;
					IL_09d7:
					num2 = 102;
					txtDoOfferWithdraw2.Text = encoding_mod.getdataFromReg("txtDoOfferWithdraw2");
					goto IL_09f0;
					IL_0a22:
					num2 = 105;
					txtGboxSub.Text = encoding_mod.getdataFromReg("txtGboxSub");
					break;
					IL_000b:
					num2 = 2;
					txtUssd.Text = encoding_mod.getdataFromReg("ussd01");
					goto IL_0023;
					IL_0023:
					num2 = 3;
					txtUssdc2.Text = encoding_mod.getdataFromReg("ussd02");
					goto IL_003b;
					IL_003b:
					num2 = 4;
					txtUssdc3.Text = encoding_mod.getdataFromReg("ussd03");
					goto IL_0053;
					IL_0053:
					num2 = 5;
					txtUssdc4.Text = encoding_mod.getdataFromReg("ussd04");
					goto IL_006b;
					IL_006b:
					num2 = 6;
					txtUssdc5.Text = encoding_mod.getdataFromReg("ussd05");
					goto IL_0083;
					IL_0083:
					num2 = 7;
					txtUssdc6.Text = encoding_mod.getdataFromReg("ussd06");
					goto IL_009b;
					IL_009b:
					num2 = 8;
					txtUssdc7.Text = encoding_mod.getdataFromReg("ussd07");
					goto IL_00b3;
					IL_00b3:
					num2 = 9;
					txtUssdc8.Text = encoding_mod.getdataFromReg("ussd08");
					goto IL_00cc;
					IL_00cc:
					num2 = 10;
					txtUssdc9.Text = encoding_mod.getdataFromReg("ussd09");
					goto IL_00e5;
					IL_00e5:
					num2 = 11;
					txtUssdc10.Text = encoding_mod.getdataFromReg("ussd10");
					goto IL_00fe;
					IL_00fe:
					num2 = 12;
					txtPass.Text = encoding_mod.getdataFromReg("vc001");
					goto IL_0117;
					IL_0117:
					num2 = 13;
					txtPassEC.Text = encoding_mod.getdataFromReg("vc001EC");
					goto IL_0130;
					IL_0130:
					num2 = 14;
					txtwait.Text = encoding_mod.getdataFromReg("vc002");
					goto IL_0149;
					IL_0149:
					num2 = 15;
					txtMS01.Text = encoding_mod.getdataFromReg("vcms001");
					goto IL_0162;
					IL_0162:
					num2 = 16;
					txtMS02.Text = encoding_mod.getdataFromReg("SpNum9");
					goto IL_017b;
					IL_017b:
					num2 = 17;
					txtPassMs.Text = encoding_mod.getdataFromReg("vcms004");
					goto IL_0194;
					IL_0194:
					num2 = 18;
					txtSpNum1.Text = encoding_mod.getdataFromReg("SpNum1");
					goto IL_01ad;
					IL_01ad:
					num2 = 19;
					txtSpNum2.Text = encoding_mod.getdataFromReg("SpNum2");
					goto IL_01c6;
					IL_01c6:
					num2 = 20;
					txtSpNum3.Text = encoding_mod.getdataFromReg("SpNum3");
					goto IL_01df;
					IL_01df:
					num2 = 21;
					txtSpNum4.Text = encoding_mod.getdataFromReg("SpNum4");
					goto IL_01f8;
					IL_01f8:
					num2 = 22;
					txtSpNum5.Text = encoding_mod.getdataFromReg("SpNum5");
					goto IL_0211;
					IL_0211:
					num2 = 23;
					txtSpNum6.Text = encoding_mod.getdataFromReg("SpNum6");
					goto IL_022a;
					IL_022a:
					num2 = 24;
					txtTransNum.Text = encoding_mod.getdataFromReg("SpNum7");
					goto IL_0243;
					IL_0243:
					num2 = 25;
					txtGftLmt.Text = encoding_mod.getdataFromReg("SpNum8");
					goto IL_025c;
					IL_025c:
					num2 = 26;
					txtMoneyMS2.Text = encoding_mod.getdataFromReg("SpNum11");
					goto IL_0275;
					IL_0275:
					num2 = 27;
					txtMoneyMS3.Text = encoding_mod.getdataFromReg("SpNum12");
					goto IL_028e;
					IL_028e:
					num2 = 28;
					txtMoneyMS4.Text = encoding_mod.getdataFromReg("SpNum13");
					goto IL_02a7;
					IL_02a7:
					num2 = 29;
					txtMoneyMS5.Text = encoding_mod.getdataFromReg("SpNum14");
					goto IL_02c0;
					IL_02c0:
					num2 = 30;
					txtMoneyMS6.Text = encoding_mod.getdataFromReg("SpNum15");
					goto IL_02d9;
					IL_02d9:
					num2 = 31;
					txtMoneyMS3Dly.Text = encoding_mod.getdataFromReg("SpNum12d");
					goto IL_02f2;
					IL_02f2:
					num2 = 32;
					txtMoneyMS4Dly.Text = encoding_mod.getdataFromReg("SpNum13d");
					goto IL_030b;
					IL_030b:
					num2 = 33;
					txtMoneyMS5Dly.Text = encoding_mod.getdataFromReg("SpNum14d");
					goto IL_0324;
					IL_0324:
					num2 = 34;
					txtMoneyMS6Dly.Text = encoding_mod.getdataFromReg("SpNum15d");
					goto IL_033d;
					IL_033d:
					num2 = 35;
					txtOtransACC.Text = encoding_mod.getdataFromReg("orngacc");
					goto IL_0356;
					IL_0356:
					num2 = 36;
					txtOtransRem.Text = encoding_mod.getdataFromReg("orngrem");
					goto IL_036f;
					IL_036f:
					num2 = 37;
					txtOtransMP.Text = encoding_mod.getdataFromReg("orngpay");
					goto IL_0388;
					IL_0388:
					num2 = 38;
					txtTransNum2.Text = encoding_mod.getdataFromReg("txtTransNum2");
					goto IL_03a1;
					IL_03a1:
					num2 = 39;
					txtTransNum2Con.Text = encoding_mod.getdataFromReg("txtTransNum2con");
					goto IL_03ba;
					IL_03ba:
					num2 = 40;
					txtMonyMn.Text = encoding_mod.getdataFromReg("txtMonyMn");
					goto IL_03d3;
					IL_03d3:
					num2 = 41;
					txtTransNumP.Text = encoding_mod.getdataFromReg("txtTransNumP");
					goto IL_03ec;
					IL_03ec:
					num2 = 42;
					txtMonyMn365.Text = encoding_mod.getdataFromReg("txtMonyMn365");
					goto IL_0405;
					IL_0405:
					num2 = 43;
					txtTransNum2365.Text = encoding_mod.getdataFromReg("txtTransNum2365");
					goto IL_041e;
					IL_041e:
					num2 = 44;
					txtGetgft365.Text = encoding_mod.getdataFromReg("txtGetgft365");
					goto IL_0437;
					IL_0437:
					num2 = 45;
					txtLoopFSD365.Text = encoding_mod.getdataFromReg("txtLoopFSD365");
					goto IL_0450;
					IL_0450:
					num2 = 46;
					txtTransNum2365Gft.Text = encoding_mod.getdataFromReg("txtTransNum2365Gft");
					goto IL_0469;
					IL_0469:
					num2 = 47;
					txtVCForceMony365.Text = encoding_mod.getdataFromReg("txtVCForceMony365");
					goto IL_0482;
					IL_0482:
					num2 = 48;
					txtTransNum2365_n.Text = encoding_mod.getdataFromReg("txtTransNum2365_n");
					goto IL_049b;
					IL_049b:
					num2 = 49;
					cmbPrinter.Text = encoding_mod.getdataFromReg("cmbPrinter");
					goto IL_04b4;
					IL_04b4:
					num2 = 50;
					txtGetgft365_2.Text = encoding_mod.getdataFromReg("txtGetgft365_2");
					goto IL_04cd;
					IL_04cd:
					num2 = 51;
					txtGetgft365_f.Text = encoding_mod.getdataFromReg("txtGetgft365_f");
					goto IL_04e6;
					IL_04e6:
					num2 = 52;
					txtDelayInSC.Text = encoding_mod.getdataFromReg("txtDelayInSC");
					goto IL_04ff;
					IL_04ff:
					num2 = 53;
					txtTransP.Text = encoding_mod.getdataFromReg("txtTransP");
					goto IL_0518;
					IL_0518:
					num2 = 54;
					txtOnValue.Text = encoding_mod.getdataFromReg("txtOnValue");
					goto IL_0531;
					IL_0531:
					num2 = 55;
					txtTayerPass.Text = encoding_mod.getdataFromReg("txtTayerPass");
					goto IL_054a;
					IL_054a:
					num2 = 56;
					txtOCPass.Text = encoding_mod.getdataFromReg("txtOCPass");
					goto IL_0563;
					IL_0563:
					num2 = 57;
					txtOCchargeNum1.Text = encoding_mod.getdataFromReg("txtOCchargeNum1");
					goto IL_057c;
					IL_057c:
					num2 = 58;
					txtOCchargeNum2.Text = encoding_mod.getdataFromReg("txtOCchargeNum2");
					goto IL_0595;
					IL_0595:
					num2 = 59;
					txtOCchargeNum3.Text = encoding_mod.getdataFromReg("txtOCchargeNum3");
					goto IL_05ae;
					IL_05ae:
					num2 = 60;
					txtOCchargeNum4.Text = encoding_mod.getdataFromReg("txtOCchargeNum4");
					goto IL_05c7;
					IL_05c7:
					num2 = 61;
					txtOCchargeNum5.Text = encoding_mod.getdataFromReg("txtOCchargeNum5");
					goto IL_05e0;
					IL_05e0:
					num2 = 62;
					txtOCchargeNum6.Text = encoding_mod.getdataFromReg("txtOCchargeNum6");
					goto IL_05f9;
					IL_05f9:
					num2 = 63;
					txtOCTopValue.Text = encoding_mod.getdataFromReg("txtOCTopValue");
					goto IL_0612;
					IL_0612:
					num2 = 64;
					txtOCValue.Text = encoding_mod.getdataFromReg("txtOCValue");
					goto IL_062b;
					IL_062b:
					num2 = 65;
					txtOCSub.Text = encoding_mod.getdataFromReg("txtOCSub");
					goto IL_0644;
					IL_0644:
					num2 = 66;
					ckOCSub.Checked = Conversions.ToBoolean(encoding_mod.getdataFromReg("ckOCSub"));
					goto IL_0662;
					IL_0662:
					num2 = 67;
					ckOCSubAuto.Checked = Conversions.ToBoolean(encoding_mod.getdataFromReg("ckOCSubAuto"));
					goto IL_0680;
					IL_0680:
					num2 = 68;
					ckUseNextMain.Checked = Conversions.ToBoolean(encoding_mod.getdataFromReg("ckUseNextMain"));
					goto IL_069e;
					IL_069e:
					num2 = 69;
					txtOCPassMaster.Text = encoding_mod.getdataFromReg("txtOCPassMaster");
					goto IL_06b7;
					IL_06b7:
					num2 = 70;
					txtOCMValue.Text = encoding_mod.getdataFromReg("txtOCMValue");
					goto IL_06d0;
					IL_06d0:
					num2 = 71;
					lblOCMMain.Text = encoding_mod.getdataFromReg("lblOCMMain");
					goto IL_06e9;
					IL_06e9:
					num2 = 72;
					txtOTyrPass.Text = encoding_mod.getdataFromReg("txtOTyrPass");
					goto IL_0702;
					IL_0702:
					num2 = 73;
					txtMacro1.Text = encoding_mod.getdataFromReg("txtMacro1");
					goto IL_071b;
					IL_071b:
					num2 = 74;
					txtMacro2.Text = encoding_mod.getdataFromReg("txtMacro2");
					goto IL_0734;
					IL_0734:
					num2 = 75;
					txtMacro3.Text = encoding_mod.getdataFromReg("txtMacro3");
					goto IL_074d;
					IL_074d:
					num2 = 76;
					txtMacro4.Text = encoding_mod.getdataFromReg("txtMacro4");
					goto IL_0766;
					IL_0766:
					num2 = 77;
					txtMacro5.Text = encoding_mod.getdataFromReg("txtMacro5");
					goto IL_077f;
					IL_077f:
					num2 = 78;
					txtMacro6.Text = encoding_mod.getdataFromReg("txtMacro6");
					goto IL_0798;
					IL_0798:
					num2 = 79;
					txtMacro7.Text = encoding_mod.getdataFromReg("txtMacro7");
					goto IL_07b1;
					IL_07b1:
					num2 = 80;
					txtMacro8.Text = encoding_mod.getdataFromReg("txtMacro8");
					goto IL_07ca;
					IL_07ca:
					num2 = 81;
					txtMacro9.Text = encoding_mod.getdataFromReg("txtMacro9");
					goto IL_07e3;
					IL_07e3:
					num2 = 82;
					txtMacro10.Text = encoding_mod.getdataFromReg("txtMacro10");
					goto IL_07fc;
					IL_07fc:
					num2 = 83;
					txtMacro11.Text = encoding_mod.getdataFromReg("txtMacro11");
					goto IL_0815;
					IL_0815:
					num2 = 84;
					txtMacro12.Text = encoding_mod.getdataFromReg("txtMacro12");
					goto IL_082e;
					IL_082e:
					num2 = 85;
					txtMacro13.Text = encoding_mod.getdataFromReg("txtMacro13");
					goto IL_0847;
					IL_0847:
					num2 = 86;
					txtMacro14.Text = encoding_mod.getdataFromReg("txtMacro14");
					goto IL_0860;
					IL_0860:
					num2 = 87;
					txtMacro15.Text = encoding_mod.getdataFromReg("txtMacro15");
					goto IL_0879;
					IL_0879:
					num2 = 88;
					txtMacro16.Text = encoding_mod.getdataFromReg("txtMacro16");
					goto IL_0892;
					IL_0892:
					num2 = 89;
					txtOCtopupDelay.Text = encoding_mod.getdataFromReg("txtOCtopupDelay");
					goto IL_08ab;
					IL_08ab:
					num2 = 90;
					txtOCtopupDelayM.Text = encoding_mod.getdataFromReg("txtOCtopupDelayM");
					goto IL_08c4;
					IL_08c4:
					num2 = 91;
					txtOCtopupDelayM2.Text = encoding_mod.getdataFromReg("txtOCtopupDelayM2");
					goto IL_08dd;
					IL_08dd:
					num2 = 92;
					lblOCMain.Text = encoding_mod.getdataFromReg("lblOCMain");
					goto IL_08f6;
					IL_08f6:
					num2 = 93;
					txtOCNextMain.Text = encoding_mod.getdataFromReg("txtOCNextMain");
					goto IL_090f;
					IL_090f:
					num2 = 94;
					lblTayerMain.Text = encoding_mod.getdataFromReg("lblTayerMain");
					goto IL_0928;
					IL_0928:
					num2 = 95;
					lblMain.Text = encoding_mod.getdataFromReg("lblMain");
					goto IL_0941;
					IL_0941:
					num2 = 96;
					txtOtransACC.Text = encoding_mod.getdataFromReg("txtOtransACC");
					goto IL_095a;
					IL_095a:
					num2 = 97;
					txtEtsCashPass.Text = encoding_mod.getdataFromReg("txtEtsCashPass");
					goto IL_0973;
					IL_0973:
					num2 = 98;
					txtOCchargeNumOne.Text = encoding_mod.getdataFromReg("txtOCchargeNumOne");
					goto IL_098c;
					IL_098c:
					num2 = 99;
					txtOCTransferAll.Text = encoding_mod.getdataFromReg("txtOCTransferAll");
					goto IL_09a5;
					IL_09a5:
					num2 = 100;
					txtOCtopupDelayCash.Text = encoding_mod.getdataFromReg("txtOCtopupDelayCash");
					goto IL_09be;
					IL_09be:
					num2 = 101;
					txtDoOfferWithdraw1.Text = encoding_mod.getdataFromReg("txtDoOfferWithdraw1");
					goto IL_09d7;
					end_IL_0001_2:
					break;
				}
				num2 = 106;
				txtGboxQty.Text = encoding_mod.getdataFromReg("txtGboxQty");
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 3093;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetDataInRegVCash()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 4464:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0029;
						case 4:
							goto IL_0046;
						case 5:
							goto IL_0066;
						case 6:
							goto IL_0083;
						case 7:
							goto IL_00a3;
						case 8:
							goto IL_00c0;
						case 9:
							goto IL_00dd;
						case 10:
							goto IL_00fb;
						case 11:
							goto IL_0119;
						case 12:
							goto IL_0137;
						case 13:
							goto IL_0155;
						case 14:
							goto IL_0173;
						case 15:
							goto IL_0191;
						case 16:
							goto IL_01af;
						case 17:
							goto IL_01cd;
						case 18:
							goto IL_01eb;
						case 19:
							goto IL_0209;
						case 20:
							goto IL_0227;
						case 21:
							goto IL_0245;
						case 22:
							goto IL_0263;
						case 23:
							goto IL_0281;
						case 24:
							goto IL_029f;
						case 25:
							goto IL_02bd;
						case 26:
							goto IL_02db;
						case 27:
							goto IL_02f9;
						case 28:
							goto IL_0317;
						case 29:
							goto IL_0335;
						case 30:
							goto IL_0353;
						case 31:
							goto IL_0371;
						case 32:
							goto IL_038f;
						case 33:
							goto IL_03ad;
						case 34:
							goto IL_03cb;
						case 35:
							goto IL_03e9;
						case 36:
							goto IL_0407;
						case 37:
							goto IL_0425;
						case 38:
							goto IL_0443;
						case 39:
							goto IL_0461;
						case 40:
							goto IL_047f;
						case 41:
							goto IL_049d;
						case 42:
							goto IL_04bb;
						case 43:
							goto IL_04d9;
						case 44:
							goto IL_04f7;
						case 45:
							goto IL_0515;
						case 46:
							goto IL_0533;
						case 47:
							goto IL_0551;
						case 48:
							goto IL_056f;
						case 49:
							goto IL_058d;
						case 50:
							goto IL_05ab;
						case 51:
							goto IL_05c9;
						case 52:
							goto IL_05e5;
						case 53:
							goto IL_05fe;
						case 54:
							goto IL_061a;
						case 55:
							goto IL_0633;
						case 56:
							goto IL_064f;
						case 57:
							goto IL_0668;
						case 58:
							goto IL_0684;
						case 59:
							goto IL_069d;
						case 60:
							goto IL_06b9;
						case 61:
							goto IL_06d2;
						case 62:
							goto IL_06ee;
						case 63:
							goto IL_0707;
						case 64:
							goto IL_0723;
						case 65:
							goto IL_073c;
						case 66:
							goto IL_0758;
						case 67:
							goto IL_0771;
						case 68:
							goto IL_078d;
						case 69:
							goto IL_07a6;
						case 70:
							goto IL_07c2;
						case 71:
							goto IL_07db;
						case 72:
							goto IL_07f7;
						case 73:
							goto IL_0810;
						case 74:
							goto IL_082c;
						case 75:
							goto IL_0845;
						case 76:
							goto IL_0861;
						case 77:
							goto IL_087a;
						case 78:
							goto IL_0896;
						case 79:
							goto IL_08af;
						case 80:
							goto IL_08cb;
						case 81:
							goto IL_08e4;
						case 82:
							goto IL_0900;
						case 83:
							goto IL_0919;
						case 84:
							goto IL_0935;
						case 85:
							goto IL_094e;
						case 86:
							goto IL_096c;
						case 87:
							goto IL_098a;
						case 88:
							goto IL_09a6;
						case 89:
							goto IL_09bf;
						case 90:
							goto IL_09db;
						case 91:
							goto IL_09f4;
						case 92:
							goto IL_0a0d;
						case 93:
							goto IL_0a26;
						case 94:
							goto IL_0a3f;
						case 95:
							goto IL_0a58;
						case 96:
							goto IL_0a71;
						case 97:
							goto IL_0a8a;
						case 98:
							goto IL_0aa3;
						case 99:
							goto IL_0abc;
						case 100:
							goto IL_0ad5;
						case 101:
							goto IL_0aee;
						case 102:
							goto IL_0b07;
						case 103:
							goto IL_0b25;
						case 104:
							goto IL_0b43;
						case 105:
							goto IL_0b5c;
						case 106:
							goto IL_0b75;
						case 107:
							goto IL_0b8e;
						case 108:
							goto IL_0ba7;
						case 109:
							goto IL_0bc0;
						case 110:
							goto IL_0bd9;
						case 111:
							goto IL_0bf2;
						case 112:
							goto IL_0c0b;
						case 113:
							goto IL_0c24;
						case 114:
							goto IL_0c3d;
						case 115:
							goto IL_0c56;
						case 116:
							goto IL_0c6f;
						case 117:
							goto IL_0c88;
						case 118:
							goto IL_0ca1;
						case 119:
							goto IL_0cba;
						case 120:
							goto IL_0cd3;
						case 121:
							goto IL_0cec;
						case 122:
							goto IL_0d05;
						case 123:
							goto IL_0d1e;
						case 124:
							goto IL_0d37;
						case 125:
							goto IL_0d50;
						case 126:
							goto IL_0d69;
						case 127:
							goto IL_0d82;
						case 128:
							goto IL_0d9b;
						case 129:
							goto IL_0db7;
						case 130:
							goto IL_0dd3;
						case 131:
							goto IL_0def;
						case 132:
							goto IL_0e0b;
						case 133:
							goto IL_0e27;
						case 134:
							goto IL_0e43;
						case 135:
							goto IL_0e5f;
						case 136:
							goto IL_0e7b;
						case 137:
							goto IL_0e97;
						case 138:
							goto IL_0eb3;
						case 139:
							goto IL_0ecf;
						case 140:
							goto IL_0eeb;
						case 141:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 142:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0eb3:
					num2 = 138;
					encoding_mod.savedataToReg("txtSMStothisnumber", txtSMStothisnumber.Text);
					goto IL_0ecf;
					IL_0ecf:
					num2 = 139;
					encoding_mod.savedataToReg("txtGboxMain", txtGboxMain.Text);
					goto IL_0eeb;
					IL_0e97:
					num2 = 137;
					encoding_mod.savedataToReg("txtDoOfferWithdraw2", txtDoOfferWithdraw2.Text);
					goto IL_0eb3;
					IL_0eeb:
					num2 = 140;
					encoding_mod.savedataToReg("txtGboxSub", txtGboxSub.Text);
					break;
					IL_000b:
					num2 = 2;
					if (txtPass.Text.Trim().Length > 0)
					{
						goto IL_0029;
					}
					goto IL_0046;
					IL_0029:
					num2 = 3;
					encoding_mod.savedataToReg("VC001", txtPass.Text.Trim());
					goto IL_0046;
					IL_0046:
					num2 = 4;
					if (txtPassEC.Text.Trim().Length > 0)
					{
						goto IL_0066;
					}
					goto IL_0083;
					IL_0066:
					num2 = 5;
					encoding_mod.savedataToReg("VC001EC", txtPassEC.Text.Trim());
					goto IL_0083;
					IL_0083:
					num2 = 6;
					if (txtwait.Text.Trim().Length > 0)
					{
						goto IL_00a3;
					}
					goto IL_00c0;
					IL_00a3:
					num2 = 7;
					encoding_mod.savedataToReg("VC002", txtwait.Text.Trim());
					goto IL_00c0;
					IL_00c0:
					num2 = 8;
					encoding_mod.savedataToReg("VCms001", txtMS01.Text.Trim());
					goto IL_00dd;
					IL_00dd:
					num2 = 9;
					encoding_mod.savedataToReg("VCms004", txtPassMs.Text.Trim());
					goto IL_00fb;
					IL_00fb:
					num2 = 10;
					encoding_mod.savedataToReg("SpNum1", txtSpNum1.Text.Trim());
					goto IL_0119;
					IL_0119:
					num2 = 11;
					encoding_mod.savedataToReg("SpNum2", txtSpNum2.Text.Trim());
					goto IL_0137;
					IL_0137:
					num2 = 12;
					encoding_mod.savedataToReg("SpNum3", txtSpNum3.Text.Trim());
					goto IL_0155;
					IL_0155:
					num2 = 13;
					encoding_mod.savedataToReg("SpNum4", txtSpNum4.Text.Trim());
					goto IL_0173;
					IL_0173:
					num2 = 14;
					encoding_mod.savedataToReg("SpNum5", txtSpNum5.Text.Trim());
					goto IL_0191;
					IL_0191:
					num2 = 15;
					encoding_mod.savedataToReg("SpNum6", txtSpNum6.Text.Trim());
					goto IL_01af;
					IL_01af:
					num2 = 16;
					encoding_mod.savedataToReg("SpNum7", txtTransNum.Text.Trim());
					goto IL_01cd;
					IL_01cd:
					num2 = 17;
					encoding_mod.savedataToReg("txtTransNumP", txtTransNumP.Text.Trim());
					goto IL_01eb;
					IL_01eb:
					num2 = 18;
					encoding_mod.savedataToReg("SpNum8", txtGftLmt.Text.Trim());
					goto IL_0209;
					IL_0209:
					num2 = 19;
					encoding_mod.savedataToReg("SpNum9", txtMS02.Text.Trim());
					goto IL_0227;
					IL_0227:
					num2 = 20;
					encoding_mod.savedataToReg("SpNum11", txtMoneyMS2.Text.Trim());
					goto IL_0245;
					IL_0245:
					num2 = 21;
					encoding_mod.savedataToReg("SpNum12", txtMoneyMS3.Text.Trim());
					goto IL_0263;
					IL_0263:
					num2 = 22;
					encoding_mod.savedataToReg("SpNum13", txtMoneyMS4.Text.Trim());
					goto IL_0281;
					IL_0281:
					num2 = 23;
					encoding_mod.savedataToReg("SpNum14", txtMoneyMS5.Text.Trim());
					goto IL_029f;
					IL_029f:
					num2 = 24;
					encoding_mod.savedataToReg("SpNum15", txtMoneyMS6.Text.Trim());
					goto IL_02bd;
					IL_02bd:
					num2 = 25;
					encoding_mod.savedataToReg("SpNum12d", txtMoneyMS3Dly.Text.Trim());
					goto IL_02db;
					IL_02db:
					num2 = 26;
					encoding_mod.savedataToReg("SpNum13d", txtMoneyMS4Dly.Text.Trim());
					goto IL_02f9;
					IL_02f9:
					num2 = 27;
					encoding_mod.savedataToReg("SpNum14d", txtMoneyMS5Dly.Text.Trim());
					goto IL_0317;
					IL_0317:
					num2 = 28;
					encoding_mod.savedataToReg("SpNum15d", txtMoneyMS6Dly.Text.Trim());
					goto IL_0335;
					IL_0335:
					num2 = 29;
					encoding_mod.savedataToReg("txtTransNum2", txtTransNum2.Text.Trim());
					goto IL_0353;
					IL_0353:
					num2 = 30;
					encoding_mod.savedataToReg("txtTransNum2con", txtTransNum2Con.Text.Trim());
					goto IL_0371;
					IL_0371:
					num2 = 31;
					encoding_mod.savedataToReg("txtMonyMn", txtMonyMn.Text.Trim());
					goto IL_038f;
					IL_038f:
					num2 = 32;
					encoding_mod.savedataToReg("txtTransNum2365", txtTransNum2365.Text.Trim());
					goto IL_03ad;
					IL_03ad:
					num2 = 33;
					encoding_mod.savedataToReg("txtMonyMn365", txtMonyMn365.Text.Trim());
					goto IL_03cb;
					IL_03cb:
					num2 = 34;
					encoding_mod.savedataToReg("txtGetgft365", txtGetgft365.Text.Trim());
					goto IL_03e9;
					IL_03e9:
					num2 = 35;
					encoding_mod.savedataToReg("txtLoopFSD365", txtLoopFSD365.Text.Trim());
					goto IL_0407;
					IL_0407:
					num2 = 36;
					encoding_mod.savedataToReg("txtVCForceMony365", txtVCForceMony365.Text.Trim());
					goto IL_0425;
					IL_0425:
					num2 = 37;
					encoding_mod.savedataToReg("txtTransNum2365Gft", txtTransNum2365Gft.Text.Trim());
					goto IL_0443;
					IL_0443:
					num2 = 38;
					encoding_mod.savedataToReg("txtTransNum2365_n", txtTransNum2365_n.Text.Trim());
					goto IL_0461;
					IL_0461:
					num2 = 39;
					encoding_mod.savedataToReg("cmbPrinter", cmbPrinter.Text.Trim());
					goto IL_047f;
					IL_047f:
					num2 = 40;
					encoding_mod.savedataToReg("txtHn", txtHn.Text.Trim());
					goto IL_049d;
					IL_049d:
					num2 = 41;
					encoding_mod.savedataToReg("txtW", txtW.Text.Trim());
					goto IL_04bb;
					IL_04bb:
					num2 = 42;
					encoding_mod.savedataToReg("txtH", txtH.Text.Trim());
					goto IL_04d9;
					IL_04d9:
					num2 = 43;
					encoding_mod.savedataToReg("txtBar_x", txtBar_x.Text.Trim());
					goto IL_04f7;
					IL_04f7:
					num2 = 44;
					encoding_mod.savedataToReg("txtBar_H", txtBar_H.Text.Trim());
					goto IL_0515;
					IL_0515:
					num2 = 45;
					encoding_mod.savedataToReg("txtBar_y", txtBar_y.Text.Trim());
					goto IL_0533;
					IL_0533:
					num2 = 46;
					encoding_mod.savedataToReg("txtBar_tk", txtBar_tk.Text.Trim());
					goto IL_0551;
					IL_0551:
					num2 = 47;
					encoding_mod.savedataToReg("txtBar_tn", txtBar_tn.Text.Trim());
					goto IL_056f;
					IL_056f:
					num2 = 48;
					encoding_mod.savedataToReg("txtGetgft365_2", txtGetgft365_2.Text.Trim());
					goto IL_058d;
					IL_058d:
					num2 = 49;
					encoding_mod.savedataToReg("txtGetgft365_f", txtGetgft365_f.Text.Trim());
					goto IL_05ab;
					IL_05ab:
					num2 = 50;
					encoding_mod.savedataToReg("txtDelayInSC", txtDelayInSC.Text.Trim());
					goto IL_05c9;
					IL_05c9:
					num2 = 51;
					if (txtUssd.Text.Length > 0)
					{
						goto IL_05e5;
					}
					goto IL_05fe;
					IL_05e5:
					num2 = 52;
					encoding_mod.savedataToReg("ussd01", txtUssd.Text);
					goto IL_05fe;
					IL_05fe:
					num2 = 53;
					if (txtUssdc2.Text.Length > 0)
					{
						goto IL_061a;
					}
					goto IL_0633;
					IL_061a:
					num2 = 54;
					encoding_mod.savedataToReg("ussd02", txtUssdc2.Text);
					goto IL_0633;
					IL_0633:
					num2 = 55;
					if (txtUssdc3.Text.Length > 0)
					{
						goto IL_064f;
					}
					goto IL_0668;
					IL_064f:
					num2 = 56;
					encoding_mod.savedataToReg("ussd03", txtUssdc3.Text);
					goto IL_0668;
					IL_0668:
					num2 = 57;
					if (txtUssdc4.Text.Length > 0)
					{
						goto IL_0684;
					}
					goto IL_069d;
					IL_0684:
					num2 = 58;
					encoding_mod.savedataToReg("ussd04", txtUssdc4.Text);
					goto IL_069d;
					IL_069d:
					num2 = 59;
					if (txtUssdc5.Text.Length > 0)
					{
						goto IL_06b9;
					}
					goto IL_06d2;
					IL_06b9:
					num2 = 60;
					encoding_mod.savedataToReg("ussd05", txtUssdc5.Text);
					goto IL_06d2;
					IL_06d2:
					num2 = 61;
					if (txtUssdc6.Text.Length > 0)
					{
						goto IL_06ee;
					}
					goto IL_0707;
					IL_06ee:
					num2 = 62;
					encoding_mod.savedataToReg("ussd06", txtUssdc6.Text);
					goto IL_0707;
					IL_0707:
					num2 = 63;
					if (txtUssdc7.Text.Length > 0)
					{
						goto IL_0723;
					}
					goto IL_073c;
					IL_0723:
					num2 = 64;
					encoding_mod.savedataToReg("ussd07", txtUssdc7.Text);
					goto IL_073c;
					IL_073c:
					num2 = 65;
					if (txtUssdc8.Text.Length > 0)
					{
						goto IL_0758;
					}
					goto IL_0771;
					IL_0758:
					num2 = 66;
					encoding_mod.savedataToReg("ussd08", txtUssdc8.Text);
					goto IL_0771;
					IL_0771:
					num2 = 67;
					if (txtUssdc9.Text.Length > 0)
					{
						goto IL_078d;
					}
					goto IL_07a6;
					IL_078d:
					num2 = 68;
					encoding_mod.savedataToReg("ussd09", txtUssdc9.Text);
					goto IL_07a6;
					IL_07a6:
					num2 = 69;
					if (txtUssdc10.Text.Length > 0)
					{
						goto IL_07c2;
					}
					goto IL_07db;
					IL_07c2:
					num2 = 70;
					encoding_mod.savedataToReg("ussd10", txtUssdc10.Text);
					goto IL_07db;
					IL_07db:
					num2 = 71;
					if (txtOtransACC.Text.Length > 0)
					{
						goto IL_07f7;
					}
					goto IL_0810;
					IL_07f7:
					num2 = 72;
					encoding_mod.savedataToReg("orngacc", txtOtransACC.Text);
					goto IL_0810;
					IL_0810:
					num2 = 73;
					if (txtOtransRem.Text.Length > 0)
					{
						goto IL_082c;
					}
					goto IL_0845;
					IL_082c:
					num2 = 74;
					encoding_mod.savedataToReg("orngrem", txtOtransRem.Text);
					goto IL_0845;
					IL_0845:
					num2 = 75;
					if (txtOtransMP.Text.Length > 0)
					{
						goto IL_0861;
					}
					goto IL_087a;
					IL_0861:
					num2 = 76;
					encoding_mod.savedataToReg("orngpay", txtOtransMP.Text);
					goto IL_087a;
					IL_087a:
					num2 = 77;
					if (txtTransNum2.Text.Length > 0)
					{
						goto IL_0896;
					}
					goto IL_08af;
					IL_0896:
					num2 = 78;
					encoding_mod.savedataToReg("txtTransNum2", txtTransNum2.Text);
					goto IL_08af;
					IL_08af:
					num2 = 79;
					if (txtTransNumP.Text.Length > 0)
					{
						goto IL_08cb;
					}
					goto IL_08e4;
					IL_08cb:
					num2 = 80;
					encoding_mod.savedataToReg("txtTransNumP", txtTransNumP.Text);
					goto IL_08e4;
					IL_08e4:
					num2 = 81;
					if (txtTransNum2Con.Text.Length > 0)
					{
						goto IL_0900;
					}
					goto IL_0919;
					IL_0900:
					num2 = 82;
					encoding_mod.savedataToReg("txtTransNum2con", txtTransNum2Con.Text);
					goto IL_0919;
					IL_0919:
					num2 = 83;
					if (txtMonyMn.Text.Length > 0)
					{
						goto IL_0935;
					}
					goto IL_094e;
					IL_0935:
					num2 = 84;
					encoding_mod.savedataToReg("txtMonyMn", txtMonyMn.Text);
					goto IL_094e;
					IL_094e:
					num2 = 85;
					encoding_mod.savedataToReg("ckTransP", Conversions.ToString(ckTransP.Checked));
					goto IL_096c;
					IL_096c:
					num2 = 86;
					encoding_mod.savedataToReg("ckUseNextMain", Conversions.ToString(ckUseNextMain.Checked));
					goto IL_098a;
					IL_098a:
					num2 = 87;
					if (txtTransP.Text.Length > 0)
					{
						goto IL_09a6;
					}
					goto IL_09bf;
					IL_09a6:
					num2 = 88;
					encoding_mod.savedataToReg("txtTransP", txtTransP.Text);
					goto IL_09bf;
					IL_09bf:
					num2 = 89;
					if (txtOnValue.Text.Length > 0)
					{
						goto IL_09db;
					}
					goto IL_09f4;
					IL_09db:
					num2 = 90;
					encoding_mod.savedataToReg("txtOnValue", txtOnValue.Text);
					goto IL_09f4;
					IL_09f4:
					num2 = 91;
					encoding_mod.savedataToReg("txtTayerPass", txtTayerPass.Text);
					goto IL_0a0d;
					IL_0a0d:
					num2 = 92;
					encoding_mod.savedataToReg("txtOCPass", txtOCPass.Text);
					goto IL_0a26;
					IL_0a26:
					num2 = 93;
					encoding_mod.savedataToReg("txtOCchargeNum1", txtOCchargeNum1.Text);
					goto IL_0a3f;
					IL_0a3f:
					num2 = 94;
					encoding_mod.savedataToReg("txtOCchargeNum2", txtOCchargeNum2.Text);
					goto IL_0a58;
					IL_0a58:
					num2 = 95;
					encoding_mod.savedataToReg("txtOCchargeNum3", txtOCchargeNum3.Text);
					goto IL_0a71;
					IL_0a71:
					num2 = 96;
					encoding_mod.savedataToReg("txtOCchargeNum4", txtOCchargeNum4.Text);
					goto IL_0a8a;
					IL_0a8a:
					num2 = 97;
					encoding_mod.savedataToReg("txtOCchargeNum5", txtOCchargeNum5.Text);
					goto IL_0aa3;
					IL_0aa3:
					num2 = 98;
					encoding_mod.savedataToReg("txtOCchargeNum6", txtOCchargeNum6.Text);
					goto IL_0abc;
					IL_0abc:
					num2 = 99;
					encoding_mod.savedataToReg("txtOCTopValue", txtOCTopValue.Text);
					goto IL_0ad5;
					IL_0ad5:
					num2 = 100;
					encoding_mod.savedataToReg("txtOCValue", txtOCValue.Text);
					goto IL_0aee;
					IL_0aee:
					num2 = 101;
					encoding_mod.savedataToReg("txtOCSub", txtOCSub.Text);
					goto IL_0b07;
					IL_0b07:
					num2 = 102;
					encoding_mod.savedataToReg("ckOCSub", Conversions.ToString(ckOCSub.Checked));
					goto IL_0b25;
					IL_0b25:
					num2 = 103;
					encoding_mod.savedataToReg("ckOCSubAuto", Conversions.ToString(ckOCSubAuto.Checked));
					goto IL_0b43;
					IL_0b43:
					num2 = 104;
					encoding_mod.savedataToReg("txtOCPassMaster", txtOCPassMaster.Text);
					goto IL_0b5c;
					IL_0b5c:
					num2 = 105;
					encoding_mod.savedataToReg("txtOCMValue", txtOCMValue.Text);
					goto IL_0b75;
					IL_0b75:
					num2 = 106;
					encoding_mod.savedataToReg("lblOCMMain", lblOCMMain.Text);
					goto IL_0b8e;
					IL_0b8e:
					num2 = 107;
					encoding_mod.savedataToReg("txtOTyrPass", txtOTyrPass.Text);
					goto IL_0ba7;
					IL_0ba7:
					num2 = 108;
					encoding_mod.savedataToReg("txtMacro1", txtMacro1.Text);
					goto IL_0bc0;
					IL_0bc0:
					num2 = 109;
					encoding_mod.savedataToReg("txtMacro2", txtMacro2.Text);
					goto IL_0bd9;
					IL_0bd9:
					num2 = 110;
					encoding_mod.savedataToReg("txtMacro3", txtMacro3.Text);
					goto IL_0bf2;
					IL_0bf2:
					num2 = 111;
					encoding_mod.savedataToReg("txtMacro4", txtMacro4.Text);
					goto IL_0c0b;
					IL_0c0b:
					num2 = 112;
					encoding_mod.savedataToReg("txtMacro5", txtMacro5.Text);
					goto IL_0c24;
					IL_0c24:
					num2 = 113;
					encoding_mod.savedataToReg("txtMacro6", txtMacro6.Text);
					goto IL_0c3d;
					IL_0c3d:
					num2 = 114;
					encoding_mod.savedataToReg("txtMacro7", txtMacro7.Text);
					goto IL_0c56;
					IL_0c56:
					num2 = 115;
					encoding_mod.savedataToReg("txtMacro8", txtMacro8.Text);
					goto IL_0c6f;
					IL_0c6f:
					num2 = 116;
					encoding_mod.savedataToReg("txtMacro9", txtMacro9.Text);
					goto IL_0c88;
					IL_0c88:
					num2 = 117;
					encoding_mod.savedataToReg("txtMacro10", txtMacro10.Text);
					goto IL_0ca1;
					IL_0ca1:
					num2 = 118;
					encoding_mod.savedataToReg("txtMacro11", txtMacro11.Text);
					goto IL_0cba;
					IL_0cba:
					num2 = 119;
					encoding_mod.savedataToReg("txtMacro12", txtMacro12.Text);
					goto IL_0cd3;
					IL_0cd3:
					num2 = 120;
					encoding_mod.savedataToReg("txtMacro13", txtMacro13.Text);
					goto IL_0cec;
					IL_0cec:
					num2 = 121;
					encoding_mod.savedataToReg("txtMacro14", txtMacro14.Text);
					goto IL_0d05;
					IL_0d05:
					num2 = 122;
					encoding_mod.savedataToReg("txtMacro15", txtMacro15.Text);
					goto IL_0d1e;
					IL_0d1e:
					num2 = 123;
					encoding_mod.savedataToReg("txtMacro16", txtMacro16.Text);
					goto IL_0d37;
					IL_0d37:
					num2 = 124;
					encoding_mod.savedataToReg("txtOCtopupDelay", txtOCtopupDelay.Text);
					goto IL_0d50;
					IL_0d50:
					num2 = 125;
					encoding_mod.savedataToReg("txtOCtopupDelayM", txtOCtopupDelayM.Text);
					goto IL_0d69;
					IL_0d69:
					num2 = 126;
					encoding_mod.savedataToReg("txtOCtopupDelayM2", txtOCtopupDelayM2.Text);
					goto IL_0d82;
					IL_0d82:
					num2 = 127;
					encoding_mod.savedataToReg("lblOCMain", lblOCMain.Text);
					goto IL_0d9b;
					IL_0d9b:
					num2 = 128;
					encoding_mod.savedataToReg("txtOCNextMain", txtOCNextMain.Text);
					goto IL_0db7;
					IL_0db7:
					num2 = 129;
					encoding_mod.savedataToReg("lblTayerMain", lblTayerMain.Text);
					goto IL_0dd3;
					IL_0dd3:
					num2 = 130;
					encoding_mod.savedataToReg("lblMain", lblMain.Text);
					goto IL_0def;
					IL_0def:
					num2 = 131;
					encoding_mod.savedataToReg("txtOtransACC", txtOtransACC.Text);
					goto IL_0e0b;
					IL_0e0b:
					num2 = 132;
					encoding_mod.savedataToReg("txtEtsCashPass", txtEtsCashPass.Text);
					goto IL_0e27;
					IL_0e27:
					num2 = 133;
					encoding_mod.savedataToReg("txtOCchargeNumOne", txtOCchargeNumOne.Text);
					goto IL_0e43;
					IL_0e43:
					num2 = 134;
					encoding_mod.savedataToReg("txtOCTransferAll", txtOCTransferAll.Text);
					goto IL_0e5f;
					IL_0e5f:
					num2 = 135;
					encoding_mod.savedataToReg("txtOCtopupDelayCash", txtOCtopupDelayCash.Text);
					goto IL_0e7b;
					IL_0e7b:
					num2 = 136;
					encoding_mod.savedataToReg("txtDoOfferWithdraw1", txtDoOfferWithdraw1.Text);
					goto IL_0e97;
					end_IL_0001_2:
					break;
				}
				num2 = 141;
				encoding_mod.savedataToReg("txtGboxQty", txtGboxQty.Text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 4464;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void TryToConnect()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string left = default(string);
		string text = default(string);
		ManagementObjectSearcher managementObjectSearcher = default(ManagementObjectSearcher);
		ManagementObjectCollection managementObjectCollection = default(ManagementObjectCollection);
		ManagementObjectCollection.ManagementObjectEnumerator enumerator = default(ManagementObjectCollection.ManagementObjectEnumerator);
		ManagementObject managementObject = default(ManagementObject);
		string text2 = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1289:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0014;
						case 4:
							goto IL_0027;
						case 5:
							goto IL_0032;
						case 7:
							goto IL_004a;
						case 8:
							goto IL_0068;
						case 10:
						case 11:
							goto IL_0130;
						case 12:
							goto IL_0159;
						case 13:
							goto IL_018a;
						case 14:
							goto IL_01aa;
						case 15:
							goto IL_01b0;
						case 16:
							goto IL_01c4;
						case 17:
							goto IL_01d8;
						case 18:
							goto IL_01ec;
						case 19:
							goto IL_0200;
						case 20:
							goto IL_0206;
						case 21:
							goto IL_021e;
						case 22:
							goto IL_0245;
						case 23:
							goto IL_0256;
						case 24:
							goto IL_0266;
						case 26:
							goto IL_0275;
						case 27:
							goto IL_029c;
						case 28:
							goto IL_02ad;
						case 30:
							goto IL_02c3;
						case 31:
							goto IL_02ea;
						case 32:
							goto IL_02fb;
						case 34:
							goto IL_0311;
						case 35:
							goto IL_0338;
						case 36:
							goto IL_0349;
						case 38:
							goto IL_035f;
						case 39:
							goto IL_0386;
						case 40:
							goto IL_0397;
						case 42:
							goto IL_03aa;
						case 43:
							goto IL_03d1;
						case 44:
							goto IL_03e2;
						case 25:
						case 29:
						case 33:
						case 37:
						case 41:
						case 45:
						case 46:
							goto IL_03f3;
						case 47:
						case 48:
						case 49:
						case 50:
							goto IL_0402;
						case 51:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 6:
						case 9:
						case 52:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_03d1:
					num2 = 43;
					lblPort6.Text = left;
					goto IL_03e2;
					IL_03e2:
					num2 = 44;
					TryToIdntyThisModem(lblPort6);
					goto IL_03f3;
					IL_03aa:
					num2 = 42;
					if (Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_03d1;
					}
					goto IL_03f3;
					IL_03f3:
					num2 = 46;
					Application.DoEvents();
					goto IL_0402;
					IL_000b:
					num2 = 2;
					text = "";
					goto IL_0014;
					IL_0014:
					num2 = 3;
					managementObjectSearcher = new ManagementObjectSearcher("root\\CIMV2", "SELECT * FROM Win32_PnPEntity");
					goto IL_0027;
					IL_0027:
					num2 = 4;
					managementObjectCollection = managementObjectSearcher.Get();
					goto IL_0032;
					IL_0032:
					num2 = 5;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_004a;
					IL_004a:
					num2 = 7;
					enumerator = managementObjectCollection.GetEnumerator();
					goto IL_0405;
					IL_0405:
					if (!enumerator.MoveNext())
					{
						break;
					}
					managementObject = (ManagementObject)enumerator.Current;
					goto IL_0068;
					IL_0402:
					num2 = 50;
					goto IL_0405;
					IL_0068:
					num2 = 8;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0))
					{
						goto end_IL_0001_3;
					}
					goto IL_0130;
					IL_0130:
					num2 = 11;
					if (Operators.ConditionalCompareObjectNotEqual(managementObject.Properties["name"].Value, null, TextCompare: false))
					{
						goto IL_0159;
					}
					goto IL_0402;
					IL_0159:
					num2 = 12;
					if (Conversions.ToString(managementObject.Properties["name"].Value).Contains("ZTE NMEA Device"))
					{
						goto IL_018a;
					}
					goto IL_0402;
					IL_018a:
					num2 = 13;
					text = Conversions.ToString(managementObject.Properties["name"].Value);
					goto IL_01aa;
					IL_01aa:
					num2 = 14;
					text2 = text;
					goto IL_01b0;
					IL_01b0:
					num2 = 15;
					text2 = text2.Replace("ZTE NMEA Device", "");
					goto IL_01c4;
					IL_01c4:
					num2 = 16;
					text2 = text2.Replace("(", "");
					goto IL_01d8;
					IL_01d8:
					num2 = 17;
					text2 = text2.Replace(")", "");
					goto IL_01ec;
					IL_01ec:
					num2 = 18;
					text2 = text2.Replace(" ", "");
					goto IL_0200;
					IL_0200:
					num2 = 19;
					left = text2;
					goto IL_0206;
					IL_0206:
					num2 = 20;
					if (Operators.CompareString(left, null, TextCompare: false) != 0)
					{
						goto IL_021e;
					}
					goto IL_0402;
					IL_021e:
					num2 = 21;
					if (Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_0245;
					}
					goto IL_0275;
					IL_0245:
					num2 = 22;
					lblPort1.Text = left;
					goto IL_0256;
					IL_0256:
					num2 = 23;
					TryToIdntyThisModem(lblPort1);
					goto IL_0266;
					IL_0266:
					num2 = 24;
					Application.DoEvents();
					goto IL_03f3;
					IL_0275:
					num2 = 26;
					if (Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_029c;
					}
					goto IL_02c3;
					IL_029c:
					num2 = 27;
					lblPort2.Text = left;
					goto IL_02ad;
					IL_02ad:
					num2 = 28;
					TryToIdntyThisModem(lblPort2);
					goto IL_03f3;
					IL_02c3:
					num2 = 30;
					if (Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_02ea;
					}
					goto IL_0311;
					IL_02ea:
					num2 = 31;
					lblPort3.Text = left;
					goto IL_02fb;
					IL_02fb:
					num2 = 32;
					TryToIdntyThisModem(lblPort3);
					goto IL_03f3;
					IL_0311:
					num2 = 34;
					if (Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_0338;
					}
					goto IL_035f;
					IL_0338:
					num2 = 35;
					lblPort4.Text = left;
					goto IL_0349;
					IL_0349:
					num2 = 36;
					TryToIdntyThisModem(lblPort4);
					goto IL_03f3;
					IL_035f:
					num2 = 38;
					if (Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_0386;
					}
					goto IL_03aa;
					IL_0386:
					num2 = 39;
					lblPort5.Text = left;
					goto IL_0397;
					IL_0397:
					num2 = 40;
					TryToIdntyThisModem(lblPort5);
					goto IL_03f3;
					end_IL_0001_2:
					break;
				}
				num2 = 51;
				((IDisposable)enumerator)?.Dispose();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1289;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void TryToConnectFast()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string left = default(string);
		string text = default(string);
		ManagementObjectSearcher managementObjectSearcher = default(ManagementObjectSearcher);
		ManagementObjectCollection managementObjectCollection = default(ManagementObjectCollection);
		ManagementObjectCollection.ManagementObjectEnumerator enumerator = default(ManagementObjectCollection.ManagementObjectEnumerator);
		ManagementObject managementObject = default(ManagementObject);
		string text2 = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1121:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0014;
						case 4:
							goto IL_0027;
						case 5:
							goto IL_0032;
						case 6:
							goto IL_0050;
						case 8:
						case 9:
							goto IL_0118;
						case 10:
							goto IL_0141;
						case 11:
							goto IL_0172;
						case 12:
							goto IL_0192;
						case 13:
							goto IL_0198;
						case 14:
							goto IL_01ac;
						case 15:
							goto IL_01c0;
						case 16:
							goto IL_01d4;
						case 17:
							goto IL_01e8;
						case 18:
							goto IL_01ee;
						case 19:
							goto IL_0206;
						case 20:
							goto IL_022d;
						case 22:
							goto IL_0244;
						case 23:
							goto IL_026b;
						case 25:
							goto IL_0282;
						case 26:
							goto IL_02a9;
						case 28:
							goto IL_02c0;
						case 29:
							goto IL_02e7;
						case 31:
							goto IL_02fb;
						case 32:
							goto IL_0322;
						case 34:
							goto IL_0336;
						case 35:
							goto IL_035d;
						case 21:
						case 24:
						case 27:
						case 30:
						case 33:
						case 36:
						case 37:
							goto IL_036f;
						case 38:
						case 39:
						case 40:
						case 41:
							goto IL_037e;
						case 42:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 7:
						case 43:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0336:
					num2 = 34;
					if (Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_035d;
					}
					goto IL_036f;
					IL_035d:
					num2 = 35;
					lblPort6.Text = left;
					goto IL_036f;
					IL_0322:
					num2 = 32;
					lblPort5.Text = left;
					goto IL_036f;
					IL_036f:
					num2 = 37;
					Application.DoEvents();
					goto IL_037e;
					IL_000b:
					num2 = 2;
					text = "";
					goto IL_0014;
					IL_0014:
					num2 = 3;
					managementObjectSearcher = new ManagementObjectSearcher("root\\CIMV2", "SELECT * FROM Win32_PnPEntity");
					goto IL_0027;
					IL_0027:
					num2 = 4;
					managementObjectCollection = managementObjectSearcher.Get();
					goto IL_0032;
					IL_0032:
					num2 = 5;
					enumerator = managementObjectCollection.GetEnumerator();
					goto IL_0381;
					IL_0381:
					if (!enumerator.MoveNext())
					{
						break;
					}
					managementObject = (ManagementObject)enumerator.Current;
					goto IL_0050;
					IL_037e:
					num2 = 41;
					goto IL_0381;
					IL_0050:
					num2 = 6;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0))
					{
						goto end_IL_0001_3;
					}
					goto IL_0118;
					IL_0118:
					num2 = 9;
					if (Operators.ConditionalCompareObjectNotEqual(managementObject.Properties["name"].Value, null, TextCompare: false))
					{
						goto IL_0141;
					}
					goto IL_037e;
					IL_0141:
					num2 = 10;
					if (Conversions.ToString(managementObject.Properties["name"].Value).Contains("ZTE NMEA Device"))
					{
						goto IL_0172;
					}
					goto IL_037e;
					IL_0172:
					num2 = 11;
					text = Conversions.ToString(managementObject.Properties["name"].Value);
					goto IL_0192;
					IL_0192:
					num2 = 12;
					text2 = text;
					goto IL_0198;
					IL_0198:
					num2 = 13;
					text2 = text2.Replace("ZTE NMEA Device", "");
					goto IL_01ac;
					IL_01ac:
					num2 = 14;
					text2 = text2.Replace("(", "");
					goto IL_01c0;
					IL_01c0:
					num2 = 15;
					text2 = text2.Replace(")", "");
					goto IL_01d4;
					IL_01d4:
					num2 = 16;
					text2 = text2.Replace(" ", "");
					goto IL_01e8;
					IL_01e8:
					num2 = 17;
					left = text2;
					goto IL_01ee;
					IL_01ee:
					num2 = 18;
					if (Operators.CompareString(left, null, TextCompare: false) != 0)
					{
						goto IL_0206;
					}
					goto IL_037e;
					IL_0206:
					num2 = 19;
					if (Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_022d;
					}
					goto IL_0244;
					IL_022d:
					num2 = 20;
					lblPort1.Text = left;
					goto IL_036f;
					IL_0244:
					num2 = 22;
					if (Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_026b;
					}
					goto IL_0282;
					IL_026b:
					num2 = 23;
					lblPort2.Text = left;
					goto IL_036f;
					IL_0282:
					num2 = 25;
					if (Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_02a9;
					}
					goto IL_02c0;
					IL_02a9:
					num2 = 26;
					lblPort3.Text = left;
					goto IL_036f;
					IL_02c0:
					num2 = 28;
					if (Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_02e7;
					}
					goto IL_02fb;
					IL_02e7:
					num2 = 29;
					lblPort4.Text = left;
					goto IL_036f;
					IL_02fb:
					num2 = 31;
					if (Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_0322;
					}
					goto IL_0336;
					end_IL_0001_2:
					break;
				}
				num2 = 42;
				((IDisposable)enumerator)?.Dispose();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1121;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void TryToIdntyThisModem(Label ExxcNum)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					if (chkStop.Checked)
					{
						goto end_IL_0001;
					}
					serialPort = new SerialPort();
					string portName = ExxcNum.Text;
					if (serialPort.IsOpen)
					{
						serialPort.Close();
					}
					serialPort.PortName = portName;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					ExxcNum.ForeColor = Color.White;
					serialPort.WriteLine("AT+Cfun=1\r");
					Application.DoEvents();
					Thread.Sleep(400);
					serialPort.WriteLine("AT+CPMS=\"SM\",\"SM\",\"SM\"\r");
					Thread.Sleep(200);
					serialPort.WriteLine("AT+CIMI\r");
					Application.DoEvents();
					Thread.Sleep(500);
					string text = serialPort.ReadExisting();
					if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
					{
						txtInfo.Text = text + "\r\n" + txtInfo.Text;
					}
					if (text.Contains("60203"))
					{
						ExxcNum.ForeColor = Color.Green;
						EnableThisCheck(ExxcNum);
					}
					else if (text.Contains("60201"))
					{
						ExxcNum.ForeColor = Color.Orange;
						EnableThisCheck(ExxcNum);
					}
					else if (text.Contains("60202"))
					{
						ExxcNum.ForeColor = Color.Red;
						EnableThisCheck(ExxcNum);
					}
					break;
				}
				case 432:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001_2;
					}
					break;
				}
				Application.DoEvents();
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				break;
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 432;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void TryToConnectfastE303()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string left = default(string);
		string text = default(string);
		ManagementObjectSearcher managementObjectSearcher = default(ManagementObjectSearcher);
		ManagementObjectCollection managementObjectCollection = default(ManagementObjectCollection);
		ManagementObjectCollection.ManagementObjectEnumerator enumerator = default(ManagementObjectCollection.ManagementObjectEnumerator);
		ManagementObject managementObject = default(ManagementObject);
		string text2 = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1121:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0014;
						case 4:
							goto IL_0027;
						case 5:
							goto IL_0032;
						case 6:
							goto IL_0050;
						case 8:
						case 9:
							goto IL_0118;
						case 10:
							goto IL_0141;
						case 11:
							goto IL_0172;
						case 12:
							goto IL_0192;
						case 13:
							goto IL_0198;
						case 14:
							goto IL_01ac;
						case 15:
							goto IL_01c0;
						case 16:
							goto IL_01d4;
						case 17:
							goto IL_01e8;
						case 18:
							goto IL_01ee;
						case 19:
							goto IL_0206;
						case 20:
							goto IL_022d;
						case 22:
							goto IL_0244;
						case 23:
							goto IL_026b;
						case 25:
							goto IL_0282;
						case 26:
							goto IL_02a9;
						case 28:
							goto IL_02c0;
						case 29:
							goto IL_02e7;
						case 31:
							goto IL_02fb;
						case 32:
							goto IL_0322;
						case 34:
							goto IL_0336;
						case 35:
							goto IL_035d;
						case 21:
						case 24:
						case 27:
						case 30:
						case 33:
						case 36:
						case 37:
							goto IL_036f;
						case 38:
						case 39:
						case 40:
						case 41:
							goto IL_037e;
						case 42:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 7:
						case 43:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0336:
					num2 = 34;
					if (Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_035d;
					}
					goto IL_036f;
					IL_035d:
					num2 = 35;
					lblPort6.Text = left;
					goto IL_036f;
					IL_0322:
					num2 = 32;
					lblPort5.Text = left;
					goto IL_036f;
					IL_036f:
					num2 = 37;
					Application.DoEvents();
					goto IL_037e;
					IL_000b:
					num2 = 2;
					text = "";
					goto IL_0014;
					IL_0014:
					num2 = 3;
					managementObjectSearcher = new ManagementObjectSearcher("root\\CIMV2", "SELECT * FROM Win32_PnPEntity");
					goto IL_0027;
					IL_0027:
					num2 = 4;
					managementObjectCollection = managementObjectSearcher.Get();
					goto IL_0032;
					IL_0032:
					num2 = 5;
					enumerator = managementObjectCollection.GetEnumerator();
					goto IL_0381;
					IL_0381:
					if (!enumerator.MoveNext())
					{
						break;
					}
					managementObject = (ManagementObject)enumerator.Current;
					goto IL_0050;
					IL_037e:
					num2 = 41;
					goto IL_0381;
					IL_0050:
					num2 = 6;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0))
					{
						goto end_IL_0001_3;
					}
					goto IL_0118;
					IL_0118:
					num2 = 9;
					if (Operators.ConditionalCompareObjectNotEqual(managementObject.Properties["name"].Value, null, TextCompare: false))
					{
						goto IL_0141;
					}
					goto IL_037e;
					IL_0141:
					num2 = 10;
					if (Conversions.ToString(managementObject.Properties["name"].Value).Contains("HUAWEI Mobile Connect - 3G PC UI Interface"))
					{
						goto IL_0172;
					}
					goto IL_037e;
					IL_0172:
					num2 = 11;
					text = Conversions.ToString(managementObject.Properties["name"].Value);
					goto IL_0192;
					IL_0192:
					num2 = 12;
					text2 = text;
					goto IL_0198;
					IL_0198:
					num2 = 13;
					text2 = text2.Replace("HUAWEI Mobile Connect - 3G PC UI Interface", "");
					goto IL_01ac;
					IL_01ac:
					num2 = 14;
					text2 = text2.Replace("(", "");
					goto IL_01c0;
					IL_01c0:
					num2 = 15;
					text2 = text2.Replace(")", "");
					goto IL_01d4;
					IL_01d4:
					num2 = 16;
					text2 = text2.Replace(" ", "");
					goto IL_01e8;
					IL_01e8:
					num2 = 17;
					left = text2;
					goto IL_01ee;
					IL_01ee:
					num2 = 18;
					if (Operators.CompareString(left, null, TextCompare: false) != 0)
					{
						goto IL_0206;
					}
					goto IL_037e;
					IL_0206:
					num2 = 19;
					if (Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_022d;
					}
					goto IL_0244;
					IL_022d:
					num2 = 20;
					lblPort1.Text = left;
					goto IL_036f;
					IL_0244:
					num2 = 22;
					if (Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_026b;
					}
					goto IL_0282;
					IL_026b:
					num2 = 23;
					lblPort2.Text = left;
					goto IL_036f;
					IL_0282:
					num2 = 25;
					if (Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_02a9;
					}
					goto IL_02c0;
					IL_02a9:
					num2 = 26;
					lblPort3.Text = left;
					goto IL_036f;
					IL_02c0:
					num2 = 28;
					if (Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_02e7;
					}
					goto IL_02fb;
					IL_02e7:
					num2 = 29;
					lblPort4.Text = left;
					goto IL_036f;
					IL_02fb:
					num2 = 31;
					if (Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_0322;
					}
					goto IL_0336;
					end_IL_0001_2:
					break;
				}
				num2 = 42;
				((IDisposable)enumerator)?.Dispose();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1121;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void TryToConnectE303()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string left = default(string);
		string text = default(string);
		ManagementObjectSearcher managementObjectSearcher = default(ManagementObjectSearcher);
		ManagementObjectCollection managementObjectCollection = default(ManagementObjectCollection);
		ManagementObjectCollection.ManagementObjectEnumerator enumerator = default(ManagementObjectCollection.ManagementObjectEnumerator);
		ManagementObject managementObject = default(ManagementObject);
		string text2 = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1244:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0014;
						case 4:
							goto IL_0027;
						case 5:
							goto IL_0032;
						case 6:
							goto IL_0050;
						case 8:
						case 9:
							goto IL_0118;
						case 10:
							goto IL_0141;
						case 11:
							goto IL_0172;
						case 12:
							goto IL_0192;
						case 13:
							goto IL_0198;
						case 14:
							goto IL_01ac;
						case 15:
							goto IL_01c0;
						case 16:
							goto IL_01d4;
						case 17:
							goto IL_01e8;
						case 18:
							goto IL_01ee;
						case 19:
							goto IL_0206;
						case 20:
							goto IL_022d;
						case 21:
							goto IL_023e;
						case 23:
							goto IL_0254;
						case 24:
							goto IL_027b;
						case 25:
							goto IL_028c;
						case 27:
							goto IL_02a2;
						case 28:
							goto IL_02c9;
						case 29:
							goto IL_02da;
						case 31:
							goto IL_02f0;
						case 32:
							goto IL_0317;
						case 33:
							goto IL_0328;
						case 35:
							goto IL_033e;
						case 36:
							goto IL_0365;
						case 37:
							goto IL_0376;
						case 39:
							goto IL_0389;
						case 40:
							goto IL_03b0;
						case 41:
							goto IL_03c1;
						case 22:
						case 26:
						case 30:
						case 34:
						case 38:
						case 42:
						case 43:
							goto IL_03d2;
						case 44:
						case 45:
						case 46:
						case 47:
							goto IL_03e1;
						case 48:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 7:
						case 49:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_03b0:
					num2 = 40;
					lblPort6.Text = left;
					goto IL_03c1;
					IL_03c1:
					num2 = 41;
					TryToIdntyThisModem(lblPort6);
					goto IL_03d2;
					IL_0389:
					num2 = 39;
					if (Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_03b0;
					}
					goto IL_03d2;
					IL_03d2:
					num2 = 43;
					Application.DoEvents();
					goto IL_03e1;
					IL_000b:
					num2 = 2;
					text = "";
					goto IL_0014;
					IL_0014:
					num2 = 3;
					managementObjectSearcher = new ManagementObjectSearcher("root\\CIMV2", "SELECT * FROM Win32_PnPEntity");
					goto IL_0027;
					IL_0027:
					num2 = 4;
					managementObjectCollection = managementObjectSearcher.Get();
					goto IL_0032;
					IL_0032:
					num2 = 5;
					enumerator = managementObjectCollection.GetEnumerator();
					goto IL_03e4;
					IL_03e4:
					if (!enumerator.MoveNext())
					{
						break;
					}
					managementObject = (ManagementObject)enumerator.Current;
					goto IL_0050;
					IL_03e1:
					num2 = 47;
					goto IL_03e4;
					IL_0050:
					num2 = 6;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0))
					{
						goto end_IL_0001_3;
					}
					goto IL_0118;
					IL_0118:
					num2 = 9;
					if (Operators.ConditionalCompareObjectNotEqual(managementObject.Properties["name"].Value, null, TextCompare: false))
					{
						goto IL_0141;
					}
					goto IL_03e1;
					IL_0141:
					num2 = 10;
					if (Conversions.ToString(managementObject.Properties["name"].Value).Contains("HUAWEI Mobile Connect - 3G PC UI Interface"))
					{
						goto IL_0172;
					}
					goto IL_03e1;
					IL_0172:
					num2 = 11;
					text = Conversions.ToString(managementObject.Properties["name"].Value);
					goto IL_0192;
					IL_0192:
					num2 = 12;
					text2 = text;
					goto IL_0198;
					IL_0198:
					num2 = 13;
					text2 = text2.Replace("HUAWEI Mobile Connect - 3G PC UI Interface", "");
					goto IL_01ac;
					IL_01ac:
					num2 = 14;
					text2 = text2.Replace("(", "");
					goto IL_01c0;
					IL_01c0:
					num2 = 15;
					text2 = text2.Replace(")", "");
					goto IL_01d4;
					IL_01d4:
					num2 = 16;
					text2 = text2.Replace(" ", "");
					goto IL_01e8;
					IL_01e8:
					num2 = 17;
					left = text2;
					goto IL_01ee;
					IL_01ee:
					num2 = 18;
					if (Operators.CompareString(left, null, TextCompare: false) != 0)
					{
						goto IL_0206;
					}
					goto IL_03e1;
					IL_0206:
					num2 = 19;
					if (Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_022d;
					}
					goto IL_0254;
					IL_022d:
					num2 = 20;
					lblPort1.Text = left;
					goto IL_023e;
					IL_023e:
					num2 = 21;
					TryToIdntyThisModem(lblPort1);
					goto IL_03d2;
					IL_0254:
					num2 = 23;
					if (Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_027b;
					}
					goto IL_02a2;
					IL_027b:
					num2 = 24;
					lblPort2.Text = left;
					goto IL_028c;
					IL_028c:
					num2 = 25;
					TryToIdntyThisModem(lblPort2);
					goto IL_03d2;
					IL_02a2:
					num2 = 27;
					if (Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_02c9;
					}
					goto IL_02f0;
					IL_02c9:
					num2 = 28;
					lblPort3.Text = left;
					goto IL_02da;
					IL_02da:
					num2 = 29;
					TryToIdntyThisModem(lblPort3);
					goto IL_03d2;
					IL_02f0:
					num2 = 31;
					if (Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_0317;
					}
					goto IL_033e;
					IL_0317:
					num2 = 32;
					lblPort4.Text = left;
					goto IL_0328;
					IL_0328:
					num2 = 33;
					TryToIdntyThisModem(lblPort4);
					goto IL_03d2;
					IL_033e:
					num2 = 35;
					if (Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_0365;
					}
					goto IL_0389;
					IL_0365:
					num2 = 36;
					lblPort5.Text = left;
					goto IL_0376;
					IL_0376:
					num2 = 37;
					TryToIdntyThisModem(lblPort5);
					goto IL_03d2;
					end_IL_0001_2:
					break;
				}
				num2 = 48;
				((IDisposable)enumerator)?.Dispose();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1244;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void TryToIdntyThisModemE303(Label ExxcNum)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					string portName = ExxcNum.Text;
					if (serialPort.IsOpen)
					{
						serialPort.Close();
					}
					serialPort.PortName = portName;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					ExxcNum.ForeColor = Color.White;
					serialPort.WriteLine("AT+Cfun=1\r");
					Application.DoEvents();
					Thread.Sleep(400);
					serialPort.WriteLine("AT+CPMS=\"SM\",\"SM\",\"SM\"\r");
					Thread.Sleep(200);
					serialPort.WriteLine("AT+CIMI\r");
					Application.DoEvents();
					Thread.Sleep(500);
					string text = serialPort.ReadExisting();
					if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
					{
						txtInfo.Text = text + "\r\n" + txtInfo.Text;
					}
					if (text.Contains("60203"))
					{
						ExxcNum.ForeColor = Color.Green;
						EnableThisCheck(ExxcNum);
					}
					else if (text.Contains("60201"))
					{
						ExxcNum.ForeColor = Color.Orange;
						EnableThisCheck(ExxcNum);
					}
					else if (text.Contains("60202"))
					{
						ExxcNum.ForeColor = Color.Red;
						EnableThisCheck(ExxcNum);
						serialPort.WriteLine("AT^CURC=0\r");
						Thread.Sleep(500);
						Application.DoEvents();
						serialPort.WriteLine("AT^DSFLOWRPT=0\r");
						Thread.Sleep(500);
						serialPort.WriteLine("AT^DSFLOWRPT=0\r");
					}
					break;
				}
				case 480:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				Application.DoEvents();
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 480;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void EnableThisCheck(Label eIndex)
	{
		if ((Operators.CompareString(eIndex.Text, lblPort1.Text, TextCompare: false) == 0) & (lblNum1.Text.Length == 11))
		{
			chkCh1.Checked = true;
		}
		if ((Operators.CompareString(eIndex.Text, lblPort2.Text, TextCompare: false) == 0) & (lblNum2.Text.Length == 11))
		{
			chkCh2.Checked = true;
		}
		if ((Operators.CompareString(eIndex.Text, lblPort3.Text, TextCompare: false) == 0) & (lblNum3.Text.Length == 11))
		{
			chkCh3.Checked = true;
		}
		if ((Operators.CompareString(eIndex.Text, lblPort4.Text, TextCompare: false) == 0) & (lblNum4.Text.Length == 11))
		{
			chkCh4.Checked = true;
		}
		if ((Operators.CompareString(eIndex.Text, lblPort5.Text, TextCompare: false) == 0) & (lblNum5.Text.Length == 11))
		{
			chkCh5.Checked = true;
		}
		if ((Operators.CompareString(eIndex.Text, lblPort6.Text, TextCompare: false) == 0) & (lblNum6.Text.Length == 11))
		{
			chkCh6.Checked = true;
		}
	}

	private void SignThisNumber(int eIndex)
	{
		if ((eIndex == 1) & (lblNum1.Text.Length == 11))
		{
			lblNum1.BackColor = Color.PaleGreen;
			lblNum1.ForeColor = Color.Black;
		}
		if ((eIndex == 2) & (lblNum2.Text.Length == 11))
		{
			lblNum2.BackColor = Color.PaleGreen;
			lblNum2.ForeColor = Color.Black;
		}
		if ((eIndex == 3) & (lblNum3.Text.Length == 11))
		{
			lblNum3.BackColor = Color.PaleGreen;
			lblNum3.ForeColor = Color.Black;
		}
		if ((eIndex == 4) & (lblNum4.Text.Length == 11))
		{
			lblNum4.BackColor = Color.PaleGreen;
			lblNum4.ForeColor = Color.Black;
		}
		if ((eIndex == 5) & (lblNum5.Text.Length == 11))
		{
			lblNum5.BackColor = Color.PaleGreen;
			lblNum5.ForeColor = Color.Black;
		}
		if ((eIndex == 6) & (lblNum6.Text.Length == 11))
		{
			lblNum6.BackColor = Color.PaleGreen;
			lblNum6.ForeColor = Color.Black;
		}
	}

	private void DisableCntl()
	{
		int try0001_dispatch = -1;
		int num = default(int);
		int num2 = default(int);
		int num3 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				case 37:
					num = num2;
					switch ((num3 <= -2) ? 1 : num3)
					{
					case 1:
					{
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						case 2:
							goto end_IL_0001_2;
						}
						break;
					}
					default:
						goto end_IL_0001;
					}
					break;
				}
				ProjectData.ClearProjectError();
				num3 = -2;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 37;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_2:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void EnableCntl()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 566:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0022;
						case 5:
							goto IL_0031;
						case 6:
							goto IL_0040;
						case 7:
							goto IL_004f;
						case 8:
							goto IL_005e;
						case 9:
							goto IL_006d;
						case 10:
							goto IL_007d;
						case 11:
							goto IL_008d;
						case 12:
							goto IL_009d;
						case 13:
							goto IL_00ad;
						case 14:
							goto IL_00bd;
						case 15:
							goto IL_00cd;
						case 16:
							goto IL_00dd;
						case 17:
							goto IL_00ed;
						case 18:
							goto IL_00fd;
						case 19:
							goto IL_010d;
						case 20:
							goto IL_011d;
						case 21:
							goto IL_012d;
						case 22:
							goto IL_013d;
						case 23:
							goto IL_014d;
						case 24:
							goto IL_015d;
						case 25:
							goto IL_016d;
						case 26:
							goto IL_017d;
						case 27:
							goto IL_018d;
						case 28:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 29:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_016d:
					num2 = 25;
					btnRunUssdGG.Enabled = true;
					goto IL_017d;
					IL_017d:
					num2 = 26;
					btnReplyBy.Enabled = true;
					goto IL_018d;
					IL_015d:
					num2 = 24;
					btnRefreshEmpty.Enabled = true;
					goto IL_016d;
					IL_018d:
					num2 = 27;
					MainTC.Enabled = true;
					break;
					IL_000b:
					num2 = 2;
					Application.DoEvents();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					btnRunUssd.Enabled = true;
					goto IL_0022;
					IL_0022:
					num2 = 4;
					btnRunUssd2.Enabled = true;
					goto IL_0031;
					IL_0031:
					num2 = 5;
					btnRunUssd3.Enabled = true;
					goto IL_0040;
					IL_0040:
					num2 = 6;
					btnRunUssd4.Enabled = true;
					goto IL_004f;
					IL_004f:
					num2 = 7;
					btnRunUssd5.Enabled = true;
					goto IL_005e;
					IL_005e:
					num2 = 8;
					btnRunUssd6.Enabled = true;
					goto IL_006d;
					IL_006d:
					num2 = 9;
					btnRunUssd7.Enabled = true;
					goto IL_007d;
					IL_007d:
					num2 = 10;
					btnRunUssd8.Enabled = true;
					goto IL_008d;
					IL_008d:
					num2 = 11;
					btnRunUssd9.Enabled = true;
					goto IL_009d;
					IL_009d:
					num2 = 12;
					btnRunUssd10.Enabled = true;
					goto IL_00ad;
					IL_00ad:
					num2 = 13;
					btnGetSims.Enabled = true;
					goto IL_00bd;
					IL_00bd:
					num2 = 14;
					btnRefresh.Enabled = true;
					goto IL_00cd;
					IL_00cd:
					num2 = 15;
					btnResetMissed.Enabled = true;
					goto IL_00dd;
					IL_00dd:
					num2 = 16;
					btnRefreshMissed.Enabled = true;
					goto IL_00ed;
					IL_00ed:
					num2 = 17;
					btnNumbers.Enabled = true;
					goto IL_00fd;
					IL_00fd:
					num2 = 18;
					btnNumbers2.Enabled = true;
					goto IL_010d;
					IL_010d:
					num2 = 19;
					btnNumbers3.Enabled = true;
					goto IL_011d;
					IL_011d:
					num2 = 20;
					btnRR.Enabled = true;
					goto IL_012d;
					IL_012d:
					num2 = 21;
					btnClearSMS.Enabled = true;
					goto IL_013d;
					IL_013d:
					num2 = 22;
					btnReadSms.Enabled = true;
					goto IL_014d;
					IL_014d:
					num2 = 23;
					btnUssdReset.Enabled = true;
					goto IL_015d;
					end_IL_0001_2:
					break;
				}
				num2 = 28;
				VodaCashPAnel.Enabled = true;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 566;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void GetAllNumbers()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1549:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 5:
							goto IL_0137;
						case 6:
							goto IL_017c;
						case 7:
							goto IL_0191;
						case 8:
							goto IL_01d6;
						case 9:
							goto IL_01eb;
						case 10:
							goto IL_0231;
						case 11:
							goto IL_0247;
						case 12:
							goto IL_028d;
						case 13:
							goto IL_02a3;
						case 14:
							goto IL_02e9;
						case 15:
							goto IL_02ff;
						case 16:
							goto IL_0345;
						case 17:
							goto IL_035b;
						case 18:
							goto IL_03a1;
						case 19:
							goto IL_03b7;
						case 20:
							goto IL_03fd;
						case 21:
							goto IL_0413;
						case 22:
							goto IL_0459;
						case 23:
							goto IL_046f;
						case 24:
							goto IL_04b5;
						case 25:
							goto IL_04cb;
						case 26:
							goto IL_0511;
						case 27:
							goto IL_0527;
						case 28:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 29:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_04cb:
					num2 = 25;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0))
					{
						goto IL_0511;
					}
					goto IL_0527;
					IL_0511:
					num2 = 26;
					GetNumberForIndex(lblPort5, lblNum5);
					goto IL_0527;
					IL_04b5:
					num2 = 24;
					GetNumberForIndex(lblPort4, lblNum4);
					goto IL_04cb;
					IL_0527:
					num2 = 27;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0)))
					{
						goto end_IL_0001_3;
					}
					break;
					IL_000b:
					num2 = 2;
					Application.DoEvents();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					if (((lblNum1.Text.Trim().Length > 0) | (lblPort1.ForeColor == Color.White)) & ((lblNum2.Text.Trim().Length > 0) | (lblPort2.ForeColor == Color.White)) & ((lblNum3.Text.Trim().Length > 0) | (lblPort3.ForeColor == Color.White)) & ((lblNum4.Text.Trim().Length > 0) | (lblPort4.ForeColor == Color.White)) & ((lblNum5.Text.Trim().Length > 0) | (lblPort5.ForeColor == Color.White)) & ((lblNum6.Text.Trim().Length > 0) | (lblPort6.ForeColor == Color.White)))
					{
						goto end_IL_0001_3;
					}
					goto IL_0137;
					IL_0137:
					num2 = 5;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) == 0))
					{
						goto IL_017c;
					}
					goto IL_0191;
					IL_017c:
					num2 = 6;
					SetNumberForIndex(lblPort1, lblNum1);
					goto IL_0191;
					IL_0191:
					num2 = 7;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) == 0))
					{
						goto IL_01d6;
					}
					goto IL_01eb;
					IL_01d6:
					num2 = 8;
					SetNumberForIndex(lblPort2, lblNum2);
					goto IL_01eb;
					IL_01eb:
					num2 = 9;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) == 0))
					{
						goto IL_0231;
					}
					goto IL_0247;
					IL_0231:
					num2 = 10;
					SetNumberForIndex(lblPort3, lblNum3);
					goto IL_0247;
					IL_0247:
					num2 = 11;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0))
					{
						goto IL_028d;
					}
					goto IL_02a3;
					IL_028d:
					num2 = 12;
					SetNumberForIndex(lblPort4, lblNum4);
					goto IL_02a3;
					IL_02a3:
					num2 = 13;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0))
					{
						goto IL_02e9;
					}
					goto IL_02ff;
					IL_02e9:
					num2 = 14;
					SetNumberForIndex(lblPort5, lblNum5);
					goto IL_02ff;
					IL_02ff:
					num2 = 15;
					if ((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0))
					{
						goto IL_0345;
					}
					goto IL_035b;
					IL_0345:
					num2 = 16;
					SetNumberForIndex(lblPort6, lblNum6);
					goto IL_035b;
					IL_035b:
					num2 = 17;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) == 0))
					{
						goto IL_03a1;
					}
					goto IL_03b7;
					IL_03a1:
					num2 = 18;
					GetNumberForIndex(lblPort1, lblNum1);
					goto IL_03b7;
					IL_03b7:
					num2 = 19;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) == 0))
					{
						goto IL_03fd;
					}
					goto IL_0413;
					IL_03fd:
					num2 = 20;
					GetNumberForIndex(lblPort2, lblNum2);
					goto IL_0413;
					IL_0413:
					num2 = 21;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) == 0))
					{
						goto IL_0459;
					}
					goto IL_046f;
					IL_0459:
					num2 = 22;
					GetNumberForIndex(lblPort3, lblNum3);
					goto IL_046f;
					IL_046f:
					num2 = 23;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0))
					{
						goto IL_04b5;
					}
					goto IL_04cb;
					end_IL_0001_2:
					break;
				}
				num2 = 28;
				GetNumberForIndex(lblPort6, lblNum6);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1549;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ResetAllModems()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 454:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0039;
						case 5:
							goto IL_004d;
						case 6:
							goto IL_0073;
						case 7:
							goto IL_0087;
						case 8:
							goto IL_00ad;
						case 9:
							goto IL_00c1;
						case 10:
							goto IL_00e8;
						case 11:
							goto IL_00fd;
						case 12:
							goto IL_0124;
						case 13:
							goto IL_0139;
						case 14:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 15:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_00fd:
					num2 = 11;
					if (Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0124;
					}
					goto IL_0139;
					IL_0124:
					num2 = 12;
					RestartModem(lblPort5.Text);
					goto IL_0139;
					IL_00e8:
					num2 = 10;
					RestartModem(lblPort4.Text);
					goto IL_00fd;
					IL_0139:
					num2 = 13;
					if (Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto end_IL_0001_3;
					}
					break;
					IL_000b:
					num2 = 2;
					Application.DoEvents();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					if (Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0039;
					}
					goto IL_004d;
					IL_0039:
					num2 = 4;
					RestartModem(lblPort1.Text);
					goto IL_004d;
					IL_004d:
					num2 = 5;
					if (Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0073;
					}
					goto IL_0087;
					IL_0073:
					num2 = 6;
					RestartModem(lblPort2.Text);
					goto IL_0087;
					IL_0087:
					num2 = 7;
					if (Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_00ad;
					}
					goto IL_00c1;
					IL_00ad:
					num2 = 8;
					RestartModem(lblPort3.Text);
					goto IL_00c1;
					IL_00c1:
					num2 = 9;
					if (Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_00e8;
					}
					goto IL_00fd;
					end_IL_0001_2:
					break;
				}
				num2 = 14;
				RestartModem(lblPort6.Text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 454;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ResetAllModemsWithNo()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 617:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0045;
						case 4:
							goto IL_0059;
						case 5:
							goto IL_0093;
						case 6:
							goto IL_00a7;
						case 7:
							goto IL_00e1;
						case 8:
							goto IL_00f5;
						case 9:
							goto IL_012f;
						case 10:
							goto IL_0144;
						case 11:
							goto IL_017f;
						case 12:
							goto IL_0194;
						case 13:
							goto IL_01cf;
						case 14:
							goto IL_01e4;
						case 15:
							goto IL_01e9;
						case 16:
							goto IL_01f2;
						case 17:
							goto IL_0200;
						default:
							goto end_IL_0001;
						case 18:
							goto end_IL_0001_2;
						}
						goto default;
					}
					IL_01e9:
					num2 = 15;
					Application.DoEvents();
					goto IL_01f2;
					IL_01f2:
					num2 = 16;
					Thread.Sleep(200);
					goto IL_0200;
					IL_01e4:
					num2 = 14;
					num5 = 0;
					goto IL_01e9;
					IL_0200:
					num2 = 17;
					num5 = checked(num5 + 1);
					if (num5 > 25)
					{
						goto end_IL_0001_2;
					}
					goto IL_01e9;
					IL_000b:
					num2 = 2;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & (lblNum1.Text.Length == 0))
					{
						goto IL_0045;
					}
					goto IL_0059;
					IL_0045:
					num2 = 3;
					RestartModem(lblPort1.Text);
					goto IL_0059;
					IL_0059:
					num2 = 4;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & (lblNum2.Text.Length == 0))
					{
						goto IL_0093;
					}
					goto IL_00a7;
					IL_0093:
					num2 = 5;
					RestartModem(lblPort2.Text);
					goto IL_00a7;
					IL_00a7:
					num2 = 6;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & (lblNum3.Text.Length == 0))
					{
						goto IL_00e1;
					}
					goto IL_00f5;
					IL_00e1:
					num2 = 7;
					RestartModem(lblPort3.Text);
					goto IL_00f5;
					IL_00f5:
					num2 = 8;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & (lblNum4.Text.Length == 0))
					{
						goto IL_012f;
					}
					goto IL_0144;
					IL_012f:
					num2 = 9;
					RestartModem(lblPort4.Text);
					goto IL_0144;
					IL_0144:
					num2 = 10;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & (lblNum5.Text.Length == 0))
					{
						goto IL_017f;
					}
					goto IL_0194;
					IL_017f:
					num2 = 11;
					RestartModem(lblPort5.Text);
					goto IL_0194;
					IL_0194:
					num2 = 12;
					if ((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & (lblNum6.Text.Length == 0))
					{
						goto IL_01cf;
					}
					goto IL_01e4;
					IL_01cf:
					num2 = 13;
					RestartModem(lblPort6.Text);
					goto IL_01e4;
					end_IL_0001:
					break;
				}
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 617;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_2:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ResetMissedModems()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 627:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0050;
						case 4:
							goto IL_0064;
						case 5:
							goto IL_00a9;
						case 6:
							goto IL_00bd;
						case 7:
							goto IL_0102;
						case 8:
							goto IL_0116;
						case 9:
							goto IL_015b;
						case 10:
							goto IL_0170;
						case 11:
							goto IL_01b6;
						case 12:
							goto IL_01cb;
						case 13:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 14:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0170:
					num2 = 10;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0))
					{
						goto IL_01b6;
					}
					goto IL_01cb;
					IL_01b6:
					num2 = 11;
					RestartModem(lblPort5.Text);
					goto IL_01cb;
					IL_015b:
					num2 = 9;
					RestartModem(lblPort4.Text);
					goto IL_0170;
					IL_01cb:
					num2 = 12;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0)))
					{
						goto end_IL_0001_3;
					}
					break;
					IL_000b:
					num2 = 2;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) == 0))
					{
						goto IL_0050;
					}
					goto IL_0064;
					IL_0050:
					num2 = 3;
					RestartModem(lblPort1.Text);
					goto IL_0064;
					IL_0064:
					num2 = 4;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) == 0))
					{
						goto IL_00a9;
					}
					goto IL_00bd;
					IL_00a9:
					num2 = 5;
					RestartModem(lblPort2.Text);
					goto IL_00bd;
					IL_00bd:
					num2 = 6;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) == 0))
					{
						goto IL_0102;
					}
					goto IL_0116;
					IL_0102:
					num2 = 7;
					RestartModem(lblPort3.Text);
					goto IL_0116;
					IL_0116:
					num2 = 8;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0))
					{
						goto IL_015b;
					}
					goto IL_0170;
					end_IL_0001_2:
					break;
				}
				num2 = 13;
				RestartModem(lblPort6.Text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 627;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ResetMissedModemsNoNetwork()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 759:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0066;
						case 4:
							goto IL_007a;
						case 5:
							goto IL_00d5;
						case 6:
							goto IL_00e9;
						case 7:
							goto IL_0144;
						case 8:
							goto IL_0158;
						case 9:
							goto IL_01b3;
						case 10:
							goto IL_01c8;
						case 11:
							goto IL_0224;
						case 12:
							goto IL_0239;
						case 13:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 14:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_01c8:
					num2 = 10;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0) & (lblPort5.ForeColor == Color.White))
					{
						goto IL_0224;
					}
					goto IL_0239;
					IL_0224:
					num2 = 11;
					RestartModem(lblPort5.Text);
					goto IL_0239;
					IL_01b3:
					num2 = 9;
					RestartModem(lblPort4.Text);
					goto IL_01c8;
					IL_0239:
					num2 = 12;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0) & (lblPort6.ForeColor == Color.White)))
					{
						goto end_IL_0001_3;
					}
					break;
					IL_000b:
					num2 = 2;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) == 0) & (lblPort1.ForeColor == Color.White))
					{
						goto IL_0066;
					}
					goto IL_007a;
					IL_0066:
					num2 = 3;
					RestartModem(lblPort1.Text);
					goto IL_007a;
					IL_007a:
					num2 = 4;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) == 0) & (lblPort2.ForeColor == Color.White))
					{
						goto IL_00d5;
					}
					goto IL_00e9;
					IL_00d5:
					num2 = 5;
					RestartModem(lblPort2.Text);
					goto IL_00e9;
					IL_00e9:
					num2 = 6;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) == 0) & (lblPort3.ForeColor == Color.White))
					{
						goto IL_0144;
					}
					goto IL_0158;
					IL_0144:
					num2 = 7;
					RestartModem(lblPort3.Text);
					goto IL_0158;
					IL_0158:
					num2 = 8;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0) & (lblPort4.ForeColor == Color.White))
					{
						goto IL_01b3;
					}
					goto IL_01c8;
					end_IL_0001_2:
					break;
				}
				num2 = 13;
				RestartModem(lblPort6.Text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 759;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string getDNumberMob(SerialPort TxSp)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		string text2 = default(string);
		int num5 = default(int);
		string text3 = default(string);
		int num6 = default(int);
		string text4 = default(string);
		byte[] bytes = default(byte[]);
		string ussdCommandFull = default(string);
		string result = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1090:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
						case 8:
						case 43:
						case 50:
							goto IL_0011;
						case 4:
							goto IL_001e;
						case 5:
							goto IL_0028;
						case 6:
							goto IL_0030;
						case 7:
							goto IL_0048;
						case 9:
						case 10:
							goto IL_0063;
						case 11:
							goto IL_006d;
						case 13:
						case 14:
							goto IL_0084;
						case 15:
							goto IL_00a9;
						case 16:
							goto IL_00be;
						case 17:
						case 18:
							goto IL_00d1;
						case 19:
							goto IL_0139;
						case 20:
							goto IL_014a;
						case 21:
							goto IL_018e;
						case 22:
							goto IL_01ae;
						case 23:
							goto IL_01ba;
						case 25:
							goto IL_01cf;
						case 24:
						case 26:
						case 27:
							goto IL_01dc;
						case 28:
							goto IL_01ed;
						case 29:
							goto IL_0202;
						case 31:
						case 32:
							goto IL_021d;
						case 33:
							goto IL_0232;
						case 34:
							goto IL_023c;
						case 35:
							goto IL_0248;
						case 36:
							goto IL_025e;
						case 37:
						case 38:
							goto IL_026e;
						case 39:
							goto IL_0283;
						case 40:
							goto IL_028d;
						case 41:
							goto IL_0299;
						case 42:
							goto IL_02af;
						case 44:
						case 45:
							goto IL_02c4;
						case 46:
							goto IL_02e6;
						case 47:
							goto IL_02f0;
						case 48:
							goto IL_02fc;
						case 49:
							goto IL_0312;
						case 12:
						case 30:
						case 51:
						case 52:
							goto IL_0328;
						case 53:
							goto IL_033f;
						case 54:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 55:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0312:
					num2 = 49;
					Thread.Sleep(1000);
					goto IL_0011;
					IL_0328:
					num2 = 52;
					if (text.Length == 11)
					{
						break;
					}
					goto IL_033f;
					IL_02fc:
					num2 = 48;
					TxSp.WriteLine(text2 + "\r");
					goto IL_0312;
					IL_033f:
					num2 = 53;
					text = "";
					break;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_0011;
					IL_0011:
					num2 = 3;
					Thread.Sleep(300);
					goto IL_001e;
					IL_001e:
					num2 = 4;
					text3 = TxSp.ReadExisting();
					goto IL_0028;
					IL_0028:
					num2 = 5;
					num5 = checked(num5 + 1);
					goto IL_0030;
					IL_0030:
					num2 = 6;
					if ((num5 < 8) & !Information.IsNothing(text3))
					{
						goto IL_0048;
					}
					goto IL_0063;
					IL_0048:
					num2 = 7;
					if (!text3.Contains("+CUSD: "))
					{
						goto IL_0011;
					}
					goto IL_0063;
					IL_0063:
					num2 = 10;
					text = "";
					goto IL_006d;
					IL_006d:
					num2 = 11;
					if (!Information.IsNothing(text3))
					{
						goto IL_0084;
					}
					goto IL_0328;
					IL_0084:
					num2 = 14;
					if (text3.Contains("0059006F00750072002000") | text3.Contains("0631064206450643002"))
					{
						goto IL_00a9;
					}
					goto IL_021d;
					IL_00a9:
					num2 = 15;
					if (text3.Contains("+CUSD: "))
					{
						goto IL_00be;
					}
					goto IL_00d1;
					IL_00be:
					num2 = 16;
					num6 = text3.IndexOf("+CUSD: ");
					goto IL_00d1;
					IL_00d1:
					num2 = 18;
					text = checked(text3.Substring(num6 + 10, text3.Length - num6 - 10)).Trim().Trim('o').Trim('\r')
						.Trim('\r')
						.Trim()
						.Trim(',');
					goto IL_0139;
					IL_0139:
					num2 = 19;
					num6 = text.IndexOf(",");
					goto IL_014a;
					IL_014a:
					num2 = 20;
					text4 = text.Substring(0, num6).Trim().Trim('"')
						.Trim(',')
						.Trim('"');
					goto IL_018e;
					IL_018e:
					num2 = 21;
					if (Operators.CompareString(text4.Substring(0, 1), "0", TextCompare: false) == 0)
					{
						goto IL_01ae;
					}
					goto IL_01cf;
					IL_01ae:
					num2 = 22;
					bytes = encoding_mod.StrToByteArray(text4);
					goto IL_01ba;
					IL_01ba:
					num2 = 23;
					text2 = Encoding.BigEndianUnicode.GetString(bytes);
					goto IL_01dc;
					IL_01cf:
					num2 = 25;
					text2 = encoding_mod.Decode7Bit(text4);
					goto IL_01dc;
					IL_01dc:
					num2 = 27;
					num6 = text2.IndexOf("012");
					goto IL_01ed;
					IL_01ed:
					num2 = 28;
					text = text2.Substring(num6, 11).Trim();
					goto IL_0202;
					IL_0202:
					num2 = 29;
					if (text.Length != 11)
					{
						goto IL_021d;
					}
					goto IL_0328;
					IL_021d:
					num2 = 32;
					if (text3.Contains("06450631062D06280627002006280643003A000A0"))
					{
						goto IL_0232;
					}
					goto IL_026e;
					IL_0232:
					num2 = 33;
					ussdCommandFull = "1";
					goto IL_023c;
					IL_023c:
					num2 = 34;
					text2 = encoding_mod.GetCommandCode(ussdCommandFull);
					goto IL_0248;
					IL_0248:
					num2 = 35;
					TxSp.WriteLine(text2 + "\r");
					goto IL_025e;
					IL_025e:
					num2 = 36;
					Thread.Sleep(300);
					goto IL_026e;
					IL_026e:
					num2 = 38;
					if (text3.Contains("0031003A002006440631064206450020062706440645062D064506480644002006270644062E06270635002006280643000A0"))
					{
						goto IL_0283;
					}
					goto IL_02c4;
					IL_0283:
					num2 = 39;
					ussdCommandFull = "1";
					goto IL_028d;
					IL_028d:
					num2 = 40;
					text2 = encoding_mod.GetCommandCode(ussdCommandFull);
					goto IL_0299;
					IL_0299:
					num2 = 41;
					TxSp.WriteLine(text2 + "\r");
					goto IL_02af;
					IL_02af:
					num2 = 42;
					Thread.Sleep(1000);
					goto IL_0011;
					IL_02c4:
					num2 = 45;
					if (text3.Contains("ERROR") | text3.Contains("0627062E062A064A062706310020062E0627063706490621000A002D0020002D0020002D000A00300030003A06270644064206270626064"))
					{
						goto IL_02e6;
					}
					goto IL_0328;
					IL_02e6:
					num2 = 46;
					ussdCommandFull = "#119*1#";
					goto IL_02f0;
					IL_02f0:
					num2 = 47;
					text2 = encoding_mod.GetCommandCode(ussdCommandFull);
					goto IL_02fc;
					end_IL_0001_2:
					break;
				}
				num2 = 54;
				result = text;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1090;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private string getDNumberVoda(SerialPort TxSp)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		string text2 = default(string);
		int num5 = default(int);
		int num6 = default(int);
		string text3 = default(string);
		string text4 = default(string);
		byte[] bytes = default(byte[]);
		string result = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1013:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0010;
						case 4:
						case 8:
						case 11:
							goto IL_001a;
						case 5:
							goto IL_0024;
						case 6:
							goto IL_002e;
						case 7:
							goto IL_0036;
						case 9:
							goto IL_0051;
						case 10:
							goto IL_006b;
						case 12:
						case 13:
							goto IL_0087;
						case 14:
							goto IL_0091;
						case 15:
							goto IL_00a9;
						case 16:
							goto IL_00ba;
						case 17:
							goto IL_0120;
						case 18:
							goto IL_0131;
						case 19:
							goto IL_0175;
						case 20:
							goto IL_0186;
						case 21:
						case 22:
							goto IL_019d;
						case 24:
							goto IL_01b6;
						case 25:
							goto IL_01ce;
						case 26:
							goto IL_01df;
						case 27:
							goto IL_0247;
						case 28:
							goto IL_0258;
						case 29:
							goto IL_029c;
						case 30:
							goto IL_02bc;
						case 31:
							goto IL_02c8;
						case 33:
							goto IL_02dd;
						case 32:
						case 34:
						case 35:
							goto IL_02ea;
						case 36:
							goto IL_02fb;
						case 23:
						case 37:
						case 38:
							goto IL_0313;
						case 39:
							goto IL_032a;
						case 40:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 41:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_02fb:
					num2 = 36;
					text = text2.Substring(num5, 11).Trim();
					goto IL_0313;
					IL_0313:
					num2 = 38;
					if (text.Length == 11)
					{
						break;
					}
					goto IL_032a;
					IL_02ea:
					num2 = 35;
					num5 = text2.IndexOf("01");
					goto IL_02fb;
					IL_032a:
					num2 = 39;
					text = "";
					break;
					IL_000b:
					num2 = 2;
					num6 = 0;
					goto IL_0010;
					IL_0010:
					num2 = 3;
					text3 = "";
					goto IL_001a;
					IL_001a:
					num2 = 4;
					Thread.Sleep(100);
					goto IL_0024;
					IL_0024:
					num2 = 5;
					text3 = TxSp.ReadExisting();
					goto IL_002e;
					IL_002e:
					num2 = 6;
					num6 = checked(num6 + 1);
					goto IL_0036;
					IL_0036:
					num2 = 7;
					if (text3.Length < 1 && num6 < 20)
					{
						goto IL_001a;
					}
					goto IL_0051;
					IL_0051:
					num2 = 9;
					if ((num6 < 20) & !Information.IsNothing(text3))
					{
						goto IL_006b;
					}
					goto IL_0087;
					IL_006b:
					num2 = 10;
					if (!text3.Contains("+CUSD: "))
					{
						goto IL_001a;
					}
					goto IL_0087;
					IL_0087:
					num2 = 13;
					text = "";
					goto IL_0091;
					IL_0091:
					num2 = 14;
					if (text3.Contains("MSISDN is"))
					{
						goto IL_00a9;
					}
					goto IL_019d;
					IL_00a9:
					num2 = 15;
					num5 = text3.IndexOf(" is");
					goto IL_00ba;
					IL_00ba:
					num2 = 16;
					text = checked(text3.Substring(num5 + 4, text3.Length - num5 - 4)).Trim().Trim('o').Trim('\r')
						.Trim('\r')
						.Trim()
						.Trim(',');
					goto IL_0120;
					IL_0120:
					num2 = 17;
					num5 = text.IndexOf(",");
					goto IL_0131;
					IL_0131:
					num2 = 18;
					text = text.Substring(0, num5).Trim().Trim('"')
						.Trim(',')
						.Trim('"');
					goto IL_0175;
					IL_0175:
					num2 = 19;
					num5 = text.IndexOf("01");
					goto IL_0186;
					IL_0186:
					num2 = 20;
					text = text.Substring(num5, 11).Trim();
					goto IL_019d;
					IL_019d:
					num2 = 22;
					if (text.Length != 11)
					{
						goto IL_01b6;
					}
					goto IL_0313;
					IL_01b6:
					num2 = 24;
					if (text3.Contains("+CUSD: "))
					{
						goto IL_01ce;
					}
					goto IL_0313;
					IL_01ce:
					num2 = 25;
					num5 = text3.IndexOf("+CUSD: ");
					goto IL_01df;
					IL_01df:
					num2 = 26;
					text = checked(text3.Substring(num5 + 10, text3.Length - num5 - 10)).Trim().Trim('o').Trim('\r')
						.Trim('\r')
						.Trim()
						.Trim(',');
					goto IL_0247;
					IL_0247:
					num2 = 27;
					num5 = text.IndexOf(",");
					goto IL_0258;
					IL_0258:
					num2 = 28;
					text4 = text.Substring(0, num5).Trim().Trim('"')
						.Trim(',')
						.Trim('"');
					goto IL_029c;
					IL_029c:
					num2 = 29;
					if (Operators.CompareString(text4.Substring(0, 1), "0", TextCompare: false) == 0)
					{
						goto IL_02bc;
					}
					goto IL_02dd;
					IL_02bc:
					num2 = 30;
					bytes = encoding_mod.StrToByteArray(text4);
					goto IL_02c8;
					IL_02c8:
					num2 = 31;
					text2 = Encoding.BigEndianUnicode.GetString(bytes);
					goto IL_02ea;
					IL_02dd:
					num2 = 33;
					text2 = encoding_mod.Decode7Bit(text4);
					goto IL_02ea;
					end_IL_0001_2:
					break;
				}
				num2 = 40;
				result = text;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1013;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private string getDNumberEts(SerialPort TxSp)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		int num5 = default(int);
		int num6 = default(int);
		string text2 = default(string);
		string text3 = default(string);
		string text4 = default(string);
		byte[] bytes = default(byte[]);
		string result = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
						ProjectData.ClearProjectError();
						num3 = -2;
						goto IL_000b;
					case 979:
						{
							num = num2;
							switch ((num3 <= -2) ? 1 : num3)
							{
							case 1:
								break;
							default:
								goto end_IL_0001;
							}
							int num4 = unchecked(num + 1);
							num = 0;
							switch (num4)
							{
							case 1:
								break;
							case 2:
								goto IL_000b;
							case 3:
							case 8:
								goto IL_0011;
							case 4:
								goto IL_001e;
							case 5:
								goto IL_0028;
							case 6:
								goto IL_0030;
							case 7:
								goto IL_0048;
							case 9:
							case 10:
								goto IL_0063;
							case 11:
								goto IL_006d;
							case 12:
								goto IL_0077;
							case 13:
								goto IL_008f;
							case 14:
								goto IL_00a0;
							case 15:
								goto IL_0108;
							case 16:
								goto IL_0119;
							case 17:
								goto IL_015d;
							case 18:
								goto IL_017d;
							case 19:
								goto IL_0189;
							case 21:
								goto IL_019e;
							case 20:
							case 22:
							case 23:
								goto IL_01ab;
							case 24:
								goto IL_01bc;
							case 25:
							case 26:
								goto IL_01d3;
							case 28:
								goto IL_01ec;
							case 29:
								goto IL_0204;
							case 30:
								goto IL_0215;
							case 31:
								goto IL_027b;
							case 32:
								goto IL_028c;
							case 33:
								goto IL_02d0;
							case 34:
								goto IL_02e1;
							case 27:
							case 35:
							case 36:
								goto IL_02f9;
							case 37:
								goto IL_0310;
							case 38:
								goto end_IL_0001_2;
							default:
								goto end_IL_0001;
							case 39:
								goto end_IL_0001_3;
							}
							goto default;
						}
						IL_02e1:
						num2 = 34;
						text = text.Substring(num5, 11).Trim();
						goto IL_02f9;
						IL_02f9:
						num2 = 36;
						if (text.Length == 11)
						{
							break;
						}
						goto IL_0310;
						IL_02d0:
						num2 = 33;
						num5 = text.IndexOf("01");
						goto IL_02e1;
						IL_0310:
						num2 = 37;
						text = "";
						break;
						IL_000b:
						num2 = 2;
						num6 = 0;
						goto IL_0011;
						IL_0011:
						num2 = 3;
						Thread.Sleep(200);
						goto IL_001e;
						IL_001e:
						num2 = 4;
						text2 = TxSp.ReadExisting();
						goto IL_0028;
						IL_0028:
						num2 = 5;
						num6++;
						goto IL_0030;
						IL_0030:
						num2 = 6;
						if ((num6 < 5) & !Information.IsNothing(text2))
						{
							goto IL_0048;
						}
						goto IL_0063;
						IL_0048:
						num2 = 7;
						if (!text2.Contains("+CUSD: "))
						{
							goto IL_0011;
						}
						goto IL_0063;
						IL_0063:
						num2 = 10;
						text = "";
						goto IL_006d;
						IL_006d:
						num2 = 11;
						text3 = "";
						goto IL_0077;
						IL_0077:
						num2 = 12;
						if (text2.Contains("+CUSD: "))
						{
							goto IL_008f;
						}
						goto IL_01d3;
						IL_008f:
						num2 = 13;
						num5 = text2.IndexOf("+CUSD: ");
						goto IL_00a0;
						IL_00a0:
						num2 = 14;
						text = text2.Substring(num5 + 10, text2.Length - num5 - 10).Trim().Trim('o')
							.Trim('\r')
							.Trim('\r')
							.Trim()
							.Trim(',');
						goto IL_0108;
						IL_0108:
						num2 = 15;
						num5 = text.IndexOf(",");
						goto IL_0119;
						IL_0119:
						num2 = 16;
						text4 = text.Substring(0, num5).Trim().Trim('"')
							.Trim(',')
							.Trim('"');
						goto IL_015d;
						IL_015d:
						num2 = 17;
						if (Operators.CompareString(text4.Substring(0, 1), "0", TextCompare: false) == 0)
						{
							goto IL_017d;
						}
						goto IL_019e;
						IL_017d:
						num2 = 18;
						bytes = encoding_mod.StrToByteArray(text4);
						goto IL_0189;
						IL_0189:
						num2 = 19;
						text3 = Encoding.BigEndianUnicode.GetString(bytes);
						goto IL_01ab;
						IL_019e:
						num2 = 21;
						text3 = encoding_mod.Decode7Bit(text4);
						goto IL_01ab;
						IL_01ab:
						num2 = 23;
						num5 = text3.IndexOf("01");
						goto IL_01bc;
						IL_01bc:
						num2 = 24;
						text = text3.Substring(num5, 11).Trim();
						goto IL_01d3;
						IL_01d3:
						num2 = 26;
						if (text.Length != 11)
						{
							goto IL_01ec;
						}
						goto IL_02f9;
						IL_01ec:
						num2 = 28;
						if (text2.Contains("CUSD: 0,"))
						{
							goto IL_0204;
						}
						goto IL_02f9;
						IL_0204:
						num2 = 29;
						num5 = text2.IndexOf("+20");
						goto IL_0215;
						IL_0215:
						num2 = 30;
						text = text2.Substring(num5 + 2, text2.Length - num5 - 2).Trim().Trim('o')
							.Trim('\r')
							.Trim('\r')
							.Trim()
							.Trim(',');
						goto IL_027b;
						IL_027b:
						num2 = 31;
						num5 = text.IndexOf(",");
						goto IL_028c;
						IL_028c:
						num2 = 32;
						text = text.Substring(0, num5).Trim().Trim('"')
							.Trim(',')
							.Trim('"');
						goto IL_02d0;
						end_IL_0001_2:
						break;
					}
					num2 = 38;
					result = text;
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 979;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void SetNumberForIndex(Label Exxc, Label ExxcNum)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		SerialPort serialPort = default(SerialPort);
		string ussdCommandFull = default(string);
		string commandCode = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				string text2;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 777:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 4:
							goto IL_0028;
						case 5:
							goto IL_0031;
						case 6:
							goto IL_003b;
						case 7:
							goto IL_0049;
						case 8:
							goto IL_0059;
						case 9:
							goto IL_006b;
						case 10:
							goto IL_0076;
						case 11:
							goto IL_0080;
						case 12:
							goto IL_0099;
						case 13:
							goto IL_00bb;
						case 15:
							goto IL_00cb;
						case 16:
							goto IL_00e7;
						case 17:
							goto IL_0109;
						case 18:
							goto IL_0112;
						case 19:
							goto IL_011d;
						case 20:
							goto IL_0134;
						case 21:
							goto IL_0142;
						case 22:
						case 23:
							goto IL_014d;
						case 24:
							goto IL_016f;
						case 26:
							goto IL_017c;
						case 27:
							goto IL_0195;
						case 28:
							goto IL_01b7;
						case 30:
							goto IL_01c5;
						case 31:
							goto IL_01cf;
						case 32:
							goto IL_01da;
						case 14:
						case 25:
						case 29:
						case 34:
						case 35:
							goto IL_01e3;
						case 36:
							goto IL_01f8;
						case 37:
							goto IL_01fe;
						case 38:
							goto IL_0209;
						case 39:
							goto IL_0220;
						case 40:
							goto IL_022e;
						case 41:
							goto IL_0237;
						case 42:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 3:
						case 33:
						case 43:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_01c5:
					num2 = 30;
					text = "";
					goto IL_01cf;
					IL_01cf:
					num2 = 31;
					serialPort.Dispose();
					goto IL_01da;
					IL_0237:
					num2 = 41;
					serialPort.Dispose();
					break;
					IL_01da:
					num2 = 32;
					serialPort = null;
					goto end_IL_0001_3;
					IL_000b:
					num2 = 2;
					if (Exxc.ForeColor == Color.White)
					{
						goto end_IL_0001_3;
					}
					goto IL_0028;
					IL_0028:
					num2 = 4;
					serialPort = new SerialPort();
					goto IL_0031;
					IL_0031:
					num2 = 5;
					text2 = Exxc.Text;
					goto IL_003b;
					IL_003b:
					num2 = 6;
					ExxcNum.Text = "";
					goto IL_0049;
					IL_0049:
					num2 = 7;
					serialPort.PortName = Exxc.Text;
					goto IL_0059;
					IL_0059:
					num2 = 8;
					if (!serialPort.IsOpen)
					{
						goto IL_006b;
					}
					goto IL_0076;
					IL_006b:
					num2 = 9;
					serialPort.Open();
					goto IL_0076;
					IL_0076:
					num2 = 10;
					text = "";
					goto IL_0080;
					IL_0080:
					num2 = 11;
					if (Exxc.ForeColor == Color.Red)
					{
						goto IL_0099;
					}
					goto IL_00cb;
					IL_0099:
					num2 = 12;
					if (Operators.CompareString(Exxc.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_00bb;
					}
					goto IL_01e3;
					IL_00bb:
					num2 = 13;
					text = "*878#";
					goto IL_01e3;
					IL_00cb:
					num2 = 15;
					if (Exxc.ForeColor == Color.Orange)
					{
						goto IL_00e7;
					}
					goto IL_017c;
					IL_00e7:
					num2 = 16;
					if (Operators.CompareString(Exxc.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0109;
					}
					goto IL_014d;
					IL_0109:
					num2 = 17;
					ussdCommandFull = "#119*1#";
					goto IL_0112;
					IL_0112:
					num2 = 18;
					commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					goto IL_011d;
					IL_011d:
					num2 = 19;
					serialPort.WriteLine(commandCode + "\r");
					goto IL_0134;
					IL_0134:
					num2 = 20;
					Thread.Sleep(300);
					goto IL_0142;
					IL_0142:
					num2 = 21;
					Application.DoEvents();
					goto IL_014d;
					IL_014d:
					num2 = 23;
					if (Operators.CompareString(Exxc.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_016f;
					}
					goto IL_01e3;
					IL_016f:
					num2 = 24;
					text = "\"#119#\"";
					goto IL_01e3;
					IL_017c:
					num2 = 26;
					if (Exxc.ForeColor == Color.Green)
					{
						goto IL_0195;
					}
					goto IL_01c5;
					IL_0195:
					num2 = 27;
					if (Operators.CompareString(Exxc.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_01b7;
					}
					goto IL_01e3;
					IL_01b7:
					num2 = 28;
					text = "*947#";
					goto IL_01e3;
					IL_01e3:
					num2 = 35;
					lblProgress.Text = Exxc.Text;
					goto IL_01f8;
					IL_01f8:
					num2 = 36;
					ussdCommandFull = text;
					goto IL_01fe;
					IL_01fe:
					num2 = 37;
					commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					goto IL_0209;
					IL_0209:
					num2 = 38;
					serialPort.WriteLine(commandCode + "\r");
					goto IL_0220;
					IL_0220:
					num2 = 39;
					Thread.Sleep(300);
					goto IL_022e;
					IL_022e:
					num2 = 40;
					Application.DoEvents();
					goto IL_0237;
					end_IL_0001_2:
					break;
				}
				num2 = 42;
				serialPort = null;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 777;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetNumberForIndexOrng(Label Exxc, Label ExxcNum)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		SerialPort serialPort = default(SerialPort);
		string text3 = default(string);
		string ussdCommandFull = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				string text2;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1394:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 4:
							goto IL_0028;
						case 5:
							goto IL_0031;
						case 6:
							goto IL_003b;
						case 7:
							goto IL_0049;
						case 8:
							goto IL_0059;
						case 9:
							goto IL_006b;
						case 10:
							goto IL_0076;
						case 11:
							goto IL_0080;
						case 12:
							goto IL_009c;
						case 13:
							goto IL_00be;
						case 14:
							goto IL_00c8;
						case 15:
							goto IL_00df;
						case 16:
							goto IL_00ed;
						case 17:
						case 18:
							goto IL_00f8;
						case 19:
							goto IL_011a;
						case 20:
							goto IL_0123;
						case 21:
							goto IL_012e;
						case 22:
							goto IL_0145;
						case 23:
							goto IL_0153;
						case 24:
						case 25:
							goto IL_015e;
						case 26:
							goto IL_0180;
						case 28:
							goto IL_0190;
						case 29:
							goto IL_01ac;
						case 30:
							goto IL_01ce;
						case 31:
							goto IL_01d8;
						case 32:
							goto IL_01ef;
						case 33:
							goto IL_01fd;
						case 34:
						case 35:
							goto IL_0208;
						case 36:
							goto IL_022a;
						case 37:
							goto IL_0233;
						case 38:
							goto IL_023e;
						case 39:
							goto IL_0255;
						case 40:
							goto IL_0263;
						case 41:
						case 42:
							goto IL_026e;
						case 43:
							goto IL_0290;
						case 45:
							goto IL_02a0;
						case 46:
							goto IL_02bc;
						case 47:
							goto IL_02de;
						case 48:
							goto IL_02e8;
						case 49:
							goto IL_02ff;
						case 50:
							goto IL_030d;
						case 51:
						case 52:
							goto IL_0318;
						case 53:
							goto IL_033a;
						case 54:
							goto IL_0343;
						case 55:
							goto IL_034e;
						case 56:
							goto IL_0365;
						case 57:
							goto IL_0373;
						case 58:
						case 59:
							goto IL_037e;
						case 60:
							goto IL_03a0;
						case 62:
							goto IL_03ae;
						case 63:
							goto IL_03b8;
						case 64:
							goto IL_03c3;
						case 27:
						case 44:
						case 61:
						case 66:
						case 67:
							goto IL_03cc;
						case 68:
							goto IL_03e1;
						case 69:
							goto IL_03e7;
						case 70:
							goto IL_03f2;
						case 71:
							goto IL_0409;
						case 72:
							goto IL_0417;
						case 73:
							goto IL_0420;
						case 74:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 3:
						case 65:
						case 75:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_03ae:
					num2 = 62;
					text = "";
					goto IL_03b8;
					IL_03b8:
					num2 = 63;
					serialPort.Dispose();
					goto IL_03c3;
					IL_0420:
					num2 = 73;
					serialPort.Dispose();
					break;
					IL_03c3:
					num2 = 64;
					serialPort = null;
					goto end_IL_0001_3;
					IL_000b:
					num2 = 2;
					if (Exxc.ForeColor == Color.White)
					{
						goto end_IL_0001_3;
					}
					goto IL_0028;
					IL_0028:
					num2 = 4;
					serialPort = new SerialPort();
					goto IL_0031;
					IL_0031:
					num2 = 5;
					text2 = Exxc.Text;
					goto IL_003b;
					IL_003b:
					num2 = 6;
					ExxcNum.Text = "";
					goto IL_0049;
					IL_0049:
					num2 = 7;
					serialPort.PortName = Exxc.Text;
					goto IL_0059;
					IL_0059:
					num2 = 8;
					if (!serialPort.IsOpen)
					{
						goto IL_006b;
					}
					goto IL_0076;
					IL_006b:
					num2 = 9;
					serialPort.Open();
					goto IL_0076;
					IL_0076:
					num2 = 10;
					text = "";
					goto IL_0080;
					IL_0080:
					num2 = 11;
					if (Exxc.ForeColor == Color.Red)
					{
						goto IL_009c;
					}
					goto IL_0190;
					IL_009c:
					num2 = 12;
					if (Operators.CompareString(Exxc.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_00be;
					}
					goto IL_00f8;
					IL_00be:
					num2 = 13;
					text3 = "AT+CUSD=2";
					goto IL_00c8;
					IL_00c8:
					num2 = 14;
					serialPort.WriteLine(text3 + "\r");
					goto IL_00df;
					IL_00df:
					num2 = 15;
					Thread.Sleep(300);
					goto IL_00ed;
					IL_00ed:
					num2 = 16;
					Application.DoEvents();
					goto IL_00f8;
					IL_00f8:
					num2 = 18;
					if (Operators.CompareString(Exxc.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_011a;
					}
					goto IL_015e;
					IL_011a:
					num2 = 19;
					ussdCommandFull = "*878#";
					goto IL_0123;
					IL_0123:
					num2 = 20;
					text3 = encoding_mod.GetCommandCode(ussdCommandFull);
					goto IL_012e;
					IL_012e:
					num2 = 21;
					serialPort.WriteLine(text3 + "\r");
					goto IL_0145;
					IL_0145:
					num2 = 22;
					Thread.Sleep(300);
					goto IL_0153;
					IL_0153:
					num2 = 23;
					Application.DoEvents();
					goto IL_015e;
					IL_015e:
					num2 = 25;
					if (Operators.CompareString(Exxc.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0180;
					}
					goto IL_03cc;
					IL_0180:
					num2 = 26;
					text = "*878#";
					goto IL_03cc;
					IL_0190:
					num2 = 28;
					if (Exxc.ForeColor == Color.Orange)
					{
						goto IL_01ac;
					}
					goto IL_02a0;
					IL_01ac:
					num2 = 29;
					if (Operators.CompareString(Exxc.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_01ce;
					}
					goto IL_0208;
					IL_01ce:
					num2 = 30;
					text3 = "AT+CUSD=2";
					goto IL_01d8;
					IL_01d8:
					num2 = 31;
					serialPort.WriteLine(text3 + "\r");
					goto IL_01ef;
					IL_01ef:
					num2 = 32;
					Thread.Sleep(300);
					goto IL_01fd;
					IL_01fd:
					num2 = 33;
					Application.DoEvents();
					goto IL_0208;
					IL_0208:
					num2 = 35;
					if (Operators.CompareString(Exxc.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_022a;
					}
					goto IL_026e;
					IL_022a:
					num2 = 36;
					ussdCommandFull = "#119*1#";
					goto IL_0233;
					IL_0233:
					num2 = 37;
					text3 = encoding_mod.GetCommandCode(ussdCommandFull);
					goto IL_023e;
					IL_023e:
					num2 = 38;
					serialPort.WriteLine(text3 + "\r");
					goto IL_0255;
					IL_0255:
					num2 = 39;
					Thread.Sleep(300);
					goto IL_0263;
					IL_0263:
					num2 = 40;
					Application.DoEvents();
					goto IL_026e;
					IL_026e:
					num2 = 42;
					if (Operators.CompareString(Exxc.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0290;
					}
					goto IL_03cc;
					IL_0290:
					num2 = 43;
					text = "\"#119#\"";
					goto IL_03cc;
					IL_02a0:
					num2 = 45;
					if (Exxc.ForeColor == Color.Green)
					{
						goto IL_02bc;
					}
					goto IL_03ae;
					IL_02bc:
					num2 = 46;
					if (Operators.CompareString(Exxc.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_02de;
					}
					goto IL_0318;
					IL_02de:
					num2 = 47;
					text3 = "AT+CUSD=2";
					goto IL_02e8;
					IL_02e8:
					num2 = 48;
					serialPort.WriteLine(text3 + "\r");
					goto IL_02ff;
					IL_02ff:
					num2 = 49;
					Thread.Sleep(300);
					goto IL_030d;
					IL_030d:
					num2 = 50;
					Application.DoEvents();
					goto IL_0318;
					IL_0318:
					num2 = 52;
					if (Operators.CompareString(Exxc.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_033a;
					}
					goto IL_037e;
					IL_033a:
					num2 = 53;
					ussdCommandFull = "*947#";
					goto IL_0343;
					IL_0343:
					num2 = 54;
					text3 = encoding_mod.GetCommandCode(ussdCommandFull);
					goto IL_034e;
					IL_034e:
					num2 = 55;
					serialPort.WriteLine(text3 + "\r");
					goto IL_0365;
					IL_0365:
					num2 = 56;
					Thread.Sleep(300);
					goto IL_0373;
					IL_0373:
					num2 = 57;
					Application.DoEvents();
					goto IL_037e;
					IL_037e:
					num2 = 59;
					if (Operators.CompareString(Exxc.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_03a0;
					}
					goto IL_03cc;
					IL_03a0:
					num2 = 60;
					text = "*947#";
					goto IL_03cc;
					IL_03cc:
					num2 = 67;
					lblProgress.Text = Exxc.Text;
					goto IL_03e1;
					IL_03e1:
					num2 = 68;
					ussdCommandFull = text;
					goto IL_03e7;
					IL_03e7:
					num2 = 69;
					text3 = encoding_mod.GetCommandCode(ussdCommandFull);
					goto IL_03f2;
					IL_03f2:
					num2 = 70;
					serialPort.WriteLine(text3 + "\r");
					goto IL_0409;
					IL_0409:
					num2 = 71;
					Thread.Sleep(300);
					goto IL_0417;
					IL_0417:
					num2 = 72;
					Application.DoEvents();
					goto IL_0420;
					end_IL_0001_2:
					break;
				}
				num2 = 74;
				serialPort = null;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1394;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetNumberForIndexMM(Label Exxc, Label ExxcNum)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		SerialPort serialPort = default(SerialPort);
		string ussdCommandFull = default(string);
		string commandCode = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				string text2;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 644:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 4:
							goto IL_0028;
						case 5:
							goto IL_0031;
						case 6:
							goto IL_003b;
						case 7:
							goto IL_0049;
						case 8:
							goto IL_0059;
						case 9:
							goto IL_006b;
						case 10:
							goto IL_0076;
						case 11:
							goto IL_0080;
						case 12:
							goto IL_0099;
						case 13:
							goto IL_00bb;
						case 15:
							goto IL_00cb;
						case 16:
							goto IL_00e4;
						case 17:
							goto IL_0106;
						case 19:
							goto IL_0113;
						case 20:
							goto IL_012c;
						case 21:
							goto IL_014e;
						case 23:
							goto IL_015c;
						case 24:
							goto IL_0166;
						case 25:
							goto IL_0171;
						case 14:
						case 18:
						case 22:
						case 27:
						case 28:
							goto IL_017a;
						case 29:
							goto IL_018f;
						case 30:
							goto IL_0195;
						case 31:
							goto IL_01a0;
						case 32:
							goto IL_01b7;
						case 33:
							goto IL_01c5;
						case 34:
							goto IL_01ce;
						case 35:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 3:
						case 26:
						case 36:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_015c:
					num2 = 23;
					text = "";
					goto IL_0166;
					IL_0166:
					num2 = 24;
					serialPort.Dispose();
					goto IL_0171;
					IL_01ce:
					num2 = 34;
					serialPort.Dispose();
					break;
					IL_0171:
					num2 = 25;
					serialPort = null;
					goto end_IL_0001_3;
					IL_000b:
					num2 = 2;
					if (Exxc.ForeColor == Color.White)
					{
						goto end_IL_0001_3;
					}
					goto IL_0028;
					IL_0028:
					num2 = 4;
					serialPort = new SerialPort();
					goto IL_0031;
					IL_0031:
					num2 = 5;
					text2 = Exxc.Text;
					goto IL_003b;
					IL_003b:
					num2 = 6;
					ExxcNum.Text = "";
					goto IL_0049;
					IL_0049:
					num2 = 7;
					serialPort.PortName = Exxc.Text;
					goto IL_0059;
					IL_0059:
					num2 = 8;
					if (!serialPort.IsOpen)
					{
						goto IL_006b;
					}
					goto IL_0076;
					IL_006b:
					num2 = 9;
					serialPort.Open();
					goto IL_0076;
					IL_0076:
					num2 = 10;
					text = "";
					goto IL_0080;
					IL_0080:
					num2 = 11;
					if (Exxc.ForeColor == Color.Red)
					{
						goto IL_0099;
					}
					goto IL_00cb;
					IL_0099:
					num2 = 12;
					if (Operators.CompareString(Exxc.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_00bb;
					}
					goto IL_017a;
					IL_00bb:
					num2 = 13;
					text = "*878#";
					goto IL_017a;
					IL_00cb:
					num2 = 15;
					if (Exxc.ForeColor == Color.Orange)
					{
						goto IL_00e4;
					}
					goto IL_0113;
					IL_00e4:
					num2 = 16;
					if (Operators.CompareString(Exxc.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0106;
					}
					goto IL_017a;
					IL_0106:
					num2 = 17;
					text = "#100*6*1*2#\",15";
					goto IL_017a;
					IL_0113:
					num2 = 19;
					if (Exxc.ForeColor == Color.Green)
					{
						goto IL_012c;
					}
					goto IL_015c;
					IL_012c:
					num2 = 20;
					if (Operators.CompareString(Exxc.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_014e;
					}
					goto IL_017a;
					IL_014e:
					num2 = 21;
					text = "*947#";
					goto IL_017a;
					IL_017a:
					num2 = 28;
					lblProgress.Text = Exxc.Text;
					goto IL_018f;
					IL_018f:
					num2 = 29;
					ussdCommandFull = text;
					goto IL_0195;
					IL_0195:
					num2 = 30;
					commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					goto IL_01a0;
					IL_01a0:
					num2 = 31;
					serialPort.WriteLine(commandCode + "\r");
					goto IL_01b7;
					IL_01b7:
					num2 = 32;
					Thread.Sleep(300);
					goto IL_01c5;
					IL_01c5:
					num2 = 33;
					Application.DoEvents();
					goto IL_01ce;
					end_IL_0001_2:
					break;
				}
				num2 = 35;
				serialPort = null;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 644;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void GetNumberForIndex(Label Exxc, Label ExxcNum)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				string text;
				string text2;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 417:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0014;
						case 4:
							goto IL_001d;
						case 5:
							goto IL_002b;
						case 6:
							goto IL_003b;
						case 7:
							goto IL_004d;
						case 8:
							goto IL_0057;
						case 9:
							goto IL_0060;
						case 10:
							goto IL_0079;
						case 12:
							goto IL_008e;
						case 13:
							goto IL_00a7;
						case 15:
							goto IL_00bc;
						case 16:
							goto IL_00d5;
						case 11:
						case 14:
						case 17:
						case 18:
							goto IL_00e8;
						case 19:
							goto IL_0100;
						case 20:
						case 21:
							goto IL_0112;
						case 22:
							goto IL_011b;
						case 23:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 24:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0100:
					num2 = 19;
					AddThisNumber(ExxcNum.Text);
					goto IL_0112;
					IL_0112:
					num2 = 21;
					Application.DoEvents();
					goto IL_011b;
					IL_00e8:
					num2 = 18;
					if (ExxcNum.Text.Length == 11)
					{
						goto IL_0100;
					}
					goto IL_0112;
					IL_011b:
					num2 = 22;
					serialPort.Dispose();
					break;
					IL_000b:
					num2 = 2;
					serialPort = new SerialPort();
					goto IL_0014;
					IL_0014:
					num2 = 3;
					text = Exxc.Text;
					goto IL_001d;
					IL_001d:
					num2 = 4;
					ExxcNum.Text = "";
					goto IL_002b;
					IL_002b:
					num2 = 5;
					serialPort.PortName = Exxc.Text;
					goto IL_003b;
					IL_003b:
					num2 = 6;
					if (!serialPort.IsOpen)
					{
						goto IL_004d;
					}
					goto IL_0057;
					IL_004d:
					num2 = 7;
					serialPort.Open();
					goto IL_0057;
					IL_0057:
					num2 = 8;
					text2 = "";
					goto IL_0060;
					IL_0060:
					num2 = 9;
					if (Exxc.ForeColor == Color.Red)
					{
						goto IL_0079;
					}
					goto IL_008e;
					IL_0079:
					num2 = 10;
					ExxcNum.Text = getDNumberVoda(serialPort);
					goto IL_00e8;
					IL_008e:
					num2 = 12;
					if (Exxc.ForeColor == Color.Orange)
					{
						goto IL_00a7;
					}
					goto IL_00bc;
					IL_00a7:
					num2 = 13;
					ExxcNum.Text = getDNumberMob(serialPort);
					goto IL_00e8;
					IL_00bc:
					num2 = 15;
					if (Exxc.ForeColor == Color.Green)
					{
						goto IL_00d5;
					}
					goto IL_00e8;
					IL_00d5:
					num2 = 16;
					ExxcNum.Text = getDNumberEts(serialPort);
					goto IL_00e8;
					end_IL_0001_2:
					break;
				}
				num2 = 23;
				serialPort = null;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 417;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ClearPortSts(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					string text = serialPort.ReadExisting();
					if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
					{
						txtInfo.Text = text + "\r\n" + txtInfo.Text;
					}
					Thread.Sleep(300);
					break;
				}
				case 174:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				Application.DoEvents();
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 174;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ChkVodaReply(TextBox Exxc)
	{
	}

	private void ChkVodaReplyForAll()
	{
		int try0001_dispatch = -1;
		int num = default(int);
		int num2 = default(int);
		int num3 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				case 37:
					num = num2;
					switch ((num3 <= -2) ? 1 : num3)
					{
					case 1:
					{
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						case 2:
							goto end_IL_0001_2;
						}
						break;
					}
					default:
						goto end_IL_0001;
					}
					break;
				}
				ProjectData.ClearProjectError();
				num3 = -2;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 37;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_2:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCode(Label Exxc, string UssdCommand)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					if (Exxc.ForeColor == Color.White)
					{
						goto end_IL_0001;
					}
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					string commandCode = encoding_mod.GetCommandCode(UssdCommand);
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(1000);
					Application.DoEvents();
					break;
				}
				case 152:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001_2;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				break;
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 152;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodesPC(Label Exxc, string UssdCommand, TextBox Eeret, Label Enumtxt)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						string commandCode = encoding_mod.GetCommandCode(UssdCommand);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(250);
						Application.DoEvents();
						int num3 = 0;
						do
						{
							Thread.Sleep(250);
							int num4 = 1;
							string text;
							while (true)
							{
								text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("+CUSD: "))
								{
									break;
								}
								if (text.Contains("retry operation") | text.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E"))
								{
									Eeret.Text = "retry operation\r\n" + Eeret.Text;
									Application.DoEvents();
								}
								if (num4 <= 8)
								{
									num4++;
									Thread.Sleep(500);
									Application.DoEvents();
									continue;
								}
								goto IL_049b;
							}
							int num5 = text.IndexOf("+CUSD: ");
							string text2 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
								.Trim('\r')
								.Trim('\r')
								.Trim()
								.Trim(',');
							num5 = text2.IndexOf(",");
							string text3 = text2.Substring(0, num5).Trim().Trim('"')
								.Trim(',')
								.Trim('"');
							if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
							{
								byte[] bytes = encoding_mod.StrToByteArray(text3);
								commandCode = Encoding.BigEndianUnicode.GetString(bytes);
							}
							else
							{
								commandCode = encoding_mod.Decode7Bit(text3);
							}
							Eeret.Text = commandCode + "\r\n" + Eeret.Text;
							if (commandCode.Contains("فودافون كاش انشئ رقم سري مكون من 6 أرقام"))
							{
								Eeret.ForeColor = Color.LightGreen;
							}
							if (commandCode.Contains("عفوا هذا الرقم غير مشترك في خدمه فودافون كاش"))
							{
								Eeret.ForeColor = Color.LightGray;
							}
							if (commandCode.Contains("حول من علي المحفظة  ب100 جنية واكسب 5"))
							{
								Eeret.ForeColor = Color.PaleVioletRed;
							}
							if (text.Contains("0639064106480627064B0020064406270020064A0648062C062F00200647062F0627064A06270020064406470630"))
							{
								Eeret.Text = "عفوا\u064b لا يوجد هدايا لهذا الرقم\r\n" + Eeret.Text;
								Application.DoEvents();
								break;
							}
							if (text.Contains("064506280631064806430020062A0645002006270633062A06440627064500A00647062F064A062A0643002006450646002006410648062F062706410648064600200643062706340020"))
							{
								Application.DoEvents();
								break;
							}
							if (text.Contains("064706300647002006270644062E062F064506290020063A064A063100200645062A0627062D06290020064406460638062706450020062E0"))
							{
								Eeret.Text = "هذه الخدمة غير متاحة لنظام خطك\r\n" + Eeret.Text;
								DisablePort(Exxc);
								Application.DoEvents();
								break;
							}
							if (text.Contains("064406270020064A06450643064600200625062A064506270645002006270644063906450644064A0629002006440639062F064500200648062C0648062F002006310635064A062F0020064306270641064A0020"))
							{
								Eeret.Text = "لا يمكن إتمام العملية لعدم وجود رصيد كافي في حساب فودافون كاش\r\n" + Eeret.Text;
								DisablePort(Exxc);
								Application.DoEvents();
								break;
							}
							if (commandCode.Contains("في رصيد حسابك"))
							{
								num5 = commandCode.IndexOf("لديك");
								string inputStr = Conversions.ToString(Conversion.Val(commandCode.Substring(num5 + 4, 10).Trim()));
								AddToBalBox(Exxc, Conversion.Val(inputStr));
							}
							if (commandCode.Contains("دلوقتي"))
							{
								num5 = commandCode.IndexOf("دلوقتي");
								string inputStr = Conversions.ToString(Conversion.Val(commandCode.Substring(num5 + 6, 10).Trim()));
								AddToBalBox(Exxc, Conversion.Val(inputStr));
							}
							if (commandCode.Contains("حن انهارده"))
							{
								num5 = commandCode.IndexOf("ده ب");
								int num6 = (int)Math.Round(Conversion.Val(commandCode.Substring(num5 + 4, 3)));
								AddRepTofawryReq(Enumtxt.Text, Conversions.ToString(num6));
							}
							Application.DoEvents();
							break;
							IL_049b:
							num3++;
						}
						while (num3 <= 20);
						break;
					}
					case 1224:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001_2;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1224;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeSa3edAdd(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						while (true)
						{
							string ussdCommandFull = "*37*3*1#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							int num3 = 0;
							while (true)
							{
								Thread.Sleep(1000);
								Application.DoEvents();
								string text = serialPort.ReadExisting();
								if (chkStop.Checked)
								{
									break;
								}
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("+CUSD: "))
								{
									string text2 = text;
									int num4 = text.IndexOf("+CUSD: ");
									text2 = text.Substring(num4 + 10, text.Length - num4 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num4 = text2.IndexOf(",");
									string text3 = text2.Substring(0, num4).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text3 = text3.Trim('"').Trim(',').Trim('"');
									if (text3.Length > 3)
									{
										string text4;
										if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text3);
											text4 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text4 = encoding_mod.Decode7Bit(text3);
										}
										OutBoxDrop(Exxc, text4);
										if (text4.Contains("لا يمكن"))
										{
											Application.DoEvents();
											break;
										}
									}
								}
								if (text.Contains("0644062A06230643064A062F00200627064406270634062A0631062706430020064106"))
								{
									ussdCommandFull = "1";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
								}
								Application.DoEvents();
								if (text.Contains("0031003A06270636064100200631064206450020064406420627062606450629002006330627"))
								{
									ussdCommandFull = "1";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
								}
								Application.DoEvents();
								if (text.Contains("062706440631062C0627062100200625062F062E0627064400200627064406310642064500200644064A062A064500200627063606"))
								{
									ussdCommandFull = txtSA3edhmNum.Text.Trim();
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
								}
								Application.DoEvents();
								if (text.Contains("062A06450020062A06460641064A063000200637064406280643002006280646062C0627062D"))
								{
									OutBoxDrop(Exxc, "تم تنفيذ طلبك بنجاح");
									Application.DoEvents();
									break;
								}
								if (!(text.Contains("retry operation") | text.Contains("+CUSD: 5") | text.Contains("ERROR: unknown")))
								{
									num3++;
									if (num3 > 20)
									{
										break;
									}
									continue;
								}
								goto IL_03a7;
							}
							break;
							IL_03a7:
							Thread.Sleep(400);
						}
						break;
					case 995:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001_2;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 995;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeSa3edTransfer(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						while (true)
						{
							string ussdCommandFull = "*37*3#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							int num3 = 0;
							while (true)
							{
								Thread.Sleep(1000);
								Application.DoEvents();
								if (chkStop.Checked)
								{
									break;
								}
								string text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("0031003A062706360641002006310642064500200644064206270626064506290020063306270639062F"))
								{
									ussdCommandFull = "3";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
								}
								Application.DoEvents();
								if (text.Contains("064506460020064106360644064300200627062E062A06270631002"))
								{
									ussdCommandFull = txtSA3edhmReq.Text.Trim();
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
								}
								Application.DoEvents();
								if (text.Contains("0031003A062A062D0648064A06440020003100300020062C000A0032003A062A062D0648064A0"))
								{
									ussdCommandFull = "2";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
								}
								Application.DoEvents();
								if (text.Contains("062706440631062C0627062100200625062F062E062706440020062706440642064A064506290020064506460020003500200"))
								{
									ussdCommandFull = txtSa3edhmV.Text.Trim();
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
								}
								Application.DoEvents();
								if (text.Contains("0644062A06230643064A062F0020062A062D0648"))
								{
									ussdCommandFull = "1";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
								}
								if (text.Contains("062A06450020062A06460641064A063000200637064406280643002006280646062C0627062D"))
								{
									OutBoxDrop(Exxc, "تم تنفيذ طلبك بنجاح");
									Application.DoEvents();
									break;
								}
								if (text.Contains("0639064106480627060C00200644064500200646062A0645064306460020064506460020062A06460641064A06300020063706440628064300200627064406230646060C002006280631062C062706210020062706440645062D0627064806440629002006440627062D06420627"))
								{
									OutBoxDrop(Exxc, "عفوا، لم نتمكن من تنفيذ طلبك الأن، برجاء المحاولة لاحقا");
									Application.DoEvents();
									break;
								}
								if (!(text.Contains("retry operation") | text.Contains("+CUSD: 5")))
								{
									if (text.Contains("+CUSD:"))
									{
										int num4 = ((!text.Contains("+CUSD: 0")) ? text.IndexOf("+CUSD: 1") : text.IndexOf("+CUSD: 0"));
										string text2 = text.Substring(num4 + 9, text.Length - num4 - 9).Trim().Trim('o')
											.Trim('\r')
											.Trim('\r')
											.Trim();
										num4 = text2.IndexOf(",");
										string text3 = text2.Substring(0, num4).Trim().Trim('"')
											.Trim(',')
											.Trim('"');
										text3 = text3.Trim('"').Trim(',').Trim('"');
										string eEstr;
										if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text3);
											eEstr = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											eEstr = encoding_mod.Decode7Bit(text3);
										}
										OutBoxDrop(Exxc, eEstr);
										Application.DoEvents();
									}
									if (chkStop.Checked)
									{
										break;
									}
									num3++;
									if (num3 > 20)
									{
										break;
									}
									continue;
								}
								goto IL_02e2;
							}
							break;
							IL_02e2:
							Thread.Sleep(400);
						}
						break;
					case 1186:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001_2;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1186;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeSa3edDell(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num4 = default(int);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						while (true)
						{
							string ussdCommandFull = "*37*3#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							int num3 = 0;
							while (true)
							{
								Thread.Sleep(1000);
								Application.DoEvents();
								if (chkStop.Checked)
								{
									break;
								}
								string text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("064506460020064106360644064300200627062E062A06270"))
								{
									if (text.Contains("+CUSD: "))
									{
										if (text.Contains("+CUSD: "))
										{
											num4 = text.IndexOf("+CUSD: ");
										}
										string text2 = text.Substring(num4 + 10, text.Length - num4 - 10).Trim().Trim('o')
											.Trim('\r')
											.Trim('\r')
											.Trim()
											.Trim(',');
										num4 = text2.IndexOf(",");
										string text3 = text2.Substring(0, num4).Trim().Trim('"')
											.Trim(',')
											.Trim('"');
										if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text3);
											commandCode = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											commandCode = encoding_mod.Decode7Bit(text3);
										}
										AddToStoredSa3ed(Exxc, commandCode);
										Application.DoEvents();
									}
									break;
								}
								if (text.Contains("0031003A062706360641002006310642064500200644064206270626064506290020063306270639062F06470645000A0032003A062706"))
								{
									ussdCommandFull = "2";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
								}
								Application.DoEvents();
								if (!(text.Contains("retry operation") | text.Contains("+CUSD: 5") | text.Contains("ERROR: unknown")))
								{
									num3++;
									if (num3 > 20)
									{
										break;
									}
									continue;
								}
								goto IL_02c0;
							}
							break;
							IL_02c0:
							Thread.Sleep(400);
						}
						break;
					case 764:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001_2;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 764;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeSa3edDellView(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num4 = default(int);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						while (true)
						{
							string ussdCommandFull = "*37*3#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							int num3 = 0;
							while (true)
							{
								Thread.Sleep(1000);
								Application.DoEvents();
								if (chkStop.Checked)
								{
									break;
								}
								string text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("+CUSD: "))
								{
									if (text.Contains("+CUSD: "))
									{
										num4 = text.IndexOf("+CUSD: ");
									}
									string text2 = text.Substring(num4 + 10, text.Length - num4 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim()
										.Trim(',');
									num4 = text2.IndexOf(",");
									string text3 = text2.Substring(0, num4).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text3);
										commandCode = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										commandCode = encoding_mod.Decode7Bit(text3);
									}
									AddToStoredSa3ed(Exxc, commandCode);
									Application.DoEvents();
								}
								if (text.Contains("0644062A06230643064A062F00200627064406270634062A0631062706430020064106"))
								{
									ussdCommandFull = "1";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
								}
								if (text.Contains("064506460020064106360644064300200627062E062A06270"))
								{
									commandCode = "AT+CUSD=0";
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									commandCode = "AT+CUSD=2";
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									goto end_IL_0001;
								}
								Application.DoEvents();
								if (text.Contains("0031003A062706360641002006310642064500200644064206270626064506290020063306270639062F06470645000A0032003A062706"))
								{
									ussdCommandFull = "2";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
								}
								if (!(text.Contains("retry operation") | text.Contains("+CUSD: 5") | text.Contains("ERROR: unknown")))
								{
									Application.DoEvents();
									num3++;
									if (num3 > 20)
									{
										break;
									}
									continue;
								}
								goto IL_0344;
							}
							break;
							IL_0344:
							Thread.Sleep(400);
						}
						break;
					case 902:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001_2;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 902;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeSa3ed(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						string text = "AT+CUSD=2";
						serialPort.WriteLine(text + "\r");
						Thread.Sleep(1000);
						do
						{
							IL_0076:
							string ussdCommandFull = "*37*3*1#";
							text = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(text + "\r");
							int num3 = 0;
							while (true)
							{
								Thread.Sleep(1000);
								Application.DoEvents();
								string text2 = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text2) >= 2))
								{
									txtInfo.Text = text2 + "\r\n" + txtInfo.Text;
								}
								if (text2.Contains("+CUSD: "))
								{
									string text3 = text2;
									int num4 = text2.IndexOf("+CUSD: ");
									text3 = text2.Substring(num4 + 10, text2.Length - num4 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num4 = text3.IndexOf(",");
									string text4 = text3.Substring(0, num4).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text4 = text4.Trim('"').Trim(',').Trim('"');
									if (text4.Length > 3)
									{
										string text5;
										if (Operators.CompareString(text4.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text4);
											text5 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text5 = encoding_mod.Decode7Bit(text4);
										}
										OutBoxDrop(Exxc, text5);
										if (text5.Contains("عفوا الرجاء المحاوله فى وقت لاحق"))
										{
											break;
										}
									}
								}
								if (chkStop.Checked)
								{
									goto end_IL_0001_2;
								}
								if (text2.Contains("0644062A06230643064A062F00200627064406270634062A0631062706430020064106"))
								{
									ussdCommandFull = "1";
									text = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(text + "\r");
									Thread.Sleep(1000);
								}
								Application.DoEvents();
								if (text2.Contains("062706440631062C0627062100200625062F062E0627064400200627064406310642064500200644064A062A064500200627063606270641062A064700200644064206270626064506290020063306270639062F06470645"))
								{
									ussdCommandFull = txtSA3edhmNum.Text.Trim();
									text = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(text + "\r");
									Thread.Sleep(1000);
								}
								Application.DoEvents();
								if (text2.Contains("062A06450020062A06460641064A063000200637064406280643002006280646062C0627062D"))
								{
									OutBoxDrop(Exxc, "تم تنفيذ طلبك بنجاح");
									Application.DoEvents();
									goto end_IL_0001_2;
								}
								if (!text2.Contains("retry operation"))
								{
									num3++;
									if (num3 > 20)
									{
										goto end_IL_0001_2;
									}
									continue;
								}
								goto IL_0390;
							}
							Application.DoEvents();
							Thread.Sleep(1000);
							continue;
							IL_0390:
							Thread.Sleep(400);
							goto IL_0076;
						}
						while (!chkStop.Checked);
						break;
					}
					case 972:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_3;
							}
							break;
						}
						end_IL_0001_2:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_3:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 972;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeBy(Label Exxc, TextBox Eeret, string UssdCommand)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num4 = default(int);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						serialPort.WriteLine(UssdCommand + "\r");
						int num3 = 0;
						do
						{
							Thread.Sleep(250);
							Application.DoEvents();
							string text = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
							{
								txtInfo.Text = text + "\r\n" + txtInfo.Text;
							}
							if (text.Contains("+CUSD: "))
							{
								if (text.Contains("+CUSD: "))
								{
									num4 = text.IndexOf("+CUSD: ");
								}
								string text2 = text.Substring(num4 + 10, text.Length - num4 - 10).Trim().Trim('o')
									.Trim('\r')
									.Trim('\r')
									.Trim()
									.Trim(',');
								num4 = text2.IndexOf(",");
								string text3 = text2.Substring(0, num4).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								string text4;
								if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
								{
									byte[] bytes = encoding_mod.StrToByteArray(text3);
									text4 = Encoding.BigEndianUnicode.GetString(bytes);
								}
								else
								{
									text4 = encoding_mod.Decode7Bit(text3);
								}
								Eeret.Text = text4 + "\r\n" + Eeret.Text;
								if (text4.Contains("حول من علي المحفظة  ب100 جنية واكسب 5"))
								{
									Eeret.ForeColor = Color.Gold;
								}
								if (text4.Contains("اودع ب100 جنية واكسب 20 جنية كاش باك هدية"))
								{
									Eeret.ForeColor = Color.Green;
								}
								if (text4.Contains("ليك 15 جنيه فلوس على محفظتك"))
								{
									Eeret.ForeColor = Color.Blue;
								}
								if (text4.Contains("ليك 25 جنيه فلوس على محفظتك"))
								{
									Eeret.ForeColor = Color.Green;
								}
								if (text4.Contains("ليك 35 جنيه فلوس على محفظتك"))
								{
									Eeret.ForeColor = Color.Violet;
								}
								if (text4.Contains("ليك 45 جنيه فلوس على محفظتك"))
								{
									Eeret.ForeColor = Color.Gold;
								}
								if (text4.Contains("ليك 50 جنيه فلوس على محفظتك"))
								{
									Eeret.ForeColor = Color.LightPink;
								}
								Application.DoEvents();
								break;
							}
							num3++;
						}
						while (num3 <= 10);
						break;
					}
					case 769:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 769;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ResetUssdCode(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					if (chkRefref.Checked || Exxc.ForeColor == Color.White)
					{
						goto end_IL_0001;
					}
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					string text = "AT+CUSD=2";
					serialPort.WriteLine(text + "\r");
					Thread.Sleep(500);
					break;
				}
				case 176:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001_2;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Thread.Sleep(500);
				Application.DoEvents();
				break;
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 176;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ResetUssdCodeVC(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				string text;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					if (chkRefref.Checked || Exxc.ForeColor == Color.White)
					{
						goto end_IL_0001;
					}
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					int num3 = 0;
					while (true)
					{
						IL_006b:
						num3 = checked(num3 + 1);
						string ussdCommandFull = "*878#";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						int num4 = 0;
						do
						{
							Thread.Sleep(200);
							text = serialPort.ReadExisting();
							if (text.Contains("004D005300490053004400") || num3 >= 30)
							{
								break;
							}
							if (text.Contains("+CUSD: 5") | text.Contains("unknown"))
							{
								goto IL_006b;
							}
							num4 = checked(num4 + 1);
						}
						while (num4 <= 10);
						break;
					}
					break;
				}
				case 272:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001_2;
					}
					break;
				}
				text = serialPort.ReadExisting();
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				break;
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 272;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string getchargeval(string EE)
	{
		string text = "0";
		return Conversions.ToString(Conversion.Val(EE.Substring(14, 4)));
	}

	private void ReadUssdReturn(Label Exxc, TextBox Eeret, Label Enumtxt)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num4 = default(int);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						Application.DoEvents();
						int num3 = 1;
						while (true)
						{
							string text = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
							{
								txtInfo.Text = text + "\r\n" + txtInfo.Text;
							}
							if (text.Contains("+CUSD: "))
							{
								string text2 = text.Substring(num4 + 10, text.Length - num4 - 10).Trim().Trim('o')
									.Trim('\r')
									.Trim('\r')
									.Trim()
									.Trim(',');
								num4 = text2.IndexOf(",");
								string text3 = text2.Substring(0, num4).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								string text4;
								if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
								{
									byte[] bytes = encoding_mod.StrToByteArray(text3);
									text4 = Encoding.BigEndianUnicode.GetString(bytes);
								}
								else
								{
									text4 = encoding_mod.Decode7Bit(text3);
								}
								Eeret.Text = text4 + "\r\n" + Eeret.Text;
								if (text.Contains("0639064106480627064B0020064406270020064A0648062C062F00200647062F0627064A06270020064406470630"))
								{
									Eeret.Text = "عفوا\u064b لا يوجد هدايا لهذا الرقم\r\n" + Eeret.Text;
									Application.DoEvents();
									break;
								}
								if (text.Contains("064506280631064806430020062A0645002006270633062A06440627064500A00647062F064A062A0643002006450646002006410648062F062706410648064600200643062706340020"))
								{
									Application.DoEvents();
									break;
								}
								if (text.Contains("064706300647002006270644062E062F064506290020063A064A063100200645062A0627062D06290020064406460638062706450020062E0"))
								{
									Eeret.Text = "هذه الخدمة غير متاحة لنظام خطك\r\n" + Eeret.Text;
									DisablePort(Exxc);
									Application.DoEvents();
									break;
								}
								if (text.Contains("064406270020064A06450643064600200625062A064506270645002006270644063906450644064A0629002006440639062F064500200648062C0648062F002006310635064A062F0020064306270641064A0020"))
								{
									Eeret.Text = "لا يمكن إتمام العملية لعدم وجود رصيد كافي في حساب فودافون كاش\r\n" + Eeret.Text;
									DisablePort(Exxc);
									Application.DoEvents();
									break;
								}
								if (text.Contains("+CUSD: "))
								{
									num4 = text.IndexOf("+CUSD: ");
								}
								if (text4.Contains("في رصيد حسابك"))
								{
									num4 = text4.IndexOf("لديك");
									string inputStr = Conversions.ToString(Conversion.Val(text4.Substring(num4 + 4, 10).Trim()));
									AddToBalBox(Exxc, Conversion.Val(inputStr));
								}
								if (text4.Contains("دلوقتي"))
								{
									num4 = text4.IndexOf("دلوقتي");
									string inputStr = Conversions.ToString(Conversion.Val(text4.Substring(num4 + 6, 10).Trim()));
									AddToBalBox(Exxc, Conversion.Val(inputStr));
								}
								if (text4.Contains("حن انهارده"))
								{
									num4 = text4.IndexOf("ده ب");
									int num5 = (int)Math.Round(Conversion.Val(text4.Substring(num4 + 4, 3)));
									AddRepTofawryReq(Enumtxt.Text, Conversions.ToString(num5));
								}
							}
							else
							{
								if (text.Contains("retry operation") | text.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E"))
								{
									Eeret.Text = "retry operation\r\n" + Eeret.Text;
									Application.DoEvents();
								}
								if (num3 <= 2)
								{
									num3++;
									Thread.Sleep(1000);
									Application.DoEvents();
									continue;
								}
							}
							Application.DoEvents();
							break;
						}
						break;
					}
					case 1080:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001_2;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Thread.Sleep(500);
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1080;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ReturnRead()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 675:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0031;
						case 5:
							goto IL_0039;
						case 6:
							goto IL_0069;
						case 7:
							goto IL_0084;
						case 8:
							goto IL_00b6;
						case 9:
							goto IL_00d1;
						case 10:
							goto IL_0104;
						case 11:
							goto IL_0120;
						case 12:
							goto IL_0153;
						case 13:
							goto IL_016f;
						case 14:
							goto IL_01a2;
						case 15:
							goto IL_01be;
						case 16:
							goto IL_01f1;
						case 17:
							goto IL_020d;
						case 18:
							goto IL_0216;
						case 19:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 20:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_01f1:
					num2 = 16;
					ReadUssdReturn(lblPort6, txtRet06, lblNum6);
					goto IL_020d;
					IL_020d:
					num2 = 17;
					Application.DoEvents();
					goto IL_0216;
					IL_01be:
					num2 = 15;
					if ((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_01f1;
					}
					goto IL_020d;
					IL_0216:
					num2 = 18;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "قراءة رد الشبكة";
					goto IL_0031;
					IL_0031:
					num2 = 4;
					Application.DoEvents();
					goto IL_0039;
					IL_0039:
					num2 = 5;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_0069;
					}
					goto IL_0084;
					IL_0069:
					num2 = 6;
					ReadUssdReturn(lblPort1, txtRet01, lblNum1);
					goto IL_0084;
					IL_0084:
					num2 = 7;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_00b6;
					}
					goto IL_00d1;
					IL_00b6:
					num2 = 8;
					ReadUssdReturn(lblPort2, txtRet02, lblNum2);
					goto IL_00d1;
					IL_00d1:
					num2 = 9;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_0104;
					}
					goto IL_0120;
					IL_0104:
					num2 = 10;
					ReadUssdReturn(lblPort3, txtRet03, lblNum3);
					goto IL_0120;
					IL_0120:
					num2 = 11;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0153;
					}
					goto IL_016f;
					IL_0153:
					num2 = 12;
					ReadUssdReturn(lblPort4, txtRet04, lblNum4);
					goto IL_016f;
					IL_016f:
					num2 = 13;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_01a2;
					}
					goto IL_01be;
					IL_01a2:
					num2 = 14;
					ReadUssdReturn(lblPort5, txtRet05, lblNum5);
					goto IL_01be;
					end_IL_0001_2:
					break;
				}
				num2 = 19;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 675;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderCharge()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1653:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_005d;
						case 4:
							goto IL_007c;
						case 5:
							goto IL_00a0;
						case 6:
						case 7:
							goto IL_00fd;
						case 8:
							goto IL_0151;
						case 9:
							goto IL_0170;
						case 10:
							goto IL_0195;
						case 11:
						case 12:
							goto IL_01f3;
						case 13:
							goto IL_0248;
						case 14:
							goto IL_0268;
						case 15:
							goto IL_028d;
						case 16:
						case 17:
							goto IL_02eb;
						case 18:
							goto IL_0340;
						case 19:
							goto IL_0360;
						case 20:
							goto IL_0385;
						case 21:
						case 22:
							goto IL_03e3;
						case 23:
							goto IL_0438;
						case 24:
							goto IL_0458;
						case 25:
							goto IL_047d;
						case 26:
						case 27:
							goto IL_04db;
						case 28:
							goto IL_0530;
						case 29:
							goto IL_0550;
						case 30:
							goto IL_0575;
						case 31:
						case 32:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 33:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0530:
					num2 = 28;
					ApplyUssdCodeCharge(lblPort6, lblCard6.Text.Trim());
					goto IL_0550;
					IL_0550:
					num2 = 29;
					AddCardTochargedarch(lblCard6.Text.Trim(), lblNum6.Text);
					goto IL_0575;
					IL_04db:
					num2 = 27;
					if (!((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						break;
					}
					goto IL_0530;
					IL_0575:
					num2 = 30;
					txtInfo.Text = "تم شحن الكارت\r\n" + lblCard6.Text + "\r\n" + lblNum6.Text + "\r\n" + txtInfo.Text;
					break;
					IL_000b:
					num2 = 2;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_005d;
					}
					goto IL_00fd;
					IL_005d:
					num2 = 3;
					ApplyUssdCodeCharge(lblPort1, lblCard1.Text.Trim());
					goto IL_007c;
					IL_007c:
					num2 = 4;
					AddCardTochargedarch(lblCard1.Text.Trim(), lblNum1.Text);
					goto IL_00a0;
					IL_00a0:
					num2 = 5;
					txtInfo.Text = "تم شحن الكارت\r\n" + lblCard1.Text + "\r\n" + lblNum1.Text + "\r\n" + txtInfo.Text;
					goto IL_00fd;
					IL_00fd:
					num2 = 7;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_0151;
					}
					goto IL_01f3;
					IL_0151:
					num2 = 8;
					ApplyUssdCodeCharge(lblPort2, lblCard2.Text.Trim());
					goto IL_0170;
					IL_0170:
					num2 = 9;
					AddCardTochargedarch(lblCard2.Text.Trim(), lblNum2.Text);
					goto IL_0195;
					IL_0195:
					num2 = 10;
					txtInfo.Text = "تم شحن الكارت\r\n" + lblCard2.Text + "\r\n" + lblNum2.Text + "\r\n" + txtInfo.Text;
					goto IL_01f3;
					IL_01f3:
					num2 = 12;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_0248;
					}
					goto IL_02eb;
					IL_0248:
					num2 = 13;
					ApplyUssdCodeCharge(lblPort3, lblCard3.Text.Trim());
					goto IL_0268;
					IL_0268:
					num2 = 14;
					AddCardTochargedarch(lblCard3.Text.Trim(), lblNum3.Text);
					goto IL_028d;
					IL_028d:
					num2 = 15;
					txtInfo.Text = "تم شحن الكارت\r\n" + lblCard3.Text + "\r\n" + lblNum3.Text + "\r\n" + txtInfo.Text;
					goto IL_02eb;
					IL_02eb:
					num2 = 17;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0340;
					}
					goto IL_03e3;
					IL_0340:
					num2 = 18;
					ApplyUssdCodeCharge(lblPort4, lblCard4.Text.Trim());
					goto IL_0360;
					IL_0360:
					num2 = 19;
					AddCardTochargedarch(lblCard4.Text.Trim(), lblNum4.Text);
					goto IL_0385;
					IL_0385:
					num2 = 20;
					txtInfo.Text = "تم شحن الكارت\r\n" + lblCard4.Text + "\r\n" + lblNum4.Text + "\r\n" + txtInfo.Text;
					goto IL_03e3;
					IL_03e3:
					num2 = 22;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0438;
					}
					goto IL_04db;
					IL_0438:
					num2 = 23;
					ApplyUssdCodeCharge(lblPort5, lblCard5.Text.Trim());
					goto IL_0458;
					IL_0458:
					num2 = 24;
					AddCardTochargedarch(lblCard5.Text.Trim(), lblNum5.Text);
					goto IL_047d;
					IL_047d:
					num2 = 25;
					txtInfo.Text = "تم شحن الكارت\r\n" + lblCard5.Text + "\r\n" + lblNum5.Text + "\r\n" + txtInfo.Text;
					goto IL_04db;
					end_IL_0001_2:
					break;
				}
				num2 = 32;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1653;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeCharge(Label Exxc, string UssdCommand)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					if (Exxc.ForeColor == Color.White)
					{
						goto end_IL_0001;
					}
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					string ussdCommandFull = ((!RBEts.Checked) ? ("*858*" + UssdCommand + "#") : ("*556*" + UssdCommand + "#"));
					string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(2000);
					Application.DoEvents();
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(2000);
					Application.DoEvents();
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(2000);
					Application.DoEvents();
					commandCode = "AT+CUSD=2";
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(500);
					Application.DoEvents();
					break;
				}
				case 326:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001_2;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				break;
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 326;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrder(TextBox UssdBox)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string ussdCommand = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1437:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0019;
						case 4:
							goto IL_004b;
						case 5:
							goto IL_0066;
						case 6:
							goto IL_007c;
						case 7:
							goto IL_00ae;
						case 8:
							goto IL_00ca;
						case 9:
							goto IL_00fc;
						case 10:
							goto IL_0119;
						case 11:
							goto IL_014c;
						case 12:
							goto IL_0169;
						case 13:
							goto IL_019c;
						case 14:
							goto IL_01b9;
						case 15:
							goto IL_01ec;
						case 16:
							goto IL_0209;
						case 17:
							goto IL_023c;
						case 19:
							goto IL_0260;
						case 20:
							goto IL_02b2;
						case 21:
							goto IL_02cf;
						case 22:
							goto IL_0321;
						case 23:
							goto IL_033e;
						case 24:
							goto IL_0390;
						case 25:
							goto IL_03ad;
						case 26:
							goto IL_03ff;
						case 27:
							goto IL_041c;
						case 28:
							goto IL_046e;
						case 29:
							goto IL_048b;
						case 30:
							goto IL_04dd;
						case 18:
						case 31:
						case 32:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 33:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_046e:
					num2 = 28;
					ApplyUssdCodesPC(lblPort5, ussdCommand, txtRet05, lblNum5);
					goto IL_048b;
					IL_048b:
					num2 = 29;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(txtRet06.Text.Trim(), "", TextCompare: false) == 0) & chkCh6.Checked))
					{
						break;
					}
					goto IL_04dd;
					IL_041c:
					num2 = 27;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(txtRet05.Text.Trim(), "", TextCompare: false) == 0) & chkCh5.Checked)
					{
						goto IL_046e;
					}
					goto IL_048b;
					IL_04dd:
					num2 = 30;
					ApplyUssdCodesPC(lblPort6, ussdCommand, txtRet06, lblNum6);
					break;
					IL_000b:
					num2 = 2;
					ussdCommand = UssdBox.Text.Trim();
					goto IL_0019;
					IL_0019:
					num2 = 3;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_004b;
					}
					goto IL_0066;
					IL_004b:
					num2 = 4;
					ReadUssdReturn(lblPort1, txtRet01, lblNum1);
					goto IL_0066;
					IL_0066:
					num2 = 5;
					if (ckBox.Checked)
					{
						goto IL_007c;
					}
					goto IL_0260;
					IL_007c:
					num2 = 6;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_00ae;
					}
					goto IL_00ca;
					IL_00ae:
					num2 = 7;
					ApplyUssdCodesPC(lblPort1, ussdCommand, txtRet01, lblNum1);
					goto IL_00ca;
					IL_00ca:
					num2 = 8;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_00fc;
					}
					goto IL_0119;
					IL_00fc:
					num2 = 9;
					ApplyUssdCodesPC(lblPort2, ussdCommand, txtRet02, lblNum2);
					goto IL_0119;
					IL_0119:
					num2 = 10;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_014c;
					}
					goto IL_0169;
					IL_014c:
					num2 = 11;
					ApplyUssdCodesPC(lblPort3, ussdCommand, txtRet03, lblNum3);
					goto IL_0169;
					IL_0169:
					num2 = 12;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_019c;
					}
					goto IL_01b9;
					IL_019c:
					num2 = 13;
					ApplyUssdCodesPC(lblPort4, ussdCommand, txtRet04, lblNum4);
					goto IL_01b9;
					IL_01b9:
					num2 = 14;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_01ec;
					}
					goto IL_0209;
					IL_01ec:
					num2 = 15;
					ApplyUssdCodesPC(lblPort5, ussdCommand, txtRet05, lblNum5);
					goto IL_0209;
					IL_0209:
					num2 = 16;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						break;
					}
					goto IL_023c;
					IL_023c:
					num2 = 17;
					ApplyUssdCodesPC(lblPort6, ussdCommand, txtRet06, lblNum6);
					break;
					IL_0260:
					num2 = 19;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(txtRet01.Text.Trim(), "", TextCompare: false) == 0) & chkCh1.Checked)
					{
						goto IL_02b2;
					}
					goto IL_02cf;
					IL_02b2:
					num2 = 20;
					ApplyUssdCodesPC(lblPort1, ussdCommand, txtRet01, lblNum1);
					goto IL_02cf;
					IL_02cf:
					num2 = 21;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(txtRet02.Text.Trim(), "", TextCompare: false) == 0) & chkCh2.Checked)
					{
						goto IL_0321;
					}
					goto IL_033e;
					IL_0321:
					num2 = 22;
					ApplyUssdCodesPC(lblPort2, ussdCommand, txtRet02, lblNum2);
					goto IL_033e;
					IL_033e:
					num2 = 23;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(txtRet03.Text.Trim(), "", TextCompare: false) == 0) & chkCh3.Checked)
					{
						goto IL_0390;
					}
					goto IL_03ad;
					IL_0390:
					num2 = 24;
					ApplyUssdCodesPC(lblPort3, ussdCommand, txtRet03, lblNum3);
					goto IL_03ad;
					IL_03ad:
					num2 = 25;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(txtRet04.Text.Trim(), "", TextCompare: false) == 0) & chkCh4.Checked)
					{
						goto IL_03ff;
					}
					goto IL_041c;
					IL_03ff:
					num2 = 26;
					ApplyUssdCodesPC(lblPort4, ussdCommand, txtRet04, lblNum4);
					goto IL_041c;
					end_IL_0001_2:
					break;
				}
				num2 = 32;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1437;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderSa3edTransfer(TextBox UssdBox)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 494:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_003b;
						case 4:
							goto IL_004a;
						case 5:
							goto IL_007c;
						case 6:
							goto IL_008b;
						case 7:
							goto IL_00bd;
						case 8:
							goto IL_00cc;
						case 9:
							goto IL_00fe;
						case 10:
							goto IL_010e;
						case 11:
							goto IL_0141;
						case 12:
							goto IL_0151;
						case 13:
							goto IL_0184;
						case 14:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 15:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0141:
					num2 = 11;
					ApplyUssdCodeSa3edTransfer(lblPort5);
					goto IL_0151;
					IL_0151:
					num2 = 12;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						break;
					}
					goto IL_0184;
					IL_010e:
					num2 = 10;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0141;
					}
					goto IL_0151;
					IL_0184:
					num2 = 13;
					ApplyUssdCodeSa3edTransfer(lblPort6);
					break;
					IL_000b:
					num2 = 2;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_003b;
					}
					goto IL_004a;
					IL_003b:
					num2 = 3;
					ApplyUssdCodeSa3edTransfer(lblPort1);
					goto IL_004a;
					IL_004a:
					num2 = 4;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_007c;
					}
					goto IL_008b;
					IL_007c:
					num2 = 5;
					ApplyUssdCodeSa3edTransfer(lblPort2);
					goto IL_008b;
					IL_008b:
					num2 = 6;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_00bd;
					}
					goto IL_00cc;
					IL_00bd:
					num2 = 7;
					ApplyUssdCodeSa3edTransfer(lblPort3);
					goto IL_00cc;
					IL_00cc:
					num2 = 8;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_00fe;
					}
					goto IL_010e;
					IL_00fe:
					num2 = 9;
					ApplyUssdCodeSa3edTransfer(lblPort4);
					goto IL_010e;
					end_IL_0001_2:
					break;
				}
				num2 = 14;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 494;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderSa3edAdd(TextBox UssdBox)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 494:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_003b;
						case 4:
							goto IL_004a;
						case 5:
							goto IL_007c;
						case 6:
							goto IL_008b;
						case 7:
							goto IL_00bd;
						case 8:
							goto IL_00cc;
						case 9:
							goto IL_00fe;
						case 10:
							goto IL_010e;
						case 11:
							goto IL_0141;
						case 12:
							goto IL_0151;
						case 13:
							goto IL_0184;
						case 14:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 15:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0141:
					num2 = 11;
					ApplyUssdCodeSa3edAdd(lblPort5);
					goto IL_0151;
					IL_0151:
					num2 = 12;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						break;
					}
					goto IL_0184;
					IL_010e:
					num2 = 10;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0141;
					}
					goto IL_0151;
					IL_0184:
					num2 = 13;
					ApplyUssdCodeSa3edAdd(lblPort6);
					break;
					IL_000b:
					num2 = 2;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_003b;
					}
					goto IL_004a;
					IL_003b:
					num2 = 3;
					ApplyUssdCodeSa3edAdd(lblPort1);
					goto IL_004a;
					IL_004a:
					num2 = 4;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_007c;
					}
					goto IL_008b;
					IL_007c:
					num2 = 5;
					ApplyUssdCodeSa3edAdd(lblPort2);
					goto IL_008b;
					IL_008b:
					num2 = 6;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_00bd;
					}
					goto IL_00cc;
					IL_00bd:
					num2 = 7;
					ApplyUssdCodeSa3edAdd(lblPort3);
					goto IL_00cc;
					IL_00cc:
					num2 = 8;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_00fe;
					}
					goto IL_010e;
					IL_00fe:
					num2 = 9;
					ApplyUssdCodeSa3edAdd(lblPort4);
					goto IL_010e;
					end_IL_0001_2:
					break;
				}
				num2 = 14;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 494;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderSa3edDell(TextBox UssdBox)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 494:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_003b;
						case 4:
							goto IL_004a;
						case 5:
							goto IL_007c;
						case 6:
							goto IL_008b;
						case 7:
							goto IL_00bd;
						case 8:
							goto IL_00cc;
						case 9:
							goto IL_00fe;
						case 10:
							goto IL_010e;
						case 11:
							goto IL_0141;
						case 12:
							goto IL_0151;
						case 13:
							goto IL_0184;
						case 14:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 15:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0141:
					num2 = 11;
					ApplyUssdCodeSa3edDell(lblPort5);
					goto IL_0151;
					IL_0151:
					num2 = 12;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						break;
					}
					goto IL_0184;
					IL_010e:
					num2 = 10;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0141;
					}
					goto IL_0151;
					IL_0184:
					num2 = 13;
					ApplyUssdCodeSa3edDell(lblPort6);
					break;
					IL_000b:
					num2 = 2;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_003b;
					}
					goto IL_004a;
					IL_003b:
					num2 = 3;
					ApplyUssdCodeSa3edDell(lblPort1);
					goto IL_004a;
					IL_004a:
					num2 = 4;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_007c;
					}
					goto IL_008b;
					IL_007c:
					num2 = 5;
					ApplyUssdCodeSa3edDell(lblPort2);
					goto IL_008b;
					IL_008b:
					num2 = 6;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_00bd;
					}
					goto IL_00cc;
					IL_00bd:
					num2 = 7;
					ApplyUssdCodeSa3edDell(lblPort3);
					goto IL_00cc;
					IL_00cc:
					num2 = 8;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_00fe;
					}
					goto IL_010e;
					IL_00fe:
					num2 = 9;
					ApplyUssdCodeSa3edDell(lblPort4);
					goto IL_010e;
					end_IL_0001_2:
					break;
				}
				num2 = 14;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 494;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderSa3edDellView(TextBox UssdBox)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 494:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_003b;
						case 4:
							goto IL_004a;
						case 5:
							goto IL_007c;
						case 6:
							goto IL_008b;
						case 7:
							goto IL_00bd;
						case 8:
							goto IL_00cc;
						case 9:
							goto IL_00fe;
						case 10:
							goto IL_010e;
						case 11:
							goto IL_0141;
						case 12:
							goto IL_0151;
						case 13:
							goto IL_0184;
						case 14:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 15:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0141:
					num2 = 11;
					ApplyUssdCodeSa3edDellView(lblPort5);
					goto IL_0151;
					IL_0151:
					num2 = 12;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						break;
					}
					goto IL_0184;
					IL_010e:
					num2 = 10;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0141;
					}
					goto IL_0151;
					IL_0184:
					num2 = 13;
					ApplyUssdCodeSa3edDellView(lblPort6);
					break;
					IL_000b:
					num2 = 2;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_003b;
					}
					goto IL_004a;
					IL_003b:
					num2 = 3;
					ApplyUssdCodeSa3edDellView(lblPort1);
					goto IL_004a;
					IL_004a:
					num2 = 4;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_007c;
					}
					goto IL_008b;
					IL_007c:
					num2 = 5;
					ApplyUssdCodeSa3edDellView(lblPort2);
					goto IL_008b;
					IL_008b:
					num2 = 6;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_00bd;
					}
					goto IL_00cc;
					IL_00bd:
					num2 = 7;
					ApplyUssdCodeSa3edDellView(lblPort3);
					goto IL_00cc;
					IL_00cc:
					num2 = 8;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_00fe;
					}
					goto IL_010e;
					IL_00fe:
					num2 = 9;
					ApplyUssdCodeSa3edDellView(lblPort4);
					goto IL_010e;
					end_IL_0001_2:
					break;
				}
				num2 = 14;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 494;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderSa3ed(TextBox UssdBox)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 494:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_003b;
						case 4:
							goto IL_004a;
						case 5:
							goto IL_007c;
						case 6:
							goto IL_008b;
						case 7:
							goto IL_00bd;
						case 8:
							goto IL_00cc;
						case 9:
							goto IL_00fe;
						case 10:
							goto IL_010e;
						case 11:
							goto IL_0141;
						case 12:
							goto IL_0151;
						case 13:
							goto IL_0184;
						case 14:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 15:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0141:
					num2 = 11;
					ApplyUssdCodeSa3ed(lblPort5);
					goto IL_0151;
					IL_0151:
					num2 = 12;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						break;
					}
					goto IL_0184;
					IL_010e:
					num2 = 10;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0141;
					}
					goto IL_0151;
					IL_0184:
					num2 = 13;
					ApplyUssdCodeSa3ed(lblPort6);
					break;
					IL_000b:
					num2 = 2;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_003b;
					}
					goto IL_004a;
					IL_003b:
					num2 = 3;
					ApplyUssdCodeSa3ed(lblPort1);
					goto IL_004a;
					IL_004a:
					num2 = 4;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_007c;
					}
					goto IL_008b;
					IL_007c:
					num2 = 5;
					ApplyUssdCodeSa3ed(lblPort2);
					goto IL_008b;
					IL_008b:
					num2 = 6;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_00bd;
					}
					goto IL_00cc;
					IL_00bd:
					num2 = 7;
					ApplyUssdCodeSa3ed(lblPort3);
					goto IL_00cc;
					IL_00cc:
					num2 = 8;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_00fe;
					}
					goto IL_010e;
					IL_00fe:
					num2 = 9;
					ApplyUssdCodeSa3ed(lblPort4);
					goto IL_010e;
					end_IL_0001_2:
					break;
				}
				num2 = 14;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 494;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderBy()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1217:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0036;
						case 6:
							goto IL_0044;
						case 7:
							goto IL_0067;
						case 9:
							goto IL_0075;
						case 10:
							goto IL_0099;
						case 12:
							goto IL_00a8;
						case 13:
							goto IL_00cc;
						case 15:
							goto IL_00db;
						case 16:
							goto IL_00ff;
						case 18:
							goto IL_010e;
						case 19:
							goto IL_0132;
						case 21:
							goto IL_0141;
						case 22:
							goto IL_0165;
						case 24:
							goto IL_0174;
						case 25:
							goto IL_0198;
						case 27:
							goto IL_01a4;
						case 28:
							goto IL_01c8;
						case 30:
							goto IL_01d4;
						case 31:
							goto IL_01f8;
						case 5:
						case 8:
						case 11:
						case 14:
						case 17:
						case 20:
						case 23:
						case 26:
						case 29:
						case 32:
						case 33:
							goto IL_0202;
						case 35:
							goto IL_0219;
						case 36:
							goto IL_0223;
						case 37:
							goto IL_0256;
						case 38:
							goto IL_026d;
						case 39:
							goto IL_02a0;
						case 40:
							goto IL_02b7;
						case 41:
							goto IL_02ea;
						case 42:
							goto IL_0301;
						case 43:
							goto IL_0334;
						case 44:
							goto IL_034b;
						case 45:
							goto IL_037e;
						case 46:
							goto IL_0395;
						case 47:
							goto IL_03c8;
						case 48:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 34:
						case 49:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_037e:
					num2 = 45;
					ApplyUssdCodeBy(lblPort5, txtRet05, text);
					goto IL_0395;
					IL_0395:
					num2 = 46;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						break;
					}
					goto IL_03c8;
					IL_034b:
					num2 = 44;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_037e;
					}
					goto IL_0395;
					IL_03c8:
					num2 = 47;
					ApplyUssdCodeBy(lblPort6, txtRet06, text);
					break;
					IL_000b:
					num2 = 2;
					text = "";
					goto IL_0013;
					IL_0013:
					num2 = 3;
					if (Conversion.Val(txtReplyBy.Text) == 1.0)
					{
						goto IL_0036;
					}
					goto IL_0044;
					IL_0036:
					num2 = 4;
					text = "1";
					goto IL_0202;
					IL_0044:
					num2 = 6;
					if (Conversion.Val(txtReplyBy.Text) == 2.0)
					{
						goto IL_0067;
					}
					goto IL_0075;
					IL_0067:
					num2 = 7;
					text = "2";
					goto IL_0202;
					IL_0075:
					num2 = 9;
					if (Conversion.Val(txtReplyBy.Text) == 3.0)
					{
						goto IL_0099;
					}
					goto IL_00a8;
					IL_0099:
					num2 = 10;
					text = "3";
					goto IL_0202;
					IL_00a8:
					num2 = 12;
					if (Conversion.Val(txtReplyBy.Text) == 4.0)
					{
						goto IL_00cc;
					}
					goto IL_00db;
					IL_00cc:
					num2 = 13;
					text = "4";
					goto IL_0202;
					IL_00db:
					num2 = 15;
					if (Conversion.Val(txtReplyBy.Text) == 5.0)
					{
						goto IL_00ff;
					}
					goto IL_010e;
					IL_00ff:
					num2 = 16;
					text = "5";
					goto IL_0202;
					IL_010e:
					num2 = 18;
					if (Conversion.Val(txtReplyBy.Text) == 6.0)
					{
						goto IL_0132;
					}
					goto IL_0141;
					IL_0132:
					num2 = 19;
					text = "6";
					goto IL_0202;
					IL_0141:
					num2 = 21;
					if (Conversion.Val(txtReplyBy.Text) == 7.0)
					{
						goto IL_0165;
					}
					goto IL_0174;
					IL_0165:
					num2 = 22;
					text = "7";
					goto IL_0202;
					IL_0174:
					num2 = 24;
					if (Conversion.Val(txtReplyBy.Text) == 8.0)
					{
						goto IL_0198;
					}
					goto IL_01a4;
					IL_0198:
					num2 = 25;
					text = "8";
					goto IL_0202;
					IL_01a4:
					num2 = 27;
					if (Conversion.Val(txtReplyBy.Text) == 9.0)
					{
						goto IL_01c8;
					}
					goto IL_01d4;
					IL_01c8:
					num2 = 28;
					text = "9";
					goto IL_0202;
					IL_01d4:
					num2 = 30;
					if (Conversion.Val(txtReplyBy.Text) == 0.0)
					{
						goto IL_01f8;
					}
					goto IL_0202;
					IL_01f8:
					num2 = 31;
					text = "0";
					goto IL_0202;
					IL_0202:
					num2 = 33;
					if (text.Length == 0)
					{
						goto end_IL_0001_3;
					}
					goto IL_0219;
					IL_0219:
					num2 = 35;
					text = encoding_mod.GetCommandCode(text);
					goto IL_0223;
					IL_0223:
					num2 = 36;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_0256;
					}
					goto IL_026d;
					IL_0256:
					num2 = 37;
					ApplyUssdCodeBy(lblPort1, txtRet01, text);
					goto IL_026d;
					IL_026d:
					num2 = 38;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_02a0;
					}
					goto IL_02b7;
					IL_02a0:
					num2 = 39;
					ApplyUssdCodeBy(lblPort2, txtRet02, text);
					goto IL_02b7;
					IL_02b7:
					num2 = 40;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_02ea;
					}
					goto IL_0301;
					IL_02ea:
					num2 = 41;
					ApplyUssdCodeBy(lblPort3, txtRet03, text);
					goto IL_0301;
					IL_0301:
					num2 = 42;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0334;
					}
					goto IL_034b;
					IL_0334:
					num2 = 43;
					ApplyUssdCodeBy(lblPort4, txtRet04, text);
					goto IL_034b;
					end_IL_0001_2:
					break;
				}
				num2 = 48;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1217;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderBy2()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1217:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0036;
						case 6:
							goto IL_0044;
						case 7:
							goto IL_0067;
						case 9:
							goto IL_0075;
						case 10:
							goto IL_0099;
						case 12:
							goto IL_00a8;
						case 13:
							goto IL_00cc;
						case 15:
							goto IL_00db;
						case 16:
							goto IL_00ff;
						case 18:
							goto IL_010e;
						case 19:
							goto IL_0132;
						case 21:
							goto IL_0141;
						case 22:
							goto IL_0165;
						case 24:
							goto IL_0174;
						case 25:
							goto IL_0198;
						case 27:
							goto IL_01a4;
						case 28:
							goto IL_01c8;
						case 30:
							goto IL_01d4;
						case 31:
							goto IL_01f8;
						case 5:
						case 8:
						case 11:
						case 14:
						case 17:
						case 20:
						case 23:
						case 26:
						case 29:
						case 32:
						case 33:
							goto IL_0202;
						case 35:
							goto IL_0219;
						case 36:
							goto IL_0223;
						case 37:
							goto IL_0256;
						case 38:
							goto IL_026d;
						case 39:
							goto IL_02a0;
						case 40:
							goto IL_02b7;
						case 41:
							goto IL_02ea;
						case 42:
							goto IL_0301;
						case 43:
							goto IL_0334;
						case 44:
							goto IL_034b;
						case 45:
							goto IL_037e;
						case 46:
							goto IL_0395;
						case 47:
							goto IL_03c8;
						case 48:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 34:
						case 49:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_037e:
					num2 = 45;
					ApplyUssdCodeBy(lblPort5, txtRet05, text);
					goto IL_0395;
					IL_0395:
					num2 = 46;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						break;
					}
					goto IL_03c8;
					IL_034b:
					num2 = 44;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_037e;
					}
					goto IL_0395;
					IL_03c8:
					num2 = 47;
					ApplyUssdCodeBy(lblPort6, txtRet06, text);
					break;
					IL_000b:
					num2 = 2;
					text = "";
					goto IL_0013;
					IL_0013:
					num2 = 3;
					if (Conversion.Val(txtReplyBy2.Text) == 1.0)
					{
						goto IL_0036;
					}
					goto IL_0044;
					IL_0036:
					num2 = 4;
					text = "1";
					goto IL_0202;
					IL_0044:
					num2 = 6;
					if (Conversion.Val(txtReplyBy2.Text) == 2.0)
					{
						goto IL_0067;
					}
					goto IL_0075;
					IL_0067:
					num2 = 7;
					text = "2";
					goto IL_0202;
					IL_0075:
					num2 = 9;
					if (Conversion.Val(txtReplyBy2.Text) == 3.0)
					{
						goto IL_0099;
					}
					goto IL_00a8;
					IL_0099:
					num2 = 10;
					text = "3";
					goto IL_0202;
					IL_00a8:
					num2 = 12;
					if (Conversion.Val(txtReplyBy2.Text) == 4.0)
					{
						goto IL_00cc;
					}
					goto IL_00db;
					IL_00cc:
					num2 = 13;
					text = "4";
					goto IL_0202;
					IL_00db:
					num2 = 15;
					if (Conversion.Val(txtReplyBy2.Text) == 5.0)
					{
						goto IL_00ff;
					}
					goto IL_010e;
					IL_00ff:
					num2 = 16;
					text = "5";
					goto IL_0202;
					IL_010e:
					num2 = 18;
					if (Conversion.Val(txtReplyBy2.Text) == 6.0)
					{
						goto IL_0132;
					}
					goto IL_0141;
					IL_0132:
					num2 = 19;
					text = "6";
					goto IL_0202;
					IL_0141:
					num2 = 21;
					if (Conversion.Val(txtReplyBy2.Text) == 7.0)
					{
						goto IL_0165;
					}
					goto IL_0174;
					IL_0165:
					num2 = 22;
					text = "7";
					goto IL_0202;
					IL_0174:
					num2 = 24;
					if (Conversion.Val(txtReplyBy2.Text) == 8.0)
					{
						goto IL_0198;
					}
					goto IL_01a4;
					IL_0198:
					num2 = 25;
					text = "8";
					goto IL_0202;
					IL_01a4:
					num2 = 27;
					if (Conversion.Val(txtReplyBy2.Text) == 9.0)
					{
						goto IL_01c8;
					}
					goto IL_01d4;
					IL_01c8:
					num2 = 28;
					text = "9";
					goto IL_0202;
					IL_01d4:
					num2 = 30;
					if (Conversion.Val(txtReplyBy2.Text) == 0.0)
					{
						goto IL_01f8;
					}
					goto IL_0202;
					IL_01f8:
					num2 = 31;
					text = "0";
					goto IL_0202;
					IL_0202:
					num2 = 33;
					if (text.Length == 0)
					{
						goto end_IL_0001_3;
					}
					goto IL_0219;
					IL_0219:
					num2 = 35;
					text = encoding_mod.GetCommandCode(text);
					goto IL_0223;
					IL_0223:
					num2 = 36;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_0256;
					}
					goto IL_026d;
					IL_0256:
					num2 = 37;
					ApplyUssdCodeBy(lblPort1, txtRet01, text);
					goto IL_026d;
					IL_026d:
					num2 = 38;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_02a0;
					}
					goto IL_02b7;
					IL_02a0:
					num2 = 39;
					ApplyUssdCodeBy(lblPort2, txtRet02, text);
					goto IL_02b7;
					IL_02b7:
					num2 = 40;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_02ea;
					}
					goto IL_0301;
					IL_02ea:
					num2 = 41;
					ApplyUssdCodeBy(lblPort3, txtRet03, text);
					goto IL_0301;
					IL_0301:
					num2 = 42;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0334;
					}
					goto IL_034b;
					IL_0334:
					num2 = 43;
					ApplyUssdCodeBy(lblPort4, txtRet04, text);
					goto IL_034b;
					end_IL_0001_2:
					break;
				}
				num2 = 48;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1217;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderBy3()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1217:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0036;
						case 6:
							goto IL_0044;
						case 7:
							goto IL_0067;
						case 9:
							goto IL_0075;
						case 10:
							goto IL_0099;
						case 12:
							goto IL_00a8;
						case 13:
							goto IL_00cc;
						case 15:
							goto IL_00db;
						case 16:
							goto IL_00ff;
						case 18:
							goto IL_010e;
						case 19:
							goto IL_0132;
						case 21:
							goto IL_0141;
						case 22:
							goto IL_0165;
						case 24:
							goto IL_0174;
						case 25:
							goto IL_0198;
						case 27:
							goto IL_01a4;
						case 28:
							goto IL_01c8;
						case 30:
							goto IL_01d4;
						case 31:
							goto IL_01f8;
						case 5:
						case 8:
						case 11:
						case 14:
						case 17:
						case 20:
						case 23:
						case 26:
						case 29:
						case 32:
						case 33:
							goto IL_0202;
						case 35:
							goto IL_0219;
						case 36:
							goto IL_0223;
						case 37:
							goto IL_0256;
						case 38:
							goto IL_026d;
						case 39:
							goto IL_02a0;
						case 40:
							goto IL_02b7;
						case 41:
							goto IL_02ea;
						case 42:
							goto IL_0301;
						case 43:
							goto IL_0334;
						case 44:
							goto IL_034b;
						case 45:
							goto IL_037e;
						case 46:
							goto IL_0395;
						case 47:
							goto IL_03c8;
						case 48:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 34:
						case 49:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_037e:
					num2 = 45;
					ApplyUssdCodeBy(lblPort5, txtRet05, text);
					goto IL_0395;
					IL_0395:
					num2 = 46;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						break;
					}
					goto IL_03c8;
					IL_034b:
					num2 = 44;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_037e;
					}
					goto IL_0395;
					IL_03c8:
					num2 = 47;
					ApplyUssdCodeBy(lblPort6, txtRet06, text);
					break;
					IL_000b:
					num2 = 2;
					text = "";
					goto IL_0013;
					IL_0013:
					num2 = 3;
					if (Conversion.Val(txtReplyBy3.Text) == 1.0)
					{
						goto IL_0036;
					}
					goto IL_0044;
					IL_0036:
					num2 = 4;
					text = "1";
					goto IL_0202;
					IL_0044:
					num2 = 6;
					if (Conversion.Val(txtReplyBy3.Text) == 2.0)
					{
						goto IL_0067;
					}
					goto IL_0075;
					IL_0067:
					num2 = 7;
					text = "2";
					goto IL_0202;
					IL_0075:
					num2 = 9;
					if (Conversion.Val(txtReplyBy3.Text) == 3.0)
					{
						goto IL_0099;
					}
					goto IL_00a8;
					IL_0099:
					num2 = 10;
					text = "3";
					goto IL_0202;
					IL_00a8:
					num2 = 12;
					if (Conversion.Val(txtReplyBy3.Text) == 4.0)
					{
						goto IL_00cc;
					}
					goto IL_00db;
					IL_00cc:
					num2 = 13;
					text = "4";
					goto IL_0202;
					IL_00db:
					num2 = 15;
					if (Conversion.Val(txtReplyBy3.Text) == 5.0)
					{
						goto IL_00ff;
					}
					goto IL_010e;
					IL_00ff:
					num2 = 16;
					text = "5";
					goto IL_0202;
					IL_010e:
					num2 = 18;
					if (Conversion.Val(txtReplyBy3.Text) == 6.0)
					{
						goto IL_0132;
					}
					goto IL_0141;
					IL_0132:
					num2 = 19;
					text = "6";
					goto IL_0202;
					IL_0141:
					num2 = 21;
					if (Conversion.Val(txtReplyBy3.Text) == 7.0)
					{
						goto IL_0165;
					}
					goto IL_0174;
					IL_0165:
					num2 = 22;
					text = "7";
					goto IL_0202;
					IL_0174:
					num2 = 24;
					if (Conversion.Val(txtReplyBy3.Text) == 8.0)
					{
						goto IL_0198;
					}
					goto IL_01a4;
					IL_0198:
					num2 = 25;
					text = "8";
					goto IL_0202;
					IL_01a4:
					num2 = 27;
					if (Conversion.Val(txtReplyBy3.Text) == 9.0)
					{
						goto IL_01c8;
					}
					goto IL_01d4;
					IL_01c8:
					num2 = 28;
					text = "9";
					goto IL_0202;
					IL_01d4:
					num2 = 30;
					if (Conversion.Val(txtReplyBy3.Text) == 0.0)
					{
						goto IL_01f8;
					}
					goto IL_0202;
					IL_01f8:
					num2 = 31;
					text = "0";
					goto IL_0202;
					IL_0202:
					num2 = 33;
					if (text.Length == 0)
					{
						goto end_IL_0001_3;
					}
					goto IL_0219;
					IL_0219:
					num2 = 35;
					text = encoding_mod.GetCommandCode(text);
					goto IL_0223;
					IL_0223:
					num2 = 36;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_0256;
					}
					goto IL_026d;
					IL_0256:
					num2 = 37;
					ApplyUssdCodeBy(lblPort1, txtRet01, text);
					goto IL_026d;
					IL_026d:
					num2 = 38;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_02a0;
					}
					goto IL_02b7;
					IL_02a0:
					num2 = 39;
					ApplyUssdCodeBy(lblPort2, txtRet02, text);
					goto IL_02b7;
					IL_02b7:
					num2 = 40;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_02ea;
					}
					goto IL_0301;
					IL_02ea:
					num2 = 41;
					ApplyUssdCodeBy(lblPort3, txtRet03, text);
					goto IL_0301;
					IL_0301:
					num2 = 42;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0334;
					}
					goto IL_034b;
					IL_0334:
					num2 = 43;
					ApplyUssdCodeBy(lblPort4, txtRet04, text);
					goto IL_034b;
					end_IL_0001_2:
					break;
				}
				num2 = 48;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1217;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderByX(TextBox UssdBox)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1164:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0031;
						case 6:
							goto IL_003f;
						case 7:
							goto IL_005d;
						case 9:
							goto IL_006b;
						case 10:
							goto IL_008a;
						case 12:
							goto IL_0099;
						case 13:
							goto IL_00b8;
						case 15:
							goto IL_00c7;
						case 16:
							goto IL_00e6;
						case 18:
							goto IL_00f5;
						case 19:
							goto IL_0114;
						case 21:
							goto IL_0123;
						case 22:
							goto IL_0142;
						case 24:
							goto IL_014e;
						case 25:
							goto IL_016d;
						case 27:
							goto IL_0179;
						case 28:
							goto IL_0198;
						case 30:
							goto IL_01a4;
						case 31:
							goto IL_01c3;
						case 5:
						case 8:
						case 11:
						case 14:
						case 17:
						case 20:
						case 23:
						case 26:
						case 29:
						case 32:
						case 33:
							goto IL_01cd;
						case 35:
							goto IL_01e4;
						case 36:
							goto IL_01ee;
						case 37:
							goto IL_0221;
						case 38:
							goto IL_0238;
						case 39:
							goto IL_026b;
						case 40:
							goto IL_0282;
						case 41:
							goto IL_02b5;
						case 42:
							goto IL_02cc;
						case 43:
							goto IL_02ff;
						case 44:
							goto IL_0316;
						case 45:
							goto IL_0349;
						case 46:
							goto IL_0360;
						case 47:
							goto IL_0393;
						case 48:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 34:
						case 49:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0349:
					num2 = 45;
					ApplyUssdCodeBy(lblPort5, txtRet05, text);
					goto IL_0360;
					IL_0360:
					num2 = 46;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						break;
					}
					goto IL_0393;
					IL_0316:
					num2 = 44;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0349;
					}
					goto IL_0360;
					IL_0393:
					num2 = 47;
					ApplyUssdCodeBy(lblPort6, txtRet06, text);
					break;
					IL_000b:
					num2 = 2;
					text = "";
					goto IL_0013;
					IL_0013:
					num2 = 3;
					if (Conversion.Val(UssdBox.Text) == 1.0)
					{
						goto IL_0031;
					}
					goto IL_003f;
					IL_0031:
					num2 = 4;
					text = "1";
					goto IL_01cd;
					IL_003f:
					num2 = 6;
					if (Conversion.Val(UssdBox.Text) == 2.0)
					{
						goto IL_005d;
					}
					goto IL_006b;
					IL_005d:
					num2 = 7;
					text = "2";
					goto IL_01cd;
					IL_006b:
					num2 = 9;
					if (Conversion.Val(UssdBox.Text) == 3.0)
					{
						goto IL_008a;
					}
					goto IL_0099;
					IL_008a:
					num2 = 10;
					text = "3";
					goto IL_01cd;
					IL_0099:
					num2 = 12;
					if (Conversion.Val(UssdBox.Text) == 4.0)
					{
						goto IL_00b8;
					}
					goto IL_00c7;
					IL_00b8:
					num2 = 13;
					text = "4";
					goto IL_01cd;
					IL_00c7:
					num2 = 15;
					if (Conversion.Val(UssdBox.Text) == 5.0)
					{
						goto IL_00e6;
					}
					goto IL_00f5;
					IL_00e6:
					num2 = 16;
					text = "5";
					goto IL_01cd;
					IL_00f5:
					num2 = 18;
					if (Conversion.Val(UssdBox.Text) == 6.0)
					{
						goto IL_0114;
					}
					goto IL_0123;
					IL_0114:
					num2 = 19;
					text = "6";
					goto IL_01cd;
					IL_0123:
					num2 = 21;
					if (Conversion.Val(UssdBox.Text) == 7.0)
					{
						goto IL_0142;
					}
					goto IL_014e;
					IL_0142:
					num2 = 22;
					text = "7";
					goto IL_01cd;
					IL_014e:
					num2 = 24;
					if (Conversion.Val(UssdBox.Text) == 8.0)
					{
						goto IL_016d;
					}
					goto IL_0179;
					IL_016d:
					num2 = 25;
					text = "8";
					goto IL_01cd;
					IL_0179:
					num2 = 27;
					if (Conversion.Val(UssdBox.Text) == 9.0)
					{
						goto IL_0198;
					}
					goto IL_01a4;
					IL_0198:
					num2 = 28;
					text = "9";
					goto IL_01cd;
					IL_01a4:
					num2 = 30;
					if (Conversion.Val(UssdBox.Text) == 0.0)
					{
						goto IL_01c3;
					}
					goto IL_01cd;
					IL_01c3:
					num2 = 31;
					text = "0";
					goto IL_01cd;
					IL_01cd:
					num2 = 33;
					if (text.Length == 0)
					{
						goto end_IL_0001_3;
					}
					goto IL_01e4;
					IL_01e4:
					num2 = 35;
					text = encoding_mod.GetCommandCode(text);
					goto IL_01ee;
					IL_01ee:
					num2 = 36;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_0221;
					}
					goto IL_0238;
					IL_0221:
					num2 = 37;
					ApplyUssdCodeBy(lblPort1, txtRet01, text);
					goto IL_0238;
					IL_0238:
					num2 = 38;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_026b;
					}
					goto IL_0282;
					IL_026b:
					num2 = 39;
					ApplyUssdCodeBy(lblPort2, txtRet02, text);
					goto IL_0282;
					IL_0282:
					num2 = 40;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_02b5;
					}
					goto IL_02cc;
					IL_02b5:
					num2 = 41;
					ApplyUssdCodeBy(lblPort3, txtRet03, text);
					goto IL_02cc;
					IL_02cc:
					num2 = 42;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_02ff;
					}
					goto IL_0316;
					IL_02ff:
					num2 = 43;
					ApplyUssdCodeBy(lblPort4, txtRet04, text);
					goto IL_0316;
					end_IL_0001_2:
					break;
				}
				num2 = 48;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1164;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderGG(TextBox UssdBox)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string ussdCommand = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 521:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0019;
						case 4:
							goto IL_004b;
						case 5:
							goto IL_005b;
						case 6:
							goto IL_008d;
						case 7:
							goto IL_009d;
						case 8:
							goto IL_00cf;
						case 9:
							goto IL_00df;
						case 10:
							goto IL_0112;
						case 11:
							goto IL_0123;
						case 12:
							goto IL_0156;
						case 13:
							goto IL_0167;
						case 14:
							goto IL_019a;
						case 15:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 16:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0156:
					num2 = 12;
					ApplyUssdCode(lblPort5, ussdCommand);
					goto IL_0167;
					IL_0167:
					num2 = 13;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						break;
					}
					goto IL_019a;
					IL_0123:
					num2 = 11;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0156;
					}
					goto IL_0167;
					IL_019a:
					num2 = 14;
					ApplyUssdCode(lblPort6, ussdCommand);
					break;
					IL_000b:
					num2 = 2;
					ussdCommand = UssdBox.Text.Trim();
					goto IL_0019;
					IL_0019:
					num2 = 3;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_004b;
					}
					goto IL_005b;
					IL_004b:
					num2 = 4;
					ApplyUssdCode(lblPort1, ussdCommand);
					goto IL_005b;
					IL_005b:
					num2 = 5;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_008d;
					}
					goto IL_009d;
					IL_008d:
					num2 = 6;
					ApplyUssdCode(lblPort2, ussdCommand);
					goto IL_009d;
					IL_009d:
					num2 = 7;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_00cf;
					}
					goto IL_00df;
					IL_00cf:
					num2 = 8;
					ApplyUssdCode(lblPort3, ussdCommand);
					goto IL_00df;
					IL_00df:
					num2 = 9;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0112;
					}
					goto IL_0123;
					IL_0112:
					num2 = 10;
					ApplyUssdCode(lblPort4, ussdCommand);
					goto IL_0123;
					end_IL_0001_2:
					break;
				}
				num2 = 15;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 521;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ReSetUssdOrder()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 505:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_004e;
						case 5:
							goto IL_005d;
						case 6:
							goto IL_008f;
						case 7:
							goto IL_009e;
						case 8:
							goto IL_00d0;
						case 9:
							goto IL_00df;
						case 10:
							goto IL_0112;
						case 11:
							goto IL_0122;
						case 12:
							goto IL_0155;
						case 13:
							goto IL_0165;
						case 14:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 15:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0122:
					num2 = 11;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0155;
					}
					goto IL_0165;
					IL_0155:
					num2 = 12;
					ResetUssdCode(lblPort5);
					goto IL_0165;
					IL_0112:
					num2 = 10;
					ResetUssdCode(lblPort4);
					goto IL_0122;
					IL_0165:
					num2 = 13;
					if (!((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						goto end_IL_0001_3;
					}
					break;
					IL_000b:
					num2 = 2;
					lblProgress.Text = "Refresh ports";
					goto IL_001e;
					IL_001e:
					num2 = 3;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_004e;
					}
					goto IL_005d;
					IL_004e:
					num2 = 4;
					ResetUssdCode(lblPort1);
					goto IL_005d;
					IL_005d:
					num2 = 5;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_008f;
					}
					goto IL_009e;
					IL_008f:
					num2 = 6;
					ResetUssdCode(lblPort2);
					goto IL_009e;
					IL_009e:
					num2 = 7;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_00d0;
					}
					goto IL_00df;
					IL_00d0:
					num2 = 8;
					ResetUssdCode(lblPort3);
					goto IL_00df;
					IL_00df:
					num2 = 9;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0112;
					}
					goto IL_0122;
					end_IL_0001_2:
					break;
				}
				num2 = 14;
				ResetUssdCode(lblPort6);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 505;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ReSetUssdOrderEmpty()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 667:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_005a;
						case 4:
							goto IL_0069;
						case 5:
							goto IL_00ba;
						case 6:
							goto IL_00c9;
						case 7:
							goto IL_011a;
						case 8:
							goto IL_0129;
						case 9:
							goto IL_017a;
						case 10:
							goto IL_018a;
						case 11:
							goto IL_01dc;
						case 12:
							goto IL_01ec;
						case 13:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 14:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_018a:
					num2 = 10;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(txtRet05.Text.Trim(), "", TextCompare: false) == 0) & chkCh5.Checked)
					{
						goto IL_01dc;
					}
					goto IL_01ec;
					IL_01dc:
					num2 = 11;
					ResetUssdCode(lblPort5);
					goto IL_01ec;
					IL_017a:
					num2 = 9;
					ResetUssdCode(lblPort4);
					goto IL_018a;
					IL_01ec:
					num2 = 12;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(txtRet06.Text.Trim(), "", TextCompare: false) == 0) & chkCh6.Checked))
					{
						goto end_IL_0001_3;
					}
					break;
					IL_000b:
					num2 = 2;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(txtRet01.Text.Trim(), "", TextCompare: false) == 0) & chkCh1.Checked)
					{
						goto IL_005a;
					}
					goto IL_0069;
					IL_005a:
					num2 = 3;
					ResetUssdCode(lblPort1);
					goto IL_0069;
					IL_0069:
					num2 = 4;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(txtRet02.Text.Trim(), "", TextCompare: false) == 0) & chkCh2.Checked)
					{
						goto IL_00ba;
					}
					goto IL_00c9;
					IL_00ba:
					num2 = 5;
					ResetUssdCode(lblPort2);
					goto IL_00c9;
					IL_00c9:
					num2 = 6;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(txtRet03.Text.Trim(), "", TextCompare: false) == 0) & chkCh3.Checked)
					{
						goto IL_011a;
					}
					goto IL_0129;
					IL_011a:
					num2 = 7;
					ResetUssdCode(lblPort3);
					goto IL_0129;
					IL_0129:
					num2 = 8;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(txtRet04.Text.Trim(), "", TextCompare: false) == 0) & chkCh4.Checked)
					{
						goto IL_017a;
					}
					goto IL_018a;
					end_IL_0001_2:
					break;
				}
				num2 = 13;
				ResetUssdCode(lblPort6);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 667;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void RestartModem(string Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					bool flag = true;
					serialPort.WriteLine("AT+CFUN=1,1\r");
					break;
				}
				case 81:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 81;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	[MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
	private void btnRefresh_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		Stopwatch stopwatch = default(Stopwatch);
		double num5 = default(double);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				bool flag2;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 21910:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_002f;
						case 5:
						case 6:
							goto IL_004f;
						case 8:
							goto IL_0067;
						case 9:
							goto IL_0076;
						case 10:
							goto IL_008a;
						case 11:
							goto IL_009b;
						case 12:
							goto IL_00af;
						case 13:
							goto IL_00c3;
						case 14:
							goto IL_00d7;
						case 15:
							goto IL_00eb;
						case 16:
							goto IL_00ff;
						case 17:
							goto IL_0113;
						case 18:
							goto IL_0127;
						case 19:
							goto IL_013b;
						case 20:
							goto IL_014f;
						case 21:
							goto IL_0163;
						case 22:
							goto IL_0177;
						case 23:
							goto IL_018b;
						case 24:
							goto IL_019f;
						case 25:
							goto IL_01b3;
						case 26:
							goto IL_01c7;
						case 27:
							goto IL_01db;
						case 28:
							goto IL_01ef;
						case 29:
							goto IL_0203;
						case 30:
							goto IL_0213;
						case 31:
							goto IL_0223;
						case 32:
							goto IL_0233;
						case 33:
							goto IL_0243;
						case 34:
							goto IL_0253;
						case 35:
							goto IL_0263;
						case 36:
							goto IL_0273;
						case 37:
							goto IL_0287;
						case 38:
							goto IL_029b;
						case 39:
							goto IL_02c2;
						case 42:
							goto IL_02ce;
						case 43:
							goto IL_02e2;
						case 45:
						case 46:
							goto IL_02fd;
						case 47:
							goto IL_0311;
						case 49:
						case 50:
							goto IL_0325;
						case 40:
						case 41:
						case 51:
							goto IL_032f;
						case 52:
							goto IL_0361;
						case 48:
						case 53:
						case 54:
							goto IL_036e;
						case 55:
							goto IL_0382;
						case 56:
							goto IL_03a1;
						case 57:
						case 58:
							goto IL_03ce;
						case 59:
							goto IL_03d7;
						case 60:
							goto IL_03e8;
						case 61:
							goto IL_03f1;
						case 62:
							goto IL_03f7;
						case 64:
						{
							num2 = 64;
							bool flag = false;
							goto IL_0417;
						}
						case 65:
							num2 = 65;
							TryToConnectE303();
							goto IL_0417;
						case 63:
						case 66:
						case 67:
							goto IL_0417;
						case 68:
							goto IL_0420;
						case 70:
							goto IL_0439;
						case 71:
							goto IL_04c8;
						case 72:
							goto IL_04ef;
						case 73:
							goto IL_050d;
						case 74:
							goto IL_0516;
						case 75:
						case 76:
						case 77:
							goto IL_052a;
						case 78:
							goto IL_0551;
						case 79:
							goto IL_056f;
						case 80:
							goto IL_0578;
						case 81:
						case 82:
						case 83:
							goto IL_058c;
						case 84:
							goto IL_05b3;
						case 85:
							goto IL_05d1;
						case 86:
							goto IL_05da;
						case 87:
						case 88:
						case 89:
							goto IL_05ee;
						case 90:
							goto IL_0615;
						case 91:
							goto IL_0633;
						case 92:
							goto IL_063c;
						case 93:
						case 94:
						case 95:
							goto IL_0650;
						case 96:
							goto IL_0677;
						case 97:
							goto IL_0695;
						case 98:
							goto IL_069e;
						case 99:
						case 100:
						case 101:
							goto IL_06b2;
						case 102:
							goto IL_06d9;
						case 103:
							goto IL_06f7;
						case 104:
							goto IL_0700;
						case 105:
						case 106:
						case 107:
						case 108:
							goto IL_0716;
						case 110:
							goto IL_072f;
						case 111:
							goto IL_07be;
						case 112:
							goto IL_07e5;
						case 113:
							goto IL_0803;
						case 114:
							goto IL_080c;
						case 115:
						case 116:
						case 117:
							goto IL_0820;
						case 118:
							goto IL_0847;
						case 119:
							goto IL_0865;
						case 120:
							goto IL_086e;
						case 121:
						case 122:
						case 123:
							goto IL_0882;
						case 124:
							goto IL_08a9;
						case 125:
							goto IL_08c7;
						case 126:
							goto IL_08d0;
						case 127:
						case 128:
						case 129:
							goto IL_08e4;
						case 130:
							goto IL_090e;
						case 131:
							goto IL_092f;
						case 132:
							goto IL_093b;
						case 133:
						case 134:
						case 135:
							goto IL_0952;
						case 136:
							goto IL_097c;
						case 137:
							goto IL_099d;
						case 138:
							goto IL_09a9;
						case 139:
						case 140:
						case 141:
							goto IL_09c0;
						case 142:
							goto IL_09ea;
						case 143:
							goto IL_0a0b;
						case 144:
							goto IL_0a17;
						case 145:
						case 146:
						case 147:
						case 148:
							goto IL_0a30;
						case 150:
							goto IL_0a4c;
						case 152:
							goto IL_0ca2;
						case 153:
							goto IL_0cae;
						case 154:
							goto IL_0cbb;
						case 156:
							goto IL_0f11;
						case 157:
							goto IL_0f1d;
						case 158:
							goto IL_0f31;
						case 159:
							goto IL_0f3d;
						case 161:
							goto IL_1193;
						case 162:
							goto IL_119f;
						case 163:
							goto IL_11b3;
						case 164:
							goto IL_11bf;
						case 166:
							goto IL_1415;
						case 167:
							goto IL_1429;
						case 168:
							goto IL_1435;
						case 170:
							goto IL_168b;
						case 171:
							goto IL_1697;
						case 172:
							goto IL_16ab;
						case 173:
							goto IL_16b7;
						case 175:
							goto IL_190d;
						case 176:
							goto IL_1921;
						case 177:
							goto IL_192d;
						case 179:
							goto IL_1b83;
						case 180:
							goto IL_1b97;
						case 181:
							goto IL_1ba3;
						case 183:
							goto IL_1df9;
						case 184:
							goto IL_1e0d;
						case 185:
							goto IL_1e19;
						case 187:
							goto IL_206f;
						case 188:
							goto IL_2083;
						case 189:
							goto IL_208f;
						case 191:
							goto IL_22e2;
						case 151:
						case 155:
						case 160:
						case 165:
						case 169:
						case 174:
						case 178:
						case 182:
						case 186:
						case 190:
						case 192:
							goto IL_22ef;
						case 193:
							goto IL_22fc;
						case 194:
							goto IL_2321;
						case 195:
							goto IL_2334;
						case 196:
							goto IL_234c;
						case 197:
						case 198:
							goto IL_2371;
						case 199:
							goto IL_2396;
						case 200:
							goto IL_23a9;
						case 201:
							goto IL_23c1;
						case 202:
						case 203:
							goto IL_23e6;
						case 204:
							goto IL_240b;
						case 205:
							goto IL_241e;
						case 206:
							goto IL_2436;
						case 207:
						case 208:
							goto IL_245b;
						case 209:
							goto IL_2480;
						case 210:
							goto IL_2493;
						case 211:
							goto IL_24ab;
						case 212:
						case 213:
							goto IL_24d0;
						case 214:
							goto IL_24f5;
						case 215:
							goto IL_2508;
						case 216:
							goto IL_2520;
						case 217:
						case 218:
							goto IL_2545;
						case 219:
							goto IL_256a;
						case 220:
							goto IL_257d;
						case 221:
							goto IL_2595;
						case 222:
						case 223:
							goto IL_25ba;
						case 224:
							goto IL_25c6;
						case 225:
							goto IL_25dd;
						case 226:
							goto IL_25f4;
						case 227:
							goto IL_2607;
						case 229:
							goto IL_2623;
						case 230:
							goto IL_263d;
						case 231:
							goto IL_264a;
						case 232:
							goto IL_2656;
						case 233:
							goto IL_266d;
						case 234:
							goto IL_2679;
						case 235:
							goto IL_268d;
						case 237:
							goto IL_26a9;
						case 238:
							goto IL_26b5;
						case 241:
						case 242:
							goto IL_26d2;
						case 243:
							goto IL_26f6;
						case 244:
							goto IL_2702;
						case 245:
							goto IL_2716;
						case 247:
							goto IL_2732;
						case 248:
							goto IL_273e;
						case 249:
						case 250:
							goto IL_2754;
						case 251:
							goto IL_2778;
						case 252:
							goto IL_2784;
						case 253:
							goto IL_2798;
						case 255:
							goto IL_27b4;
						case 256:
							goto IL_27c0;
						case 257:
						case 258:
							goto IL_27d6;
						case 259:
							goto IL_27fa;
						case 260:
							goto IL_2806;
						case 261:
							goto IL_281a;
						case 263:
							goto IL_2836;
						case 264:
							goto IL_2842;
						case 265:
						case 266:
							goto IL_2851;
						case 267:
							goto IL_2875;
						case 268:
							goto IL_2881;
						case 269:
							goto IL_2895;
						case 271:
							goto IL_28b1;
						case 272:
							goto IL_28bd;
						case 273:
						case 274:
							goto IL_28d3;
						case 275:
							goto IL_28f7;
						case 276:
							goto IL_2903;
						case 277:
							goto IL_2917;
						case 279:
							goto IL_2933;
						case 280:
							goto IL_293f;
						case 281:
						case 282:
							goto IL_2955;
						case 283:
							goto IL_2979;
						case 284:
							goto IL_2985;
						case 285:
							goto IL_2999;
						case 287:
							goto IL_29b5;
						case 288:
							goto IL_29c1;
						case 289:
						case 290:
							goto IL_29d7;
						case 291:
							goto IL_29fb;
						case 292:
							goto IL_2a07;
						case 293:
							goto IL_2a1b;
						case 295:
							goto IL_2a37;
						case 296:
							goto IL_2a43;
						case 297:
						case 298:
							goto IL_2a59;
						case 299:
							goto IL_2a7d;
						case 300:
							goto IL_2a89;
						case 301:
							goto IL_2a9d;
						case 303:
							goto IL_2ab9;
						case 304:
							goto IL_2ac5;
						case 305:
						case 306:
							goto IL_2adb;
						case 308:
							goto IL_2af7;
						case 309:
							goto IL_2b1a;
						case 310:
							goto IL_2b26;
						case 311:
							goto IL_2b3a;
						case 313:
							goto IL_2b56;
						case 314:
							goto IL_2b62;
						case 315:
						case 316:
							goto IL_2b78;
						case 317:
							goto IL_2b9b;
						case 318:
							goto IL_2ba7;
						case 319:
							goto IL_2bbb;
						case 321:
							goto IL_2bd7;
						case 322:
							goto IL_2be3;
						case 323:
						case 324:
							goto IL_2bf9;
						case 326:
							goto IL_2c15;
						case 327:
							goto IL_2c38;
						case 328:
							goto IL_2c44;
						case 329:
							goto IL_2c58;
						case 331:
							goto IL_2c74;
						case 332:
							goto IL_2c80;
						case 333:
						case 334:
							goto IL_2c96;
						case 336:
							goto IL_2cb2;
						case 337:
							goto IL_2cd5;
						case 338:
							goto IL_2ce1;
						case 339:
							goto IL_2cf5;
						case 341:
							goto IL_2d11;
						case 342:
							goto IL_2d1d;
						case 343:
						case 344:
							goto IL_2d33;
						case 346:
							goto IL_2d4f;
						case 347:
							goto IL_2d75;
						case 348:
							goto IL_2d81;
						case 349:
							goto IL_2d95;
						case 351:
							goto IL_2df7;
						case 352:
							goto IL_2e0b;
						case 354:
						case 355:
							goto IL_2e29;
						case 356:
							goto IL_2e50;
						case 357:
							goto IL_2e5c;
						case 358:
							goto IL_2e69;
						case 359:
							goto IL_2e75;
						case 360:
							goto IL_2e98;
						case 361:
							goto IL_2ea4;
						case 362:
							goto IL_2eb8;
						case 363:
							goto IL_2ecc;
						case 365:
						case 366:
							goto IL_2eea;
						case 367:
							goto IL_2ef6;
						case 368:
							goto IL_2f0a;
						case 370:
							goto IL_2f6c;
						case 371:
							goto IL_2f80;
						case 373:
							goto IL_2f9c;
						case 374:
							goto IL_2fbf;
						case 375:
							goto IL_2fcb;
						case 376:
							goto IL_2fdf;
						case 377:
							goto IL_2ff3;
						case 379:
						case 380:
						case 381:
							goto IL_3013;
						case 382:
							goto IL_303a;
						case 383:
							goto IL_3046;
						case 384:
							goto IL_305a;
						case 386:
							goto IL_30a0;
						case 387:
							goto IL_30b4;
						case 389:
						case 390:
							goto IL_30d2;
						case 392:
							goto IL_30ee;
						case 393:
							goto IL_3114;
						case 394:
							goto IL_3120;
						case 395:
							goto IL_3134;
						case 397:
							goto IL_317a;
						case 398:
							goto IL_318e;
						case 400:
						case 401:
							goto IL_31ac;
						case 403:
							goto IL_31c8;
						case 404:
							goto IL_31ee;
						case 405:
							goto IL_31fa;
						case 406:
							goto IL_320e;
						case 408:
							goto IL_3254;
						case 409:
							goto IL_3268;
						case 411:
						case 412:
							goto IL_3286;
						case 414:
							goto IL_32a2;
						case 415:
							goto IL_32c5;
						case 416:
							goto IL_32d1;
						case 417:
							goto IL_32e5;
						case 419:
							goto IL_330e;
						case 420:
							goto IL_3322;
						case 422:
						case 423:
							goto IL_3340;
						case 425:
							goto IL_335c;
						case 426:
							goto IL_3382;
						case 427:
							goto IL_338e;
						case 428:
							goto IL_33a2;
						case 430:
							goto IL_33e8;
						case 431:
							goto IL_33fc;
						case 433:
						case 434:
							goto IL_341a;
						case 436:
							goto IL_3436;
						case 437:
							goto IL_345a;
						case 438:
							goto IL_346e;
						case 440:
							goto IL_348a;
						case 441:
							goto IL_3496;
						case 442:
							goto IL_34aa;
						case 444:
						case 445:
							goto IL_34c8;
						case 447:
							goto IL_34e4;
						case 448:
							goto IL_3507;
						case 449:
							goto IL_3513;
						case 450:
							goto IL_3527;
						case 452:
							goto IL_3550;
						case 454:
							goto IL_356c;
						case 455:
						case 456:
							goto IL_3582;
						case 458:
							goto IL_359e;
						case 459:
							goto IL_35c1;
						case 460:
							goto IL_35cd;
						case 461:
							goto IL_35e1;
						case 463:
							goto IL_360a;
						case 465:
							goto IL_3626;
						case 466:
						case 467:
							goto IL_363c;
						case 469:
							goto IL_3658;
						case 470:
							goto IL_367b;
						case 471:
							goto IL_3687;
						case 472:
							goto IL_369b;
						case 474:
							goto IL_36b7;
						case 475:
							goto IL_36c3;
						case 476:
						case 477:
							goto IL_36d9;
						case 478:
							goto IL_36fc;
						case 479:
							goto IL_3708;
						case 480:
							goto IL_371c;
						case 482:
							goto IL_3738;
						case 483:
							goto IL_3744;
						case 484:
						case 485:
							goto IL_375a;
						case 486:
							goto IL_377d;
						case 487:
							goto IL_3789;
						case 488:
							goto IL_379d;
						case 490:
							goto IL_37b9;
						case 491:
							goto IL_37c5;
						case 492:
						case 493:
							goto IL_37db;
						case 494:
							goto IL_37fe;
						case 495:
							goto IL_380a;
						case 496:
							goto IL_381e;
						case 498:
							goto IL_383a;
						case 499:
							goto IL_3846;
						case 500:
						case 501:
							goto IL_385c;
						case 502:
							goto IL_3880;
						case 503:
							goto IL_388c;
						case 504:
							goto IL_38a0;
						case 506:
							goto IL_38bc;
						case 507:
							goto IL_38c8;
						case 508:
						case 509:
							goto IL_38de;
						case 510:
							goto IL_3902;
						case 511:
							goto IL_390e;
						case 512:
							goto IL_3922;
						case 514:
							goto IL_393e;
						case 515:
							goto IL_394a;
						case 516:
						case 517:
							goto IL_3960;
						case 518:
							goto IL_3984;
						case 519:
							goto IL_3990;
						case 520:
							goto IL_39a4;
						case 522:
							goto IL_39c0;
						case 523:
							goto IL_39cc;
						case 524:
						case 525:
							goto IL_39e2;
						case 526:
							goto IL_3a05;
						case 527:
							goto IL_3a11;
						case 528:
							goto IL_3a25;
						case 530:
							goto IL_3a41;
						case 531:
							goto IL_3a4d;
						case 532:
						case 533:
							goto IL_3a63;
						case 534:
							goto IL_3a87;
						case 535:
							goto IL_3a93;
						case 536:
							goto IL_3aa7;
						case 538:
							goto IL_3ac3;
						case 539:
							goto IL_3acf;
						case 540:
						case 541:
							goto IL_3ae5;
						case 542:
							goto IL_3b09;
						case 543:
							goto IL_3b15;
						case 544:
							goto IL_3b29;
						case 546:
							goto IL_3b45;
						case 547:
							goto IL_3b51;
						case 548:
						case 549:
							goto IL_3b67;
						case 550:
							goto IL_3b8b;
						case 551:
							goto IL_3b97;
						case 552:
							goto IL_3bab;
						case 554:
							goto IL_3bc7;
						case 555:
							goto IL_3bd3;
						case 556:
						case 557:
							goto IL_3be9;
						case 558:
							goto IL_3c0f;
						case 559:
							goto IL_3c1b;
						case 560:
							goto IL_3c2f;
						case 562:
							goto IL_3c4b;
						case 563:
							goto IL_3c57;
						case 564:
							goto IL_3c82;
						case 565:
							goto IL_3c9f;
						case 566:
							goto IL_3cca;
						case 567:
							goto IL_3ce7;
						case 568:
							goto IL_3d12;
						case 569:
							goto IL_3d2f;
						case 570:
							goto IL_3d5a;
						case 571:
							goto IL_3d77;
						case 572:
							goto IL_3da2;
						case 573:
							goto IL_3dbf;
						case 574:
							goto IL_3dea;
						case 575:
							goto IL_3e07;
						case 576:
							goto IL_3e1b;
						case 577:
							goto IL_3e32;
						case 578:
							goto IL_3e46;
						case 579:
							goto IL_3e59;
						case 580:
							goto IL_3e65;
						case 581:
						case 582:
						case 583:
							goto IL_3e7d;
						case 584:
							goto IL_3ea3;
						case 585:
							goto IL_3eaf;
						case 586:
							goto IL_3ec3;
						case 588:
							goto IL_3edf;
						case 589:
							goto IL_3eeb;
						case 590:
						case 591:
							goto IL_3f01;
						case 592:
							goto IL_3f24;
						case 593:
							goto IL_3f30;
						case 594:
							goto IL_3f44;
						case 596:
							goto IL_3f60;
						case 597:
							goto IL_3f6c;
						case 598:
						case 599:
							goto IL_3f82;
						case 600:
							goto IL_3fa5;
						case 601:
							goto IL_3fb1;
						case 602:
							goto IL_3fc5;
						case 604:
							goto IL_3fe1;
						case 605:
							goto IL_3fed;
						case 606:
						case 607:
							goto IL_4003;
						case 608:
							goto IL_4027;
						case 609:
							goto IL_4033;
						case 610:
							goto IL_4047;
						case 612:
							goto IL_4063;
						case 613:
							goto IL_406f;
						case 614:
						case 615:
							goto IL_4085;
						case 616:
							goto IL_40a8;
						case 617:
							goto IL_40b4;
						case 618:
							goto IL_40c8;
						case 620:
							goto IL_40e4;
						case 621:
							goto IL_40f0;
						case 622:
						case 623:
							goto IL_4106;
						case 624:
							goto IL_412a;
						case 625:
							goto IL_4136;
						case 626:
							goto IL_414a;
						case 628:
							goto IL_4166;
						case 629:
							goto IL_4172;
						case 630:
						case 631:
							goto IL_4188;
						case 632:
							goto IL_41ac;
						case 633:
							goto IL_41b8;
						case 634:
							goto IL_41cc;
						case 636:
							goto IL_41e8;
						case 637:
							goto IL_41f4;
						case 638:
						case 639:
							goto IL_420a;
						case 640:
							goto IL_422e;
						case 641:
							goto IL_423a;
						case 642:
							goto IL_424e;
						case 644:
							goto IL_426a;
						case 645:
							goto IL_4276;
						case 646:
						case 647:
							goto IL_428c;
						case 648:
							goto IL_42b0;
						case 649:
							goto IL_42bc;
						case 650:
							goto IL_42d0;
						case 652:
							goto IL_42ec;
						case 653:
							goto IL_42f8;
						case 654:
						case 655:
							goto IL_430e;
						case 656:
							goto IL_4332;
						case 657:
							goto IL_433e;
						case 658:
							goto IL_4352;
						case 660:
							goto IL_436e;
						case 661:
							goto IL_437a;
						case 662:
						case 663:
							goto IL_4390;
						case 664:
							goto IL_43b4;
						case 665:
							goto IL_43c0;
						case 666:
							goto IL_43d4;
						case 668:
							goto IL_43f0;
						case 669:
							goto IL_43fc;
						case 670:
						case 671:
							goto IL_4412;
						case 672:
							goto IL_4436;
						case 673:
							goto IL_4442;
						case 674:
							goto IL_4456;
						case 676:
							goto IL_4472;
						case 677:
							goto IL_447e;
						case 678:
						case 679:
							goto IL_4494;
						case 680:
							goto IL_44b8;
						case 681:
							goto IL_44c4;
						case 682:
							goto IL_44d8;
						case 684:
							goto IL_44f4;
						case 685:
							goto IL_4500;
						case 686:
						case 687:
							goto IL_4516;
						case 688:
							goto IL_453a;
						case 689:
							goto IL_4546;
						case 690:
							goto IL_455a;
						case 692:
							goto IL_4576;
						case 693:
							goto IL_4582;
						case 694:
						case 695:
							goto IL_4598;
						case 696:
							goto IL_45bc;
						case 697:
							goto IL_45c8;
						case 698:
							goto IL_45dc;
						case 700:
							goto IL_45f8;
						case 701:
							goto IL_4604;
						case 702:
						case 703:
							goto IL_461a;
						case 704:
							goto IL_463e;
						case 705:
							goto IL_464a;
						case 706:
							goto IL_465e;
						case 708:
							goto IL_467a;
						case 709:
							goto IL_4686;
						case 710:
						case 711:
							goto IL_469c;
						case 712:
							goto IL_46c0;
						case 713:
							goto IL_46cc;
						case 714:
							goto IL_46e0;
						case 716:
							goto IL_46fc;
						case 717:
							goto IL_4708;
						case 718:
						case 719:
							goto IL_471e;
						case 720:
							goto IL_4742;
						case 721:
							goto IL_474e;
						case 722:
							goto IL_4762;
						case 724:
							goto IL_477e;
						case 725:
							goto IL_478a;
						case 726:
						case 727:
							goto IL_47a0;
						case 728:
							goto IL_47c4;
						case 729:
							goto IL_47d0;
						case 730:
							goto IL_47e4;
						case 732:
							goto IL_4800;
						case 733:
							goto IL_480c;
						case 734:
						case 735:
							goto IL_4822;
						case 736:
							goto IL_4846;
						case 737:
							goto IL_4852;
						case 738:
							goto IL_4866;
						case 740:
							goto IL_4882;
						case 741:
							goto IL_488e;
						case 742:
						case 743:
							goto IL_48a4;
						case 744:
							goto IL_48c8;
						case 745:
							goto IL_48d4;
						case 746:
							goto IL_48e8;
						case 748:
							goto IL_4904;
						case 749:
							goto IL_4910;
						case 750:
						case 751:
							goto IL_4926;
						case 752:
							goto IL_494a;
						case 753:
							goto IL_4956;
						case 754:
							goto IL_496a;
						case 756:
							goto IL_4983;
						case 757:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 7:
						case 44:
						case 69:
						case 109:
						case 149:
						case 228:
						case 236:
						case 239:
						case 240:
						case 246:
						case 254:
						case 262:
						case 270:
						case 278:
						case 286:
						case 294:
						case 302:
						case 307:
						case 312:
						case 320:
						case 325:
						case 330:
						case 335:
						case 340:
						case 345:
						case 350:
						case 353:
						case 364:
						case 369:
						case 372:
						case 378:
						case 385:
						case 388:
						case 391:
						case 396:
						case 399:
						case 402:
						case 407:
						case 410:
						case 413:
						case 418:
						case 421:
						case 424:
						case 429:
						case 432:
						case 435:
						case 439:
						case 443:
						case 446:
						case 451:
						case 453:
						case 457:
						case 462:
						case 464:
						case 468:
						case 473:
						case 481:
						case 489:
						case 497:
						case 505:
						case 513:
						case 521:
						case 529:
						case 537:
						case 545:
						case 553:
						case 561:
						case 587:
						case 595:
						case 603:
						case 611:
						case 619:
						case 627:
						case 635:
						case 643:
						case 651:
						case 659:
						case 667:
						case 675:
						case 683:
						case 691:
						case 699:
						case 707:
						case 715:
						case 723:
						case 731:
						case 739:
						case 747:
						case 755:
						case 758:
						case 759:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_494a:
					num2 = 752;
					Application.DoEvents();
					goto IL_4956;
					IL_4956:
					num2 = 753;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_496a;
					IL_4926:
					num2 = 751;
					if (!((MysqlConn.MainProgLic >= 11) & ckbtnCashKing.Checked))
					{
						goto end_IL_0001_3;
					}
					goto IL_494a;
					IL_496a:
					num2 = 754;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_4983;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					num5 = Math.Abs(DateAndTime.DateDiff(DateInterval.Day, MysqlConn.OpenDate, DateTime.Now));
					goto IL_002f;
					IL_002f:
					num2 = 4;
					if (num5 >= 2.0)
					{
						ProjectData.EndApp();
					}
					goto IL_004f;
					IL_4983:
					num2 = 756;
					Application.DoEvents();
					break;
					IL_004f:
					num2 = 6;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_0067;
					IL_0067:
					num2 = 8;
					btnRefresh.Enabled = false;
					goto IL_0076;
					IL_0076:
					num2 = 9;
					lblProgress.BackColor = Color.Red;
					goto IL_008a;
					IL_008a:
					num2 = 10;
					btnClear_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_009b;
					IL_009b:
					num2 = 11;
					lblNum1.Text = "";
					goto IL_00af;
					IL_00af:
					num2 = 12;
					lblPort1.Text = "";
					goto IL_00c3;
					IL_00c3:
					num2 = 13;
					lblNum2.Text = "";
					goto IL_00d7;
					IL_00d7:
					num2 = 14;
					lblPort2.Text = "";
					goto IL_00eb;
					IL_00eb:
					num2 = 15;
					lblNum3.Text = "";
					goto IL_00ff;
					IL_00ff:
					num2 = 16;
					lblPort3.Text = "";
					goto IL_0113;
					IL_0113:
					num2 = 17;
					lblNum4.Text = "";
					goto IL_0127;
					IL_0127:
					num2 = 18;
					lblPort4.Text = "";
					goto IL_013b;
					IL_013b:
					num2 = 19;
					lblNum5.Text = "";
					goto IL_014f;
					IL_014f:
					num2 = 20;
					lblPort5.Text = "";
					goto IL_0163;
					IL_0163:
					num2 = 21;
					lblNum6.Text = "";
					goto IL_0177;
					IL_0177:
					num2 = 22;
					lblPort6.Text = "";
					goto IL_018b;
					IL_018b:
					num2 = 23;
					lblBal1.Text = "";
					goto IL_019f;
					IL_019f:
					num2 = 24;
					lblBal2.Text = "";
					goto IL_01b3;
					IL_01b3:
					num2 = 25;
					lblBal3.Text = "";
					goto IL_01c7;
					IL_01c7:
					num2 = 26;
					lblBal4.Text = "";
					goto IL_01db;
					IL_01db:
					num2 = 27;
					lblBal5.Text = "";
					goto IL_01ef;
					IL_01ef:
					num2 = 28;
					lblBal6.Text = "";
					goto IL_0203;
					IL_0203:
					num2 = 29;
					chkCh1.Checked = false;
					goto IL_0213;
					IL_0213:
					num2 = 30;
					chkCh2.Checked = false;
					goto IL_0223;
					IL_0223:
					num2 = 31;
					chkCh3.Checked = false;
					goto IL_0233;
					IL_0233:
					num2 = 32;
					chkCh4.Checked = false;
					goto IL_0243;
					IL_0243:
					num2 = 33;
					chkCh5.Checked = false;
					goto IL_0253;
					IL_0253:
					num2 = 34;
					chkCh6.Checked = false;
					goto IL_0263;
					IL_0263:
					num2 = 35;
					chkStop.Checked = false;
					goto IL_0273;
					IL_0273:
					num2 = 36;
					lstOCNumbers.Items.Clear();
					goto IL_0287;
					IL_0287:
					num2 = 37;
					lblProgress.Text = "Waiting";
					goto IL_029b;
					IL_029b:
					num2 = 38;
					if (Conversion.Val(txtDelayInSC.Text) > 0.0)
					{
						goto IL_02c2;
					}
					goto IL_036e;
					IL_02c2:
					num2 = 39;
					stopwatch.Start();
					goto IL_032f;
					IL_032f:
					num2 = 41;
					if ((double)stopwatch.ElapsedMilliseconds <= Conversion.Val(txtDelayInSC.Text) * 1000.0)
					{
						goto IL_02ce;
					}
					goto IL_0361;
					IL_0361:
					num2 = 52;
					stopwatch.Stop();
					goto IL_036e;
					IL_02ce:
					num2 = 42;
					if (chkStop.Checked)
					{
						goto IL_02e2;
					}
					goto IL_02fd;
					IL_02e2:
					num2 = 43;
					lblProgress.Text = "Stop Flage Checked";
					goto end_IL_0001_3;
					IL_02fd:
					num2 = 46;
					if (cktxtDelayInSC.Checked)
					{
						goto IL_0311;
					}
					goto IL_0325;
					IL_0311:
					num2 = 47;
					cktxtDelayInSC.Checked = false;
					goto IL_036e;
					IL_0325:
					num2 = 50;
					Application.DoEvents();
					goto IL_032f;
					IL_036e:
					num2 = 54;
					lblProgress.Text = "Get Coms and Numbers";
					goto IL_0382;
					IL_0382:
					num2 = 55;
					if (txtEproc.Text.Length <= 0)
					{
						goto IL_03a1;
					}
					goto IL_03ce;
					IL_03a1:
					num2 = 56;
					txtEproc.Text = DateTime.Today.Date.ToString("ddMMyyyy");
					goto IL_03ce;
					IL_03ce:
					num2 = 58;
					Application.DoEvents();
					goto IL_03d7;
					IL_03d7:
					num2 = 59;
					btnClear_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_03e8;
					IL_03e8:
					num2 = 60;
					Application.DoEvents();
					goto IL_03f1;
					IL_03f1:
					num2 = 61;
					flag2 = true;
					goto IL_03f7;
					IL_03f7:
					num2 = 62;
					TryToConnect();
					goto IL_0417;
					IL_0417:
					num2 = 67;
					Application.DoEvents();
					goto IL_0420;
					IL_0420:
					num2 = 68;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_0439;
					IL_0439:
					num2 = 70;
					if ((lblPort1.ForeColor == Color.White) | (lblPort2.ForeColor == Color.White) | (lblPort3.ForeColor == Color.White) | (lblPort4.ForeColor == Color.White) | (lblPort5.ForeColor == Color.White) | (lblPort6.ForeColor == Color.White))
					{
						goto IL_04c8;
					}
					goto IL_0716;
					IL_04c8:
					num2 = 71;
					if (Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_04ef;
					}
					goto IL_052a;
					IL_04ef:
					num2 = 72;
					if (lblPort1.ForeColor == Color.White)
					{
						goto IL_050d;
					}
					goto IL_052a;
					IL_050d:
					num2 = 73;
					Application.DoEvents();
					goto IL_0516;
					IL_0516:
					num2 = 74;
					TryToIdntyThisModem(lblPort1);
					goto IL_052a;
					IL_052a:
					num2 = 77;
					if (Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0551;
					}
					goto IL_058c;
					IL_0551:
					num2 = 78;
					if (lblPort2.ForeColor == Color.White)
					{
						goto IL_056f;
					}
					goto IL_058c;
					IL_056f:
					num2 = 79;
					Application.DoEvents();
					goto IL_0578;
					IL_0578:
					num2 = 80;
					TryToIdntyThisModem(lblPort2);
					goto IL_058c;
					IL_058c:
					num2 = 83;
					if (Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_05b3;
					}
					goto IL_05ee;
					IL_05b3:
					num2 = 84;
					if (lblPort3.ForeColor == Color.White)
					{
						goto IL_05d1;
					}
					goto IL_05ee;
					IL_05d1:
					num2 = 85;
					Application.DoEvents();
					goto IL_05da;
					IL_05da:
					num2 = 86;
					TryToIdntyThisModem(lblPort3);
					goto IL_05ee;
					IL_05ee:
					num2 = 89;
					if (Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0615;
					}
					goto IL_0650;
					IL_0615:
					num2 = 90;
					if (lblPort4.ForeColor == Color.White)
					{
						goto IL_0633;
					}
					goto IL_0650;
					IL_0633:
					num2 = 91;
					Application.DoEvents();
					goto IL_063c;
					IL_063c:
					num2 = 92;
					TryToIdntyThisModem(lblPort4);
					goto IL_0650;
					IL_0650:
					num2 = 95;
					if (Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0677;
					}
					goto IL_06b2;
					IL_0677:
					num2 = 96;
					if (lblPort5.ForeColor == Color.White)
					{
						goto IL_0695;
					}
					goto IL_06b2;
					IL_0695:
					num2 = 97;
					Application.DoEvents();
					goto IL_069e;
					IL_069e:
					num2 = 98;
					TryToIdntyThisModem(lblPort5);
					goto IL_06b2;
					IL_06b2:
					num2 = 101;
					if (Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_06d9;
					}
					goto IL_0716;
					IL_06d9:
					num2 = 102;
					if (lblPort6.ForeColor == Color.White)
					{
						goto IL_06f7;
					}
					goto IL_0716;
					IL_06f7:
					num2 = 103;
					Application.DoEvents();
					goto IL_0700;
					IL_0700:
					num2 = 104;
					TryToIdntyThisModem(lblPort6);
					goto IL_0716;
					IL_0716:
					num2 = 108;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_072f;
					IL_072f:
					num2 = 110;
					if ((lblPort1.ForeColor == Color.White) | (lblPort2.ForeColor == Color.White) | (lblPort3.ForeColor == Color.White) | (lblPort4.ForeColor == Color.White) | (lblPort5.ForeColor == Color.White) | (lblPort6.ForeColor == Color.White))
					{
						goto IL_07be;
					}
					goto IL_0a30;
					IL_07be:
					num2 = 111;
					if (Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_07e5;
					}
					goto IL_0820;
					IL_07e5:
					num2 = 112;
					if (lblPort1.ForeColor == Color.White)
					{
						goto IL_0803;
					}
					goto IL_0820;
					IL_0803:
					num2 = 113;
					Application.DoEvents();
					goto IL_080c;
					IL_080c:
					num2 = 114;
					TryToIdntyThisModem(lblPort1);
					goto IL_0820;
					IL_0820:
					num2 = 117;
					if (Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0847;
					}
					goto IL_0882;
					IL_0847:
					num2 = 118;
					if (lblPort2.ForeColor == Color.White)
					{
						goto IL_0865;
					}
					goto IL_0882;
					IL_0865:
					num2 = 119;
					Application.DoEvents();
					goto IL_086e;
					IL_086e:
					num2 = 120;
					TryToIdntyThisModem(lblPort2);
					goto IL_0882;
					IL_0882:
					num2 = 123;
					if (Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_08a9;
					}
					goto IL_08e4;
					IL_08a9:
					num2 = 124;
					if (lblPort3.ForeColor == Color.White)
					{
						goto IL_08c7;
					}
					goto IL_08e4;
					IL_08c7:
					num2 = 125;
					Application.DoEvents();
					goto IL_08d0;
					IL_08d0:
					num2 = 126;
					TryToIdntyThisModem(lblPort3);
					goto IL_08e4;
					IL_08e4:
					num2 = 129;
					if (Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_090e;
					}
					goto IL_0952;
					IL_090e:
					num2 = 130;
					if (lblPort4.ForeColor == Color.White)
					{
						goto IL_092f;
					}
					goto IL_0952;
					IL_092f:
					num2 = 131;
					Application.DoEvents();
					goto IL_093b;
					IL_093b:
					num2 = 132;
					TryToIdntyThisModem(lblPort4);
					goto IL_0952;
					IL_0952:
					num2 = 135;
					if (Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_097c;
					}
					goto IL_09c0;
					IL_097c:
					num2 = 136;
					if (lblPort5.ForeColor == Color.White)
					{
						goto IL_099d;
					}
					goto IL_09c0;
					IL_099d:
					num2 = 137;
					Application.DoEvents();
					goto IL_09a9;
					IL_09a9:
					num2 = 138;
					TryToIdntyThisModem(lblPort5);
					goto IL_09c0;
					IL_09c0:
					num2 = 141;
					if (Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_09ea;
					}
					goto IL_0a30;
					IL_09ea:
					num2 = 142;
					if (lblPort6.ForeColor == Color.White)
					{
						goto IL_0a0b;
					}
					goto IL_0a30;
					IL_0a0b:
					num2 = 143;
					Application.DoEvents();
					goto IL_0a17;
					IL_0a17:
					num2 = 144;
					TryToIdntyThisModem(lblPort6);
					goto IL_0a30;
					IL_0a30:
					num2 = 148;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_0a4c;
					IL_0a4c:
					num2 = 150;
					if (!(((lblNum1.Text.Trim().Length > 0) | (lblPort1.ForeColor == Color.White) | ((lblNum1.Text.Trim().Length == 0) & (lblPort1.Text.Trim().Length == 0))) & ((lblNum2.Text.Trim().Length > 0) | (lblPort2.ForeColor == Color.White) | ((lblNum2.Text.Trim().Length == 0) & (lblPort2.Text.Trim().Length == 0))) & ((lblNum3.Text.Trim().Length > 0) | (lblPort3.ForeColor == Color.White) | ((lblNum3.Text.Trim().Length == 0) & (lblPort3.Text.Trim().Length == 0))) & ((lblNum4.Text.Trim().Length > 0) | (lblPort4.ForeColor == Color.White) | ((lblNum4.Text.Trim().Length == 0) & (lblPort4.Text.Trim().Length == 0))) & ((lblNum5.Text.Trim().Length > 0) | (lblPort5.ForeColor == Color.White) | ((lblNum5.Text.Trim().Length == 0) & (lblPort5.Text.Trim().Length == 0))) & ((lblNum6.Text.Trim().Length > 0) | (lblPort6.ForeColor == Color.White) | ((lblNum6.Text.Trim().Length == 0) & (lblPort6.Text.Trim().Length == 0)))))
					{
						goto IL_0ca2;
					}
					goto IL_22ef;
					IL_0ca2:
					num2 = 152;
					Application.DoEvents();
					goto IL_0cae;
					IL_0cae:
					num2 = 153;
					GetAllNumbers();
					goto IL_0cbb;
					IL_0cbb:
					num2 = 154;
					if (!(((lblNum1.Text.Trim().Length > 0) | (lblPort1.ForeColor == Color.White) | ((lblNum1.Text.Trim().Length == 0) & (lblPort1.Text.Trim().Length == 0))) & ((lblNum2.Text.Trim().Length > 0) | (lblPort2.ForeColor == Color.White) | ((lblNum2.Text.Trim().Length == 0) & (lblPort2.Text.Trim().Length == 0))) & ((lblNum3.Text.Trim().Length > 0) | (lblPort3.ForeColor == Color.White) | ((lblNum3.Text.Trim().Length == 0) & (lblPort3.Text.Trim().Length == 0))) & ((lblNum4.Text.Trim().Length > 0) | (lblPort4.ForeColor == Color.White) | ((lblNum4.Text.Trim().Length == 0) & (lblPort4.Text.Trim().Length == 0))) & ((lblNum5.Text.Trim().Length > 0) | (lblPort5.ForeColor == Color.White) | ((lblNum5.Text.Trim().Length == 0) & (lblPort5.Text.Trim().Length == 0))) & ((lblNum6.Text.Trim().Length > 0) | (lblPort6.ForeColor == Color.White) | ((lblNum6.Text.Trim().Length == 0) & (lblPort6.Text.Trim().Length == 0)))))
					{
						goto IL_0f11;
					}
					goto IL_22ef;
					IL_0f11:
					num2 = 156;
					Application.DoEvents();
					goto IL_0f1d;
					IL_0f1d:
					num2 = 157;
					btnNumbers_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_0f31;
					IL_0f31:
					num2 = 158;
					Application.DoEvents();
					goto IL_0f3d;
					IL_0f3d:
					num2 = 159;
					if (!(((lblNum1.Text.Trim().Length > 0) | (lblPort1.ForeColor == Color.White) | ((lblNum1.Text.Trim().Length == 0) & (lblPort1.Text.Trim().Length == 0))) & ((lblNum2.Text.Trim().Length > 0) | (lblPort2.ForeColor == Color.White) | ((lblNum2.Text.Trim().Length == 0) & (lblPort2.Text.Trim().Length == 0))) & ((lblNum3.Text.Trim().Length > 0) | (lblPort3.ForeColor == Color.White) | ((lblNum3.Text.Trim().Length == 0) & (lblPort3.Text.Trim().Length == 0))) & ((lblNum4.Text.Trim().Length > 0) | (lblPort4.ForeColor == Color.White) | ((lblNum4.Text.Trim().Length == 0) & (lblPort4.Text.Trim().Length == 0))) & ((lblNum5.Text.Trim().Length > 0) | (lblPort5.ForeColor == Color.White) | ((lblNum5.Text.Trim().Length == 0) & (lblPort5.Text.Trim().Length == 0))) & ((lblNum6.Text.Trim().Length > 0) | (lblPort6.ForeColor == Color.White) | ((lblNum6.Text.Trim().Length == 0) & (lblPort6.Text.Trim().Length == 0)))))
					{
						goto IL_1193;
					}
					goto IL_22ef;
					IL_1193:
					num2 = 161;
					Application.DoEvents();
					goto IL_119f;
					IL_119f:
					num2 = 162;
					btnNumbers2_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_11b3;
					IL_11b3:
					num2 = 163;
					Application.DoEvents();
					goto IL_11bf;
					IL_11bf:
					num2 = 164;
					if (!(((lblNum1.Text.Trim().Length > 0) | (lblPort1.ForeColor == Color.White) | ((lblNum1.Text.Trim().Length == 0) & (lblPort1.Text.Trim().Length == 0))) & ((lblNum2.Text.Trim().Length > 0) | (lblPort2.ForeColor == Color.White) | ((lblNum2.Text.Trim().Length == 0) & (lblPort2.Text.Trim().Length == 0))) & ((lblNum3.Text.Trim().Length > 0) | (lblPort3.ForeColor == Color.White) | ((lblNum3.Text.Trim().Length == 0) & (lblPort3.Text.Trim().Length == 0))) & ((lblNum4.Text.Trim().Length > 0) | (lblPort4.ForeColor == Color.White) | ((lblNum4.Text.Trim().Length == 0) & (lblPort4.Text.Trim().Length == 0))) & ((lblNum5.Text.Trim().Length > 0) | (lblPort5.ForeColor == Color.White) | ((lblNum5.Text.Trim().Length == 0) & (lblPort5.Text.Trim().Length == 0))) & ((lblNum6.Text.Trim().Length > 0) | (lblPort6.ForeColor == Color.White) | ((lblNum6.Text.Trim().Length == 0) & (lblPort6.Text.Trim().Length == 0)))))
					{
						goto IL_1415;
					}
					goto IL_22ef;
					IL_1415:
					num2 = 166;
					btnNumbers3_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_1429;
					IL_1429:
					num2 = 167;
					Application.DoEvents();
					goto IL_1435;
					IL_1435:
					num2 = 168;
					if (!(((lblNum1.Text.Trim().Length > 0) | (lblPort1.ForeColor == Color.White) | ((lblNum1.Text.Trim().Length == 0) & (lblPort1.Text.Trim().Length == 0))) & ((lblNum2.Text.Trim().Length > 0) | (lblPort2.ForeColor == Color.White) | ((lblNum2.Text.Trim().Length == 0) & (lblPort2.Text.Trim().Length == 0))) & ((lblNum3.Text.Trim().Length > 0) | (lblPort3.ForeColor == Color.White) | ((lblNum3.Text.Trim().Length == 0) & (lblPort3.Text.Trim().Length == 0))) & ((lblNum4.Text.Trim().Length > 0) | (lblPort4.ForeColor == Color.White) | ((lblNum4.Text.Trim().Length == 0) & (lblPort4.Text.Trim().Length == 0))) & ((lblNum5.Text.Trim().Length > 0) | (lblPort5.ForeColor == Color.White) | ((lblNum5.Text.Trim().Length == 0) & (lblPort5.Text.Trim().Length == 0))) & ((lblNum6.Text.Trim().Length > 0) | (lblPort6.ForeColor == Color.White) | ((lblNum6.Text.Trim().Length == 0) & (lblPort6.Text.Trim().Length == 0)))))
					{
						goto IL_168b;
					}
					goto IL_22ef;
					IL_168b:
					num2 = 170;
					Application.DoEvents();
					goto IL_1697;
					IL_1697:
					num2 = 171;
					btnNumbers2_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_16ab;
					IL_16ab:
					num2 = 172;
					Application.DoEvents();
					goto IL_16b7;
					IL_16b7:
					num2 = 173;
					if (!(((lblNum1.Text.Trim().Length > 0) | (lblPort1.ForeColor == Color.White) | ((lblNum1.Text.Trim().Length == 0) & (lblPort1.Text.Trim().Length == 0))) & ((lblNum2.Text.Trim().Length > 0) | (lblPort2.ForeColor == Color.White) | ((lblNum2.Text.Trim().Length == 0) & (lblPort2.Text.Trim().Length == 0))) & ((lblNum3.Text.Trim().Length > 0) | (lblPort3.ForeColor == Color.White) | ((lblNum3.Text.Trim().Length == 0) & (lblPort3.Text.Trim().Length == 0))) & ((lblNum4.Text.Trim().Length > 0) | (lblPort4.ForeColor == Color.White) | ((lblNum4.Text.Trim().Length == 0) & (lblPort4.Text.Trim().Length == 0))) & ((lblNum5.Text.Trim().Length > 0) | (lblPort5.ForeColor == Color.White) | ((lblNum5.Text.Trim().Length == 0) & (lblPort5.Text.Trim().Length == 0))) & ((lblNum6.Text.Trim().Length > 0) | (lblPort6.ForeColor == Color.White) | ((lblNum6.Text.Trim().Length == 0) & (lblPort6.Text.Trim().Length == 0)))))
					{
						goto IL_190d;
					}
					goto IL_22ef;
					IL_190d:
					num2 = 175;
					btnNumbers3_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_1921;
					IL_1921:
					num2 = 176;
					Application.DoEvents();
					goto IL_192d;
					IL_192d:
					num2 = 177;
					if (!(((lblNum1.Text.Trim().Length > 0) | (lblPort1.ForeColor == Color.White) | ((lblNum1.Text.Trim().Length == 0) & (lblPort1.Text.Trim().Length == 0))) & ((lblNum2.Text.Trim().Length > 0) | (lblPort2.ForeColor == Color.White) | ((lblNum2.Text.Trim().Length == 0) & (lblPort2.Text.Trim().Length == 0))) & ((lblNum3.Text.Trim().Length > 0) | (lblPort3.ForeColor == Color.White) | ((lblNum3.Text.Trim().Length == 0) & (lblPort3.Text.Trim().Length == 0))) & ((lblNum4.Text.Trim().Length > 0) | (lblPort4.ForeColor == Color.White) | ((lblNum4.Text.Trim().Length == 0) & (lblPort4.Text.Trim().Length == 0))) & ((lblNum5.Text.Trim().Length > 0) | (lblPort5.ForeColor == Color.White) | ((lblNum5.Text.Trim().Length == 0) & (lblPort5.Text.Trim().Length == 0))) & ((lblNum6.Text.Trim().Length > 0) | (lblPort6.ForeColor == Color.White) | ((lblNum6.Text.Trim().Length == 0) & (lblPort6.Text.Trim().Length == 0)))))
					{
						goto IL_1b83;
					}
					goto IL_22ef;
					IL_1b83:
					num2 = 179;
					btnNumbers2_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_1b97;
					IL_1b97:
					num2 = 180;
					Application.DoEvents();
					goto IL_1ba3;
					IL_1ba3:
					num2 = 181;
					if (!(((lblNum1.Text.Trim().Length > 0) | (lblPort1.ForeColor == Color.White) | ((lblNum1.Text.Trim().Length == 0) & (lblPort1.Text.Trim().Length == 0))) & ((lblNum2.Text.Trim().Length > 0) | (lblPort2.ForeColor == Color.White) | ((lblNum2.Text.Trim().Length == 0) & (lblPort2.Text.Trim().Length == 0))) & ((lblNum3.Text.Trim().Length > 0) | (lblPort3.ForeColor == Color.White) | ((lblNum3.Text.Trim().Length == 0) & (lblPort3.Text.Trim().Length == 0))) & ((lblNum4.Text.Trim().Length > 0) | (lblPort4.ForeColor == Color.White) | ((lblNum4.Text.Trim().Length == 0) & (lblPort4.Text.Trim().Length == 0))) & ((lblNum5.Text.Trim().Length > 0) | (lblPort5.ForeColor == Color.White) | ((lblNum5.Text.Trim().Length == 0) & (lblPort5.Text.Trim().Length == 0))) & ((lblNum6.Text.Trim().Length > 0) | (lblPort6.ForeColor == Color.White) | ((lblNum6.Text.Trim().Length == 0) & (lblPort6.Text.Trim().Length == 0)))))
					{
						goto IL_1df9;
					}
					goto IL_22ef;
					IL_1df9:
					num2 = 183;
					btnNumbers_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_1e0d;
					IL_1e0d:
					num2 = 184;
					Application.DoEvents();
					goto IL_1e19;
					IL_1e19:
					num2 = 185;
					if (!(((lblNum1.Text.Trim().Length > 0) | (lblPort1.ForeColor == Color.White) | ((lblNum1.Text.Trim().Length == 0) & (lblPort1.Text.Trim().Length == 0))) & ((lblNum2.Text.Trim().Length > 0) | (lblPort2.ForeColor == Color.White) | ((lblNum2.Text.Trim().Length == 0) & (lblPort2.Text.Trim().Length == 0))) & ((lblNum3.Text.Trim().Length > 0) | (lblPort3.ForeColor == Color.White) | ((lblNum3.Text.Trim().Length == 0) & (lblPort3.Text.Trim().Length == 0))) & ((lblNum4.Text.Trim().Length > 0) | (lblPort4.ForeColor == Color.White) | ((lblNum4.Text.Trim().Length == 0) & (lblPort4.Text.Trim().Length == 0))) & ((lblNum5.Text.Trim().Length > 0) | (lblPort5.ForeColor == Color.White) | ((lblNum5.Text.Trim().Length == 0) & (lblPort5.Text.Trim().Length == 0))) & ((lblNum6.Text.Trim().Length > 0) | (lblPort6.ForeColor == Color.White) | ((lblNum6.Text.Trim().Length == 0) & (lblPort6.Text.Trim().Length == 0)))))
					{
						goto IL_206f;
					}
					goto IL_22ef;
					IL_206f:
					num2 = 187;
					btnNumbers3_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2083;
					IL_2083:
					num2 = 188;
					Application.DoEvents();
					goto IL_208f;
					IL_208f:
					num2 = 189;
					if (!(((lblNum1.Text.Trim().Length > 0) | (lblPort1.ForeColor == Color.White) | ((lblNum1.Text.Trim().Length == 0) & (lblPort1.Text.Trim().Length == 0))) & ((lblNum2.Text.Trim().Length > 0) | (lblPort2.ForeColor == Color.White) | ((lblNum2.Text.Trim().Length == 0) & (lblPort2.Text.Trim().Length == 0))) & ((lblNum3.Text.Trim().Length > 0) | (lblPort3.ForeColor == Color.White) | ((lblNum3.Text.Trim().Length == 0) & (lblPort3.Text.Trim().Length == 0))) & ((lblNum4.Text.Trim().Length > 0) | (lblPort4.ForeColor == Color.White) | ((lblNum4.Text.Trim().Length == 0) & (lblPort4.Text.Trim().Length == 0))) & ((lblNum5.Text.Trim().Length > 0) | (lblPort5.ForeColor == Color.White) | ((lblNum5.Text.Trim().Length == 0) & (lblPort5.Text.Trim().Length == 0))) & ((lblNum6.Text.Trim().Length > 0) | (lblPort6.ForeColor == Color.White) | ((lblNum6.Text.Trim().Length == 0) & (lblPort6.Text.Trim().Length == 0)))))
					{
						goto IL_22e2;
					}
					goto IL_22ef;
					IL_22e2:
					num2 = 191;
					Application.DoEvents();
					goto IL_22ef;
					IL_22ef:
					num2 = 192;
					DBconnRemote();
					goto IL_22fc;
					IL_22fc:
					num2 = 193;
					if (lblNum1.Text.Trim().Length == 11)
					{
						goto IL_2321;
					}
					goto IL_2371;
					IL_2321:
					num2 = 194;
					chkCh1.Checked = true;
					goto IL_2334;
					IL_2334:
					num2 = 195;
					AddToRemoteDB_Number(lblNum1.Text);
					goto IL_234c;
					IL_234c:
					num2 = 196;
					lblGifttotal1.Text = GetGiftCountForThisNumber(lblNum1.Text);
					goto IL_2371;
					IL_2371:
					num2 = 198;
					if (lblNum2.Text.Trim().Length == 11)
					{
						goto IL_2396;
					}
					goto IL_23e6;
					IL_2396:
					num2 = 199;
					chkCh2.Checked = true;
					goto IL_23a9;
					IL_23a9:
					num2 = 200;
					AddToRemoteDB_Number(lblNum2.Text);
					goto IL_23c1;
					IL_23c1:
					num2 = 201;
					lblGifttotal2.Text = GetGiftCountForThisNumber(lblNum2.Text);
					goto IL_23e6;
					IL_23e6:
					num2 = 203;
					if (lblNum3.Text.Trim().Length == 11)
					{
						goto IL_240b;
					}
					goto IL_245b;
					IL_240b:
					num2 = 204;
					chkCh3.Checked = true;
					goto IL_241e;
					IL_241e:
					num2 = 205;
					AddToRemoteDB_Number(lblNum3.Text);
					goto IL_2436;
					IL_2436:
					num2 = 206;
					lblGifttotal3.Text = GetGiftCountForThisNumber(lblNum3.Text);
					goto IL_245b;
					IL_245b:
					num2 = 208;
					if (lblNum4.Text.Trim().Length == 11)
					{
						goto IL_2480;
					}
					goto IL_24d0;
					IL_2480:
					num2 = 209;
					chkCh4.Checked = true;
					goto IL_2493;
					IL_2493:
					num2 = 210;
					AddToRemoteDB_Number(lblNum4.Text);
					goto IL_24ab;
					IL_24ab:
					num2 = 211;
					lblGifttotal4.Text = GetGiftCountForThisNumber(lblNum4.Text);
					goto IL_24d0;
					IL_24d0:
					num2 = 213;
					if (lblNum5.Text.Trim().Length == 11)
					{
						goto IL_24f5;
					}
					goto IL_2545;
					IL_24f5:
					num2 = 214;
					chkCh5.Checked = true;
					goto IL_2508;
					IL_2508:
					num2 = 215;
					AddToRemoteDB_Number(lblNum5.Text);
					goto IL_2520;
					IL_2520:
					num2 = 216;
					lblGifttotal5.Text = GetGiftCountForThisNumber(lblNum5.Text);
					goto IL_2545;
					IL_2545:
					num2 = 218;
					if (lblNum6.Text.Trim().Length == 11)
					{
						goto IL_256a;
					}
					goto IL_25ba;
					IL_256a:
					num2 = 219;
					chkCh6.Checked = true;
					goto IL_257d;
					IL_257d:
					num2 = 220;
					AddToRemoteDB_Number(lblNum6.Text);
					goto IL_2595;
					IL_2595:
					num2 = 221;
					lblGifttotal6.Text = GetGiftCountForThisNumber(lblNum6.Text);
					goto IL_25ba;
					IL_25ba:
					num2 = 223;
					Application.DoEvents();
					goto IL_25c6;
					IL_25c6:
					num2 = 224;
					lblProgress.Text = "OK";
					goto IL_25dd;
					IL_25dd:
					num2 = 225;
					lblProgress.BackColor = Color.LimeGreen;
					goto IL_25f4;
					IL_25f4:
					num2 = 226;
					btnRefresh.Enabled = true;
					goto IL_2607;
					IL_2607:
					num2 = 227;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_2623;
					IL_2623:
					num2 = 229;
					if (ckTal2a.Checked)
					{
						goto IL_263d;
					}
					goto IL_26d2;
					IL_263d:
					num2 = 230;
					ArrangTal2a();
					goto IL_264a;
					IL_264a:
					num2 = 231;
					Application.DoEvents();
					goto IL_2656;
					IL_2656:
					num2 = 232;
					if (!ckbtnTal2aGetBal.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_266d;
					IL_266d:
					num2 = 233;
					Application.DoEvents();
					goto IL_2679;
					IL_2679:
					num2 = 234;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_268d;
					IL_268d:
					num2 = 235;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_26a9;
					IL_26a9:
					num2 = 237;
					Application.DoEvents();
					goto IL_26b5;
					IL_26b5:
					num2 = 238;
					btnTal2aGetBal_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto end_IL_0001_3;
					IL_26d2:
					num2 = 242;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnMacro.Checked)
					{
						goto IL_26f6;
					}
					goto IL_2754;
					IL_26f6:
					num2 = 243;
					Application.DoEvents();
					goto IL_2702;
					IL_2702:
					num2 = 244;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2716;
					IL_2716:
					num2 = 245;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_2732;
					IL_2732:
					num2 = 247;
					Application.DoEvents();
					goto IL_273e;
					IL_273e:
					num2 = 248;
					btnMacro_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2754;
					IL_2754:
					num2 = 250;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnDoOfferWithdraw.Checked)
					{
						goto IL_2778;
					}
					goto IL_27d6;
					IL_2778:
					num2 = 251;
					Application.DoEvents();
					goto IL_2784;
					IL_2784:
					num2 = 252;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2798;
					IL_2798:
					num2 = 253;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_27b4;
					IL_27b4:
					num2 = 255;
					Application.DoEvents();
					goto IL_27c0;
					IL_27c0:
					num2 = 256;
					btnDoOfferWithdraw_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_27d6;
					IL_27d6:
					num2 = 258;
					if ((MysqlConn.MainProgLic >= 11) & ckSetThisNumberToValedPeriod.Checked)
					{
						goto IL_27fa;
					}
					goto IL_2851;
					IL_27fa:
					num2 = 259;
					Application.DoEvents();
					goto IL_2806;
					IL_2806:
					num2 = 260;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_281a;
					IL_281a:
					num2 = 261;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_2836;
					IL_2836:
					num2 = 263;
					Application.DoEvents();
					goto IL_2842;
					IL_2842:
					num2 = 264;
					SetThisNumberToValedPeriod();
					goto IL_2851;
					IL_2851:
					num2 = 266;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnVodaCashFreeTransfer.Checked)
					{
						goto IL_2875;
					}
					goto IL_28d3;
					IL_2875:
					num2 = 267;
					Application.DoEvents();
					goto IL_2881;
					IL_2881:
					num2 = 268;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2895;
					IL_2895:
					num2 = 269;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_28b1;
					IL_28b1:
					num2 = 271;
					Application.DoEvents();
					goto IL_28bd;
					IL_28bd:
					num2 = 272;
					btnVodaCashFreeTransfer_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_28d3;
					IL_28d3:
					num2 = 274;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnOCFreeTransfer.Checked)
					{
						goto IL_28f7;
					}
					goto IL_2955;
					IL_28f7:
					num2 = 275;
					Application.DoEvents();
					goto IL_2903;
					IL_2903:
					num2 = 276;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2917;
					IL_2917:
					num2 = 277;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_2933;
					IL_2933:
					num2 = 279;
					Application.DoEvents();
					goto IL_293f;
					IL_293f:
					num2 = 280;
					btnOCFreeTransfer_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2955;
					IL_2955:
					num2 = 282;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnGetBal2EC.Checked)
					{
						goto IL_2979;
					}
					goto IL_29d7;
					IL_2979:
					num2 = 283;
					Application.DoEvents();
					goto IL_2985;
					IL_2985:
					num2 = 284;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2999;
					IL_2999:
					num2 = 285;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_29b5;
					IL_29b5:
					num2 = 287;
					Application.DoEvents();
					goto IL_29c1;
					IL_29c1:
					num2 = 288;
					BtnGetBal2EC_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_29d7;
					IL_29d7:
					num2 = 290;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnOCApply58.Checked)
					{
						goto IL_29fb;
					}
					goto IL_2a59;
					IL_29fb:
					num2 = 291;
					Application.DoEvents();
					goto IL_2a07;
					IL_2a07:
					num2 = 292;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2a1b;
					IL_2a1b:
					num2 = 293;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_2a37;
					IL_2a37:
					num2 = 295;
					Application.DoEvents();
					goto IL_2a43;
					IL_2a43:
					num2 = 296;
					btnOCApply58_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2a59;
					IL_2a59:
					num2 = 298;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnOCGetBalPAy2.Checked)
					{
						goto IL_2a7d;
					}
					goto IL_2adb;
					IL_2a7d:
					num2 = 299;
					Application.DoEvents();
					goto IL_2a89;
					IL_2a89:
					num2 = 300;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2a9d;
					IL_2a9d:
					num2 = 301;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_2ab9;
					IL_2ab9:
					num2 = 303;
					Application.DoEvents();
					goto IL_2ac5;
					IL_2ac5:
					num2 = 304;
					btnOCGetBal_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2adb;
					IL_2adb:
					num2 = 306;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_2af7;
					IL_2af7:
					num2 = 308;
					if ((MysqlConn.MainProgLic >= 7) & chkNewWallet.Checked)
					{
						goto IL_2b1a;
					}
					goto IL_2b78;
					IL_2b1a:
					num2 = 309;
					Application.DoEvents();
					goto IL_2b26;
					IL_2b26:
					num2 = 310;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2b3a;
					IL_2b3a:
					num2 = 311;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_2b56;
					IL_2b56:
					num2 = 313;
					Application.DoEvents();
					goto IL_2b62;
					IL_2b62:
					num2 = 314;
					BtnChkNewSims_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2b78;
					IL_2b78:
					num2 = 316;
					if ((MysqlConn.MainProgLic >= 7) & ckbtnChangePass.Checked)
					{
						goto IL_2b9b;
					}
					goto IL_2bf9;
					IL_2b9b:
					num2 = 317;
					Application.DoEvents();
					goto IL_2ba7;
					IL_2ba7:
					num2 = 318;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2bbb;
					IL_2bbb:
					num2 = 319;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_2bd7;
					IL_2bd7:
					num2 = 321;
					Application.DoEvents();
					goto IL_2be3;
					IL_2be3:
					num2 = 322;
					BtnChangePass_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2bf9;
					IL_2bf9:
					num2 = 324;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_2c15;
					IL_2c15:
					num2 = 326;
					if ((MysqlConn.MainProgLic >= 7) & ckbtnChangePassNew.Checked)
					{
						goto IL_2c38;
					}
					goto IL_2c96;
					IL_2c38:
					num2 = 327;
					Application.DoEvents();
					goto IL_2c44;
					IL_2c44:
					num2 = 328;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2c58;
					IL_2c58:
					num2 = 329;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_2c74;
					IL_2c74:
					num2 = 331;
					Application.DoEvents();
					goto IL_2c80;
					IL_2c80:
					num2 = 332;
					BtnChangePassNew_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2c96;
					IL_2c96:
					num2 = 334;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_2cb2;
					IL_2cb2:
					num2 = 336;
					if ((MysqlConn.MainProgLic >= 7) & chkDelSms.Checked)
					{
						goto IL_2cd5;
					}
					goto IL_2d33;
					IL_2cd5:
					num2 = 337;
					Application.DoEvents();
					goto IL_2ce1;
					IL_2ce1:
					num2 = 338;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2cf5;
					IL_2cf5:
					num2 = 339;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_2d11;
					IL_2d11:
					num2 = 341;
					Application.DoEvents();
					goto IL_2d1d;
					IL_2d1d:
					num2 = 342;
					btnClearSMS_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2d33;
					IL_2d33:
					num2 = 344;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_2d4f;
					IL_2d4f:
					num2 = 346;
					if ((MysqlConn.MainProgLic >= 7) & chAutoGooo.Checked)
					{
						goto IL_2d75;
					}
					goto IL_2e29;
					IL_2d75:
					num2 = 347;
					Application.DoEvents();
					goto IL_2d81;
					IL_2d81:
					num2 = 348;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2d95;
					IL_2d95:
					num2 = 349;
					if ((lblPort1.Text.Trim().Length == 0) | (Conversion.Val(txtMonyMn.Text) < 5.0) | (txtTransNum2.Text.Trim().Length != 11))
					{
						goto end_IL_0001_3;
					}
					goto IL_2df7;
					IL_2df7:
					num2 = 351;
					BtnAutoVC_Seres_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2e0b;
					IL_2e0b:
					num2 = 352;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_2e29;
					IL_2e29:
					num2 = 355;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnOCSeries.Checked)
					{
						goto IL_2e50;
					}
					goto IL_3013;
					IL_2e50:
					num2 = 356;
					Application.DoEvents();
					goto IL_2e5c;
					IL_2e5c:
					num2 = 357;
					ArrangOClines();
					goto IL_2e69;
					IL_2e69:
					num2 = 358;
					Application.DoEvents();
					goto IL_2e75;
					IL_2e75:
					num2 = 359;
					if ((MysqlConn.MainProgLic >= 7) & ckbtnOCSeriesGetBalBEfore.Checked)
					{
						goto IL_2e98;
					}
					goto IL_2eea;
					IL_2e98:
					num2 = 360;
					Application.DoEvents();
					goto IL_2ea4;
					IL_2ea4:
					num2 = 361;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2eb8;
					IL_2eb8:
					num2 = 362;
					btnOCGetBal_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2ecc;
					IL_2ecc:
					num2 = 363;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_2eea;
					IL_2eea:
					num2 = 366;
					Application.DoEvents();
					goto IL_2ef6;
					IL_2ef6:
					num2 = 367;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2f0a;
					IL_2f0a:
					num2 = 368;
					if ((lblPort1.Text.Trim().Length == 0) | (Conversion.Val(txtOCValue.Text) < 5.0) | (lblOCMain.Text.Trim().Length != 11))
					{
						goto end_IL_0001_3;
					}
					goto IL_2f6c;
					IL_2f6c:
					num2 = 370;
					btnOCSeries_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2f80;
					IL_2f80:
					num2 = 371;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_2f9c;
					IL_2f9c:
					num2 = 373;
					if ((MysqlConn.MainProgLic >= 7) & ckbtnOCSeriesGetBalAfter.Checked)
					{
						goto IL_2fbf;
					}
					goto IL_3013;
					IL_2fbf:
					num2 = 374;
					Application.DoEvents();
					goto IL_2fcb;
					IL_2fcb:
					num2 = 375;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2fdf;
					IL_2fdf:
					num2 = 376;
					btnOCGetBal_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_2ff3;
					IL_2ff3:
					num2 = 377;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_3013;
					IL_3013:
					num2 = 381;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnOCSeriesMT.Checked)
					{
						goto IL_303a;
					}
					goto IL_30d2;
					IL_303a:
					num2 = 382;
					Application.DoEvents();
					goto IL_3046;
					IL_3046:
					num2 = 383;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_305a;
					IL_305a:
					num2 = 384;
					if ((lblPort1.Text.Trim().Length == 0) | (lblOCMain.Text.Trim().Length != 11))
					{
						goto end_IL_0001_3;
					}
					goto IL_30a0;
					IL_30a0:
					num2 = 386;
					btnOCSeriesMT_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_30b4;
					IL_30b4:
					num2 = 387;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_30d2;
					IL_30d2:
					num2 = 390;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_30ee;
					IL_30ee:
					num2 = 392;
					if ((MysqlConn.MainProgLic >= 7) & chkAuto365EXE_f.Checked)
					{
						goto IL_3114;
					}
					goto IL_31ac;
					IL_3114:
					num2 = 393;
					Application.DoEvents();
					goto IL_3120;
					IL_3120:
					num2 = 394;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3134;
					IL_3134:
					num2 = 395;
					if ((lblPort1.Text.Trim().Length == 0) | (txtTransNum2365.Text.Trim().Length != 11))
					{
						goto end_IL_0001_3;
					}
					goto IL_317a;
					IL_317a:
					num2 = 397;
					BtnApply36590_f_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_318e;
					IL_318e:
					num2 = 398;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_31ac;
					IL_31ac:
					num2 = 401;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_31c8;
					IL_31c8:
					num2 = 403;
					if ((MysqlConn.MainProgLic >= 7) & chkApply365.Checked)
					{
						goto IL_31ee;
					}
					goto IL_3286;
					IL_31ee:
					num2 = 404;
					Application.DoEvents();
					goto IL_31fa;
					IL_31fa:
					num2 = 405;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_320e;
					IL_320e:
					num2 = 406;
					if ((lblPort1.Text.Trim().Length == 0) | (txtTransNum2365.Text.Trim().Length != 11))
					{
						goto end_IL_0001_3;
					}
					goto IL_3254;
					IL_3254:
					num2 = 408;
					BtnApply365_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3268;
					IL_3268:
					num2 = 409;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_3286;
					IL_3286:
					num2 = 412;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_32a2;
					IL_32a2:
					num2 = 414;
					if ((MysqlConn.MainProgLic >= 7) & chkAuto365EXE.Checked)
					{
						goto IL_32c5;
					}
					goto IL_3340;
					IL_32c5:
					num2 = 415;
					Application.DoEvents();
					goto IL_32d1;
					IL_32d1:
					num2 = 416;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_32e5;
					IL_32e5:
					num2 = 417;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto end_IL_0001_3;
					}
					goto IL_330e;
					IL_330e:
					num2 = 419;
					BtnApply36590_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3322;
					IL_3322:
					num2 = 420;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_3340;
					IL_3340:
					num2 = 423;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_335c;
					IL_335c:
					num2 = 425;
					if ((MysqlConn.MainProgLic >= 7) & chkAuto365Trans.Checked)
					{
						goto IL_3382;
					}
					goto IL_341a;
					IL_3382:
					num2 = 426;
					Application.DoEvents();
					goto IL_338e;
					IL_338e:
					num2 = 427;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_33a2;
					IL_33a2:
					num2 = 428;
					if ((lblPort1.Text.Trim().Length == 0) | (txtTransNum2365Gft.Text.Trim().Length != 11))
					{
						goto end_IL_0001_3;
					}
					goto IL_33e8;
					IL_33e8:
					num2 = 430;
					BtnTransGiftAutoSpVal365_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_33fc;
					IL_33fc:
					num2 = 431;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_341a;
					IL_341a:
					num2 = 434;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_3436;
					IL_3436:
					num2 = 436;
					if ((MysqlConn.MainProgLic >= 11) & ckOCEditPass.Checked)
					{
						goto IL_345a;
					}
					goto IL_34c8;
					IL_345a:
					num2 = 437;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_346e;
					IL_346e:
					num2 = 438;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_348a;
					IL_348a:
					num2 = 440;
					Application.DoEvents();
					goto IL_3496;
					IL_3496:
					num2 = 441;
					btnOCEditPass_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_34aa;
					IL_34aa:
					num2 = 442;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_34c8;
					IL_34c8:
					num2 = 445;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_34e4;
					IL_34e4:
					num2 = 447;
					if ((MysqlConn.MainProgLic >= 7) & chkApply365Bakat.Checked)
					{
						goto IL_3507;
					}
					goto IL_3582;
					IL_3507:
					num2 = 448;
					Application.DoEvents();
					goto IL_3513;
					IL_3513:
					num2 = 449;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3527;
					IL_3527:
					num2 = 450;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto end_IL_0001_3;
					}
					goto IL_3550;
					IL_3550:
					num2 = 452;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_356c;
					IL_356c:
					num2 = 454;
					BtnApply365Bakat_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3582;
					IL_3582:
					num2 = 456;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_359e;
					IL_359e:
					num2 = 458;
					if ((MysqlConn.MainProgLic >= 7) & chkApply365Trans.Checked)
					{
						goto IL_35c1;
					}
					goto IL_363c;
					IL_35c1:
					num2 = 459;
					Application.DoEvents();
					goto IL_35cd;
					IL_35cd:
					num2 = 460;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_35e1;
					IL_35e1:
					num2 = 461;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto end_IL_0001_3;
					}
					goto IL_360a;
					IL_360a:
					num2 = 463;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_3626;
					IL_3626:
					num2 = 465;
					BtnTransGiftAutoNorm365_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_363c;
					IL_363c:
					num2 = 467;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_3658;
					IL_3658:
					num2 = 469;
					if ((MysqlConn.MainProgLic >= 7) & chAutoGooo2.Checked)
					{
						goto IL_367b;
					}
					goto IL_36d9;
					IL_367b:
					num2 = 470;
					Application.DoEvents();
					goto IL_3687;
					IL_3687:
					num2 = 471;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_369b;
					IL_369b:
					num2 = 472;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_36b7;
					IL_36b7:
					num2 = 474;
					Application.DoEvents();
					goto IL_36c3;
					IL_36c3:
					num2 = 475;
					btnGetBal_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_36d9;
					IL_36d9:
					num2 = 477;
					if ((MysqlConn.MainProgLic >= 7) & chkReadsms.Checked)
					{
						goto IL_36fc;
					}
					goto IL_375a;
					IL_36fc:
					num2 = 478;
					Application.DoEvents();
					goto IL_3708;
					IL_3708:
					num2 = 479;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_371c;
					IL_371c:
					num2 = 480;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_3738;
					IL_3738:
					num2 = 482;
					Application.DoEvents();
					goto IL_3744;
					IL_3744:
					num2 = 483;
					btnReadSms_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_375a;
					IL_375a:
					num2 = 485;
					if ((MysqlConn.MainProgLic >= 7) & chkAutoTransferCash.Checked)
					{
						goto IL_377d;
					}
					goto IL_37db;
					IL_377d:
					num2 = 486;
					Application.DoEvents();
					goto IL_3789;
					IL_3789:
					num2 = 487;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_379d;
					IL_379d:
					num2 = 488;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_37b9;
					IL_37b9:
					num2 = 490;
					Application.DoEvents();
					goto IL_37c5;
					IL_37c5:
					num2 = 491;
					btnTransAllMn_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_37db;
					IL_37db:
					num2 = 493;
					if ((MysqlConn.MainProgLic >= 7) & chkAutoTransferNrm.Checked)
					{
						goto IL_37fe;
					}
					goto IL_385c;
					IL_37fe:
					num2 = 494;
					Application.DoEvents();
					goto IL_380a;
					IL_380a:
					num2 = 495;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_381e;
					IL_381e:
					num2 = 496;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_383a;
					IL_383a:
					num2 = 498;
					Application.DoEvents();
					goto IL_3846;
					IL_3846:
					num2 = 499;
					BtnTransGiftAutoNorm_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_385c;
					IL_385c:
					num2 = 501;
					if ((MysqlConn.MainProgLic >= 11) & ckTayerGetBal.Checked)
					{
						goto IL_3880;
					}
					goto IL_38de;
					IL_3880:
					num2 = 502;
					Application.DoEvents();
					goto IL_388c;
					IL_388c:
					num2 = 503;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_38a0;
					IL_38a0:
					num2 = 504;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_38bc;
					IL_38bc:
					num2 = 506;
					Application.DoEvents();
					goto IL_38c8;
					IL_38c8:
					num2 = 507;
					btnTayerGetBal_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_38de;
					IL_38de:
					num2 = 509;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnTayerSeries.Checked)
					{
						goto IL_3902;
					}
					goto IL_3960;
					IL_3902:
					num2 = 510;
					Application.DoEvents();
					goto IL_390e;
					IL_390e:
					num2 = 511;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3922;
					IL_3922:
					num2 = 512;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_393e;
					IL_393e:
					num2 = 514;
					Application.DoEvents();
					goto IL_394a;
					IL_394a:
					num2 = 515;
					btnTayerSeries_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3960;
					IL_3960:
					num2 = 517;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnTayerPullAllBals.Checked)
					{
						goto IL_3984;
					}
					goto IL_39e2;
					IL_3984:
					num2 = 518;
					Application.DoEvents();
					goto IL_3990;
					IL_3990:
					num2 = 519;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_39a4;
					IL_39a4:
					num2 = 520;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_39c0;
					IL_39c0:
					num2 = 522;
					Application.DoEvents();
					goto IL_39cc;
					IL_39cc:
					num2 = 523;
					btnTayerPullAllBals_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_39e2;
					IL_39e2:
					num2 = 525;
					if ((MysqlConn.MainProgLic >= 7) & ckbtnOCGetBal.Checked)
					{
						goto IL_3a05;
					}
					goto IL_3a63;
					IL_3a05:
					num2 = 526;
					Application.DoEvents();
					goto IL_3a11;
					IL_3a11:
					num2 = 527;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3a25;
					IL_3a25:
					num2 = 528;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_3a41;
					IL_3a41:
					num2 = 530;
					Application.DoEvents();
					goto IL_3a4d;
					IL_3a4d:
					num2 = 531;
					btnOCGetBal_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3a63;
					IL_3a63:
					num2 = 533;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnOCTransferAll.Checked)
					{
						goto IL_3a87;
					}
					goto IL_3ae5;
					IL_3a87:
					num2 = 534;
					Application.DoEvents();
					goto IL_3a93;
					IL_3a93:
					num2 = 535;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3aa7;
					IL_3aa7:
					num2 = 536;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_3ac3;
					IL_3ac3:
					num2 = 538;
					Application.DoEvents();
					goto IL_3acf;
					IL_3acf:
					num2 = 539;
					btnOCTransferAll_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3ae5;
					IL_3ae5:
					num2 = 541;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnOCTopupOne.Checked)
					{
						goto IL_3b09;
					}
					goto IL_3b67;
					IL_3b09:
					num2 = 542;
					Application.DoEvents();
					goto IL_3b15;
					IL_3b15:
					num2 = 543;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3b29;
					IL_3b29:
					num2 = 544;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_3b45;
					IL_3b45:
					num2 = 546;
					Application.DoEvents();
					goto IL_3b51;
					IL_3b51:
					num2 = 547;
					btnOCTopupOne_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3b67;
					IL_3b67:
					num2 = 549;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnOCTopup.Checked)
					{
						goto IL_3b8b;
					}
					goto IL_3be9;
					IL_3b8b:
					num2 = 550;
					Application.DoEvents();
					goto IL_3b97;
					IL_3b97:
					num2 = 551;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3bab;
					IL_3bab:
					num2 = 552;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_3bc7;
					IL_3bc7:
					num2 = 554;
					Application.DoEvents();
					goto IL_3bd3;
					IL_3bd3:
					num2 = 555;
					btnOCTopup_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3be9;
					IL_3be9:
					num2 = 557;
					if ((MysqlConn.MainProgLic >= 7) & ckbtnOCMSeries.Checked)
					{
						goto IL_3c0f;
					}
					goto IL_3e7d;
					IL_3c0f:
					num2 = 558;
					Application.DoEvents();
					goto IL_3c1b;
					IL_3c1b:
					num2 = 559;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3c2f;
					IL_3c2f:
					num2 = 560;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_3c4b;
					IL_3c4b:
					num2 = 562;
					Application.DoEvents();
					goto IL_3c57;
					IL_3c57:
					num2 = 563;
					if (Operators.CompareString(lblNum1.Text, lblOCMMain.Text, TextCompare: false) != 0)
					{
						goto IL_3c82;
					}
					goto IL_3c9f;
					IL_3c82:
					num2 = 564;
					AddBoxToLstPre(lblNum1.Text.Trim());
					goto IL_3c9f;
					IL_3c9f:
					num2 = 565;
					if (Operators.CompareString(lblNum2.Text, lblOCMMain.Text, TextCompare: false) != 0)
					{
						goto IL_3cca;
					}
					goto IL_3ce7;
					IL_3cca:
					num2 = 566;
					AddBoxToLstPre(lblNum2.Text.Trim());
					goto IL_3ce7;
					IL_3ce7:
					num2 = 567;
					if (Operators.CompareString(lblNum3.Text, lblOCMMain.Text, TextCompare: false) != 0)
					{
						goto IL_3d12;
					}
					goto IL_3d2f;
					IL_3d12:
					num2 = 568;
					AddBoxToLstPre(lblNum3.Text.Trim());
					goto IL_3d2f;
					IL_3d2f:
					num2 = 569;
					if (Operators.CompareString(lblNum4.Text, lblOCMMain.Text, TextCompare: false) != 0)
					{
						goto IL_3d5a;
					}
					goto IL_3d77;
					IL_3d5a:
					num2 = 570;
					AddBoxToLstPre(lblNum4.Text.Trim());
					goto IL_3d77;
					IL_3d77:
					num2 = 571;
					if (Operators.CompareString(lblNum5.Text, lblOCMMain.Text, TextCompare: false) != 0)
					{
						goto IL_3da2;
					}
					goto IL_3dbf;
					IL_3da2:
					num2 = 572;
					AddBoxToLstPre(lblNum5.Text.Trim());
					goto IL_3dbf;
					IL_3dbf:
					num2 = 573;
					if (Operators.CompareString(lblNum6.Text, lblOCMMain.Text, TextCompare: false) != 0)
					{
						goto IL_3dea;
					}
					goto IL_3e07;
					IL_3dea:
					num2 = 574;
					AddBoxToLstPre(lblNum6.Text.Trim());
					goto IL_3e07;
					IL_3e07:
					num2 = 575;
					btnOCMSeries_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3e1b;
					IL_3e1b:
					num2 = 576;
					if (ckbtnOCMSerieAccept.Checked)
					{
						goto IL_3e32;
					}
					goto IL_3e7d;
					IL_3e32:
					num2 = 577;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3e46;
					IL_3e46:
					num2 = 578;
					chkCh1.Checked = false;
					goto IL_3e59;
					IL_3e59:
					num2 = 579;
					Application.DoEvents();
					goto IL_3e65;
					IL_3e65:
					num2 = 580;
					btnOCMSerieAccept_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3e7d;
					IL_3e7d:
					num2 = 583;
					if (ckbtnOCMSerieAccept.Checked & !ckbtnOCMSeries.Checked)
					{
						goto IL_3ea3;
					}
					goto IL_3f01;
					IL_3ea3:
					num2 = 584;
					Application.DoEvents();
					goto IL_3eaf;
					IL_3eaf:
					num2 = 585;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3ec3;
					IL_3ec3:
					num2 = 586;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_3edf;
					IL_3edf:
					num2 = 588;
					Application.DoEvents();
					goto IL_3eeb;
					IL_3eeb:
					num2 = 589;
					btnOCMSerieAccept_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3f01;
					IL_3f01:
					num2 = 591;
					if ((MysqlConn.MainProgLic >= 7) & ckbtnOCGiftsCheck.Checked)
					{
						goto IL_3f24;
					}
					goto IL_3f82;
					IL_3f24:
					num2 = 592;
					Application.DoEvents();
					goto IL_3f30;
					IL_3f30:
					num2 = 593;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3f44;
					IL_3f44:
					num2 = 594;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_3f60;
					IL_3f60:
					num2 = 596;
					Application.DoEvents();
					goto IL_3f6c;
					IL_3f6c:
					num2 = 597;
					btnOCGiftsCheck_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3f82;
					IL_3f82:
					num2 = 599;
					if ((MysqlConn.MainProgLic >= 7) & ckbtnOCMAuto.Checked)
					{
						goto IL_3fa5;
					}
					goto IL_4003;
					IL_3fa5:
					num2 = 600;
					Application.DoEvents();
					goto IL_3fb1;
					IL_3fb1:
					num2 = 601;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_3fc5;
					IL_3fc5:
					num2 = 602;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_3fe1;
					IL_3fe1:
					num2 = 604;
					Application.DoEvents();
					goto IL_3fed;
					IL_3fed:
					num2 = 605;
					btnOCMAuto_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_4003;
					IL_4003:
					num2 = 607;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnTransGiftAutoSpVal.Checked)
					{
						goto IL_4027;
					}
					goto IL_4085;
					IL_4027:
					num2 = 608;
					Application.DoEvents();
					goto IL_4033;
					IL_4033:
					num2 = 609;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_4047;
					IL_4047:
					num2 = 610;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_4063;
					IL_4063:
					num2 = 612;
					Application.DoEvents();
					goto IL_406f;
					IL_406f:
					num2 = 613;
					BtnTransGiftAutoSpVal_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_4085;
					IL_4085:
					num2 = 615;
					if ((MysqlConn.MainProgLic >= 7) & ckPrint.Checked)
					{
						goto IL_40a8;
					}
					goto IL_4106;
					IL_40a8:
					num2 = 616;
					Application.DoEvents();
					goto IL_40b4;
					IL_40b4:
					num2 = 617;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_40c8;
					IL_40c8:
					num2 = 618;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_40e4;
					IL_40e4:
					num2 = 620;
					Application.DoEvents();
					goto IL_40f0;
					IL_40f0:
					num2 = 621;
					BtnPrint_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_4106;
					IL_4106:
					num2 = 623;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnOCGiftsCheckConf.Checked)
					{
						goto IL_412a;
					}
					goto IL_4188;
					IL_412a:
					num2 = 624;
					Application.DoEvents();
					goto IL_4136;
					IL_4136:
					num2 = 625;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_414a;
					IL_414a:
					num2 = 626;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_4166;
					IL_4166:
					num2 = 628;
					Application.DoEvents();
					goto IL_4172;
					IL_4172:
					num2 = 629;
					btnOCGiftsCheckConf_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_4188;
					IL_4188:
					num2 = 631;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnAutoES_Seres.Checked)
					{
						goto IL_41ac;
					}
					goto IL_420a;
					IL_41ac:
					num2 = 632;
					Application.DoEvents();
					goto IL_41b8;
					IL_41b8:
					num2 = 633;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_41cc;
					IL_41cc:
					num2 = 634;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_41e8;
					IL_41e8:
					num2 = 636;
					Application.DoEvents();
					goto IL_41f4;
					IL_41f4:
					num2 = 637;
					btnAutoES_Seres_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_420a;
					IL_420a:
					num2 = 639;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnTrans100.Checked)
					{
						goto IL_422e;
					}
					goto IL_428c;
					IL_422e:
					num2 = 640;
					Application.DoEvents();
					goto IL_423a;
					IL_423a:
					num2 = 641;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_424e;
					IL_424e:
					num2 = 642;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_426a;
					IL_426a:
					num2 = 644;
					Application.DoEvents();
					goto IL_4276;
					IL_4276:
					num2 = 645;
					btnTrans100_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_428c;
					IL_428c:
					num2 = 647;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnTrans1000.Checked)
					{
						goto IL_42b0;
					}
					goto IL_430e;
					IL_42b0:
					num2 = 648;
					Application.DoEvents();
					goto IL_42bc;
					IL_42bc:
					num2 = 649;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_42d0;
					IL_42d0:
					num2 = 650;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_42ec;
					IL_42ec:
					num2 = 652;
					Application.DoEvents();
					goto IL_42f8;
					IL_42f8:
					num2 = 653;
					btnTrans1000_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_430e;
					IL_430e:
					num2 = 655;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnTranstop.Checked)
					{
						goto IL_4332;
					}
					goto IL_4390;
					IL_4332:
					num2 = 656;
					Application.DoEvents();
					goto IL_433e;
					IL_433e:
					num2 = 657;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_4352;
					IL_4352:
					num2 = 658;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_436e;
					IL_436e:
					num2 = 660;
					Application.DoEvents();
					goto IL_437a;
					IL_437a:
					num2 = 661;
					btnTranstop_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_4390;
					IL_4390:
					num2 = 663;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnGetNormalBal.Checked)
					{
						goto IL_43b4;
					}
					goto IL_4412;
					IL_43b4:
					num2 = 664;
					Application.DoEvents();
					goto IL_43c0;
					IL_43c0:
					num2 = 665;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_43d4;
					IL_43d4:
					num2 = 666;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_43f0;
					IL_43f0:
					num2 = 668;
					Application.DoEvents();
					goto IL_43fc;
					IL_43fc:
					num2 = 669;
					btnGetNormalBal_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_4412;
					IL_4412:
					num2 = 671;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnVodaAuto3652.Checked)
					{
						goto IL_4436;
					}
					goto IL_4494;
					IL_4436:
					num2 = 672;
					Application.DoEvents();
					goto IL_4442;
					IL_4442:
					num2 = 673;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_4456;
					IL_4456:
					num2 = 674;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_4472;
					IL_4472:
					num2 = 676;
					Application.DoEvents();
					goto IL_447e;
					IL_447e:
					num2 = 677;
					btnVodaAuto3652_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_4494;
					IL_4494:
					num2 = 679;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnVodaAuto365.Checked)
					{
						goto IL_44b8;
					}
					goto IL_4516;
					IL_44b8:
					num2 = 680;
					Application.DoEvents();
					goto IL_44c4;
					IL_44c4:
					num2 = 681;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_44d8;
					IL_44d8:
					num2 = 682;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_44f4;
					IL_44f4:
					num2 = 684;
					Application.DoEvents();
					goto IL_4500;
					IL_4500:
					num2 = 685;
					btnVodaAuto365_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_4516;
					IL_4516:
					num2 = 687;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnGetOrngBal.Checked)
					{
						goto IL_453a;
					}
					goto IL_4598;
					IL_453a:
					num2 = 688;
					Application.DoEvents();
					goto IL_4546;
					IL_4546:
					num2 = 689;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_455a;
					IL_455a:
					num2 = 690;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_4576;
					IL_4576:
					num2 = 692;
					Application.DoEvents();
					goto IL_4582;
					IL_4582:
					num2 = 693;
					btnGetOrngBal_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_4598;
					IL_4598:
					num2 = 695;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnOtransRun.Checked)
					{
						goto IL_45bc;
					}
					goto IL_461a;
					IL_45bc:
					num2 = 696;
					Application.DoEvents();
					goto IL_45c8;
					IL_45c8:
					num2 = 697;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_45dc;
					IL_45dc:
					num2 = 698;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_45f8;
					IL_45f8:
					num2 = 700;
					Application.DoEvents();
					goto IL_4604;
					IL_4604:
					num2 = 701;
					btnOtransRun_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_461a;
					IL_461a:
					num2 = 703;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnTransGiftAutoSpValAll.Checked)
					{
						goto IL_463e;
					}
					goto IL_469c;
					IL_463e:
					num2 = 704;
					Application.DoEvents();
					goto IL_464a;
					IL_464a:
					num2 = 705;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_465e;
					IL_465e:
					num2 = 706;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_467a;
					IL_467a:
					num2 = 708;
					Application.DoEvents();
					goto IL_4686;
					IL_4686:
					num2 = 709;
					btnTransGiftAutoSpValAll_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_469c;
					IL_469c:
					num2 = 711;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnTransToNm.Checked)
					{
						goto IL_46c0;
					}
					goto IL_471e;
					IL_46c0:
					num2 = 712;
					Application.DoEvents();
					goto IL_46cc;
					IL_46cc:
					num2 = 713;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_46e0;
					IL_46e0:
					num2 = 714;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_46fc;
					IL_46fc:
					num2 = 716;
					Application.DoEvents();
					goto IL_4708;
					IL_4708:
					num2 = 717;
					btnTransToNm_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_471e;
					IL_471e:
					num2 = 719;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnTransFromNm.Checked)
					{
						goto IL_4742;
					}
					goto IL_47a0;
					IL_4742:
					num2 = 720;
					Application.DoEvents();
					goto IL_474e;
					IL_474e:
					num2 = 721;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_4762;
					IL_4762:
					num2 = 722;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_477e;
					IL_477e:
					num2 = 724;
					Application.DoEvents();
					goto IL_478a;
					IL_478a:
					num2 = 725;
					btnTransFromNm_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_47a0;
					IL_47a0:
					num2 = 727;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnRun02Nm.Checked)
					{
						goto IL_47c4;
					}
					goto IL_4822;
					IL_47c4:
					num2 = 728;
					Application.DoEvents();
					goto IL_47d0;
					IL_47d0:
					num2 = 729;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_47e4;
					IL_47e4:
					num2 = 730;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_4800;
					IL_4800:
					num2 = 732;
					Application.DoEvents();
					goto IL_480c;
					IL_480c:
					num2 = 733;
					btnRun02_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_4822;
					IL_4822:
					num2 = 735;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnTransGiftAuto.Checked)
					{
						goto IL_4846;
					}
					goto IL_48a4;
					IL_4846:
					num2 = 736;
					Application.DoEvents();
					goto IL_4852;
					IL_4852:
					num2 = 737;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_4866;
					IL_4866:
					num2 = 738;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_4882;
					IL_4882:
					num2 = 740;
					Application.DoEvents();
					goto IL_488e;
					IL_488e:
					num2 = 741;
					BtnTransGiftAuto_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_48a4;
					IL_48a4:
					num2 = 743;
					if ((MysqlConn.MainProgLic >= 11) & ckbtnSendSmsToNumber.Checked)
					{
						goto IL_48c8;
					}
					goto IL_4926;
					IL_48c8:
					num2 = 744;
					Application.DoEvents();
					goto IL_48d4;
					IL_48d4:
					num2 = 745;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_48e8;
					IL_48e8:
					num2 = 746;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_4904;
					IL_4904:
					num2 = 748;
					Application.DoEvents();
					goto IL_4910;
					IL_4910:
					num2 = 749;
					btnSendSmsToNumber_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_4926;
					end_IL_0001_2:
					break;
				}
				num2 = 757;
				btnCashKing_Click(RuntimeHelpers.GetObjectValue(sender), e);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 21910;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnNumbers_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 3104:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 4:
						case 5:
							goto IL_00d1;
						case 6:
							goto IL_00da;
						case 7:
							goto IL_00ed;
						case 8:
							goto IL_0100;
						case 9:
							goto IL_0108;
						case 10:
							goto IL_0148;
						case 11:
							goto IL_016f;
						case 12:
							goto IL_0198;
						case 14:
							goto IL_01b2;
						case 13:
						case 15:
						case 16:
						case 17:
							goto IL_01cb;
						case 18:
							goto IL_020b;
						case 19:
							goto IL_0232;
						case 20:
							goto IL_025b;
						case 22:
							goto IL_0275;
						case 21:
						case 23:
						case 24:
						case 25:
							goto IL_028e;
						case 26:
							goto IL_02ce;
						case 27:
							goto IL_02f5;
						case 28:
							goto IL_031e;
						case 30:
							goto IL_0338;
						case 29:
						case 31:
						case 32:
						case 33:
							goto IL_0351;
						case 34:
							goto IL_0391;
						case 35:
							goto IL_03b8;
						case 36:
							goto IL_03e1;
						case 38:
							goto IL_03fb;
						case 37:
						case 39:
						case 40:
						case 41:
							goto IL_0414;
						case 42:
							goto IL_0454;
						case 43:
							goto IL_047b;
						case 44:
							goto IL_04a4;
						case 46:
							goto IL_04be;
						case 45:
						case 47:
						case 48:
						case 49:
							goto IL_04d7;
						case 50:
							goto IL_0517;
						case 51:
							goto IL_053e;
						case 52:
							goto IL_0567;
						case 54:
							goto IL_0581;
						case 53:
						case 55:
						case 56:
						case 57:
							goto IL_059a;
						case 58:
							goto IL_05da;
						case 59:
							goto IL_0601;
						case 60:
							goto IL_062a;
						case 62:
							goto IL_0644;
						case 61:
						case 63:
						case 64:
						case 65:
							goto IL_065d;
						case 66:
							goto IL_069d;
						case 67:
							goto IL_06c4;
						case 68:
							goto IL_06ed;
						case 70:
							goto IL_0707;
						case 69:
						case 71:
						case 72:
						case 73:
							goto IL_0720;
						case 74:
							goto IL_0760;
						case 75:
							goto IL_0787;
						case 76:
							goto IL_07b0;
						case 78:
							goto IL_07ca;
						case 77:
						case 79:
						case 80:
						case 81:
							goto IL_07e3;
						case 82:
							goto IL_0823;
						case 83:
							goto IL_084a;
						case 84:
							goto IL_0873;
						case 86:
							goto IL_088d;
						case 85:
						case 87:
						case 88:
						case 89:
							goto IL_08a6;
						case 90:
							goto IL_08e6;
						case 91:
							goto IL_090d;
						case 92:
							goto IL_0936;
						case 94:
							goto IL_0950;
						case 93:
						case 95:
						case 96:
						case 97:
							goto IL_0969;
						case 98:
							goto IL_09a9;
						case 99:
							goto IL_09d0;
						case 100:
							goto IL_09f9;
						case 102:
							goto IL_0a13;
						case 101:
						case 103:
						case 104:
						case 105:
							goto IL_0a2c;
						case 106:
							goto IL_0a3d;
						case 107:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 3:
						case 108:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0a13:
					num2 = 102;
					GetNumberForIndex(lblPort6, lblNum6);
					goto IL_0a2c;
					IL_0a2c:
					num2 = 105;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_0a3d;
					IL_09f9:
					num2 = 100;
					GetNumberForIndex(lblPort6, lblNum6);
					goto IL_0a2c;
					IL_0a3d:
					num2 = 106;
					EnableCntl();
					break;
					IL_000b:
					num2 = 2;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0))
					{
						goto end_IL_0001_3;
					}
					goto IL_00d1;
					IL_00d1:
					num2 = 5;
					DisableCntl();
					goto IL_00da;
					IL_00da:
					num2 = 6;
					lblProgress.BackColor = Color.Red;
					goto IL_00ed;
					IL_00ed:
					num2 = 7;
					lblProgress.Text = "Geting Missed Numbers 1";
					goto IL_0100;
					IL_0100:
					num2 = 8;
					Application.DoEvents();
					goto IL_0108;
					IL_0108:
					num2 = 9;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & (lblPort1.ForeColor != Color.White))
					{
						goto IL_0148;
					}
					goto IL_01cb;
					IL_0148:
					num2 = 10;
					if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_016f;
					}
					goto IL_01b2;
					IL_016f:
					num2 = 11;
					if (Operators.CompareString(lblNum1.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_0198;
					}
					goto IL_01cb;
					IL_0198:
					num2 = 12;
					SetNumberForIndexMM(lblPort1, lblNum1);
					goto IL_01cb;
					IL_01b2:
					num2 = 14;
					SetNumberForIndexMM(lblPort1, lblNum1);
					goto IL_01cb;
					IL_01cb:
					num2 = 17;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & (lblPort2.ForeColor != Color.White))
					{
						goto IL_020b;
					}
					goto IL_028e;
					IL_020b:
					num2 = 18;
					if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0232;
					}
					goto IL_0275;
					IL_0232:
					num2 = 19;
					if (Operators.CompareString(lblNum2.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_025b;
					}
					goto IL_028e;
					IL_025b:
					num2 = 20;
					SetNumberForIndexMM(lblPort2, lblNum2);
					goto IL_028e;
					IL_0275:
					num2 = 22;
					SetNumberForIndexMM(lblPort2, lblNum2);
					goto IL_028e;
					IL_028e:
					num2 = 25;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & (lblPort3.ForeColor != Color.White))
					{
						goto IL_02ce;
					}
					goto IL_0351;
					IL_02ce:
					num2 = 26;
					if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_02f5;
					}
					goto IL_0338;
					IL_02f5:
					num2 = 27;
					if (Operators.CompareString(lblNum3.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_031e;
					}
					goto IL_0351;
					IL_031e:
					num2 = 28;
					SetNumberForIndexMM(lblPort3, lblNum3);
					goto IL_0351;
					IL_0338:
					num2 = 30;
					SetNumberForIndexMM(lblPort3, lblNum3);
					goto IL_0351;
					IL_0351:
					num2 = 33;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & (lblPort4.ForeColor != Color.White))
					{
						goto IL_0391;
					}
					goto IL_0414;
					IL_0391:
					num2 = 34;
					if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_03b8;
					}
					goto IL_03fb;
					IL_03b8:
					num2 = 35;
					if (Operators.CompareString(lblNum4.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_03e1;
					}
					goto IL_0414;
					IL_03e1:
					num2 = 36;
					SetNumberForIndexMM(lblPort4, lblNum4);
					goto IL_0414;
					IL_03fb:
					num2 = 38;
					SetNumberForIndexMM(lblPort4, lblNum4);
					goto IL_0414;
					IL_0414:
					num2 = 41;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & (lblPort5.ForeColor != Color.White))
					{
						goto IL_0454;
					}
					goto IL_04d7;
					IL_0454:
					num2 = 42;
					if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_047b;
					}
					goto IL_04be;
					IL_047b:
					num2 = 43;
					if (Operators.CompareString(lblNum5.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_04a4;
					}
					goto IL_04d7;
					IL_04a4:
					num2 = 44;
					SetNumberForIndexMM(lblPort5, lblNum5);
					goto IL_04d7;
					IL_04be:
					num2 = 46;
					SetNumberForIndexMM(lblPort5, lblNum5);
					goto IL_04d7;
					IL_04d7:
					num2 = 49;
					if ((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & (lblPort6.ForeColor != Color.White))
					{
						goto IL_0517;
					}
					goto IL_059a;
					IL_0517:
					num2 = 50;
					if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_053e;
					}
					goto IL_0581;
					IL_053e:
					num2 = 51;
					if (Operators.CompareString(lblNum6.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_0567;
					}
					goto IL_059a;
					IL_0567:
					num2 = 52;
					SetNumberForIndexMM(lblPort6, lblNum6);
					goto IL_059a;
					IL_0581:
					num2 = 54;
					SetNumberForIndexMM(lblPort6, lblNum6);
					goto IL_059a;
					IL_059a:
					num2 = 57;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & (lblPort1.ForeColor != Color.White))
					{
						goto IL_05da;
					}
					goto IL_065d;
					IL_05da:
					num2 = 58;
					if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0601;
					}
					goto IL_0644;
					IL_0601:
					num2 = 59;
					if (Operators.CompareString(lblNum1.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_062a;
					}
					goto IL_065d;
					IL_062a:
					num2 = 60;
					GetNumberForIndex(lblPort1, lblNum1);
					goto IL_065d;
					IL_0644:
					num2 = 62;
					GetNumberForIndex(lblPort1, lblNum1);
					goto IL_065d;
					IL_065d:
					num2 = 65;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & (lblPort2.ForeColor != Color.White))
					{
						goto IL_069d;
					}
					goto IL_0720;
					IL_069d:
					num2 = 66;
					if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_06c4;
					}
					goto IL_0707;
					IL_06c4:
					num2 = 67;
					if (Operators.CompareString(lblNum2.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_06ed;
					}
					goto IL_0720;
					IL_06ed:
					num2 = 68;
					GetNumberForIndex(lblPort2, lblNum2);
					goto IL_0720;
					IL_0707:
					num2 = 70;
					GetNumberForIndex(lblPort2, lblNum2);
					goto IL_0720;
					IL_0720:
					num2 = 73;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & (lblPort3.ForeColor != Color.White))
					{
						goto IL_0760;
					}
					goto IL_07e3;
					IL_0760:
					num2 = 74;
					if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0787;
					}
					goto IL_07ca;
					IL_0787:
					num2 = 75;
					if (Operators.CompareString(lblNum3.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_07b0;
					}
					goto IL_07e3;
					IL_07b0:
					num2 = 76;
					GetNumberForIndex(lblPort3, lblNum3);
					goto IL_07e3;
					IL_07ca:
					num2 = 78;
					GetNumberForIndex(lblPort3, lblNum3);
					goto IL_07e3;
					IL_07e3:
					num2 = 81;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & (lblPort4.ForeColor != Color.White))
					{
						goto IL_0823;
					}
					goto IL_08a6;
					IL_0823:
					num2 = 82;
					if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_084a;
					}
					goto IL_088d;
					IL_084a:
					num2 = 83;
					if (Operators.CompareString(lblNum4.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_0873;
					}
					goto IL_08a6;
					IL_0873:
					num2 = 84;
					GetNumberForIndex(lblPort4, lblNum4);
					goto IL_08a6;
					IL_088d:
					num2 = 86;
					GetNumberForIndex(lblPort4, lblNum4);
					goto IL_08a6;
					IL_08a6:
					num2 = 89;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & (lblPort5.ForeColor != Color.White))
					{
						goto IL_08e6;
					}
					goto IL_0969;
					IL_08e6:
					num2 = 90;
					if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_090d;
					}
					goto IL_0950;
					IL_090d:
					num2 = 91;
					if (Operators.CompareString(lblNum5.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_0936;
					}
					goto IL_0969;
					IL_0936:
					num2 = 92;
					GetNumberForIndex(lblPort5, lblNum5);
					goto IL_0969;
					IL_0950:
					num2 = 94;
					GetNumberForIndex(lblPort5, lblNum5);
					goto IL_0969;
					IL_0969:
					num2 = 97;
					if ((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & (lblPort6.ForeColor != Color.White))
					{
						goto IL_09a9;
					}
					goto IL_0a2c;
					IL_09a9:
					num2 = 98;
					if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_09d0;
					}
					goto IL_0a13;
					IL_09d0:
					num2 = 99;
					if (Operators.CompareString(lblNum6.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_09f9;
					}
					goto IL_0a2c;
					end_IL_0001_2:
					break;
				}
				num2 = 107;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 3104;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnRunUssd_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 427:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_002f;
						case 5:
						case 6:
							goto IL_0049;
						case 7:
							goto IL_005c;
						case 8:
							goto IL_006f;
						case 9:
							goto IL_0078;
						case 10:
						case 15:
							goto IL_008d;
						case 11:
							goto IL_00bb;
						case 12:
							goto IL_00c9;
						case 13:
							goto IL_00d9;
						case 14:
							goto IL_00e2;
						case 16:
						case 17:
							goto IL_0114;
						case 18:
							goto IL_011e;
						case 19:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 20:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_00e2:
					num2 = 14;
					if (Conversion.Val(txtLoopS.Text) < Conversion.Val(txtLoopF.Text))
					{
						goto IL_008d;
					}
					goto IL_0114;
					IL_0114:
					num2 = 17;
					EnableCntl();
					goto IL_011e;
					IL_00d9:
					num2 = 13;
					Application.DoEvents();
					goto IL_00e2;
					IL_011e:
					num2 = 18;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(txtUssd.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_002f;
					}
					goto IL_0049;
					IL_002f:
					num2 = 3;
					lblProgress.Text = "No Ussd Code";
					goto end_IL_0001_3;
					IL_0049:
					num2 = 6;
					lblProgress.BackColor = Color.Red;
					goto IL_005c;
					IL_005c:
					num2 = 7;
					lblProgress.Text = "Apply in box No  1";
					goto IL_006f;
					IL_006f:
					num2 = 8;
					DisableCntl();
					goto IL_0078;
					IL_0078:
					num2 = 9;
					txtLoopS.Text = "0";
					goto IL_008d;
					IL_008d:
					num2 = 10;
					txtLoopS.Text = Conversions.ToString(Conversion.Val(txtLoopS.Text) + 1.0);
					goto IL_00bb;
					IL_00bb:
					num2 = 11;
					Thread.Sleep(1000);
					goto IL_00c9;
					IL_00c9:
					num2 = 12;
					SetUssdOrder(txtUssd);
					goto IL_00d9;
					end_IL_0001_2:
					break;
				}
				num2 = 19;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 427;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnGetSims_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 593:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0014;
						case 4:
							goto IL_0023;
						case 5:
							goto IL_0036;
						case 6:
							goto IL_0049;
						case 7:
							goto IL_0059;
						case 8:
							goto IL_006c;
						case 9:
							goto IL_007f;
						case 10:
							goto IL_0093;
						case 11:
							goto IL_00a7;
						case 12:
							goto IL_00bb;
						case 13:
							goto IL_00cf;
						case 14:
							goto IL_00e3;
						case 15:
							goto IL_00f7;
						case 16:
							goto IL_010b;
						case 17:
							goto IL_011f;
						case 18:
							goto IL_0133;
						case 19:
							goto IL_0147;
						case 20:
							goto IL_0164;
						case 21:
						case 22:
							goto IL_0177;
						case 23:
							goto IL_0180;
						case 24:
							goto IL_018a;
						case 25:
							goto IL_019a;
						case 26:
							goto IL_01a4;
						case 27:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 28:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_018a:
					num2 = 24;
					btnGetSims.Enabled = true;
					goto IL_019a;
					IL_019a:
					num2 = 25;
					EnableCntl();
					goto IL_01a4;
					IL_0180:
					num2 = 23;
					ResetAllModems();
					goto IL_018a;
					IL_01a4:
					num2 = 26;
					lblProgress.Text = "OK";
					break;
					IL_000b:
					num2 = 2;
					DisableCntl();
					goto IL_0014;
					IL_0014:
					num2 = 3;
					btnGetSims.Enabled = false;
					goto IL_0023;
					IL_0023:
					num2 = 4;
					lblProgress.BackColor = Color.Red;
					goto IL_0036;
					IL_0036:
					num2 = 5;
					lblProgress.Text = "اعادة تشغيل المودمات";
					goto IL_0049;
					IL_0049:
					num2 = 6;
					btnClear_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_0059;
					IL_0059:
					num2 = 7;
					lblNum1.Text = "";
					goto IL_006c;
					IL_006c:
					num2 = 8;
					lblNum2.Text = "";
					goto IL_007f;
					IL_007f:
					num2 = 9;
					lblNum3.Text = "";
					goto IL_0093;
					IL_0093:
					num2 = 10;
					lblNum4.Text = "";
					goto IL_00a7;
					IL_00a7:
					num2 = 11;
					lblNum5.Text = "";
					goto IL_00bb;
					IL_00bb:
					num2 = 12;
					lblNum6.Text = "";
					goto IL_00cf;
					IL_00cf:
					num2 = 13;
					lblBal1.Text = "";
					goto IL_00e3;
					IL_00e3:
					num2 = 14;
					lblBal2.Text = "";
					goto IL_00f7;
					IL_00f7:
					num2 = 15;
					lblBal3.Text = "";
					goto IL_010b;
					IL_010b:
					num2 = 16;
					lblBal4.Text = "";
					goto IL_011f;
					IL_011f:
					num2 = 17;
					lblBal5.Text = "";
					goto IL_0133;
					IL_0133:
					num2 = 18;
					lblBal6.Text = "";
					goto IL_0147;
					IL_0147:
					num2 = 19;
					if (lblPort1.Text.Length <= 1)
					{
						goto IL_0164;
					}
					goto IL_0177;
					IL_0164:
					num2 = 20;
					BtnRefreshComs_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_0177;
					IL_0177:
					num2 = 22;
					Application.DoEvents();
					goto IL_0180;
					end_IL_0001_2:
					break;
				}
				num2 = 27;
				lblProgress.BackColor = Color.LimeGreen;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 593;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnResetMissed_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 204:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0014;
						case 4:
							goto IL_0027;
						case 5:
							goto IL_003a;
						case 6:
							goto IL_0042;
						case 7:
							goto IL_004b;
						case 8:
							goto IL_005a;
						case 9:
							goto IL_006d;
						case 10:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 11:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_004b:
					num2 = 7;
					btnGetSims.Enabled = true;
					goto IL_005a;
					IL_005a:
					num2 = 8;
					lblProgress.Text = "OK";
					goto IL_006d;
					IL_0042:
					num2 = 6;
					ResetMissedModems();
					goto IL_004b;
					IL_006d:
					num2 = 9;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					DisableCntl();
					goto IL_0014;
					IL_0014:
					num2 = 3;
					lblProgress.BackColor = Color.Red;
					goto IL_0027;
					IL_0027:
					num2 = 4;
					lblProgress.Text = "Restarting Missed Modems";
					goto IL_003a;
					IL_003a:
					num2 = 5;
					Application.DoEvents();
					goto IL_0042;
					end_IL_0001_2:
					break;
				}
				num2 = 10;
				EnableCntl();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 204;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnRefreshMissed_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 2138:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 4:
							goto IL_00cf;
						case 5:
							goto IL_00d8;
						case 6:
							goto IL_00eb;
						case 7:
							goto IL_00fe;
						case 8:
							goto IL_0106;
						case 9:
							goto IL_012c;
						case 10:
							goto IL_0153;
						case 11:
						case 12:
						case 13:
							goto IL_0167;
						case 14:
							goto IL_018e;
						case 15:
							goto IL_01b5;
						case 16:
						case 17:
						case 18:
							goto IL_01c9;
						case 19:
							goto IL_01f0;
						case 20:
							goto IL_0217;
						case 21:
						case 22:
						case 23:
							goto IL_022b;
						case 24:
							goto IL_0252;
						case 25:
							goto IL_0279;
						case 26:
						case 27:
						case 28:
							goto IL_028d;
						case 29:
							goto IL_02b4;
						case 30:
							goto IL_02db;
						case 31:
						case 32:
						case 33:
							goto IL_02ef;
						case 34:
							goto IL_0316;
						case 35:
							goto IL_033d;
						case 36:
						case 37:
						case 38:
							goto IL_0351;
						case 40:
							goto IL_0418;
						case 41:
							goto IL_0429;
						case 43:
							goto IL_04f0;
						case 44:
							goto IL_0501;
						case 46:
							goto IL_05c8;
						case 47:
							goto IL_05d9;
						case 48:
							goto IL_05fb;
						case 49:
							goto IL_060b;
						case 50:
							goto IL_062d;
						case 51:
							goto IL_063d;
						case 52:
							goto IL_065f;
						case 53:
							goto IL_066f;
						case 54:
							goto IL_0691;
						case 55:
							goto IL_06a1;
						case 56:
							goto IL_06c3;
						case 57:
							goto IL_06d3;
						case 58:
							goto IL_06f5;
						case 39:
						case 42:
						case 45:
						case 59:
							goto IL_0706;
						case 60:
							goto IL_0717;
						case 61:
							goto IL_0721;
						case 62:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 3:
						case 63:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0706:
					num2 = 59;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_0717;
					IL_0717:
					num2 = 60;
					EnableCntl();
					goto IL_0721;
					IL_06f5:
					num2 = 58;
					chkCh6.Checked = true;
					goto IL_0706;
					IL_0721:
					num2 = 61;
					lblProgress.Text = "OK";
					break;
					IL_000b:
					num2 = 2;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0))
					{
						goto end_IL_0001_3;
					}
					goto IL_00cf;
					IL_00cf:
					num2 = 4;
					DisableCntl();
					goto IL_00d8;
					IL_00d8:
					num2 = 5;
					lblProgress.BackColor = Color.Red;
					goto IL_00eb;
					IL_00eb:
					num2 = 6;
					lblProgress.Text = "Geting Missed Networks";
					goto IL_00fe;
					IL_00fe:
					num2 = 7;
					Application.DoEvents();
					goto IL_0106;
					IL_0106:
					num2 = 8;
					if (Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_012c;
					}
					goto IL_0167;
					IL_012c:
					num2 = 9;
					if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_0153;
					}
					goto IL_0167;
					IL_0153:
					num2 = 10;
					TryToIdntyThisModem(lblPort1);
					goto IL_0167;
					IL_0167:
					num2 = 13;
					if (Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_018e;
					}
					goto IL_01c9;
					IL_018e:
					num2 = 14;
					if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_01b5;
					}
					goto IL_01c9;
					IL_01b5:
					num2 = 15;
					TryToIdntyThisModem(lblPort2);
					goto IL_01c9;
					IL_01c9:
					num2 = 18;
					if (Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_01f0;
					}
					goto IL_022b;
					IL_01f0:
					num2 = 19;
					if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_0217;
					}
					goto IL_022b;
					IL_0217:
					num2 = 20;
					TryToIdntyThisModem(lblPort3);
					goto IL_022b;
					IL_022b:
					num2 = 23;
					if (Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0252;
					}
					goto IL_028d;
					IL_0252:
					num2 = 24;
					if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_0279;
					}
					goto IL_028d;
					IL_0279:
					num2 = 25;
					TryToIdntyThisModem(lblPort4);
					goto IL_028d;
					IL_028d:
					num2 = 28;
					if (Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_02b4;
					}
					goto IL_02ef;
					IL_02b4:
					num2 = 29;
					if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_02db;
					}
					goto IL_02ef;
					IL_02db:
					num2 = 30;
					TryToIdntyThisModem(lblPort5);
					goto IL_02ef;
					IL_02ef:
					num2 = 33;
					if (Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0316;
					}
					goto IL_0351;
					IL_0316:
					num2 = 34;
					if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_033d;
					}
					goto IL_0351;
					IL_033d:
					num2 = 35;
					TryToIdntyThisModem(lblPort6);
					goto IL_0351;
					IL_0351:
					num2 = 38;
					if (!((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0)))
					{
						goto IL_0418;
					}
					goto IL_0706;
					IL_0418:
					num2 = 40;
					btnNumbers_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_0429;
					IL_0429:
					num2 = 41;
					if (!((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0)))
					{
						goto IL_04f0;
					}
					goto IL_0706;
					IL_04f0:
					num2 = 43;
					btnNumbers2_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_0501;
					IL_0501:
					num2 = 44;
					if (!((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0)))
					{
						goto IL_05c8;
					}
					goto IL_0706;
					IL_05c8:
					num2 = 46;
					btnNumbers3_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_05d9;
					IL_05d9:
					num2 = 47;
					if (lblNum1.Text.Trim().Length == 11)
					{
						goto IL_05fb;
					}
					goto IL_060b;
					IL_05fb:
					num2 = 48;
					chkCh1.Checked = true;
					goto IL_060b;
					IL_060b:
					num2 = 49;
					if (lblNum2.Text.Trim().Length == 11)
					{
						goto IL_062d;
					}
					goto IL_063d;
					IL_062d:
					num2 = 50;
					chkCh2.Checked = true;
					goto IL_063d;
					IL_063d:
					num2 = 51;
					if (lblNum3.Text.Trim().Length == 11)
					{
						goto IL_065f;
					}
					goto IL_066f;
					IL_065f:
					num2 = 52;
					chkCh3.Checked = true;
					goto IL_066f;
					IL_066f:
					num2 = 53;
					if (lblNum4.Text.Trim().Length == 11)
					{
						goto IL_0691;
					}
					goto IL_06a1;
					IL_0691:
					num2 = 54;
					chkCh4.Checked = true;
					goto IL_06a1;
					IL_06a1:
					num2 = 55;
					if (lblNum5.Text.Trim().Length == 11)
					{
						goto IL_06c3;
					}
					goto IL_06d3;
					IL_06c3:
					num2 = 56;
					chkCh5.Checked = true;
					goto IL_06d3;
					IL_06d3:
					num2 = 57;
					if (lblNum6.Text.Trim().Length == 11)
					{
						goto IL_06f5;
					}
					goto IL_0706;
					end_IL_0001_2:
					break;
				}
				num2 = 62;
				lblProgress.BackColor = Color.LimeGreen;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 2138;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnRR_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 154:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0031;
						case 5:
							goto IL_0039;
						case 6:
							goto IL_0042;
						case 7:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 8:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0031:
					num2 = 4;
					Application.DoEvents();
					goto IL_0039;
					IL_0039:
					num2 = 5;
					ReturnRead();
					goto IL_0042;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "Read Modems reply";
					goto IL_0031;
					IL_0042:
					num2 = 6;
					lblProgress.Text = "OK";
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					end_IL_0001_2:
					break;
				}
				num2 = 7;
				lblProgress.BackColor = Color.LimeGreen;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 154;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnRunUssd2_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 256:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_002f;
						case 5:
						case 6:
							goto IL_0046;
						case 7:
							goto IL_0059;
						case 8:
							goto IL_006c;
						case 9:
							goto IL_0075;
						case 10:
							goto IL_0085;
						case 11:
							goto IL_008f;
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0075:
					num2 = 9;
					SetUssdOrder(txtUssdc2);
					goto IL_0085;
					IL_0085:
					num2 = 10;
					EnableCntl();
					goto IL_008f;
					IL_006c:
					num2 = 8;
					DisableCntl();
					goto IL_0075;
					IL_008f:
					num2 = 11;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(txtUssdc2.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_002f;
					}
					goto IL_0046;
					IL_002f:
					num2 = 3;
					lblProgress.Text = "No Ussd Code";
					goto end_IL_0001_3;
					IL_0046:
					num2 = 6;
					lblProgress.BackColor = Color.Red;
					goto IL_0059;
					IL_0059:
					num2 = 7;
					lblProgress.Text = "Apply in box No  2";
					goto IL_006c;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 256;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnClear_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1498:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0031;
						case 5:
							goto IL_0044;
						case 6:
							goto IL_0057;
						case 7:
							goto IL_006a;
						case 8:
							goto IL_007d;
						case 9:
							goto IL_0090;
						case 10:
							goto IL_00a4;
						case 11:
							goto IL_00b8;
						case 12:
							goto IL_00cc;
						case 13:
							goto IL_00e0;
						case 14:
							goto IL_00f4;
						case 15:
							goto IL_0108;
						case 16:
							goto IL_011c;
						case 17:
							goto IL_0130;
						case 18:
							goto IL_0144;
						case 19:
							goto IL_0158;
						case 20:
							goto IL_016c;
						case 21:
							goto IL_0180;
						case 22:
							goto IL_0194;
						case 23:
							goto IL_01a8;
						case 24:
							goto IL_01bc;
						case 25:
							goto IL_01d6;
						case 26:
							goto IL_01f0;
						case 27:
							goto IL_020a;
						case 28:
							goto IL_0224;
						case 29:
							goto IL_023e;
						case 30:
							goto IL_0258;
						case 31:
							goto IL_026c;
						case 32:
							goto IL_0280;
						case 33:
							goto IL_0294;
						case 34:
							goto IL_02a8;
						case 35:
							goto IL_02bc;
						case 36:
							goto IL_02d0;
						case 37:
							goto IL_02e4;
						case 38:
							goto IL_02f8;
						case 39:
							goto IL_030c;
						case 40:
							goto IL_0320;
						case 41:
							goto IL_0334;
						case 42:
							goto IL_0348;
						case 43:
							goto IL_035c;
						case 44:
							goto IL_0370;
						case 45:
							goto IL_0384;
						case 46:
							goto IL_0398;
						case 47:
							goto IL_03ac;
						case 48:
							goto IL_03c0;
						case 49:
							goto IL_03d4;
						case 50:
							goto IL_03e8;
						case 51:
							goto IL_03fc;
						case 52:
							goto IL_0410;
						case 53:
							goto IL_0424;
						case 54:
							goto IL_0438;
						case 55:
							goto IL_044c;
						case 56:
							goto IL_0460;
						case 57:
							goto IL_0474;
						case 58:
							goto IL_0488;
						case 59:
							goto IL_049c;
						case 60:
							goto IL_04b0;
						case 61:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 62:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0488:
					num2 = 58;
					lblChargeDone4.Text = "0";
					goto IL_049c;
					IL_049c:
					num2 = 59;
					lblChargeDone5.Text = "0";
					goto IL_04b0;
					IL_0474:
					num2 = 57;
					lblChargeDone3.Text = "0";
					goto IL_0488;
					IL_04b0:
					num2 = 60;
					lblChargeDone6.Text = "0";
					break;
					IL_000b:
					num2 = 2;
					txtRet01.Text = "";
					goto IL_001e;
					IL_001e:
					num2 = 3;
					txtRet02.Text = "";
					goto IL_0031;
					IL_0031:
					num2 = 4;
					txtRet03.Text = "";
					goto IL_0044;
					IL_0044:
					num2 = 5;
					txtRet04.Text = "";
					goto IL_0057;
					IL_0057:
					num2 = 6;
					txtRet05.Text = "";
					goto IL_006a;
					IL_006a:
					num2 = 7;
					txtRet06.Text = "";
					goto IL_007d;
					IL_007d:
					num2 = 8;
					txtRet07.Text = "";
					goto IL_0090;
					IL_0090:
					num2 = 9;
					txtRet08.Text = "";
					goto IL_00a4;
					IL_00a4:
					num2 = 10;
					lblNum1.BackColor = Color.Black;
					goto IL_00b8;
					IL_00b8:
					num2 = 11;
					lblNum2.BackColor = Color.Black;
					goto IL_00cc;
					IL_00cc:
					num2 = 12;
					lblNum3.BackColor = Color.Black;
					goto IL_00e0;
					IL_00e0:
					num2 = 13;
					lblNum4.BackColor = Color.Black;
					goto IL_00f4;
					IL_00f4:
					num2 = 14;
					lblNum5.BackColor = Color.Black;
					goto IL_0108;
					IL_0108:
					num2 = 15;
					lblNum6.BackColor = Color.Black;
					goto IL_011c;
					IL_011c:
					num2 = 16;
					lblNum7.BackColor = Color.White;
					goto IL_0130;
					IL_0130:
					num2 = 17;
					lblNum8.BackColor = Color.White;
					goto IL_0144;
					IL_0144:
					num2 = 18;
					lblPort1.BackColor = Color.Black;
					goto IL_0158;
					IL_0158:
					num2 = 19;
					lblPort2.BackColor = Color.Black;
					goto IL_016c;
					IL_016c:
					num2 = 20;
					lblPort3.BackColor = Color.Black;
					goto IL_0180;
					IL_0180:
					num2 = 21;
					lblPort4.BackColor = Color.Black;
					goto IL_0194;
					IL_0194:
					num2 = 22;
					lblPort5.BackColor = Color.Black;
					goto IL_01a8;
					IL_01a8:
					num2 = 23;
					lblPort6.BackColor = Color.Black;
					goto IL_01bc;
					IL_01bc:
					num2 = 24;
					lblNum1.ForeColor = lblPort1.ForeColor;
					goto IL_01d6;
					IL_01d6:
					num2 = 25;
					lblNum2.ForeColor = lblPort2.ForeColor;
					goto IL_01f0;
					IL_01f0:
					num2 = 26;
					lblNum3.ForeColor = lblPort3.ForeColor;
					goto IL_020a;
					IL_020a:
					num2 = 27;
					lblNum4.ForeColor = lblPort4.ForeColor;
					goto IL_0224;
					IL_0224:
					num2 = 28;
					lblNum5.ForeColor = lblPort5.ForeColor;
					goto IL_023e;
					IL_023e:
					num2 = 29;
					lblNum6.ForeColor = lblPort6.ForeColor;
					goto IL_0258;
					IL_0258:
					num2 = 30;
					txtRet01.ForeColor = Color.Cyan;
					goto IL_026c;
					IL_026c:
					num2 = 31;
					txtRet02.ForeColor = Color.Cyan;
					goto IL_0280;
					IL_0280:
					num2 = 32;
					txtRet03.ForeColor = Color.Cyan;
					goto IL_0294;
					IL_0294:
					num2 = 33;
					txtRet04.ForeColor = Color.Cyan;
					goto IL_02a8;
					IL_02a8:
					num2 = 34;
					txtRet05.ForeColor = Color.Cyan;
					goto IL_02bc;
					IL_02bc:
					num2 = 35;
					txtRet06.ForeColor = Color.Cyan;
					goto IL_02d0;
					IL_02d0:
					num2 = 36;
					lblGifts01.Text = "0";
					goto IL_02e4;
					IL_02e4:
					num2 = 37;
					lblGifts02.Text = "0";
					goto IL_02f8;
					IL_02f8:
					num2 = 38;
					lblGifts03.Text = "0";
					goto IL_030c;
					IL_030c:
					num2 = 39;
					lblGifts04.Text = "0";
					goto IL_0320;
					IL_0320:
					num2 = 40;
					lblGifts05.Text = "0";
					goto IL_0334;
					IL_0334:
					num2 = 41;
					lblGifts06.Text = "0";
					goto IL_0348;
					IL_0348:
					num2 = 42;
					txtInfo.Text = "";
					goto IL_035c;
					IL_035c:
					num2 = 43;
					lblGiftV1.Text = "0";
					goto IL_0370;
					IL_0370:
					num2 = 44;
					lblGiftV2.Text = "0";
					goto IL_0384;
					IL_0384:
					num2 = 45;
					lblGiftV3.Text = "0";
					goto IL_0398;
					IL_0398:
					num2 = 46;
					lblGiftV4.Text = "0";
					goto IL_03ac;
					IL_03ac:
					num2 = 47;
					lblGiftV5.Text = "0";
					goto IL_03c0;
					IL_03c0:
					num2 = 48;
					lblGiftV6.Text = "0";
					goto IL_03d4;
					IL_03d4:
					num2 = 49;
					lblGifttotal1.Text = "0";
					goto IL_03e8;
					IL_03e8:
					num2 = 50;
					lblGifttotal2.Text = "0";
					goto IL_03fc;
					IL_03fc:
					num2 = 51;
					lblGifttotal3.Text = "0";
					goto IL_0410;
					IL_0410:
					num2 = 52;
					lblGifttotal4.Text = "0";
					goto IL_0424;
					IL_0424:
					num2 = 53;
					lblGifttotal5.Text = "0";
					goto IL_0438;
					IL_0438:
					num2 = 54;
					lblGifttotal6.Text = "0";
					goto IL_044c;
					IL_044c:
					num2 = 55;
					lblChargeDone1.Text = "0";
					goto IL_0460;
					IL_0460:
					num2 = 56;
					lblChargeDone2.Text = "0";
					goto IL_0474;
					end_IL_0001_2:
					break;
				}
				num2 = 61;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1498;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnRunUssd3_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 256:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_002f;
						case 5:
						case 6:
							goto IL_0046;
						case 7:
							goto IL_0059;
						case 8:
							goto IL_006c;
						case 9:
							goto IL_0075;
						case 10:
							goto IL_0085;
						case 11:
							goto IL_008f;
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0075:
					num2 = 9;
					SetUssdOrder(txtUssdc3);
					goto IL_0085;
					IL_0085:
					num2 = 10;
					EnableCntl();
					goto IL_008f;
					IL_006c:
					num2 = 8;
					DisableCntl();
					goto IL_0075;
					IL_008f:
					num2 = 11;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(txtUssdc3.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_002f;
					}
					goto IL_0046;
					IL_002f:
					num2 = 3;
					lblProgress.Text = "No Ussd Code";
					goto end_IL_0001_3;
					IL_0046:
					num2 = 6;
					lblProgress.BackColor = Color.Red;
					goto IL_0059;
					IL_0059:
					num2 = 7;
					lblProgress.Text = "Apply in box No  3";
					goto IL_006c;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 256;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnRunUssd4_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 256:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_002f;
						case 5:
						case 6:
							goto IL_0046;
						case 7:
							goto IL_0059;
						case 8:
							goto IL_006c;
						case 9:
							goto IL_0075;
						case 10:
							goto IL_0085;
						case 11:
							goto IL_008f;
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0075:
					num2 = 9;
					SetUssdOrder(txtUssdc4);
					goto IL_0085;
					IL_0085:
					num2 = 10;
					EnableCntl();
					goto IL_008f;
					IL_006c:
					num2 = 8;
					DisableCntl();
					goto IL_0075;
					IL_008f:
					num2 = 11;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(txtUssdc4.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_002f;
					}
					goto IL_0046;
					IL_002f:
					num2 = 3;
					lblProgress.Text = "No Ussd Code";
					goto end_IL_0001_3;
					IL_0046:
					num2 = 6;
					lblProgress.BackColor = Color.Red;
					goto IL_0059;
					IL_0059:
					num2 = 7;
					lblProgress.Text = "Apply in box No  4";
					goto IL_006c;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 256;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnRunUssd5_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 256:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_002f;
						case 5:
						case 6:
							goto IL_0046;
						case 7:
							goto IL_0059;
						case 8:
							goto IL_006c;
						case 9:
							goto IL_0075;
						case 10:
							goto IL_0085;
						case 11:
							goto IL_008f;
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0075:
					num2 = 9;
					SetUssdOrder(txtUssdc5);
					goto IL_0085;
					IL_0085:
					num2 = 10;
					EnableCntl();
					goto IL_008f;
					IL_006c:
					num2 = 8;
					DisableCntl();
					goto IL_0075;
					IL_008f:
					num2 = 11;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(txtUssdc5.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_002f;
					}
					goto IL_0046;
					IL_002f:
					num2 = 3;
					lblProgress.Text = "No Ussd Code";
					goto end_IL_0001_3;
					IL_0046:
					num2 = 6;
					lblProgress.BackColor = Color.Red;
					goto IL_0059;
					IL_0059:
					num2 = 7;
					lblProgress.Text = "Apply in box No  5";
					goto IL_006c;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 256;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnRunUssd6_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 256:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_002f;
						case 5:
						case 6:
							goto IL_0046;
						case 7:
							goto IL_0059;
						case 8:
							goto IL_006c;
						case 9:
							goto IL_0075;
						case 10:
							goto IL_0085;
						case 11:
							goto IL_008f;
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0075:
					num2 = 9;
					SetUssdOrder(txtUssdc6);
					goto IL_0085;
					IL_0085:
					num2 = 10;
					EnableCntl();
					goto IL_008f;
					IL_006c:
					num2 = 8;
					DisableCntl();
					goto IL_0075;
					IL_008f:
					num2 = 11;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(txtUssdc6.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_002f;
					}
					goto IL_0046;
					IL_002f:
					num2 = 3;
					lblProgress.Text = "No Ussd Code";
					goto end_IL_0001_3;
					IL_0046:
					num2 = 6;
					lblProgress.BackColor = Color.Red;
					goto IL_0059;
					IL_0059:
					num2 = 7;
					lblProgress.Text = "Apply in box No  6";
					goto IL_006c;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 256;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnRunUssd7_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 256:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_002f;
						case 5:
						case 6:
							goto IL_0046;
						case 7:
							goto IL_0059;
						case 8:
							goto IL_006c;
						case 9:
							goto IL_0075;
						case 10:
							goto IL_0085;
						case 11:
							goto IL_008f;
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0075:
					num2 = 9;
					SetUssdOrder(txtUssdc7);
					goto IL_0085;
					IL_0085:
					num2 = 10;
					EnableCntl();
					goto IL_008f;
					IL_006c:
					num2 = 8;
					DisableCntl();
					goto IL_0075;
					IL_008f:
					num2 = 11;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(txtUssdc7.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_002f;
					}
					goto IL_0046;
					IL_002f:
					num2 = 3;
					lblProgress.Text = "No Ussd Code";
					goto end_IL_0001_3;
					IL_0046:
					num2 = 6;
					lblProgress.BackColor = Color.Red;
					goto IL_0059;
					IL_0059:
					num2 = 7;
					lblProgress.Text = "Apply in box No  7";
					goto IL_006c;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 256;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnRunUssd8_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 256:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_002f;
						case 5:
						case 6:
							goto IL_0046;
						case 7:
							goto IL_0059;
						case 8:
							goto IL_006c;
						case 9:
							goto IL_0075;
						case 10:
							goto IL_0085;
						case 11:
							goto IL_008f;
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0075:
					num2 = 9;
					SetUssdOrder(txtUssdc8);
					goto IL_0085;
					IL_0085:
					num2 = 10;
					EnableCntl();
					goto IL_008f;
					IL_006c:
					num2 = 8;
					DisableCntl();
					goto IL_0075;
					IL_008f:
					num2 = 11;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(txtUssdc8.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_002f;
					}
					goto IL_0046;
					IL_002f:
					num2 = 3;
					lblProgress.Text = "No Ussd Code";
					goto end_IL_0001_3;
					IL_0046:
					num2 = 6;
					lblProgress.BackColor = Color.Red;
					goto IL_0059;
					IL_0059:
					num2 = 7;
					lblProgress.Text = "Apply in box No  8";
					goto IL_006c;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 256;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnRunUssd9_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 256:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_002f;
						case 5:
						case 6:
							goto IL_0046;
						case 7:
							goto IL_0059;
						case 8:
							goto IL_006c;
						case 9:
							goto IL_0075;
						case 10:
							goto IL_0085;
						case 11:
							goto IL_008f;
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0075:
					num2 = 9;
					SetUssdOrder(txtUssdc9);
					goto IL_0085;
					IL_0085:
					num2 = 10;
					EnableCntl();
					goto IL_008f;
					IL_006c:
					num2 = 8;
					DisableCntl();
					goto IL_0075;
					IL_008f:
					num2 = 11;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(txtUssdc9.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_002f;
					}
					goto IL_0046;
					IL_002f:
					num2 = 3;
					lblProgress.Text = "No Ussd Code";
					goto end_IL_0001_3;
					IL_0046:
					num2 = 6;
					lblProgress.BackColor = Color.Red;
					goto IL_0059;
					IL_0059:
					num2 = 7;
					lblProgress.Text = "Apply in box No  9";
					goto IL_006c;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 256;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnRunUssd10_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 269:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_002f;
						case 5:
						case 6:
							goto IL_0046;
						case 7:
							goto IL_0059;
						case 8:
							goto IL_006c;
						case 9:
							goto IL_0074;
						case 10:
							goto IL_007e;
						case 11:
							goto IL_008e;
						case 12:
							goto IL_0098;
						case 13:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 14:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_007e:
					num2 = 10;
					SetUssdOrder(txtUssdc10);
					goto IL_008e;
					IL_008e:
					num2 = 11;
					EnableCntl();
					goto IL_0098;
					IL_0074:
					num2 = 9;
					DisableCntl();
					goto IL_007e;
					IL_0098:
					num2 = 12;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(txtUssdc10.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_002f;
					}
					goto IL_0046;
					IL_002f:
					num2 = 3;
					lblProgress.Text = "No Ussd Code";
					goto end_IL_0001_3;
					IL_0046:
					num2 = 6;
					lblProgress.BackColor = Color.Red;
					goto IL_0059;
					IL_0059:
					num2 = 7;
					lblProgress.Text = "Apply in box 10";
					goto IL_006c;
					IL_006c:
					num2 = 8;
					Application.DoEvents();
					goto IL_0074;
					end_IL_0001_2:
					break;
				}
				num2 = 13;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 269;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnUssdReset_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 181:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0031;
						case 5:
							goto IL_0039;
						case 6:
							goto IL_0042;
						case 7:
							goto IL_004b;
						case 8:
							goto IL_0054;
						case 9:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 10:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0042:
					num2 = 6;
					ReSetUssdOrder();
					goto IL_004b;
					IL_004b:
					num2 = 7;
					EnableCntl();
					goto IL_0054;
					IL_0039:
					num2 = 5;
					DisableCntl();
					goto IL_0042;
					IL_0054:
					num2 = 8;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "Refresh";
					goto IL_0031;
					IL_0031:
					num2 = 4;
					Application.DoEvents();
					goto IL_0039;
					end_IL_0001_2:
					break;
				}
				num2 = 9;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 181;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnReadSms_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1247:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0031;
						case 5:
							goto IL_003a;
						case 6:
							goto IL_004d;
						case 7:
							goto IL_0060;
						case 8:
							goto IL_0073;
						case 9:
							goto IL_0086;
						case 10:
							goto IL_009a;
						case 11:
							goto IL_00ae;
						case 12:
							goto IL_00f5;
						case 13:
							goto IL_0109;
						case 14:
							goto IL_0112;
						case 15:
						case 16:
							goto IL_0136;
						case 17:
							goto IL_017f;
						case 18:
							goto IL_0193;
						case 19:
							goto IL_019c;
						case 20:
						case 21:
							goto IL_01c0;
						case 22:
							goto IL_0209;
						case 23:
							goto IL_021d;
						case 24:
							goto IL_0226;
						case 25:
						case 26:
							goto IL_024a;
						case 27:
							goto IL_0293;
						case 28:
							goto IL_02a7;
						case 29:
							goto IL_02b0;
						case 30:
						case 31:
							goto IL_02d4;
						case 32:
							goto IL_031d;
						case 33:
							goto IL_0331;
						case 34:
							goto IL_033a;
						case 35:
						case 36:
							goto IL_035e;
						case 37:
							goto IL_03a7;
						case 38:
							goto IL_03bb;
						case 39:
							goto IL_03c4;
						case 40:
						case 41:
							goto IL_03e8;
						case 42:
							goto IL_03f2;
						case 43:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 44:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_03c4:
					num2 = 39;
					ReadSMSSM30E(lblPort6, txtRet06, lblBal6, lblNum6);
					goto IL_03e8;
					IL_03e8:
					num2 = 41;
					EnableCntl();
					goto IL_03f2;
					IL_03bb:
					num2 = 38;
					Application.DoEvents();
					goto IL_03c4;
					IL_03f2:
					num2 = 42;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "Read SMS";
					goto IL_0031;
					IL_0031:
					num2 = 4;
					DisableCntl();
					goto IL_003a;
					IL_003a:
					num2 = 5;
					lblBal1.Text = "0";
					goto IL_004d;
					IL_004d:
					num2 = 6;
					lblBal2.Text = "0";
					goto IL_0060;
					IL_0060:
					num2 = 7;
					lblBal3.Text = "0";
					goto IL_0073;
					IL_0073:
					num2 = 8;
					lblBal4.Text = "0";
					goto IL_0086;
					IL_0086:
					num2 = 9;
					lblBal5.Text = "0";
					goto IL_009a;
					IL_009a:
					num2 = 10;
					lblBal6.Text = "0";
					goto IL_00ae;
					IL_00ae:
					num2 = 11;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & (lblPort1.ForeColor != Color.White) & chkCh1.Checked)
					{
						goto IL_00f5;
					}
					goto IL_0136;
					IL_00f5:
					num2 = 12;
					lblProgress.Text = "COM 1";
					goto IL_0109;
					IL_0109:
					num2 = 13;
					Application.DoEvents();
					goto IL_0112;
					IL_0112:
					num2 = 14;
					ReadSMSSM30E(lblPort1, txtRet01, lblBal1, lblNum1);
					goto IL_0136;
					IL_0136:
					num2 = 16;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & (lblPort2.ForeColor != Color.White) & chkCh2.Checked)
					{
						goto IL_017f;
					}
					goto IL_01c0;
					IL_017f:
					num2 = 17;
					lblProgress.Text = "COM 2";
					goto IL_0193;
					IL_0193:
					num2 = 18;
					Application.DoEvents();
					goto IL_019c;
					IL_019c:
					num2 = 19;
					ReadSMSSM30E(lblPort2, txtRet02, lblBal2, lblNum2);
					goto IL_01c0;
					IL_01c0:
					num2 = 21;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & (lblPort3.ForeColor != Color.White) & chkCh3.Checked)
					{
						goto IL_0209;
					}
					goto IL_024a;
					IL_0209:
					num2 = 22;
					lblProgress.Text = "COM 3";
					goto IL_021d;
					IL_021d:
					num2 = 23;
					Application.DoEvents();
					goto IL_0226;
					IL_0226:
					num2 = 24;
					ReadSMSSM30E(lblPort3, txtRet03, lblBal3, lblNum3);
					goto IL_024a;
					IL_024a:
					num2 = 26;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & (lblPort4.ForeColor != Color.White) & chkCh4.Checked)
					{
						goto IL_0293;
					}
					goto IL_02d4;
					IL_0293:
					num2 = 27;
					lblProgress.Text = "COM 4";
					goto IL_02a7;
					IL_02a7:
					num2 = 28;
					Application.DoEvents();
					goto IL_02b0;
					IL_02b0:
					num2 = 29;
					ReadSMSSM30E(lblPort4, txtRet04, lblBal4, lblNum4);
					goto IL_02d4;
					IL_02d4:
					num2 = 31;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & (lblPort5.ForeColor != Color.White) & chkCh5.Checked)
					{
						goto IL_031d;
					}
					goto IL_035e;
					IL_031d:
					num2 = 32;
					lblProgress.Text = "COM 5";
					goto IL_0331;
					IL_0331:
					num2 = 33;
					Application.DoEvents();
					goto IL_033a;
					IL_033a:
					num2 = 34;
					ReadSMSSM30E(lblPort5, txtRet05, lblBal5, lblNum5);
					goto IL_035e;
					IL_035e:
					num2 = 36;
					if ((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & (lblPort6.ForeColor != Color.White) & chkCh6.Checked)
					{
						goto IL_03a7;
					}
					goto IL_03e8;
					IL_03a7:
					num2 = 37;
					lblProgress.Text = "COM 6";
					goto IL_03bb;
					end_IL_0001_2:
					break;
				}
				num2 = 43;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1247;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnClearSMS_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 628:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0031;
						case 5:
							goto IL_003a;
						case 6:
							goto IL_004a;
						case 7:
							goto IL_007c;
						case 8:
							goto IL_008b;
						case 9:
							goto IL_00bd;
						case 10:
							goto IL_00cd;
						case 11:
							goto IL_0100;
						case 12:
							goto IL_0110;
						case 13:
							goto IL_0143;
						case 14:
							goto IL_0153;
						case 15:
							goto IL_0186;
						case 16:
							goto IL_0196;
						case 17:
							goto IL_01c9;
						case 18:
							goto IL_01d9;
						case 19:
							goto IL_01e3;
						case 20:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 21:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_01c9:
					num2 = 17;
					DelSMSSM30E(lblPort6);
					goto IL_01d9;
					IL_01d9:
					num2 = 18;
					EnableCntl();
					goto IL_01e3;
					IL_0196:
					num2 = 16;
					if ((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_01c9;
					}
					goto IL_01d9;
					IL_01e3:
					num2 = 19;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "SMS Cleared";
					goto IL_0031;
					IL_0031:
					num2 = 4;
					DisableCntl();
					goto IL_003a;
					IL_003a:
					num2 = 5;
					btnClear_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_004a;
					IL_004a:
					num2 = 6;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_007c;
					}
					goto IL_008b;
					IL_007c:
					num2 = 7;
					DelSMSSM30E(lblPort1);
					goto IL_008b;
					IL_008b:
					num2 = 8;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_00bd;
					}
					goto IL_00cd;
					IL_00bd:
					num2 = 9;
					DelSMSSM30E(lblPort2);
					goto IL_00cd;
					IL_00cd:
					num2 = 10;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_0100;
					}
					goto IL_0110;
					IL_0100:
					num2 = 11;
					DelSMSSM30E(lblPort3);
					goto IL_0110;
					IL_0110:
					num2 = 12;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0143;
					}
					goto IL_0153;
					IL_0143:
					num2 = 13;
					DelSMSSM30E(lblPort4);
					goto IL_0153;
					IL_0153:
					num2 = 14;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0186;
					}
					goto IL_0196;
					IL_0186:
					num2 = 15;
					DelSMSSM30E(lblPort5);
					goto IL_0196;
					end_IL_0001_2:
					break;
				}
				num2 = 20;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 628;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	[MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
	private void frmUssd_Closing(object sender, CancelEventArgs e)
	{
		int try0001_dispatch = -1;
		int num = default(int);
		int num2 = default(int);
		int num3 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				case 43:
					num = num2;
					switch ((num3 <= -2) ? 1 : num3)
					{
					case 1:
					{
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						case 2:
							goto end_IL_0001_2;
						}
						break;
					}
					default:
						goto end_IL_0001;
					}
					break;
				}
				ProjectData.ClearProjectError();
				num3 = -2;
				ProjectData.EndApp();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 43;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_2:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void DBconnRemote()
	{
		objDataRemote = new cdataMysql();
	}

	private bool VerifyMasterNumber(string EEtel)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		bool result = default(bool);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 228:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0026;
						case 4:
							goto IL_002c;
						case 5:
							goto IL_006e;
						case 6:
							goto IL_0076;
						case 7:
							goto IL_0091;
						case 9:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 8:
						case 10:
						case 11:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_006e:
					num2 = 5;
					Application.DoEvents();
					goto IL_0076;
					IL_0076:
					num2 = 6;
					if (objDataTabletemp.Rows.Count <= 0)
					{
						break;
					}
					goto IL_0091;
					IL_002c:
					num2 = 4;
					objDataTabletemp = objDataRemote.QueryDatabase("SELECT mob_number FROM " + MysqlConn.RD_name + "_nums  where  mob_number = '" + EEtel + "'");
					goto IL_006e;
					IL_0091:
					num2 = 7;
					result = true;
					goto end_IL_0001_3;
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(MysqlConn.RD_name, "NO", TextCompare: false) == 0)
					{
						goto IL_0026;
					}
					goto IL_002c;
					IL_0026:
					num2 = 3;
					result = false;
					goto end_IL_0001_3;
					end_IL_0001_2:
					break;
				}
				num2 = 9;
				result = false;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 228;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private bool ChekSequnce(string EEtel1, string EEtel2)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		bool result = default(bool);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 243:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0026;
						case 4:
							goto IL_002f;
						case 5:
							goto IL_007d;
						case 6:
							goto IL_0085;
						case 7:
							goto IL_00a0;
						case 9:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 8:
						case 10:
						case 11:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_007d:
					num2 = 5;
					Application.DoEvents();
					goto IL_0085;
					IL_0085:
					num2 = 6;
					if (objDataTabletemp.Rows.Count <= 0)
					{
						break;
					}
					goto IL_00a0;
					IL_002f:
					num2 = 4;
					objDataTabletemp = objDataRemote.QueryDatabase("SELECT mob_number FROM " + MysqlConn.RD_name + "_transfer  where  mob_number = '" + EEtel1 + "' and rec_number = '" + EEtel2 + "'");
					goto IL_007d;
					IL_00a0:
					num2 = 7;
					result = true;
					goto end_IL_0001_3;
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(MysqlConn.RD_name, "NO", TextCompare: false) == 0)
					{
						goto IL_0026;
					}
					goto IL_002f;
					IL_0026:
					num2 = 3;
					result = false;
					goto end_IL_0001_3;
					end_IL_0001_2:
					break;
				}
				num2 = 9;
				result = false;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 243;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void AddNumberToRobot(string Mob_number_to_save)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					break;
				case 224:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 3:
							goto end_IL_0001_3;
						}
						goto default;
					}
					end_IL_0001_2:
					break;
				}
				num2 = 2;
				objDataRemote.DatabaseCommand("INSERT INTO " + MysqlConn.RD_name + "_nums (mob_number,Operator,eday,emonth,websign,cli_name) Values ('" + Mob_number_to_save + "' , '" + Mob_number_to_save.Substring(0, 3) + "' ,  " + Conversions.ToString(DateAndTime.Today.Day) + "  ,  " + Conversions.ToString(DateAndTime.Today.Month) + "  , '" + txtWebSign.Text + "'  , '" + MysqlConn.Client_Reg_Name + "' )");
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 224;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void UpdateNumberDataToRobot(string Mob_number_to_save)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 270:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_007e;
						case 4:
							goto IL_009f;
						case 5:
							goto IL_00bd;
						case 6:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 7:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_007e:
					num2 = 3;
					if (Operators.CompareString(txtWebSign.Text, "0", TextCompare: false) != 0)
					{
						goto IL_009f;
					}
					goto IL_00bd;
					IL_009f:
					num2 = 4;
					text = text + " , WebSign = '" + txtWebSign.Text + "' ";
					goto IL_00bd;
					IL_000b:
					num2 = 2;
					text = "UPDATE " + MysqlConn.RD_name + "_nums SET eday = " + Conversions.ToString(DateAndTime.Today.Day) + " , emonth = " + Conversions.ToString(DateAndTime.Today.Month) + " , cli_name = '" + MysqlConn.Client_Reg_Name + "' ";
					goto IL_007e;
					IL_00bd:
					num2 = 5;
					text = text + " where mob_number = '" + Mob_number_to_save + "' ";
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 6;
				objDataRemote.DatabaseCommand(text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 270;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void AddToRemoteDB_Number(string Mob_number_to_save)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num2 = 2;
					if (Operators.CompareString(MysqlConn.RD_name, "NO", TextCompare: false) == 0)
					{
						goto end_IL_0001;
					}
					if (Operators.CompareString(txtWebSign.Text, "DEL", TextCompare: false) == 0)
					{
						objDataRemote.DatabaseCommand("DELETE FROM  " + MysqlConn.RD_name + "_nums where mob_number = '" + Mob_number_to_save + "'");
					}
					else if (Operators.CompareString(txtWebSign.Text, "ADD", TextCompare: false) == 0)
					{
						objDataTabletemp = objDataRemote.QueryDatabase("SELECT * FROM " + MysqlConn.RD_name + "_nums where mob_number = '" + Mob_number_to_save + "'");
						if (objDataTabletemp.Rows.Count > 0)
						{
							UpdateNumberDataToRobot(Mob_number_to_save);
						}
						else
						{
							AddNumberToRobot(Mob_number_to_save);
						}
					}
					goto end_IL_0001;
				case 312:
					num = -1;
					switch (num2)
					{
					case 2:
						txtInfo.Text = "Check Internet\r\n" + txtInfo.Text;
						goto end_IL_0001;
					}
					break;
				}
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 312;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void AddToRemoteDB_Transfer(string Mob_number_to_save, string Rec_number_to_save, double Value_to_save)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num2 = 2;
					if (Operators.CompareString(MysqlConn.RD_name, "NO", TextCompare: false) != 0)
					{
						objDataRemote.DatabaseCommand("INSERT INTO  " + MysqlConn.RD_name + "_transfer(dev_name,mob_number,rec_number,trans_value) Values ('" + MysqlConn.Client_Reg_Name + "', '" + Mob_number_to_save + "', '" + Rec_number_to_save + "',  " + Conversions.ToString(Value_to_save) + "  )");
					}
					goto end_IL_0001;
				case 183:
					num = -1;
					switch (num2)
					{
					case 2:
						txtInfo.Text = "Check Internet\r\n" + txtInfo.Text;
						goto end_IL_0001;
					}
					break;
				}
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 183;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string GetGiftCountForThisNumber(string eeTel)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		string result = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 518:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0026;
						case 4:
							goto IL_0033;
						case 5:
							goto IL_0075;
						case 6:
							goto IL_007d;
						case 7:
							goto IL_0098;
						case 9:
							goto IL_00e2;
						case 8:
						case 10:
						case 11:
							goto IL_00ed;
						case 12:
							goto IL_0130;
						case 13:
							goto IL_0139;
						case 14:
							goto IL_0155;
						case 16:
							goto IL_018b;
						case 15:
						case 17:
						case 18:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 19:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0139:
					num2 = 13;
					if (objDataTabletemp.Rows.Count > 0)
					{
						goto IL_0155;
					}
					goto IL_018b;
					IL_0155:
					num2 = 14;
					text = Conversions.ToString(Operators.ConcatenateObject(text + "-", objDataTabletemp.Rows[0][0]));
					break;
					IL_0130:
					num2 = 12;
					Application.DoEvents();
					goto IL_0139;
					IL_018b:
					num2 = 16;
					text += "-0";
					break;
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(MysqlConn.RD_name, "NO", TextCompare: false) == 0)
					{
						goto IL_0026;
					}
					goto IL_0033;
					IL_0026:
					num2 = 3;
					result = "0";
					goto end_IL_0001_3;
					IL_0033:
					num2 = 4;
					objDataTabletemp = objDataRemote.QueryDatabase("SELECT sum(trans_value) , count(trans_value)  FROM " + MysqlConn.RD_name + "_topup  where  mob_number = '" + eeTel + "'");
					goto IL_0075;
					IL_0075:
					num2 = 5;
					Application.DoEvents();
					goto IL_007d;
					IL_007d:
					num2 = 6;
					if (objDataTabletemp.Rows.Count > 0)
					{
						goto IL_0098;
					}
					goto IL_00e2;
					IL_0098:
					num2 = 7;
					text = Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(objDataTabletemp.Rows[0][1], "-"), objDataTabletemp.Rows[0][0]));
					goto IL_00ed;
					IL_00e2:
					num2 = 9;
					text = "0-0";
					goto IL_00ed;
					IL_00ed:
					num2 = 11;
					objDataTabletemp = objDataRemote.QueryDatabase("SELECT  count(mob_number)  FROM " + MysqlConn.RD_name + "_transfer  where  mob_number = '" + eeTel + "'");
					goto IL_0130;
					end_IL_0001_2:
					break;
				}
				num2 = 18;
				result = text;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 518;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void AddToRemoteDB_TOPUP(string Mob_number_to_save, string Rec_number_to_save, double Value_to_save)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num2 = 2;
					if (Operators.CompareString(MysqlConn.RD_name, "NO", TextCompare: false) != 0)
					{
						objDataRemote.DatabaseCommand("INSERT INTO  " + MysqlConn.RD_name + "_topup(dev_name,mob_number,rec_number,Operator\t,trans_value) Values ('" + MysqlConn.Client_Reg_Name + "', '" + Mob_number_to_save + "', '" + Rec_number_to_save + "', '" + Mob_number_to_save.Substring(0, 3) + "',  " + Conversions.ToString(Value_to_save) + "  )");
					}
					goto end_IL_0001;
				case 204:
					num = -1;
					switch (num2)
					{
					case 2:
						txtInfo.Text = "Check Internet\r\n" + txtInfo.Text;
						goto end_IL_0001;
					}
					break;
				}
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 204;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void frmUssd_Load(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1217:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0014;
						case 4:
							goto IL_001d;
						case 5:
							goto IL_0026;
						case 6:
							goto IL_0039;
						case 7:
							goto IL_0042;
						case 8:
							goto IL_004b;
						case 9:
							goto IL_006f;
						case 10:
							goto IL_0098;
						case 11:
							goto IL_00a2;
						case 12:
							goto IL_00ac;
						case 13:
							goto IL_00d4;
						case 14:
							goto IL_00e1;
						case 15:
							goto IL_00f1;
						case 16:
							goto IL_0101;
						case 17:
							goto IL_0111;
						case 18:
							goto IL_0121;
						case 19:
							goto IL_0131;
						case 20:
							goto IL_0141;
						case 21:
							goto IL_0151;
						case 22:
							goto IL_0161;
						case 23:
							goto IL_0171;
						case 24:
							goto IL_0181;
						case 25:
							goto IL_0191;
						case 26:
							goto IL_01a1;
						case 27:
							goto IL_01b1;
						case 28:
							goto IL_01c1;
						case 29:
							goto IL_01d1;
						case 30:
							goto IL_01e1;
						case 31:
							goto IL_01f1;
						case 32:
							goto IL_0201;
						case 33:
							goto IL_0253;
						case 34:
							goto IL_0263;
						case 35:
							goto IL_0273;
						case 36:
							goto IL_0285;
						case 38:
						case 39:
							goto IL_029c;
						case 40:
							goto IL_02b4;
						case 41:
							goto IL_02dd;
						case 42:
							goto IL_02ed;
						case 43:
							goto IL_02fd;
						case 44:
							goto IL_030d;
						case 45:
							goto IL_031d;
						case 46:
							goto IL_032d;
						case 47:
							goto IL_033d;
						case 49:
						case 50:
							goto IL_0351;
						case 51:
							goto IL_0366;
						case 52:
							goto IL_038f;
						case 53:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 37:
						case 48:
						case 54:
						case 55:
						case 56:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0351:
					num2 = 50;
					if (MysqlConn.MainProgLic > 50)
					{
						goto end_IL_0001_3;
					}
					goto IL_0366;
					IL_0366:
					num2 = 51;
					MainTC.TabPages.Remove(MainTC.TabPages["tabTayer"]);
					goto IL_038f;
					IL_033d:
					num2 = 47;
					gboxSms.Visible = false;
					goto end_IL_0001_3;
					IL_038f:
					num2 = 52;
					MainTC.TabPages.Remove(MainTC.TabPages["tabEzoo"]);
					break;
					IL_000b:
					num2 = 2;
					fawrySms = false;
					goto IL_0014;
					IL_0014:
					num2 = 3;
					Reset();
					goto IL_001d;
					IL_001d:
					num2 = 4;
					DBconnRemote();
					goto IL_0026;
					IL_0026:
					num2 = 5;
					btnCancelTrans.BackColor = Color.PaleGreen;
					goto IL_0039;
					IL_0039:
					num2 = 6;
					GetEvalues();
					goto IL_0042;
					IL_0042:
					num2 = 7;
					GetDataFromRegNN();
					goto IL_004b;
					IL_004b:
					num2 = 8;
					txtWorkID.Text = DateAndTime.Today.Month.ToString();
					goto IL_006f;
					IL_006f:
					num2 = 9;
					txtOtransTN.Text = DateTime.Today.Date.ToString("ddMMyyyy");
					goto IL_0098;
					IL_0098:
					num2 = 10;
					fillBoxsWithSrvName();
					goto IL_00a2;
					IL_00a2:
					num2 = 11;
					cancelAllTheProcess = false;
					goto IL_00ac;
					IL_00ac:
					num2 = 12;
					Text = "ZTE " + MysqlConn.Maintitletxt + "Step " + Conversions.ToString(MysqlConn.MainProgLic);
					goto IL_00d4;
					IL_00d4:
					num2 = 13;
					MysqlConn.OpenDate = DateTime.Now;
					goto IL_00e1;
					IL_00e1:
					num2 = 14;
					chkSafeMode.Enabled = true;
					goto IL_00f1;
					IL_00f1:
					num2 = 15;
					btnInvertSelection.Enabled = true;
					goto IL_0101;
					IL_0101:
					num2 = 16;
					tab365.Enabled = true;
					goto IL_0111;
					IL_0111:
					num2 = 17;
					tab365_2.Enabled = true;
					goto IL_0121;
					IL_0121:
					num2 = 18;
					chbeep.Enabled = true;
					goto IL_0131;
					IL_0131:
					num2 = 19;
					ckUse910.Visible = true;
					goto IL_0141;
					IL_0141:
					num2 = 20;
					chkUse365inprcss.Enabled = true;
					goto IL_0151;
					IL_0151:
					num2 = 21;
					chkNoCharge50.Visible = true;
					goto IL_0161;
					IL_0161:
					num2 = 22;
					chkTransGiftAutoSpVal365.Visible = true;
					goto IL_0171;
					IL_0171:
					num2 = 23;
					txtLoopFSD365Gft.Visible = true;
					goto IL_0181;
					IL_0181:
					num2 = 24;
					txtLoopSSD365Gft.Visible = true;
					goto IL_0191;
					IL_0191:
					num2 = 25;
					chkUse365inprcss10.Enabled = true;
					goto IL_01a1;
					IL_01a1:
					num2 = 26;
					lblChargeDone1.Visible = true;
					goto IL_01b1;
					IL_01b1:
					num2 = 27;
					lblChargeDone2.Visible = true;
					goto IL_01c1;
					IL_01c1:
					num2 = 28;
					lblChargeDone3.Visible = true;
					goto IL_01d1;
					IL_01d1:
					num2 = 29;
					lblChargeDone4.Visible = true;
					goto IL_01e1;
					IL_01e1:
					num2 = 30;
					lblChargeDone5.Visible = true;
					goto IL_01f1;
					IL_01f1:
					num2 = 31;
					lblChargeDone6.Visible = true;
					goto IL_0201;
					IL_0201:
					num2 = 32;
					txtRet02.Text = "//" + MysqlConn.Cli_sn + "//" + MysqlConn.Client_Reg_Name + "//" + MysqlConn.RD_name + "//";
					goto IL_0253;
					IL_0253:
					num2 = 33;
					gboxLock.Left = 0;
					goto IL_0263;
					IL_0263:
					num2 = 34;
					gboxLock.Top = 0;
					goto IL_0273;
					IL_0273:
					num2 = 35;
					if (MysqlConn.MainProgLic == 100)
					{
						goto IL_0285;
					}
					goto IL_029c;
					IL_0285:
					num2 = 36;
					gboxLock.Visible = false;
					goto end_IL_0001_3;
					IL_029c:
					num2 = 39;
					if (MysqlConn.MainProgLic <= 14)
					{
						goto IL_02b4;
					}
					goto IL_0351;
					IL_02b4:
					num2 = 40;
					MainTC.TabPages.Remove(MainTC.TabPages["tabEzoo"]);
					goto IL_02dd;
					IL_02dd:
					num2 = 41;
					btnTrans100.Visible = false;
					goto IL_02ed;
					IL_02ed:
					num2 = 42;
					ckbtnTrans100.Visible = false;
					goto IL_02fd;
					IL_02fd:
					num2 = 43;
					btnTrans1000.Visible = false;
					goto IL_030d;
					IL_030d:
					num2 = 44;
					ckbtnTrans1000.Visible = false;
					goto IL_031d;
					IL_031d:
					num2 = 45;
					btnTranstop.Visible = false;
					goto IL_032d;
					IL_032d:
					num2 = 46;
					ckbtnTranstop.Visible = false;
					goto IL_033d;
					end_IL_0001_2:
					break;
				}
				num2 = 53;
				gboxSms.Visible = false;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1217;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnRefreshEmpty_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 181:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0031;
						case 5:
							goto IL_0039;
						case 6:
							goto IL_0042;
						case 7:
							goto IL_004b;
						case 8:
							goto IL_0054;
						case 9:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 10:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0042:
					num2 = 6;
					ReSetUssdOrderEmpty();
					goto IL_004b;
					IL_004b:
					num2 = 7;
					EnableCntl();
					goto IL_0054;
					IL_0039:
					num2 = 5;
					DisableCntl();
					goto IL_0042;
					IL_0054:
					num2 = 8;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "Refresh";
					goto IL_0031;
					IL_0031:
					num2 = 4;
					Application.DoEvents();
					goto IL_0039;
					end_IL_0001_2:
					break;
				}
				num2 = 9;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 181;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnGetOut_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 73:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					GetDataFromRegNN();
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 3;
				lblProgress.Text = "Get data - Done";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 73;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnSaveOut_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 73:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					SetDataInRegVCash();
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 3;
				lblProgress.Text = "Save data - Done";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 73;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void txtReplyBy_TextChanged(object sender, EventArgs e)
	{
		if (Conversion.Val(txtReplyBy.Text) <= 0.0)
		{
			txtReplyBy.Text = "1";
		}
	}

	private void btnReplyBy2_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 184:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0041;
						case 5:
							goto IL_004a;
						case 6:
							goto IL_0053;
						case 7:
							goto IL_005c;
						case 8:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 9:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_004a:
					num2 = 5;
					SetUssdOrderBy2();
					goto IL_0053;
					IL_0053:
					num2 = 6;
					EnableCntl();
					goto IL_005c;
					IL_0041:
					num2 = 4;
					DisableCntl();
					goto IL_004a;
					IL_005c:
					num2 = 7;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "Reply By " + txtReplyBy2.Text;
					goto IL_0041;
					end_IL_0001_2:
					break;
				}
				num2 = 8;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 184;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnFawrySms_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 72:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					fawrySms = true;
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 3;
				MyProject.Forms.frmfawrysms.Show();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 72;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnNumbers2_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 3263:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 4:
						case 5:
							goto IL_00d1;
						case 6:
							goto IL_00da;
						case 7:
							goto IL_00ed;
						case 8:
							goto IL_0100;
						case 9:
							goto IL_0108;
						case 10:
							goto IL_0148;
						case 11:
							goto IL_016f;
						case 12:
							goto IL_0198;
						case 14:
							goto IL_01b2;
						case 13:
						case 15:
						case 16:
						case 17:
							goto IL_01cb;
						case 18:
							goto IL_01d4;
						case 19:
							goto IL_0214;
						case 20:
							goto IL_023b;
						case 21:
							goto IL_0264;
						case 23:
							goto IL_027e;
						case 22:
						case 24:
						case 25:
						case 26:
							goto IL_0297;
						case 27:
							goto IL_02d7;
						case 28:
							goto IL_02fe;
						case 29:
							goto IL_0327;
						case 31:
							goto IL_0341;
						case 30:
						case 32:
						case 33:
						case 34:
							goto IL_035a;
						case 35:
							goto IL_0363;
						case 36:
							goto IL_03a3;
						case 37:
							goto IL_03ca;
						case 38:
							goto IL_03f3;
						case 40:
							goto IL_040d;
						case 39:
						case 41:
						case 42:
						case 43:
							goto IL_0426;
						case 44:
							goto IL_042f;
						case 45:
							goto IL_046f;
						case 46:
							goto IL_0496;
						case 47:
							goto IL_04bf;
						case 49:
							goto IL_04d9;
						case 48:
						case 50:
						case 51:
						case 52:
							goto IL_04f2;
						case 53:
							goto IL_04fb;
						case 54:
							goto IL_053b;
						case 55:
							goto IL_0562;
						case 56:
							goto IL_058b;
						case 58:
							goto IL_05a5;
						case 57:
						case 59:
						case 60:
						case 61:
							goto IL_05be;
						case 62:
							goto IL_05c7;
						case 63:
							goto IL_05d5;
						case 64:
							goto IL_0615;
						case 65:
							goto IL_063c;
						case 66:
							goto IL_0665;
						case 68:
							goto IL_067f;
						case 67:
						case 69:
						case 70:
						case 71:
							goto IL_0698;
						case 72:
							goto IL_06d8;
						case 73:
							goto IL_06ff;
						case 74:
							goto IL_0728;
						case 76:
							goto IL_0742;
						case 75:
						case 77:
						case 78:
						case 79:
							goto IL_075b;
						case 80:
							goto IL_0764;
						case 81:
							goto IL_07a4;
						case 82:
							goto IL_07cb;
						case 83:
							goto IL_07f4;
						case 85:
							goto IL_080e;
						case 84:
						case 86:
						case 87:
						case 88:
							goto IL_0827;
						case 89:
							goto IL_0830;
						case 90:
							goto IL_0870;
						case 91:
							goto IL_0897;
						case 92:
							goto IL_08c0;
						case 94:
							goto IL_08da;
						case 93:
						case 95:
						case 96:
						case 97:
							goto IL_08f3;
						case 98:
							goto IL_0933;
						case 99:
							goto IL_095a;
						case 100:
							goto IL_0983;
						case 102:
							goto IL_099d;
						case 101:
						case 103:
						case 104:
						case 105:
							goto IL_09b6;
						case 106:
							goto IL_09bf;
						case 107:
							goto IL_09ff;
						case 108:
							goto IL_0a26;
						case 109:
							goto IL_0a4f;
						case 111:
							goto IL_0a69;
						case 110:
						case 112:
						case 113:
						case 114:
							goto IL_0a82;
						case 115:
							goto IL_0a93;
						case 116:
							goto IL_0a9d;
						case 117:
							goto IL_0ab1;
						case 118:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 3:
						case 119:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0a93:
					num2 = 115;
					EnableCntl();
					goto IL_0a9d;
					IL_0a9d:
					num2 = 116;
					lblProgress.Text = "OK";
					goto IL_0ab1;
					IL_0a82:
					num2 = 114;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_0a93;
					IL_0ab1:
					num2 = 117;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0))
					{
						goto end_IL_0001_3;
					}
					goto IL_00d1;
					IL_00d1:
					num2 = 5;
					DisableCntl();
					goto IL_00da;
					IL_00da:
					num2 = 6;
					lblProgress.BackColor = Color.Red;
					goto IL_00ed;
					IL_00ed:
					num2 = 7;
					lblProgress.Text = "Geting Missed Numbers 2";
					goto IL_0100;
					IL_0100:
					num2 = 8;
					Application.DoEvents();
					goto IL_0108;
					IL_0108:
					num2 = 9;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & (lblPort1.ForeColor != Color.White))
					{
						goto IL_0148;
					}
					goto IL_01cb;
					IL_0148:
					num2 = 10;
					if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_016f;
					}
					goto IL_01b2;
					IL_016f:
					num2 = 11;
					if (Operators.CompareString(lblNum1.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_0198;
					}
					goto IL_01cb;
					IL_0198:
					num2 = 12;
					SetNumberForIndex(lblPort1, lblNum1);
					goto IL_01cb;
					IL_01b2:
					num2 = 14;
					SetNumberForIndex(lblPort1, lblNum1);
					goto IL_01cb;
					IL_01cb:
					num2 = 17;
					Application.DoEvents();
					goto IL_01d4;
					IL_01d4:
					num2 = 18;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & (lblPort2.ForeColor != Color.White))
					{
						goto IL_0214;
					}
					goto IL_0297;
					IL_0214:
					num2 = 19;
					if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_023b;
					}
					goto IL_027e;
					IL_023b:
					num2 = 20;
					if (Operators.CompareString(lblNum2.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_0264;
					}
					goto IL_0297;
					IL_0264:
					num2 = 21;
					SetNumberForIndex(lblPort2, lblNum2);
					goto IL_0297;
					IL_027e:
					num2 = 23;
					SetNumberForIndex(lblPort2, lblNum2);
					goto IL_0297;
					IL_0297:
					num2 = 26;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & (lblPort3.ForeColor != Color.White))
					{
						goto IL_02d7;
					}
					goto IL_035a;
					IL_02d7:
					num2 = 27;
					if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_02fe;
					}
					goto IL_0341;
					IL_02fe:
					num2 = 28;
					if (Operators.CompareString(lblNum3.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_0327;
					}
					goto IL_035a;
					IL_0327:
					num2 = 29;
					SetNumberForIndex(lblPort3, lblNum3);
					goto IL_035a;
					IL_0341:
					num2 = 31;
					SetNumberForIndex(lblPort3, lblNum3);
					goto IL_035a;
					IL_035a:
					num2 = 34;
					Application.DoEvents();
					goto IL_0363;
					IL_0363:
					num2 = 35;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & (lblPort4.ForeColor != Color.White))
					{
						goto IL_03a3;
					}
					goto IL_0426;
					IL_03a3:
					num2 = 36;
					if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_03ca;
					}
					goto IL_040d;
					IL_03ca:
					num2 = 37;
					if (Operators.CompareString(lblNum4.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_03f3;
					}
					goto IL_0426;
					IL_03f3:
					num2 = 38;
					SetNumberForIndex(lblPort4, lblNum4);
					goto IL_0426;
					IL_040d:
					num2 = 40;
					SetNumberForIndex(lblPort4, lblNum4);
					goto IL_0426;
					IL_0426:
					num2 = 43;
					Application.DoEvents();
					goto IL_042f;
					IL_042f:
					num2 = 44;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & (lblPort5.ForeColor != Color.White))
					{
						goto IL_046f;
					}
					goto IL_04f2;
					IL_046f:
					num2 = 45;
					if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0496;
					}
					goto IL_04d9;
					IL_0496:
					num2 = 46;
					if (Operators.CompareString(lblNum5.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_04bf;
					}
					goto IL_04f2;
					IL_04bf:
					num2 = 47;
					SetNumberForIndex(lblPort5, lblNum5);
					goto IL_04f2;
					IL_04d9:
					num2 = 49;
					SetNumberForIndex(lblPort5, lblNum5);
					goto IL_04f2;
					IL_04f2:
					num2 = 52;
					Application.DoEvents();
					goto IL_04fb;
					IL_04fb:
					num2 = 53;
					if ((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & (lblPort6.ForeColor != Color.White))
					{
						goto IL_053b;
					}
					goto IL_05be;
					IL_053b:
					num2 = 54;
					if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0562;
					}
					goto IL_05a5;
					IL_0562:
					num2 = 55;
					if (Operators.CompareString(lblNum6.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_058b;
					}
					goto IL_05be;
					IL_058b:
					num2 = 56;
					SetNumberForIndex(lblPort6, lblNum6);
					goto IL_05be;
					IL_05a5:
					num2 = 58;
					SetNumberForIndex(lblPort6, lblNum6);
					goto IL_05be;
					IL_05be:
					num2 = 61;
					Application.DoEvents();
					goto IL_05c7;
					IL_05c7:
					num2 = 62;
					Thread.Sleep(2000);
					goto IL_05d5;
					IL_05d5:
					num2 = 63;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & (lblPort1.ForeColor != Color.White))
					{
						goto IL_0615;
					}
					goto IL_0698;
					IL_0615:
					num2 = 64;
					if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_063c;
					}
					goto IL_067f;
					IL_063c:
					num2 = 65;
					if (Operators.CompareString(lblNum1.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_0665;
					}
					goto IL_0698;
					IL_0665:
					num2 = 66;
					GetNumberForIndex(lblPort1, lblNum1);
					goto IL_0698;
					IL_067f:
					num2 = 68;
					GetNumberForIndex(lblPort1, lblNum1);
					goto IL_0698;
					IL_0698:
					num2 = 71;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & (lblPort2.ForeColor != Color.White))
					{
						goto IL_06d8;
					}
					goto IL_075b;
					IL_06d8:
					num2 = 72;
					if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_06ff;
					}
					goto IL_0742;
					IL_06ff:
					num2 = 73;
					if (Operators.CompareString(lblNum2.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_0728;
					}
					goto IL_075b;
					IL_0728:
					num2 = 74;
					GetNumberForIndex(lblPort2, lblNum2);
					goto IL_075b;
					IL_0742:
					num2 = 76;
					GetNumberForIndex(lblPort2, lblNum2);
					goto IL_075b;
					IL_075b:
					num2 = 79;
					Application.DoEvents();
					goto IL_0764;
					IL_0764:
					num2 = 80;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & (lblPort3.ForeColor != Color.White))
					{
						goto IL_07a4;
					}
					goto IL_0827;
					IL_07a4:
					num2 = 81;
					if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_07cb;
					}
					goto IL_080e;
					IL_07cb:
					num2 = 82;
					if (Operators.CompareString(lblNum3.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_07f4;
					}
					goto IL_0827;
					IL_07f4:
					num2 = 83;
					GetNumberForIndex(lblPort3, lblNum3);
					goto IL_0827;
					IL_080e:
					num2 = 85;
					GetNumberForIndex(lblPort3, lblNum3);
					goto IL_0827;
					IL_0827:
					num2 = 88;
					Application.DoEvents();
					goto IL_0830;
					IL_0830:
					num2 = 89;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & (lblPort4.ForeColor != Color.White))
					{
						goto IL_0870;
					}
					goto IL_08f3;
					IL_0870:
					num2 = 90;
					if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0897;
					}
					goto IL_08da;
					IL_0897:
					num2 = 91;
					if (Operators.CompareString(lblNum4.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_08c0;
					}
					goto IL_08f3;
					IL_08c0:
					num2 = 92;
					GetNumberForIndex(lblPort4, lblNum4);
					goto IL_08f3;
					IL_08da:
					num2 = 94;
					GetNumberForIndex(lblPort4, lblNum4);
					goto IL_08f3;
					IL_08f3:
					num2 = 97;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & (lblPort5.ForeColor != Color.White))
					{
						goto IL_0933;
					}
					goto IL_09b6;
					IL_0933:
					num2 = 98;
					if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_095a;
					}
					goto IL_099d;
					IL_095a:
					num2 = 99;
					if (Operators.CompareString(lblNum5.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_0983;
					}
					goto IL_09b6;
					IL_0983:
					num2 = 100;
					GetNumberForIndex(lblPort5, lblNum5);
					goto IL_09b6;
					IL_099d:
					num2 = 102;
					GetNumberForIndex(lblPort5, lblNum5);
					goto IL_09b6;
					IL_09b6:
					num2 = 105;
					Application.DoEvents();
					goto IL_09bf;
					IL_09bf:
					num2 = 106;
					if ((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & (lblPort6.ForeColor != Color.White))
					{
						goto IL_09ff;
					}
					goto IL_0a82;
					IL_09ff:
					num2 = 107;
					if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0a26;
					}
					goto IL_0a69;
					IL_0a26:
					num2 = 108;
					if (Operators.CompareString(lblNum6.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_0a4f;
					}
					goto IL_0a82;
					IL_0a4f:
					num2 = 109;
					GetNumberForIndex(lblPort6, lblNum6);
					goto IL_0a82;
					IL_0a69:
					num2 = 111;
					GetNumberForIndex(lblPort6, lblNum6);
					goto IL_0a82;
					end_IL_0001_2:
					break;
				}
				num2 = 118;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 3263;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void lblNum1_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 101:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					Clipboard.Clear();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					if (lblNum1.Text.Length <= 5)
					{
						goto end_IL_0001_3;
					}
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 4;
				Clipboard.SetText(lblNum1.Text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 101;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void lblNum2_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 101:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					Clipboard.Clear();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					if (lblNum2.Text.Length <= 5)
					{
						goto end_IL_0001_3;
					}
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 4;
				Clipboard.SetText(lblNum2.Text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 101;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void lblNum3_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 101:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					Clipboard.Clear();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					if (lblNum3.Text.Length <= 5)
					{
						goto end_IL_0001_3;
					}
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 4;
				Clipboard.SetText(lblNum3.Text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 101;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void lblNum4_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 101:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					Clipboard.Clear();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					if (lblNum4.Text.Length <= 5)
					{
						goto end_IL_0001_3;
					}
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 4;
				Clipboard.SetText(lblNum4.Text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 101;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void lblNum5_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 101:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					Clipboard.Clear();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					if (lblNum5.Text.Length <= 5)
					{
						goto end_IL_0001_3;
					}
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 4;
				Clipboard.SetText(lblNum5.Text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 101;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void lblNum6_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 101:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					Clipboard.Clear();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					if (lblNum6.Text.Length <= 5)
					{
						goto end_IL_0001_3;
					}
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 4;
				Clipboard.SetText(lblNum6.Text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 101;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnReplyBy3_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 184:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0041;
						case 5:
							goto IL_004a;
						case 6:
							goto IL_0053;
						case 7:
							goto IL_005c;
						case 8:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 9:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_004a:
					num2 = 5;
					SetUssdOrderBy3();
					goto IL_0053;
					IL_0053:
					num2 = 6;
					EnableCntl();
					goto IL_005c;
					IL_0041:
					num2 = 4;
					DisableCntl();
					goto IL_004a;
					IL_005c:
					num2 = 7;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "Reply By  " + txtReplyBy3.Text;
					goto IL_0041;
					end_IL_0001_2:
					break;
				}
				num2 = 8;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 184;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnAddCards_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 112:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0019;
						case 5:
						case 6:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 7:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					if (MysqlConn.MainProgLic >= 2)
					{
						break;
					}
					goto IL_0019;
					IL_0019:
					num2 = 3;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					end_IL_0001_2:
					break;
				}
				num2 = 6;
				MyProject.Forms.frmAddCards.Show();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 112;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnApplyCards_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1125:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0019;
						case 5:
						case 6:
							goto IL_0033;
						case 7:
							goto IL_0046;
						case 8:
							goto IL_0059;
						case 9:
							goto IL_006c;
						case 10:
							goto IL_0080;
						case 11:
							goto IL_0094;
						case 12:
							goto IL_00a8;
						case 13:
							goto IL_00c9;
						case 15:
						case 16:
							goto IL_00e0;
						case 17:
							goto IL_017e;
						case 19:
						case 20:
							goto IL_0195;
						case 21:
							goto IL_01ac;
						case 23:
						case 24:
							goto IL_01c3;
						case 25:
							goto IL_01e7;
						case 27:
						case 28:
							goto IL_01fe;
						case 29:
							goto IL_0225;
						case 31:
						case 32:
							goto IL_023c;
						case 33:
							goto IL_0246;
						case 34:
							goto IL_025a;
						case 35:
							goto IL_026e;
						case 36:
							goto IL_0278;
						case 37:
						case 43:
							goto IL_028d;
						case 38:
							goto IL_02bb;
						case 39:
							goto IL_02c5;
						case 40:
							goto IL_02d3;
						case 41:
							goto IL_02dd;
						case 42:
							goto IL_02e6;
						case 44:
						case 45:
							goto IL_0318;
						case 46:
							goto IL_0322;
						case 47:
							goto IL_0336;
						case 48:
							goto IL_034a;
						case 49:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 14:
						case 18:
						case 22:
						case 26:
						case 30:
						case 50:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0322:
					num2 = 46;
					lblProgress.BackColor = Color.LimeGreen;
					goto IL_0336;
					IL_0336:
					num2 = 47;
					lblProgress.Text = "OK";
					goto IL_034a;
					IL_0318:
					num2 = 45;
					EnableCntl();
					goto IL_0322;
					IL_034a:
					num2 = 48;
					if (!(Conversion.Val(cmbEvalue.Text) > 0.0))
					{
						goto end_IL_0001_3;
					}
					break;
					IL_000b:
					num2 = 2;
					if (MysqlConn.MainProgLic < 2)
					{
						goto IL_0019;
					}
					goto IL_0033;
					IL_0019:
					num2 = 3;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0033:
					num2 = 6;
					lblCard1.Text = "";
					goto IL_0046;
					IL_0046:
					num2 = 7;
					lblCard2.Text = "";
					goto IL_0059;
					IL_0059:
					num2 = 8;
					lblCard3.Text = "";
					goto IL_006c;
					IL_006c:
					num2 = 9;
					lblCard4.Text = "";
					goto IL_0080;
					IL_0080:
					num2 = 10;
					lblCard5.Text = "";
					goto IL_0094;
					IL_0094:
					num2 = 11;
					lblCard6.Text = "";
					goto IL_00a8;
					IL_00a8:
					num2 = 12;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_00c9;
					}
					goto IL_00e0;
					IL_00c9:
					num2 = 13;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_00e0:
					num2 = 16;
					if ((lblNum1.Text.Trim().Length == 0) & (lblNum2.Text.Trim().Length == 0) & (lblNum3.Text.Trim().Length == 0) & (lblNum4.Text.Trim().Length == 0) & (lblNum5.Text.Trim().Length == 0) & (lblNum6.Text.Trim().Length == 0))
					{
						goto IL_017e;
					}
					goto IL_0195;
					IL_017e:
					num2 = 17;
					Interaction.MsgBox("قم بقراءة الخطوط اولا");
					goto end_IL_0001_3;
					IL_0195:
					num2 = 20;
					if (!ckCards.Checked)
					{
						goto IL_01ac;
					}
					goto IL_01c3;
					IL_01ac:
					num2 = 21;
					Interaction.MsgBox("قم بتحديد امان الشحن من اسفل");
					goto end_IL_0001_3;
					IL_01c3:
					num2 = 24;
					if (Conversion.Val(lblCardsQty.Text) < 1.0)
					{
						goto IL_01e7;
					}
					goto IL_01fe;
					IL_01e7:
					num2 = 25;
					Interaction.MsgBox("عدد الكروت اقل من 1");
					goto end_IL_0001_3;
					IL_01fe:
					num2 = 28;
					if (Conversion.Val(cmbEvalue.Text) <= 0.0)
					{
						goto IL_0225;
					}
					goto IL_023c;
					IL_0225:
					num2 = 29;
					Interaction.MsgBox("حدد فئة الكارت اولا");
					goto end_IL_0001_3;
					IL_023c:
					num2 = 32;
					fillBoxsWithCards();
					goto IL_0246;
					IL_0246:
					num2 = 33;
					lblProgress.BackColor = Color.Red;
					goto IL_025a;
					IL_025a:
					num2 = 34;
					lblProgress.Text = "شحن ";
					goto IL_026e;
					IL_026e:
					num2 = 35;
					DisableCntl();
					goto IL_0278;
					IL_0278:
					num2 = 36;
					txtLoopS.Text = "0";
					goto IL_028d;
					IL_028d:
					num2 = 37;
					txtLoopS.Text = Conversions.ToString(Conversion.Val(txtLoopS.Text) + 1.0);
					goto IL_02bb;
					IL_02bb:
					num2 = 38;
					SetUssdOrderCharge();
					goto IL_02c5;
					IL_02c5:
					num2 = 39;
					Thread.Sleep(5000);
					goto IL_02d3;
					IL_02d3:
					num2 = 40;
					ReturnRead();
					goto IL_02dd;
					IL_02dd:
					num2 = 41;
					Application.DoEvents();
					goto IL_02e6;
					IL_02e6:
					num2 = 42;
					if (Conversion.Val(txtLoopS.Text) < Conversion.Val(txtLoopF.Text))
					{
						goto IL_028d;
					}
					goto IL_0318;
					end_IL_0001_2:
					break;
				}
				num2 = 49;
				GetEvaluesForVal(Conversions.ToInteger(cmbEvalue.Text));
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1125;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void cmbEvalue_SelectedIndexChanged(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					break;
				case 66:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 3:
							goto end_IL_0001_3;
						}
						goto default;
					}
					end_IL_0001_2:
					break;
				}
				num2 = 2;
				GetEvaluesForVal(Conversions.ToInteger(cmbEvalue.Text));
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 66;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnNumbers3_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 3276:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 4:
						case 5:
							goto IL_00d1;
						case 6:
							goto IL_00da;
						case 7:
							goto IL_00e2;
						case 8:
							goto IL_00f5;
						case 9:
							goto IL_0108;
						case 10:
							goto IL_0111;
						case 11:
							goto IL_0151;
						case 12:
							goto IL_0178;
						case 13:
							goto IL_01a1;
						case 15:
							goto IL_01bb;
						case 14:
						case 16:
						case 17:
						case 18:
							goto IL_01d4;
						case 19:
							goto IL_01dd;
						case 20:
							goto IL_021d;
						case 21:
							goto IL_0244;
						case 22:
							goto IL_026d;
						case 24:
							goto IL_0287;
						case 23:
						case 25:
						case 26:
						case 27:
							goto IL_02a0;
						case 28:
							goto IL_02e0;
						case 29:
							goto IL_0307;
						case 30:
							goto IL_0330;
						case 32:
							goto IL_034a;
						case 31:
						case 33:
						case 34:
						case 35:
							goto IL_0363;
						case 36:
							goto IL_036c;
						case 37:
							goto IL_03ac;
						case 38:
							goto IL_03d3;
						case 39:
							goto IL_03fc;
						case 41:
							goto IL_0416;
						case 40:
						case 42:
						case 43:
						case 44:
							goto IL_042f;
						case 45:
							goto IL_0438;
						case 46:
							goto IL_0478;
						case 47:
							goto IL_049f;
						case 48:
							goto IL_04c8;
						case 50:
							goto IL_04e2;
						case 49:
						case 51:
						case 52:
						case 53:
							goto IL_04fb;
						case 54:
							goto IL_0504;
						case 55:
							goto IL_0544;
						case 56:
							goto IL_056b;
						case 57:
							goto IL_0594;
						case 59:
							goto IL_05ae;
						case 58:
						case 60:
						case 61:
						case 62:
							goto IL_05c7;
						case 63:
							goto IL_05d0;
						case 64:
							goto IL_05de;
						case 65:
							goto IL_061e;
						case 66:
							goto IL_0645;
						case 67:
							goto IL_066e;
						case 69:
							goto IL_0688;
						case 68:
						case 70:
						case 71:
						case 72:
							goto IL_06a1;
						case 73:
							goto IL_06e1;
						case 74:
							goto IL_0708;
						case 75:
							goto IL_0731;
						case 77:
							goto IL_074b;
						case 76:
						case 78:
						case 79:
						case 80:
							goto IL_0764;
						case 81:
							goto IL_076d;
						case 82:
							goto IL_07ad;
						case 83:
							goto IL_07d4;
						case 84:
							goto IL_07fd;
						case 86:
							goto IL_0817;
						case 85:
						case 87:
						case 88:
						case 89:
							goto IL_0830;
						case 90:
							goto IL_0839;
						case 91:
							goto IL_0879;
						case 92:
							goto IL_08a0;
						case 93:
							goto IL_08c9;
						case 95:
							goto IL_08e3;
						case 94:
						case 96:
						case 97:
						case 98:
							goto IL_08fc;
						case 99:
							goto IL_093c;
						case 100:
							goto IL_0963;
						case 101:
							goto IL_098c;
						case 103:
							goto IL_09a6;
						case 102:
						case 104:
						case 105:
						case 106:
							goto IL_09bf;
						case 107:
							goto IL_09c8;
						case 108:
							goto IL_0a08;
						case 109:
							goto IL_0a2f;
						case 110:
							goto IL_0a58;
						case 112:
							goto IL_0a72;
						case 111:
						case 113:
						case 114:
						case 115:
							goto IL_0a8b;
						case 116:
							goto IL_0a9c;
						case 117:
							goto IL_0aa6;
						case 118:
							goto IL_0aba;
						case 119:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 3:
						case 120:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0a9c:
					num2 = 116;
					EnableCntl();
					goto IL_0aa6;
					IL_0aa6:
					num2 = 117;
					lblProgress.Text = "OK";
					goto IL_0aba;
					IL_0a8b:
					num2 = 115;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_0a9c;
					IL_0aba:
					num2 = 118;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0))
					{
						goto end_IL_0001_3;
					}
					goto IL_00d1;
					IL_00d1:
					num2 = 5;
					DisableCntl();
					goto IL_00da;
					IL_00da:
					num2 = 6;
					Application.DoEvents();
					goto IL_00e2;
					IL_00e2:
					num2 = 7;
					lblProgress.BackColor = Color.Red;
					goto IL_00f5;
					IL_00f5:
					num2 = 8;
					lblProgress.Text = "Geting Missed Numbers 3";
					goto IL_0108;
					IL_0108:
					num2 = 9;
					Application.DoEvents();
					goto IL_0111;
					IL_0111:
					num2 = 10;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & (lblPort1.ForeColor != Color.White))
					{
						goto IL_0151;
					}
					goto IL_01d4;
					IL_0151:
					num2 = 11;
					if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0178;
					}
					goto IL_01bb;
					IL_0178:
					num2 = 12;
					if (Operators.CompareString(lblNum1.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_01a1;
					}
					goto IL_01d4;
					IL_01a1:
					num2 = 13;
					SetNumberForIndexOrng(lblPort1, lblNum1);
					goto IL_01d4;
					IL_01bb:
					num2 = 15;
					SetNumberForIndexOrng(lblPort1, lblNum1);
					goto IL_01d4;
					IL_01d4:
					num2 = 18;
					Application.DoEvents();
					goto IL_01dd;
					IL_01dd:
					num2 = 19;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & (lblPort2.ForeColor != Color.White))
					{
						goto IL_021d;
					}
					goto IL_02a0;
					IL_021d:
					num2 = 20;
					if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0244;
					}
					goto IL_0287;
					IL_0244:
					num2 = 21;
					if (Operators.CompareString(lblNum2.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_026d;
					}
					goto IL_02a0;
					IL_026d:
					num2 = 22;
					SetNumberForIndexOrng(lblPort2, lblNum2);
					goto IL_02a0;
					IL_0287:
					num2 = 24;
					SetNumberForIndexOrng(lblPort2, lblNum2);
					goto IL_02a0;
					IL_02a0:
					num2 = 27;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & (lblPort3.ForeColor != Color.White))
					{
						goto IL_02e0;
					}
					goto IL_0363;
					IL_02e0:
					num2 = 28;
					if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0307;
					}
					goto IL_034a;
					IL_0307:
					num2 = 29;
					if (Operators.CompareString(lblNum3.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_0330;
					}
					goto IL_0363;
					IL_0330:
					num2 = 30;
					SetNumberForIndexOrng(lblPort3, lblNum3);
					goto IL_0363;
					IL_034a:
					num2 = 32;
					SetNumberForIndexOrng(lblPort3, lblNum3);
					goto IL_0363;
					IL_0363:
					num2 = 35;
					Application.DoEvents();
					goto IL_036c;
					IL_036c:
					num2 = 36;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & (lblPort4.ForeColor != Color.White))
					{
						goto IL_03ac;
					}
					goto IL_042f;
					IL_03ac:
					num2 = 37;
					if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_03d3;
					}
					goto IL_0416;
					IL_03d3:
					num2 = 38;
					if (Operators.CompareString(lblNum4.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_03fc;
					}
					goto IL_042f;
					IL_03fc:
					num2 = 39;
					SetNumberForIndexOrng(lblPort4, lblNum4);
					goto IL_042f;
					IL_0416:
					num2 = 41;
					SetNumberForIndexOrng(lblPort4, lblNum4);
					goto IL_042f;
					IL_042f:
					num2 = 44;
					Application.DoEvents();
					goto IL_0438;
					IL_0438:
					num2 = 45;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & (lblPort5.ForeColor != Color.White))
					{
						goto IL_0478;
					}
					goto IL_04fb;
					IL_0478:
					num2 = 46;
					if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_049f;
					}
					goto IL_04e2;
					IL_049f:
					num2 = 47;
					if (Operators.CompareString(lblNum5.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_04c8;
					}
					goto IL_04fb;
					IL_04c8:
					num2 = 48;
					SetNumberForIndexOrng(lblPort5, lblNum5);
					goto IL_04fb;
					IL_04e2:
					num2 = 50;
					SetNumberForIndexOrng(lblPort5, lblNum5);
					goto IL_04fb;
					IL_04fb:
					num2 = 53;
					Application.DoEvents();
					goto IL_0504;
					IL_0504:
					num2 = 54;
					if ((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & (lblPort6.ForeColor != Color.White))
					{
						goto IL_0544;
					}
					goto IL_05c7;
					IL_0544:
					num2 = 55;
					if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_056b;
					}
					goto IL_05ae;
					IL_056b:
					num2 = 56;
					if (Operators.CompareString(lblNum6.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_0594;
					}
					goto IL_05c7;
					IL_0594:
					num2 = 57;
					SetNumberForIndexOrng(lblPort6, lblNum6);
					goto IL_05c7;
					IL_05ae:
					num2 = 59;
					SetNumberForIndexOrng(lblPort6, lblNum6);
					goto IL_05c7;
					IL_05c7:
					num2 = 62;
					Application.DoEvents();
					goto IL_05d0;
					IL_05d0:
					num2 = 63;
					Thread.Sleep(2000);
					goto IL_05de;
					IL_05de:
					num2 = 64;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & (lblPort1.ForeColor != Color.White))
					{
						goto IL_061e;
					}
					goto IL_06a1;
					IL_061e:
					num2 = 65;
					if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0645;
					}
					goto IL_0688;
					IL_0645:
					num2 = 66;
					if (Operators.CompareString(lblNum1.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_066e;
					}
					goto IL_06a1;
					IL_066e:
					num2 = 67;
					GetNumberForIndex(lblPort1, lblNum1);
					goto IL_06a1;
					IL_0688:
					num2 = 69;
					GetNumberForIndex(lblPort1, lblNum1);
					goto IL_06a1;
					IL_06a1:
					num2 = 72;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & (lblPort2.ForeColor != Color.White))
					{
						goto IL_06e1;
					}
					goto IL_0764;
					IL_06e1:
					num2 = 73;
					if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0708;
					}
					goto IL_074b;
					IL_0708:
					num2 = 74;
					if (Operators.CompareString(lblNum2.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_0731;
					}
					goto IL_0764;
					IL_0731:
					num2 = 75;
					GetNumberForIndex(lblPort2, lblNum2);
					goto IL_0764;
					IL_074b:
					num2 = 77;
					GetNumberForIndex(lblPort2, lblNum2);
					goto IL_0764;
					IL_0764:
					num2 = 80;
					Application.DoEvents();
					goto IL_076d;
					IL_076d:
					num2 = 81;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & (lblPort3.ForeColor != Color.White))
					{
						goto IL_07ad;
					}
					goto IL_0830;
					IL_07ad:
					num2 = 82;
					if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_07d4;
					}
					goto IL_0817;
					IL_07d4:
					num2 = 83;
					if (Operators.CompareString(lblNum3.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_07fd;
					}
					goto IL_0830;
					IL_07fd:
					num2 = 84;
					GetNumberForIndex(lblPort3, lblNum3);
					goto IL_0830;
					IL_0817:
					num2 = 86;
					GetNumberForIndex(lblPort3, lblNum3);
					goto IL_0830;
					IL_0830:
					num2 = 89;
					Application.DoEvents();
					goto IL_0839;
					IL_0839:
					num2 = 90;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & (lblPort4.ForeColor != Color.White))
					{
						goto IL_0879;
					}
					goto IL_08fc;
					IL_0879:
					num2 = 91;
					if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_08a0;
					}
					goto IL_08e3;
					IL_08a0:
					num2 = 92;
					if (Operators.CompareString(lblNum4.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_08c9;
					}
					goto IL_08fc;
					IL_08c9:
					num2 = 93;
					GetNumberForIndex(lblPort4, lblNum4);
					goto IL_08fc;
					IL_08e3:
					num2 = 95;
					GetNumberForIndex(lblPort4, lblNum4);
					goto IL_08fc;
					IL_08fc:
					num2 = 98;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & (lblPort5.ForeColor != Color.White))
					{
						goto IL_093c;
					}
					goto IL_09bf;
					IL_093c:
					num2 = 99;
					if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0963;
					}
					goto IL_09a6;
					IL_0963:
					num2 = 100;
					if (Operators.CompareString(lblNum5.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_098c;
					}
					goto IL_09bf;
					IL_098c:
					num2 = 101;
					GetNumberForIndex(lblPort5, lblNum5);
					goto IL_09bf;
					IL_09a6:
					num2 = 103;
					GetNumberForIndex(lblPort5, lblNum5);
					goto IL_09bf;
					IL_09bf:
					num2 = 106;
					Application.DoEvents();
					goto IL_09c8;
					IL_09c8:
					num2 = 107;
					if ((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & (lblPort6.ForeColor != Color.White))
					{
						goto IL_0a08;
					}
					goto IL_0a8b;
					IL_0a08:
					num2 = 108;
					if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0)
					{
						goto IL_0a2f;
					}
					goto IL_0a72;
					IL_0a2f:
					num2 = 109;
					if (Operators.CompareString(lblNum6.Text.Substring(0, 2), "01", TextCompare: false) != 0)
					{
						goto IL_0a58;
					}
					goto IL_0a8b;
					IL_0a58:
					num2 = 110;
					GetNumberForIndex(lblPort6, lblNum6);
					goto IL_0a8b;
					IL_0a72:
					num2 = 112;
					GetNumberForIndex(lblPort6, lblNum6);
					goto IL_0a8b;
					end_IL_0001_2:
					break;
				}
				num2 = 119;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 3276;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnRunUssdGG_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 291:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_002f;
						case 5:
						case 6:
							goto IL_0049;
						case 7:
							goto IL_005c;
						case 8:
							goto IL_006f;
						case 9:
							goto IL_0078;
						case 10:
							goto IL_0088;
						case 11:
							goto IL_0096;
						case 12:
							goto IL_00a0;
						case 13:
							goto IL_00aa;
						case 14:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 15:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0096:
					num2 = 11;
					ReturnRead();
					goto IL_00a0;
					IL_00a0:
					num2 = 12;
					EnableCntl();
					goto IL_00aa;
					IL_0088:
					num2 = 10;
					Thread.Sleep(2000);
					goto IL_0096;
					IL_00aa:
					num2 = 13;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(txtUssd.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_002f;
					}
					goto IL_0049;
					IL_002f:
					num2 = 3;
					lblProgress.Text = "No Ussd Code";
					goto end_IL_0001_3;
					IL_0049:
					num2 = 6;
					lblProgress.BackColor = Color.Red;
					goto IL_005c;
					IL_005c:
					num2 = 7;
					lblProgress.Text = "Apply in box No  1";
					goto IL_006f;
					IL_006f:
					num2 = 8;
					DisableCntl();
					goto IL_0078;
					IL_0078:
					num2 = 9;
					SetUssdOrderGG(txtUssd);
					goto IL_0088;
					end_IL_0001_2:
					break;
				}
				num2 = 14;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 291;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnReplyBy_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 184:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0041;
						case 5:
							goto IL_004a;
						case 6:
							goto IL_0053;
						case 7:
							goto IL_005c;
						case 8:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 9:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_004a:
					num2 = 5;
					SetUssdOrderBy();
					goto IL_0053;
					IL_0053:
					num2 = 6;
					EnableCntl();
					goto IL_005c;
					IL_0041:
					num2 = 4;
					DisableCntl();
					goto IL_004a;
					IL_005c:
					num2 = 7;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "Reply By  " + txtReplyBy.Text;
					goto IL_0041;
					end_IL_0001_2:
					break;
				}
				num2 = 8;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 184;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void txtEproc_LostFocus(object sender, EventArgs e)
	{
		if (txtEproc.Text.Length <= 0)
		{
			txtEproc.Text = DateTime.Today.Date.ToString("ddMMyyyy");
		}
	}

	private void btnApplyCards2_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 745:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0019;
						case 5:
						case 6:
							goto IL_0033;
						case 7:
							goto IL_0053;
						case 9:
						case 10:
							goto IL_0069;
						case 11:
							goto IL_0107;
						case 13:
						case 14:
							goto IL_011e;
						case 15:
							goto IL_0135;
						case 17:
						case 18:
							goto IL_014c;
						case 19:
							goto IL_0160;
						case 20:
							goto IL_0174;
						case 21:
							goto IL_017e;
						case 22:
						case 28:
							goto IL_0193;
						case 23:
							goto IL_01c1;
						case 24:
							goto IL_01cb;
						case 25:
							goto IL_01d9;
						case 26:
							goto IL_01e3;
						case 27:
							goto IL_01ec;
						case 29:
						case 30:
							goto IL_021e;
						case 31:
							goto IL_0228;
						case 32:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 8:
						case 12:
						case 16:
						case 33:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_01ec:
					num2 = 27;
					if (Conversion.Val(txtLoopS.Text) < Conversion.Val(txtLoopF.Text))
					{
						goto IL_0193;
					}
					goto IL_021e;
					IL_021e:
					num2 = 30;
					EnableCntl();
					goto IL_0228;
					IL_01e3:
					num2 = 26;
					Application.DoEvents();
					goto IL_01ec;
					IL_0228:
					num2 = 31;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if (MysqlConn.MainProgLic < 2)
					{
						goto IL_0019;
					}
					goto IL_0033;
					IL_0019:
					num2 = 3;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0033:
					num2 = 6;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0053;
					}
					goto IL_0069;
					IL_0053:
					num2 = 7;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_0069:
					num2 = 10;
					if ((lblNum1.Text.Trim().Length == 0) & (lblNum2.Text.Trim().Length == 0) & (lblNum3.Text.Trim().Length == 0) & (lblNum4.Text.Trim().Length == 0) & (lblNum5.Text.Trim().Length == 0) & (lblNum6.Text.Trim().Length == 0))
					{
						goto IL_0107;
					}
					goto IL_011e;
					IL_0107:
					num2 = 11;
					Interaction.MsgBox("قم بقراءة الخطوط اولا");
					goto end_IL_0001_3;
					IL_011e:
					num2 = 14;
					if (!ckCards.Checked)
					{
						goto IL_0135;
					}
					goto IL_014c;
					IL_0135:
					num2 = 15;
					Interaction.MsgBox("قم بتحديد امان الشحن من اسفل");
					goto end_IL_0001_3;
					IL_014c:
					num2 = 18;
					lblProgress.BackColor = Color.Red;
					goto IL_0160;
					IL_0160:
					num2 = 19;
					lblProgress.Text = "شحن ";
					goto IL_0174;
					IL_0174:
					num2 = 20;
					DisableCntl();
					goto IL_017e;
					IL_017e:
					num2 = 21;
					txtLoopS.Text = "0";
					goto IL_0193;
					IL_0193:
					num2 = 22;
					txtLoopS.Text = Conversions.ToString(Conversion.Val(txtLoopS.Text) + 1.0);
					goto IL_01c1;
					IL_01c1:
					num2 = 23;
					SetUssdOrderCharge();
					goto IL_01cb;
					IL_01cb:
					num2 = 24;
					Thread.Sleep(5000);
					goto IL_01d9;
					IL_01d9:
					num2 = 25;
					ReturnRead();
					goto IL_01e3;
					end_IL_0001_2:
					break;
				}
				num2 = 32;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 745;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnSA_Click(object sender, EventArgs e)
	{
		if (lblNum1.Text.Length == 11)
		{
			chkCh1.Checked = true;
		}
		else
		{
			chkCh1.Checked = false;
		}
		if (lblNum2.Text.Length == 11)
		{
			chkCh2.Checked = true;
		}
		else
		{
			chkCh2.Checked = false;
		}
		if (lblNum3.Text.Length == 11)
		{
			chkCh3.Checked = true;
		}
		else
		{
			chkCh3.Checked = false;
		}
		if (lblNum4.Text.Length == 11)
		{
			chkCh4.Checked = true;
		}
		else
		{
			chkCh4.Checked = false;
		}
		if (lblNum5.Text.Length == 11)
		{
			chkCh5.Checked = true;
		}
		else
		{
			chkCh5.Checked = false;
		}
		if (lblNum6.Text.Length == 11)
		{
			chkCh6.Checked = true;
		}
		else
		{
			chkCh6.Checked = false;
		}
		if (lblNum7.Text.Length == 11)
		{
			chkCh7.Checked = true;
		}
		else
		{
			chkCh7.Checked = false;
		}
		if (lblNum8.Text.Length == 11)
		{
			chkCh8.Checked = true;
		}
		else
		{
			chkCh8.Checked = false;
		}
	}

	private void btnDeSA_Click(object sender, EventArgs e)
	{
		chkCh1.Checked = false;
		chkCh2.Checked = false;
		chkCh3.Checked = false;
		chkCh4.Checked = false;
		chkCh5.Checked = false;
		chkCh6.Checked = false;
	}

	private void btnReplyBy0_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 190:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0041;
						case 5:
							goto IL_004a;
						case 6:
							goto IL_0059;
						case 7:
							goto IL_0062;
						case 8:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 9:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_004a:
					num2 = 5;
					SetUssdOrderByX(txtReplyBy0);
					goto IL_0059;
					IL_0059:
					num2 = 6;
					EnableCntl();
					goto IL_0062;
					IL_0041:
					num2 = 4;
					DisableCntl();
					goto IL_004a;
					IL_0062:
					num2 = 7;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "Reply By  " + txtReplyBy0.Text;
					goto IL_0041;
					end_IL_0001_2:
					break;
				}
				num2 = 8;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 190;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void txtReplyBy2_TextChanged(object sender, EventArgs e)
	{
		if (Conversion.Val(txtReplyBy2.Text) <= 0.0)
		{
			txtReplyBy2.Text = "1";
		}
	}

	private void txtReplyBy3_TextChanged(object sender, EventArgs e)
	{
		if (Conversion.Val(txtReplyBy3.Text) <= 0.0)
		{
			txtReplyBy3.Text = "1";
		}
	}

	private void btnReplyBy4_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 190:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0041;
						case 5:
							goto IL_004a;
						case 6:
							goto IL_0059;
						case 7:
							goto IL_0062;
						case 8:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 9:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_004a:
					num2 = 5;
					SetUssdOrderByX(txtReplyBy4);
					goto IL_0059;
					IL_0059:
					num2 = 6;
					EnableCntl();
					goto IL_0062;
					IL_0041:
					num2 = 4;
					DisableCntl();
					goto IL_004a;
					IL_0062:
					num2 = 7;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "Reply By  " + txtReplyBy4.Text;
					goto IL_0041;
					end_IL_0001_2:
					break;
				}
				num2 = 8;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 190;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnReplyBy5_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 190:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0041;
						case 5:
							goto IL_004a;
						case 6:
							goto IL_0059;
						case 7:
							goto IL_0062;
						case 8:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 9:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_004a:
					num2 = 5;
					SetUssdOrderByX(txtReplyBy5);
					goto IL_0059;
					IL_0059:
					num2 = 6;
					EnableCntl();
					goto IL_0062;
					IL_0041:
					num2 = 4;
					DisableCntl();
					goto IL_004a;
					IL_0062:
					num2 = 7;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "Reply By  " + txtReplyBy5.Text;
					goto IL_0041;
					end_IL_0001_2:
					break;
				}
				num2 = 8;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 190;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private int GetNextenums()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		int result = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 197:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0023;
						case 4:
							goto IL_0039;
						case 5:
							goto IL_0049;
						case 7:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 6:
						case 8:
						case 9:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0023:
					num2 = 3;
					num5 = checked(objDataTabletemp.Rows.Count - 1);
					goto IL_0039;
					IL_0039:
					num2 = 4;
					if (num5 < 0)
					{
						break;
					}
					goto IL_0049;
					IL_000b:
					num2 = 2;
					objDataTabletemp = objData.QueryDatabase("SELECT distinct enums FROM vcnumsrun order by enums");
					goto IL_0023;
					IL_0049:
					num2 = 5;
					result = checked((int)Math.Round(Conversion.Val(RuntimeHelpers.GetObjectValue(objDataTabletemp.Rows[num5]["enums"])) + 1.0));
					goto end_IL_0001_3;
					end_IL_0001_2:
					break;
				}
				num2 = 7;
				result = 1;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 197;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void btnAddItems_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
		}
		else
		{
			MyProject.Forms.frmAddVCNums.Show();
		}
	}

	private void btnWorkID_Click(object sender, EventArgs e)
	{
		txtWorkID.Text = Conversions.ToString(GetNextenums());
	}

	private void btnNextItems_Click(object sender, EventArgs e)
	{
		lblCard1.Text = "";
		lblCard2.Text = "";
		lblCard3.Text = "";
		lblCard4.Text = "";
		lblCard5.Text = "";
		lblCard6.Text = "";
		txtQtyDone.Text = "0";
		fillBoxsWithCardsVC();
	}

	private void GetBalOrng(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
					Application.DoEvents();
					Application.DoEvents();
					string ussdCommandFull = "9";
					string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(500);
					commandCode = "AT+CUSD=0";
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(500);
					ussdCommandFull = "#100*1*1#";
					commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(1000);
					Application.DoEvents();
					break;
				}
				case 261:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 261;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string GetBalOrngX(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string text = default(string);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						text = "#";
						string number = "#";
						lblProgress.Text = "Read " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						string text2 = "#";
						string text3 = "#";
						string text4 = "#";
						string left = "#";
						Application.DoEvents();
						double num3 = 0.0;
						do
						{
							Thread.Sleep(500);
							string text5 = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text5) >= 2))
							{
								txtInfo.Text = text5 + "\r\n" + txtInfo.Text;
							}
							if (Operators.CompareString(text5, "", TextCompare: false) == 0)
							{
								if ((Operators.CompareString(text5, "", TextCompare: false) == 0) & (Operators.CompareString(text2, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
								{
									string ussdCommandFull = "#100*1*1#";
									string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(2000);
									text2 = "#";
									text3 = "#";
									text4 = "#";
									left = "#";
									Application.DoEvents();
								}
								else
								{
									left = text4;
									text4 = text3;
									text3 = text2;
									text2 = text5;
								}
							}
							else
							{
								text2 = "#";
								text3 = "#";
								text4 = "#";
								left = "#";
							}
							if (text5.Contains("06310635064A062F0643002006270644062D0627064406490020064406270020064A064306410649000A002D0020002D0020002D000A00300030003A062706440642062706260645062900200627064406310626064A0633064A0629000A0030003A062706440642062706260645062900200627064406330627062806420629"))
							{
								number = "0";
								OutBoxDrop(Exxc, "رصيدك الحالى لا يكفى للاستعلام");
								break;
							}
							if (text5.Contains("0644064406270633062A0639064406270645002006390646002006310635064A062F064300200633064A062A06450020062E063506450020003400200642063106480634000A0031003A0020062A06230643064A062F000A0032003A002006250644063A06270621000A002D0020002D0020002D000A00300030003A062706440642062706260645062900200627064406310626064A0633064A0629"))
							{
								string ussdCommandFull = "1";
								string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(2000);
								text2 = "#";
								text3 = "#";
								text4 = "#";
								left = "#";
								Application.DoEvents();
							}
							if (text5.Contains("retry operation") | text5.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E"))
							{
								string ussdCommandFull = "#100*1*1#";
								string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(2000);
								text2 = "#";
								text3 = "#";
								text4 = "#";
								left = "#";
								Application.DoEvents();
							}
							if (text5.Contains("+CUSD:"))
							{
								int num4 = text5.IndexOf("+CUSD:");
								string text6 = text5.Substring(num4 + 9, text5.Length - num4 - 9).Trim().Trim('o')
									.Trim('\r')
									.Trim('\r')
									.Trim();
								num4 = text6.IndexOf(",");
								string text7 = text6.Substring(0, num4).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								text7 = text7.Trim('"').Trim(',').Trim('"');
								string text8;
								if (Operators.CompareString(text7.Substring(0, 1), "0", TextCompare: false) == 0)
								{
									byte[] bytes = encoding_mod.StrToByteArray(text7);
									text8 = Encoding.BigEndianUnicode.GetString(bytes);
								}
								else
								{
									text8 = encoding_mod.Decode7Bit(text7);
								}
								OutBoxDrop(Exxc, text8);
								if (text8.Contains("رصيدك دلوقتي"))
								{
									num4 = text8.IndexOf("دلوقتي");
									int length = text8.Length;
									number = Conversions.ToString(Conversion.Val(text8.Substring(num4 + 7, text8.Length - 8 - num4).Trim('"')));
									break;
								}
								if (text8.Contains("صيدك") & !text8.Contains("للاستعلام"))
								{
									num4 = text8.IndexOf("صيدك");
									int length = text8.IndexOf("ج ");
									number = Conversions.ToString(Conversion.Val(text8.Substring(num4 + 5, length - num4 - 5).Trim('"')));
									break;
								}
							}
							if (text5.Contains("064706300647002006270644062E062F064506290020063A064A063100200645062A0627062D06290020064406460638062706450020062E0"))
							{
								number = "E";
								break;
							}
							Application.DoEvents();
							num3 += 1.0;
						}
						while (num3 <= 20.0);
						text = Conversions.ToString(Conversion.Fix(number));
						break;
					}
					case 1409:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					result = text;
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1409;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void GetBalOrngAcc(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
					Application.DoEvents();
					Application.DoEvents();
					string ussdCommandFull = "9";
					string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(500);
					commandCode = "AT+CUSD=0";
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(500);
					ussdCommandFull = "#147#1*" + txtOtransACC.Text + "*" + txtOtransACC.Text + "#";
					commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(1000);
					Application.DoEvents();
					break;
				}
				case 319:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 319;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string GetBalOrngXAcc(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string text = default(string);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						text = "#";
						string text2 = "#";
						lblProgress.Text = "Read " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						string text3 = "#";
						string text4 = "#";
						string text5 = "#";
						string left = "#";
						Application.DoEvents();
						double num3 = 0.0;
						do
						{
							Thread.Sleep(500);
							string text6 = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text6) >= 2))
							{
								txtInfo.Text = text6 + "\r\n" + txtInfo.Text;
							}
							if (text6.Contains("+CUSD:"))
							{
								int num4 = text6.IndexOf("+CUSD:");
								string text7 = text6.Substring(num4 + 9, text6.Length - num4 - 9).Trim().Trim('o')
									.Trim('\r')
									.Trim('\r')
									.Trim();
								num4 = text7.IndexOf(",");
								string text8 = text7.Substring(0, num4).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								text8 = text8.Trim('"').Trim(',').Trim('"');
								string text9;
								if (Operators.CompareString(text8.Substring(0, 1), "0", TextCompare: false) == 0)
								{
									byte[] bytes = encoding_mod.StrToByteArray(text8);
									text9 = Encoding.BigEndianUnicode.GetString(bytes);
								}
								else
								{
									text9 = encoding_mod.Decode7Bit(text8);
								}
								OutBoxDrop(Exxc, text9);
								if (text9.Contains("لديك"))
								{
									num4 = text9.IndexOf("لديك");
									text2 = Conversions.ToString(Conversion.Val(text9.Substring(num4 + 4, 9).Trim('"')));
									break;
								}
							}
							if (Operators.CompareString(text6, "", TextCompare: false) == 0)
							{
								if ((Operators.CompareString(text6, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(text5, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
								{
									string ussdCommandFull = "#147#1*" + txtOtransACC.Text + "*" + txtOtransACC.Text + "#";
									string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(2000);
									text3 = "#";
									text4 = "#";
									text5 = "#";
									left = "#";
									Application.DoEvents();
								}
								else
								{
									left = text5;
									text5 = text4;
									text4 = text3;
									text3 = text6;
								}
							}
							else
							{
								text3 = "#";
								text4 = "#";
								text5 = "#";
								left = "#";
							}
							if (text6.Contains("retry operation") | text6.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E"))
							{
								string ussdCommandFull = "#147#1*" + txtOtransACC.Text + "*" + txtOtransACC.Text + "#";
								string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(2000);
								text3 = "#";
								text4 = "#";
								text5 = "#";
								left = "#";
								Application.DoEvents();
							}
							Application.DoEvents();
							num3 += 1.0;
						}
						while (num3 <= 20.0);
						text = text2;
						break;
					}
					case 1220:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					result = text;
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1220;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void SetUssdOrderVcash()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1718:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_005d;
						case 4:
							goto IL_007c;
						case 5:
							goto IL_00a0;
						case 6:
						case 7:
							goto IL_00fd;
						case 8:
							goto IL_0105;
						case 9:
							goto IL_0159;
						case 10:
							goto IL_0179;
						case 11:
							goto IL_019e;
						case 12:
						case 13:
							goto IL_01fc;
						case 14:
							goto IL_0205;
						case 15:
							goto IL_025a;
						case 16:
							goto IL_027a;
						case 17:
							goto IL_029f;
						case 18:
						case 19:
							goto IL_02fd;
						case 20:
							goto IL_0306;
						case 21:
							goto IL_035b;
						case 22:
							goto IL_037b;
						case 23:
							goto IL_03a0;
						case 24:
						case 25:
							goto IL_03fe;
						case 26:
							goto IL_0407;
						case 27:
							goto IL_045c;
						case 28:
							goto IL_047c;
						case 29:
							goto IL_04a1;
						case 30:
						case 31:
							goto IL_04ff;
						case 32:
							goto IL_0508;
						case 33:
							goto IL_055d;
						case 34:
							goto IL_057d;
						case 35:
							goto IL_05a2;
						case 36:
						case 37:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 38:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_055d:
					num2 = 33;
					ApplyUssdCodeVCP(lblPort6, lblCard6.Text.Trim());
					goto IL_057d;
					IL_057d:
					num2 = 34;
					AddCardTochargedarchCV(lblCard6.Text.Trim(), lblNum6.Text);
					goto IL_05a2;
					IL_0508:
					num2 = 32;
					if (!((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						break;
					}
					goto IL_055d;
					IL_05a2:
					num2 = 35;
					txtInfo.Text = "تم طلب تحويل\r\n" + lblCard6.Text + "\r\n" + lblNum6.Text + "\r\n" + txtInfo.Text;
					break;
					IL_000b:
					num2 = 2;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_005d;
					}
					goto IL_00fd;
					IL_005d:
					num2 = 3;
					ApplyUssdCodeVCP(lblPort1, lblCard1.Text.Trim());
					goto IL_007c;
					IL_007c:
					num2 = 4;
					AddCardTochargedarchCV(lblCard1.Text.Trim(), lblNum1.Text);
					goto IL_00a0;
					IL_00a0:
					num2 = 5;
					txtInfo.Text = "تم طلب تحويل\r\n" + lblCard1.Text + "\r\n" + lblNum1.Text + "\r\n" + txtInfo.Text;
					goto IL_00fd;
					IL_00fd:
					num2 = 7;
					Application.DoEvents();
					goto IL_0105;
					IL_0105:
					num2 = 8;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_0159;
					}
					goto IL_01fc;
					IL_0159:
					num2 = 9;
					ApplyUssdCodeVCP(lblPort2, lblCard2.Text.Trim());
					goto IL_0179;
					IL_0179:
					num2 = 10;
					AddCardTochargedarchCV(lblCard2.Text.Trim(), lblNum2.Text);
					goto IL_019e;
					IL_019e:
					num2 = 11;
					txtInfo.Text = "تم طلب تحويل\r\n" + lblCard2.Text + "\r\n" + lblNum2.Text + "\r\n" + txtInfo.Text;
					goto IL_01fc;
					IL_01fc:
					num2 = 13;
					Application.DoEvents();
					goto IL_0205;
					IL_0205:
					num2 = 14;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_025a;
					}
					goto IL_02fd;
					IL_025a:
					num2 = 15;
					ApplyUssdCodeVCP(lblPort3, lblCard3.Text.Trim());
					goto IL_027a;
					IL_027a:
					num2 = 16;
					AddCardTochargedarchCV(lblCard3.Text.Trim(), lblNum3.Text);
					goto IL_029f;
					IL_029f:
					num2 = 17;
					txtInfo.Text = "تم طلب تحويل\r\n" + lblCard3.Text + "\r\n" + lblNum3.Text + "\r\n" + txtInfo.Text;
					goto IL_02fd;
					IL_02fd:
					num2 = 19;
					Application.DoEvents();
					goto IL_0306;
					IL_0306:
					num2 = 20;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_035b;
					}
					goto IL_03fe;
					IL_035b:
					num2 = 21;
					ApplyUssdCodeVCP(lblPort4, lblCard4.Text.Trim());
					goto IL_037b;
					IL_037b:
					num2 = 22;
					AddCardTochargedarchCV(lblCard4.Text.Trim(), lblNum4.Text);
					goto IL_03a0;
					IL_03a0:
					num2 = 23;
					txtInfo.Text = "تم طلب تحويل\r\n" + lblCard4.Text + "\r\n" + lblNum4.Text + "\r\n" + txtInfo.Text;
					goto IL_03fe;
					IL_03fe:
					num2 = 25;
					Application.DoEvents();
					goto IL_0407;
					IL_0407:
					num2 = 26;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_045c;
					}
					goto IL_04ff;
					IL_045c:
					num2 = 27;
					ApplyUssdCodeVCP(lblPort5, lblCard5.Text.Trim());
					goto IL_047c;
					IL_047c:
					num2 = 28;
					AddCardTochargedarchCV(lblCard5.Text.Trim(), lblNum5.Text);
					goto IL_04a1;
					IL_04a1:
					num2 = 29;
					txtInfo.Text = "تم طلب تحويل\r\n" + lblCard5.Text + "\r\n" + lblNum5.Text + "\r\n" + txtInfo.Text;
					goto IL_04ff;
					IL_04ff:
					num2 = 31;
					Application.DoEvents();
					goto IL_0508;
					end_IL_0001_2:
					break;
				}
				num2 = 37;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1718;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnGetBal_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 6)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "Get Balance";
		DisableCntl();
		ReSetUssdOrder();
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			lblBal1.Text = "#";
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			lblBal2.Text = "#";
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			lblBal3.Text = "#";
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			lblBal4.Text = "#";
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			lblBal5.Text = "#";
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			lblBal6.Text = "#";
		}
		do
		{
			lblProgress.BackColor = Color.Red;
			num = checked(num + 1);
			Application.DoEvents();
			if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
			{
				GetBalVC(lblPort1);
			}
			if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
			{
				GetBalVC(lblPort2);
			}
			if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
			{
				GetBalVC(lblPort3);
			}
			if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
			{
				GetBalVC(lblPort4);
			}
			if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
			{
				GetBalVC(lblPort5);
			}
			if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
			{
				GetBalVC(lblPort6);
			}
			if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
			{
				lblBal1.Text = GetBalVCX(lblPort1);
			}
			if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
			{
				lblBal2.Text = GetBalVCX(lblPort2);
			}
			if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
			{
				lblBal3.Text = GetBalVCX(lblPort3);
			}
			if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
			{
				lblBal4.Text = GetBalVCX(lblPort4);
			}
			if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
			{
				lblBal5.Text = GetBalVCX(lblPort5);
			}
			if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
			{
				lblBal6.Text = GetBalVCX(lblPort6);
			}
			Application.DoEvents();
			btnUssdReset_Click(RuntimeHelpers.GetObjectValue(sender), e);
			Application.DoEvents();
		}
		while (num <= 25);
		if (txtRet01.Text.Length > 1 && txtRet01.Text.Contains("لمعرفة رصيد الكاش باك"))
		{
			setRetboxTOhavecash(txtRet01);
		}
		if (txtRet02.Text.Length > 1 && txtRet02.Text.Contains("لمعرفة رصيد الكاش باك"))
		{
			setRetboxTOhavecash(txtRet02);
		}
		if (txtRet03.Text.Length > 1 && txtRet03.Text.Contains("لمعرفة رصيد الكاش باك"))
		{
			setRetboxTOhavecash(txtRet03);
		}
		if (txtRet04.Text.Length > 1 && txtRet04.Text.Contains("لمعرفة رصيد الكاش باك"))
		{
			setRetboxTOhavecash(txtRet04);
		}
		if (txtRet05.Text.Length > 1 && txtRet05.Text.Contains("لمعرفة رصيد الكاش باك"))
		{
			setRetboxTOhavecash(txtRet05);
		}
		if (txtRet06.Text.Length > 1 && txtRet06.Text.Contains("لمعرفة رصيد الكاش باك"))
		{
			setRetboxTOhavecash(txtRet06);
		}
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void setRetboxTOhavecash(TextBox RtextBox)
	{
	}

	private void GetBalVC(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
					Application.DoEvents();
					Application.DoEvents();
					string ussdCommandFull = "9";
					string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(500);
					commandCode = "AT+CUSD=0";
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(500);
					ussdCommandFull = "*9*13#";
					commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(commandCode + "\r");
					Application.DoEvents();
					break;
				}
				case 250:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 250;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void GetBalEC(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
					Application.DoEvents();
					Application.DoEvents();
					string text = "AT+CUSD=0";
					serialPort.WriteLine(text + "\r");
					Thread.Sleep(500);
					string ussdCommandFull = "*777*4*" + txtPassEC.Text + "#";
					text = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(text + "\r");
					Thread.Sleep(1000);
					Application.DoEvents();
					break;
				}
				case 237:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 237;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string GetBalVCX(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string text = default(string);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						text = "#";
						string text2 = "#";
						lblProgress.Text = "Read " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						string text3 = "#";
						string text4 = "#";
						string text5 = "#";
						string left = "#";
						Application.DoEvents();
						double num3 = 0.0;
						do
						{
							IL_009a:
							Thread.Sleep(500);
							string text6 = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text6) >= 2))
							{
								txtInfo.Text = text6 + "\r\n" + txtInfo.Text;
							}
							if (text6.Contains("+CUSD:"))
							{
								int num4 = text6.IndexOf("+CUSD:");
								text6 = text6.Substring(num4 + 9, text6.Length - num4 - 9).Trim().Trim('o')
									.Trim('\r')
									.Trim('\r')
									.Trim();
								num4 = text6.IndexOf(",");
								string text7 = text6.Substring(0, num4).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								text7 = text7.Trim('"').Trim(',').Trim('"');
								if (text7.Length > 3)
								{
									string text8;
									if (Operators.CompareString(text7.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text7);
										text8 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text8 = encoding_mod.Decode7Bit(text7);
									}
									OutBoxDrop(Exxc, text8);
									if (text8.Contains("لمعرفة رصيد الكاش"))
									{
										num4 = text8.IndexOf("الحالي");
										text2 = Conversions.ToString(Conversion.Val(text8.Substring(num4 + 7, 10).Trim('"')));
										string ussdCommandFull = "1";
										string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(500);
										goto IL_009a;
									}
									if (text8.Contains("الحالي") & !text8.Contains("رصيد الكاش باك الحال"))
									{
										num4 = text8.IndexOf("الحالي");
										text2 = Conversions.ToString(Conversion.Val(text8.Substring(num4 + 7, 10).Trim('"')));
										DisablePort(Exxc);
										break;
									}
									if (text8.Contains("رصيد الكاش باك الحال"))
									{
										DisablePort(Exxc);
										break;
									}
									if (text8.Contains("ادخلته غير صحيح"))
									{
										text2 = "E";
										DisablePort(Exxc);
										break;
									}
									if (text8.Contains("عفوا هذا الرقم غير مشترك في خدمه فودافون كاش"))
									{
										text2 = "E";
										DisablePort(Exxc);
										break;
									}
									if (text8.Contains("لا يمكن إتمام العملية بسب") | text8.Contains("غير متاح حاليا") | text8.Contains("رسالة برصيد حسابك"))
									{
										text2 = "E";
										DisablePort(Exxc);
										break;
									}
								}
							}
							if (Operators.CompareString(text6, "", TextCompare: false) == 0)
							{
								if ((Operators.CompareString(text6, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(text5, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
								{
									string ussdCommandFull = "*9*13#";
									string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(2000);
									text3 = "#";
									text4 = "#";
									text5 = "#";
									left = "#";
									Application.DoEvents();
								}
								else
								{
									left = text5;
									text5 = text4;
									text4 = text3;
									text3 = text6;
								}
							}
							else
							{
								text3 = "#";
								text4 = "#";
								text5 = "#";
								left = "#";
							}
							if (text6.Contains("06440645063906310641062900200641064406480633064"))
							{
								object obj = txtPass.Text ?? "";
								if (obj == null)
								{
									obj = "";
								}
								string ussdCommandFull = (string)obj;
								string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(1000);
								text3 = "#";
								text4 = "#";
								text5 = "#";
								left = "#";
							}
							if (text6.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C"))
							{
								string ussdCommandFull = "*9*13#";
								string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(2000);
								text3 = "#";
								text4 = "#";
								text5 = "#";
								left = "#";
								Application.DoEvents();
							}
							if (text6.Contains("retry operation") | text6.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E") | text6.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E"))
							{
								string ussdCommandFull = "*9*13#";
								string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(2000);
								text3 = "#";
								text4 = "#";
								text5 = "#";
								left = "#";
								Application.DoEvents();
							}
							if (text6.Contains("064706300647002006270644062E062F064506290020063A064A063100200645062A0627062D06290020064406460638062706450020062E0"))
							{
								text2 = "E";
								break;
							}
							Application.DoEvents();
							num3 += 1.0;
						}
						while (num3 <= 20.0);
						text = text2;
						break;
					}
					case 1704:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					result = text;
					break;
				}
				end_IL_0001:;
			}
			catch (object obj2) when (obj2 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj2);
				try0001_dispatch = 1704;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private string GetBalECX(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string text = default(string);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						text = "#";
						string text2 = "#";
						lblProgress.Text = "Read " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						string text3 = "#";
						string text4 = "#";
						string text5 = "#";
						string left = "#";
						Application.DoEvents();
						double num3 = 0.0;
						do
						{
							Thread.Sleep(500);
							string text6 = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text6) >= 2))
							{
								txtInfo.Text = text6 + "\r\n" + txtInfo.Text;
							}
							if (text6.Contains("0627064406310642064500200627064406330631064A0020063A064A063100200635062D064A062D060C002006280631062C062706210020062506390627062F062900200645062D062706480644062900200636062806370020063106420645064300200627064406330631064A002006450631062900200627062E06310649"))
							{
								OutBoxDrop(Exxc, "الرقم السري غير صحيح، برجاء إعادة محاولة ضبط رقمك السري مرة اخرى");
								text2 = "#";
								break;
							}
							if (text6.Contains("+CUSD:"))
							{
								int num4 = text6.IndexOf("+CUSD:");
								text6 = text6.Substring(num4 + 9, text6.Length - num4 - 9).Trim().Trim('o')
									.Trim('\r')
									.Trim('\r')
									.Trim();
								num4 = text6.IndexOf(",");
								string text7 = text6.Substring(0, num4).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								text7 = text7.Trim('"').Trim(',').Trim('"');
								string text8;
								if (Operators.CompareString(text7.Substring(0, 1), "0", TextCompare: false) == 0)
								{
									byte[] bytes = encoding_mod.StrToByteArray(text7);
									text8 = Encoding.BigEndianUnicode.GetString(bytes);
								}
								else
								{
									text8 = encoding_mod.Decode7Bit(text7);
								}
								OutBoxDrop(Exxc, text8);
								if (text8.Contains("الحالى"))
								{
									num4 = text8.IndexOf("الحالى");
									text2 = Conversions.ToString(Conversion.Val(text8.Substring(num4 + 7, text8.Length - num4 - 7).Trim('"')));
									break;
								}
								if (text8.Contains("عزيزي العميل أنت غير مشترك في خدمة اتصالات كاش، للاشتراك"))
								{
									text2 = "#";
									break;
								}
							}
							if (Operators.CompareString(text6, "", TextCompare: false) == 0)
							{
								if ((Operators.CompareString(text6, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(text5, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
								{
									string ussdCommandFull = "*777*4*" + txtPassEC.Text + "#";
									string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(2000);
									text3 = "#";
									text4 = "#";
									text5 = "#";
									left = "#";
									Application.DoEvents();
								}
								else
								{
									left = text5;
									text5 = text4;
									text4 = text3;
									text3 = text6;
								}
							}
							else
							{
								text3 = "#";
								text4 = "#";
								text5 = "#";
								left = "#";
							}
							if (text6.Contains("retry operation") | text6.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E") | text6.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E"))
							{
								string ussdCommandFull = "*777*4*" + txtPassEC.Text + "#";
								string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(2000);
								text3 = "#";
								text4 = "#";
								text5 = "#";
								left = "#";
								Application.DoEvents();
							}
							Application.DoEvents();
							num3 += 1.0;
						}
						while (num3 <= 20.0);
						text = text2;
						break;
					}
					case 1238:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					result = text;
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1238;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private string GetBalVCRealEts(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string text = default(string);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					text = "#";
					string text2 = "#";
					string ussdCommandFull = "0";
					string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(500);
					Application.DoEvents();
					commandCode = "AT+CUSD=2";
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(500);
					Application.DoEvents();
					ussdCommandFull = "*80*1*1#";
					commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(1000);
					break;
				}
				case 246:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				result = text;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 246;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private string GetBalVCReal(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string text = default(string);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						text = "#";
						string text2 = "#";
						string ussdCommandFull = "0";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(500);
						Application.DoEvents();
						commandCode = "AT+CUSD=2";
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(500);
						Application.DoEvents();
						commandCode = "AT+CUSD=0";
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(500);
						ussdCommandFull = "*60#";
						commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(1000);
						Application.DoEvents();
						while (true)
						{
							double num3 = 0.0;
							while (true)
							{
								Thread.Sleep(500);
								string text3 = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text3) >= 2))
								{
									txtInfo.Text = text3 + "\r\n" + txtInfo.Text;
								}
								if (!text3.Contains("+CUSD: 0"))
								{
									goto IL_034a;
								}
								int num4 = text3.IndexOf("+CUSD: 0");
								string text4 = text3.Substring(num4 + 9, text3.Length - num4 - 9).Trim().Trim('o')
									.Trim('\r')
									.Trim('\r')
									.Trim();
								num4 = text4.IndexOf(",");
								string text5 = text4.Substring(0, num4).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								text5 = text5.Trim('"').Trim(',').Trim('"');
								string text6;
								if (Operators.CompareString(text5.Substring(0, 1), "0", TextCompare: false) == 0)
								{
									byte[] bytes = encoding_mod.StrToByteArray(text5);
									text6 = Encoding.BigEndianUnicode.GetString(bytes);
								}
								else
								{
									text6 = encoding_mod.Decode7Bit(text5);
								}
								OutBoxDrop(Exxc, text6);
								if (text6.Contains("الاساسي"))
								{
									num4 = text6.IndexOf("الاساسي");
									text2 = Conversions.ToString(Conversion.Val(text6.Substring(num4 + 8, text6.Length - (num4 + 8)).Trim('"')));
								}
								else if (text6.Contains("ادخلته غير صحيح"))
								{
									text2 = "E";
								}
								else
								{
									if (!text6.Contains("لا يمكن إتمام العملية بسب"))
									{
										goto IL_034a;
									}
									text2 = "E";
								}
								goto IL_03ee;
								IL_03ee:
								text = text2;
								goto end_IL_0001;
								IL_034a:
								if (text3.Contains("064706300647002006270644062E062F064506290020063A064A063100200645062A0627062D06290020064406460638062706450020062E0"))
								{
									text2 = "E";
								}
								else if (text3.Contains("06440642062F0020064606410630062A002006270644064506310627062A0020062706440645062C06270646064A0629002006440645063906310641062900200627064406310635064A062F002006270644064A0"))
								{
									text2 = "G";
									if (chkPay.Checked)
									{
										break;
									}
								}
								else
								{
									Application.DoEvents();
									num3 += 1.0;
									if (num3 <= 15.0)
									{
										continue;
									}
								}
								goto IL_03ee;
							}
							Thread.Sleep(2000);
							ussdCommandFull = "1";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
						}
					}
					case 1044:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_2;
							}
							break;
						}
						end_IL_0001:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					result = text;
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1044;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private string GetBalVCMS(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string text = default(string);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						text = "#";
						string text2 = "#";
						lblProgress.Text = "Read " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						Application.DoEvents();
						string text3 = "AT+CUSD=0";
						serialPort.WriteLine(text3 + "\r");
						Thread.Sleep(500);
						string ussdCommandFull = "*7070#";
						text3 = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(text3 + "\r");
						Thread.Sleep(1000);
						Application.DoEvents();
						double num3 = 0.0;
						do
						{
							Thread.Sleep(500);
							string text4 = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text4) >= 2))
							{
								txtInfo.Text = text4 + "\r\n" + txtInfo.Text;
							}
							if (text4.Contains("+CUSD:"))
							{
								int num4 = text4.IndexOf("+CUSD:");
								string text5 = text4.Substring(num4 + 9, text4.Length - num4 - 9).Trim().Trim('o')
									.Trim('\r')
									.Trim('\r')
									.Trim();
								num4 = text5.IndexOf(",");
								string text6 = text5.Substring(0, num4).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								text6 = text6.Trim('"').Trim(',').Trim('"');
								string text7;
								if (Operators.CompareString(text6.Substring(0, 1), "0", TextCompare: false) == 0)
								{
									byte[] bytes = encoding_mod.StrToByteArray(text6);
									text7 = Encoding.BigEndianUnicode.GetString(bytes);
								}
								else
								{
									text7 = encoding_mod.Decode7Bit(text6);
								}
								OutBoxDrop(Exxc, text7);
								if (text7.Contains("الحالي"))
								{
									num4 = text7.IndexOf("الحالي");
									text2 = Conversions.ToString(Conversion.Val(text7.Substring(num4 + 7, 10).Trim('"')));
									break;
								}
								if (text7.Contains("ادخلته غير صحيح"))
								{
									text2 = "E";
									break;
								}
								if (text7.Contains("لا يمكن إتمام العملية بسب"))
								{
									text2 = "E";
									break;
								}
							}
							if (text4.Contains("003100200627064A062F06270639000A003200200633062D0628000A003300200634062D0646000A00340020062F06410"))
							{
								ussdCommandFull = "5";
								text3 = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(text3 + "\r");
								Thread.Sleep(1000);
								num3 = 0.0;
							}
							if (text4.Contains("0644064406270633062A06450631062706310020064506460020064106360644064300200627062F062E0644002006310642064506430"))
							{
								object obj = txtPassMs.Text ?? "";
								if (obj == null)
								{
									obj = "";
								}
								ussdCommandFull = (string)obj;
								text3 = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(text3 + "\r");
								Thread.Sleep(1000);
								num3 = 0.0;
							}
							if (text4.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C"))
							{
								ussdCommandFull = "*7070#";
								text3 = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(text3 + "\r");
								Thread.Sleep(1000);
								Application.DoEvents();
							}
							if (text4.Contains("064706300647002006270644062E062F064506290020063A064A063100200645062A0627062D06290020064406460638062706450020062E0"))
							{
								text2 = "E";
								break;
							}
							Application.DoEvents();
							num3 += 1.0;
						}
						while (num3 <= 20.0);
						text = text2;
						break;
					}
					case 1134:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					result = text;
					break;
				}
				end_IL_0001:;
			}
			catch (object obj2) when (obj2 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj2);
				try0001_dispatch = 1134;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private int GetGiftValueFromOutbox(Label eIndex)
	{
		if (Operators.CompareString(eIndex.Text, lblPort1.Text, TextCompare: false) == 0)
		{
			if (txtRet01.Text.Contains("10 جنيه"))
			{
				return 10;
			}
			if (txtRet01.Text.Contains("5 جنيه"))
			{
				return 5;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort2.Text, TextCompare: false) == 0)
		{
			if (txtRet02.Text.Contains("10 جنيه"))
			{
				return 10;
			}
			if (txtRet02.Text.Contains("5 جنيه"))
			{
				return 5;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort3.Text, TextCompare: false) == 0)
		{
			if (txtRet03.Text.Contains("10 جنيه"))
			{
				return 10;
			}
			if (txtRet03.Text.Contains("5 جنيه"))
			{
				return 5;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort4.Text, TextCompare: false) == 0)
		{
			if (txtRet04.Text.Contains("10 جنيه"))
			{
				return 10;
			}
			if (txtRet04.Text.Contains("5 جنيه"))
			{
				return 5;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort5.Text, TextCompare: false) == 0)
		{
			if (txtRet05.Text.Contains("10 جنيه"))
			{
				return 10;
			}
			if (txtRet05.Text.Contains("5 جنيه"))
			{
				return 5;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort6.Text, TextCompare: false) == 0)
		{
			if (txtRet06.Text.Contains("10 جنيه"))
			{
				return 10;
			}
			if (txtRet06.Text.Contains("5 جنيه"))
			{
				return 5;
			}
		}
		int result = default(int);
		return result;
	}

	private void btnRun02_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 6)
		{
			lblProgress.Text = "Inactive function";
		}
		else if (!(!chkGetgift.Checked & (MysqlConn.MainProgLic >= 7)))
		{
			if (lblPort1.Text.Trim().Length == 0)
			{
				Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
				return;
			}
			lblProgress.BackColor = Color.Red;
			lblProgress.Text = "Getting Gifts";
			DisableCntl();
			retrychargenobalcount = 0;
			Application.DoEvents();
			SetUssdOrderVcGift();
			EnableCntl();
			lblProgress.BackColor = Color.LimeGreen;
			lblProgress.Text = "OK";
		}
	}

	private void SetUssdOrderVcGift()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1907:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
						case 75:
							goto IL_0010;
						case 4:
							goto IL_0016;
						case 6:
							goto IL_007c;
						case 8:
							goto IL_0094;
						case 9:
							goto IL_00f1;
						case 10:
							goto IL_00fe;
						case 11:
							goto IL_010e;
						case 12:
							goto IL_0127;
						case 13:
							goto IL_0137;
						case 14:
							goto IL_014d;
						case 15:
							goto IL_0164;
						case 16:
						case 17:
							goto IL_016b;
						case 19:
							goto IL_0184;
						case 20:
							goto IL_01e2;
						case 21:
							goto IL_01ef;
						case 22:
							goto IL_01ff;
						case 23:
							goto IL_0218;
						case 24:
							goto IL_0228;
						case 25:
							goto IL_023e;
						case 26:
							goto IL_0255;
						case 27:
						case 28:
							goto IL_025c;
						case 30:
							goto IL_0275;
						case 31:
							goto IL_02d3;
						case 32:
							goto IL_02e0;
						case 33:
							goto IL_02f0;
						case 34:
							goto IL_0309;
						case 35:
							goto IL_0319;
						case 36:
							goto IL_032f;
						case 37:
							goto IL_0346;
						case 38:
						case 39:
							goto IL_034d;
						case 41:
							goto IL_0366;
						case 42:
							goto IL_03c4;
						case 43:
							goto IL_03d1;
						case 44:
							goto IL_03e1;
						case 45:
							goto IL_03fa;
						case 46:
							goto IL_040a;
						case 47:
							goto IL_0420;
						case 48:
							goto IL_0437;
						case 49:
						case 50:
							goto IL_043e;
						case 52:
							goto IL_0457;
						case 53:
							goto IL_04b5;
						case 54:
							goto IL_04c2;
						case 55:
							goto IL_04d2;
						case 56:
							goto IL_04eb;
						case 57:
							goto IL_04fb;
						case 58:
							goto IL_0511;
						case 59:
							goto IL_0528;
						case 60:
						case 61:
							goto IL_052f;
						case 63:
							goto IL_0548;
						case 64:
							goto IL_0587;
						case 65:
							goto IL_0594;
						case 66:
							goto IL_05a4;
						case 67:
							goto IL_05bd;
						case 68:
							goto IL_05cd;
						case 69:
							goto IL_05e3;
						case 70:
							goto IL_05fa;
						case 71:
						case 72:
							goto IL_0601;
						case 74:
							goto IL_0617;
						default:
							goto end_IL_0001;
						case 5:
						case 7:
						case 18:
						case 29:
						case 40:
						case 51:
						case 62:
						case 73:
						case 76:
							goto end_IL_0001_2;
						}
						goto default;
					}
					IL_05fa:
					num2 = 70;
					num5 = 0;
					goto IL_0601;
					IL_0601:
					num2 = 72;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0617;
					IL_05e3:
					num2 = 69;
					if (!chkCh6.Checked)
					{
						goto IL_05fa;
					}
					goto IL_0601;
					IL_0617:
					num2 = 74;
					if (num5 <= 10)
					{
						goto IL_0010;
					}
					goto end_IL_0001_2;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_0010;
					IL_0010:
					num2 = 3;
					num5 = checked(num5 + 1);
					goto IL_0016;
					IL_0016:
					num2 = 4;
					if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_007c;
					IL_007c:
					num2 = 6;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0094;
					IL_0094:
					num2 = 8;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked & ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) | ckUseNextMain.Checked))
					{
						goto IL_00f1;
					}
					goto IL_016b;
					IL_00f1:
					num2 = 9;
					if (num5 == 4)
					{
						goto IL_00fe;
					}
					goto IL_010e;
					IL_00fe:
					num2 = 10;
					ResetUssdCodeVC(lblPort1);
					goto IL_010e;
					IL_010e:
					num2 = 11;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_0127;
					}
					goto IL_0137;
					IL_0127:
					num2 = 12;
					ResetUssdCode(lblPort1);
					goto IL_0137;
					IL_0137:
					num2 = 13;
					SetUssdOrderVcGiftX(lblPort1, chkCh1);
					goto IL_014d;
					IL_014d:
					num2 = 14;
					if (!chkCh1.Checked)
					{
						goto IL_0164;
					}
					goto IL_016b;
					IL_0164:
					num2 = 15;
					num5 = 0;
					goto IL_016b;
					IL_016b:
					num2 = 17;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0184;
					IL_0184:
					num2 = 19;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked & ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) | ckUseNextMain.Checked))
					{
						goto IL_01e2;
					}
					goto IL_025c;
					IL_01e2:
					num2 = 20;
					if (num5 == 4)
					{
						goto IL_01ef;
					}
					goto IL_01ff;
					IL_01ef:
					num2 = 21;
					ResetUssdCodeVC(lblPort2);
					goto IL_01ff;
					IL_01ff:
					num2 = 22;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_0218;
					}
					goto IL_0228;
					IL_0218:
					num2 = 23;
					ResetUssdCode(lblPort2);
					goto IL_0228;
					IL_0228:
					num2 = 24;
					SetUssdOrderVcGiftX(lblPort2, chkCh2);
					goto IL_023e;
					IL_023e:
					num2 = 25;
					if (!chkCh2.Checked)
					{
						goto IL_0255;
					}
					goto IL_025c;
					IL_0255:
					num2 = 26;
					num5 = 0;
					goto IL_025c;
					IL_025c:
					num2 = 28;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0275;
					IL_0275:
					num2 = 30;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked & ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) | ckUseNextMain.Checked))
					{
						goto IL_02d3;
					}
					goto IL_034d;
					IL_02d3:
					num2 = 31;
					if (num5 == 4)
					{
						goto IL_02e0;
					}
					goto IL_02f0;
					IL_02e0:
					num2 = 32;
					ResetUssdCodeVC(lblPort3);
					goto IL_02f0;
					IL_02f0:
					num2 = 33;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_0309;
					}
					goto IL_0319;
					IL_0309:
					num2 = 34;
					ResetUssdCode(lblPort3);
					goto IL_0319;
					IL_0319:
					num2 = 35;
					SetUssdOrderVcGiftX(lblPort3, chkCh3);
					goto IL_032f;
					IL_032f:
					num2 = 36;
					if (!chkCh3.Checked)
					{
						goto IL_0346;
					}
					goto IL_034d;
					IL_0346:
					num2 = 37;
					num5 = 0;
					goto IL_034d;
					IL_034d:
					num2 = 39;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0366;
					IL_0366:
					num2 = 41;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked & ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) | ckUseNextMain.Checked))
					{
						goto IL_03c4;
					}
					goto IL_043e;
					IL_03c4:
					num2 = 42;
					if (num5 == 4)
					{
						goto IL_03d1;
					}
					goto IL_03e1;
					IL_03d1:
					num2 = 43;
					ResetUssdCodeVC(lblPort4);
					goto IL_03e1;
					IL_03e1:
					num2 = 44;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_03fa;
					}
					goto IL_040a;
					IL_03fa:
					num2 = 45;
					ResetUssdCode(lblPort4);
					goto IL_040a;
					IL_040a:
					num2 = 46;
					SetUssdOrderVcGiftX(lblPort4, chkCh4);
					goto IL_0420;
					IL_0420:
					num2 = 47;
					if (!chkCh4.Checked)
					{
						goto IL_0437;
					}
					goto IL_043e;
					IL_0437:
					num2 = 48;
					num5 = 0;
					goto IL_043e;
					IL_043e:
					num2 = 50;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0457;
					IL_0457:
					num2 = 52;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked & ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) | ckUseNextMain.Checked))
					{
						goto IL_04b5;
					}
					goto IL_052f;
					IL_04b5:
					num2 = 53;
					if (num5 == 4)
					{
						goto IL_04c2;
					}
					goto IL_04d2;
					IL_04c2:
					num2 = 54;
					ResetUssdCodeVC(lblPort5);
					goto IL_04d2;
					IL_04d2:
					num2 = 55;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_04eb;
					}
					goto IL_04fb;
					IL_04eb:
					num2 = 56;
					ResetUssdCode(lblPort4);
					goto IL_04fb;
					IL_04fb:
					num2 = 57;
					SetUssdOrderVcGiftX(lblPort5, chkCh5);
					goto IL_0511;
					IL_0511:
					num2 = 58;
					if (!chkCh5.Checked)
					{
						goto IL_0528;
					}
					goto IL_052f;
					IL_0528:
					num2 = 59;
					num5 = 0;
					goto IL_052f;
					IL_052f:
					num2 = 61;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0548;
					IL_0548:
					num2 = 63;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked & ckUseNextMain.Checked)
					{
						goto IL_0587;
					}
					goto IL_0601;
					IL_0587:
					num2 = 64;
					if (num5 == 4)
					{
						goto IL_0594;
					}
					goto IL_05a4;
					IL_0594:
					num2 = 65;
					ResetUssdCodeVC(lblPort6);
					goto IL_05a4;
					IL_05a4:
					num2 = 66;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_05bd;
					}
					goto IL_05cd;
					IL_05bd:
					num2 = 67;
					ResetUssdCode(lblPort6);
					goto IL_05cd;
					IL_05cd:
					num2 = 68;
					SetUssdOrderVcGiftX(lblPort6, chkCh6);
					goto IL_05e3;
					end_IL_0001:
					break;
				}
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1907;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_2:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVcGiftX(Label Exxc, CheckBox EErd)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						int num3 = 0;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Get Gift " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						int num4 = 0;
						AutoRes = 0;
						string text = serialPort.ReadExisting();
						while (true)
						{
							IL_0074:
							num4++;
							if (num4 >= 5)
							{
								break;
							}
							string ussdCommandFull = "*9*300#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							Application.DoEvents();
							int num5 = 0;
							string eEr = "";
							int num6 = 100;
							num3 = 0;
							string text4;
							while (true)
							{
								lblProgress.Text = "Get Gift  " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num4) + ")";
								Thread.Sleep(500);
								text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("+CUSD: "))
								{
									string text2 = text;
									num5 = text.IndexOf("+CUSD: ");
									text2 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text2.IndexOf(",");
									string text3 = text2.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text3 = text3.Trim('"').Trim(',').Trim('"');
									if (text3.Length > 3)
									{
										if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text3);
											text4 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text4 = encoding_mod.Decode7Bit(text3);
										}
										OutBoxDrop(Exxc, text4);
										Application.DoEvents();
										if (text4.Contains("Service"))
										{
											break;
										}
										EErd.Checked = false;
										switch (num3)
										{
										case 0:
											num6 = GetTypeOfmessage(text4);
											break;
										case 1:
											num6 = ((!text4.Substring(0, 8).Contains("فلوس")) ? GetTypeOfmessage(text4) : GetTypeOfmessageLast2(eEr));
											break;
										case 2:
											num6 = ((!text4.Substring(0, 8).Contains("فلوس")) ? GetTypeOfmessage(text4) : GetTypeOfmessageLast3(eEr));
											break;
										}
										if (unchecked(ckTrans.Checked && num6 == 100))
										{
											num6 = (int)Math.Round(Conversion.Val(txtCHS.Text));
										}
										if (num6 == 0)
										{
											ussdCommandFull = "1";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											num3++;
											eEr = text4;
											Thread.Sleep(2000);
											text = serialPort.ReadExisting();
											text = "";
											goto IL_0074;
										}
										if (num6 < 99)
										{
											goto IL_0434;
										}
										Application.DoEvents();
									}
								}
								if (text.Contains("0639064106480627064B0020064406270020064A0648062C062F00200647062F0627064A06270020064406470630"))
								{
									goto IL_04db;
								}
								if ((num6 != 0) & text.Contains("064506280631064806430020062A0645002006270633062A06440627064500A00647062F064A062A0643002006450646002006410648062F062706410648064600200643062706340020"))
								{
									goto IL_0513;
								}
								if (text.Contains("064706300647002006270644062E062F064506290020063A064A063100200645062A0627062D06290020064406460638062706450020062E0"))
								{
									goto IL_0538;
								}
								if (text.Contains("برجاء المحاولة في وقت لاحق") | text.Contains("retry operation") | text.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E") | text.Contains("063906410648062700200627064406310642064500200627064406300649002006270"))
								{
									Application.DoEvents();
									if (num4 <= 4)
									{
										goto IL_0074;
									}
								}
								if (text.Contains("CME ERROR: unknown") | text.Contains("CUSD: 5") | text.Contains("063906410648062700200627064406310642064500200627064406300649002006270"))
								{
									Application.DoEvents();
									if (num4 <= 4)
									{
										goto IL_0074;
									}
								}
								Application.DoEvents();
								num5++;
								if (num5 <= 10)
								{
									continue;
								}
								goto IL_0600;
							}
							Application.DoEvents();
							break;
							IL_04db:
							OutBoxDrop(Exxc, "عفوا\u064b لا يوجد هدايا لهذا الرقم");
							EErd.Checked = false;
							Application.DoEvents();
							break;
							IL_0600:
							ussdCommandFull = "10";
							commandCode = "AT+CUSD=1," + ussdCommandFull + ",15";
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							break;
							IL_0538:
							EErd.Checked = false;
							Application.DoEvents();
							break;
							IL_0434:
							ussdCommandFull = num6.ToString();
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							if (text4.Contains("ك 10ج + 10ج فلو"))
							{
								PassGiftValue = 20;
								Application.DoEvents();
							}
							if (text4.Contains("ك 5ج + 5ج فلو"))
							{
								PassGiftValue = 10;
								Application.DoEvents();
							}
							OutBoxDrop(Exxc, "تاكيد استقبال الهدايا");
							Inc_Gift_Count(Exxc);
							Thread.Sleep(1500);
							break;
							IL_0513:
							EErd.Checked = false;
							Application.DoEvents();
							break;
						}
						break;
					}
					case 1619:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1619;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private int GetTypeOfmessage(string EEr)
	{
		PassGiftValue = 0;
		if (EEr.Contains(" جنيه فلوس على محفظتك 50"))
		{
			PassGiftValue = Conversions.ToInteger("50");
			return 1;
		}
		checked
		{
			if (EEr.Contains("فلوس"))
			{
				int length = EEr.IndexOf("فلوس");
				EEr = EEr.Substring(0, length).Trim();
				do
				{
					length = EEr.IndexOf("\r\n");
					if (length < 0)
					{
						break;
					}
					EEr = EEr.Substring(length, EEr.Length - length).Trim('\r').Trim('\r')
						.Trim();
					length = EEr.IndexOf("\r\n");
				}
				while (length >= 0);
				do
				{
					length = EEr.IndexOf("\n");
					if (length < 0)
					{
						break;
					}
					EEr = EEr.Substring(length, EEr.Length - length).Trim('\n').Trim('\r')
						.Trim();
					length = EEr.IndexOf("\n");
				}
				while (length >= 0);
				int num = Conversions.ToInteger(EEr.Substring(0, 1));
				EEr = EEr.Substring(2, 6);
				PassGiftValue = (int)Math.Round(Conversion.Val(EEr));
				return (int)Math.Round(Conversion.Val(num));
			}
			if (EEr.Contains("مزيد"))
			{
				return 100;
			}
			return 100;
		}
	}

	private void SetUssdOrderVc365Baka()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1680:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
						case 75:
							goto IL_0010;
						case 4:
							goto IL_0016;
						case 6:
							goto IL_007c;
						case 8:
							goto IL_0094;
						case 9:
							goto IL_00c6;
						case 10:
							goto IL_00d3;
						case 11:
							goto IL_00e3;
						case 12:
							goto IL_00fc;
						case 13:
							goto IL_010c;
						case 14:
							goto IL_0122;
						case 15:
							goto IL_0139;
						case 16:
						case 17:
							goto IL_0140;
						case 19:
							goto IL_0159;
						case 20:
							goto IL_018c;
						case 21:
							goto IL_0199;
						case 22:
							goto IL_01a9;
						case 23:
							goto IL_01c2;
						case 24:
							goto IL_01d2;
						case 25:
							goto IL_01e8;
						case 26:
							goto IL_01ff;
						case 27:
						case 28:
							goto IL_0206;
						case 30:
							goto IL_021f;
						case 31:
							goto IL_0252;
						case 32:
							goto IL_025f;
						case 33:
							goto IL_026f;
						case 34:
							goto IL_0288;
						case 35:
							goto IL_0298;
						case 36:
							goto IL_02ae;
						case 37:
							goto IL_02c5;
						case 38:
						case 39:
							goto IL_02cc;
						case 41:
							goto IL_02e5;
						case 42:
							goto IL_0318;
						case 43:
							goto IL_0325;
						case 44:
							goto IL_0335;
						case 45:
							goto IL_034e;
						case 46:
							goto IL_035e;
						case 47:
							goto IL_0374;
						case 48:
							goto IL_038b;
						case 49:
						case 50:
							goto IL_0392;
						case 52:
							goto IL_03ab;
						case 53:
							goto IL_03de;
						case 54:
							goto IL_03eb;
						case 55:
							goto IL_03fb;
						case 56:
							goto IL_0414;
						case 57:
							goto IL_0424;
						case 58:
							goto IL_043a;
						case 59:
							goto IL_0451;
						case 60:
						case 61:
							goto IL_0458;
						case 63:
							goto IL_0471;
						case 64:
							goto IL_04a4;
						case 65:
							goto IL_04b1;
						case 66:
							goto IL_04c1;
						case 67:
							goto IL_04da;
						case 68:
							goto IL_04ea;
						case 69:
							goto IL_0500;
						case 70:
							goto IL_0517;
						case 71:
						case 72:
							goto IL_051e;
						case 74:
							goto IL_0534;
						default:
							goto end_IL_0001;
						case 5:
						case 7:
						case 18:
						case 29:
						case 40:
						case 51:
						case 62:
						case 73:
						case 76:
							goto end_IL_0001_2;
						}
						goto default;
					}
					IL_0517:
					num2 = 70;
					num5 = 0;
					goto IL_051e;
					IL_051e:
					num2 = 72;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0534;
					IL_0500:
					num2 = 69;
					if (!chkCh6.Checked)
					{
						goto IL_0517;
					}
					goto IL_051e;
					IL_0534:
					num2 = 74;
					if (num5 <= 15)
					{
						goto IL_0010;
					}
					goto end_IL_0001_2;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_0010;
					IL_0010:
					num2 = 3;
					num5 = checked(num5 + 1);
					goto IL_0016;
					IL_0016:
					num2 = 4;
					if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_007c;
					IL_007c:
					num2 = 6;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0094;
					IL_0094:
					num2 = 8;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_00c6;
					}
					goto IL_0140;
					IL_00c6:
					num2 = 9;
					if (num5 == 4)
					{
						goto IL_00d3;
					}
					goto IL_00e3;
					IL_00d3:
					num2 = 10;
					ResetUssdCodeVC(lblPort1);
					goto IL_00e3;
					IL_00e3:
					num2 = 11;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_00fc;
					}
					goto IL_010c;
					IL_00fc:
					num2 = 12;
					ResetUssdCode(lblPort1);
					goto IL_010c;
					IL_010c:
					num2 = 13;
					SetUssdOrderVc365XBaka(lblPort1, chkCh1);
					goto IL_0122;
					IL_0122:
					num2 = 14;
					if (!chkCh1.Checked)
					{
						goto IL_0139;
					}
					goto IL_0140;
					IL_0139:
					num2 = 15;
					num5 = 0;
					goto IL_0140;
					IL_0140:
					num2 = 17;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0159;
					IL_0159:
					num2 = 19;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_018c;
					}
					goto IL_0206;
					IL_018c:
					num2 = 20;
					if (num5 == 4)
					{
						goto IL_0199;
					}
					goto IL_01a9;
					IL_0199:
					num2 = 21;
					ResetUssdCodeVC(lblPort2);
					goto IL_01a9;
					IL_01a9:
					num2 = 22;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_01c2;
					}
					goto IL_01d2;
					IL_01c2:
					num2 = 23;
					ResetUssdCode(lblPort2);
					goto IL_01d2;
					IL_01d2:
					num2 = 24;
					SetUssdOrderVc365XBaka(lblPort2, chkCh2);
					goto IL_01e8;
					IL_01e8:
					num2 = 25;
					if (!chkCh2.Checked)
					{
						goto IL_01ff;
					}
					goto IL_0206;
					IL_01ff:
					num2 = 26;
					num5 = 0;
					goto IL_0206;
					IL_0206:
					num2 = 28;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_021f;
					IL_021f:
					num2 = 30;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_0252;
					}
					goto IL_02cc;
					IL_0252:
					num2 = 31;
					if (num5 == 4)
					{
						goto IL_025f;
					}
					goto IL_026f;
					IL_025f:
					num2 = 32;
					ResetUssdCodeVC(lblPort3);
					goto IL_026f;
					IL_026f:
					num2 = 33;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_0288;
					}
					goto IL_0298;
					IL_0288:
					num2 = 34;
					ResetUssdCode(lblPort3);
					goto IL_0298;
					IL_0298:
					num2 = 35;
					SetUssdOrderVc365XBaka(lblPort3, chkCh3);
					goto IL_02ae;
					IL_02ae:
					num2 = 36;
					if (!chkCh3.Checked)
					{
						goto IL_02c5;
					}
					goto IL_02cc;
					IL_02c5:
					num2 = 37;
					num5 = 0;
					goto IL_02cc;
					IL_02cc:
					num2 = 39;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_02e5;
					IL_02e5:
					num2 = 41;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0318;
					}
					goto IL_0392;
					IL_0318:
					num2 = 42;
					if (num5 == 4)
					{
						goto IL_0325;
					}
					goto IL_0335;
					IL_0325:
					num2 = 43;
					ResetUssdCodeVC(lblPort4);
					goto IL_0335;
					IL_0335:
					num2 = 44;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_034e;
					}
					goto IL_035e;
					IL_034e:
					num2 = 45;
					ResetUssdCode(lblPort4);
					goto IL_035e;
					IL_035e:
					num2 = 46;
					SetUssdOrderVc365XBaka(lblPort4, chkCh4);
					goto IL_0374;
					IL_0374:
					num2 = 47;
					if (!chkCh4.Checked)
					{
						goto IL_038b;
					}
					goto IL_0392;
					IL_038b:
					num2 = 48;
					num5 = 0;
					goto IL_0392;
					IL_0392:
					num2 = 50;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_03ab;
					IL_03ab:
					num2 = 52;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_03de;
					}
					goto IL_0458;
					IL_03de:
					num2 = 53;
					if (num5 == 4)
					{
						goto IL_03eb;
					}
					goto IL_03fb;
					IL_03eb:
					num2 = 54;
					ResetUssdCodeVC(lblPort5);
					goto IL_03fb;
					IL_03fb:
					num2 = 55;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_0414;
					}
					goto IL_0424;
					IL_0414:
					num2 = 56;
					ResetUssdCode(lblPort4);
					goto IL_0424;
					IL_0424:
					num2 = 57;
					SetUssdOrderVc365XBaka(lblPort5, chkCh5);
					goto IL_043a;
					IL_043a:
					num2 = 58;
					if (!chkCh5.Checked)
					{
						goto IL_0451;
					}
					goto IL_0458;
					IL_0451:
					num2 = 59;
					num5 = 0;
					goto IL_0458;
					IL_0458:
					num2 = 61;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0471;
					IL_0471:
					num2 = 63;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_04a4;
					}
					goto IL_051e;
					IL_04a4:
					num2 = 64;
					if (num5 == 4)
					{
						goto IL_04b1;
					}
					goto IL_04c1;
					IL_04b1:
					num2 = 65;
					ResetUssdCodeVC(lblPort6);
					goto IL_04c1;
					IL_04c1:
					num2 = 66;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_04da;
					}
					goto IL_04ea;
					IL_04da:
					num2 = 67;
					ResetUssdCode(lblPort6);
					goto IL_04ea;
					IL_04ea:
					num2 = 68;
					SetUssdOrderVc365XBaka(lblPort6, chkCh6);
					goto IL_0500;
					end_IL_0001:
					break;
				}
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1680;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_2:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVc365XBaka(Label Exxc, CheckBox EErd)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					string commandCode;
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						int num3 = 0;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						int num4 = 0;
						AutoRes = 0;
						string text = serialPort.ReadExisting();
						num4++;
						lblProgress.Text = "365/baka " + Exxc.Text + "(" + Conversions.ToString(num4) + ")";
						Application.DoEvents();
						int num5 = 0;
						int num6 = 100;
						if (num4 >= 10)
						{
							break;
						}
						string ussdCommandFull = "*365#";
						commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(500);
						do
						{
							IL_010b:
							Thread.Sleep(500);
							text = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
							{
								txtInfo.Text = text + "\r\n" + txtInfo.Text;
							}
							if (text.Contains("+CUSD: "))
							{
								string text2 = text;
								num5 = text.IndexOf("+CUSD: ");
								text2 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
									.Trim('\r')
									.Trim('\r')
									.Trim();
								num5 = text2.IndexOf(",");
								string text3 = text2.Substring(0, num5).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								text3 = text3.Trim('"').Trim(',').Trim('"');
								if (text3.Length > 3)
								{
									string text4;
									if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text3);
										text4 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text4 = encoding_mod.Decode7Bit(text3);
									}
									OutBoxDrop(Exxc, text4);
									Application.DoEvents();
									if (text4.Contains("Service"))
									{
										Application.DoEvents();
										break;
									}
									if (text4.Contains("الباقات"))
									{
										ussdCommandFull = "1";
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(800);
									}
									else if (text4.Contains("جدد باقتك ب17.5 جنيه لمدة شهر"))
									{
										ussdCommandFull = "1";
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(800);
									}
									else
									{
										if (text4.Contains("جاري تنفيذ طلبك"))
										{
											DisablePort(Exxc);
											Exxc.BackColor = Color.PaleTurquoise;
											Application.DoEvents();
											break;
										}
										if (num3 >= 3)
										{
											Application.DoEvents();
											EErd.Checked = false;
											break;
										}
										num6 = 2;
										num3++;
										ussdCommandFull = num6.ToString();
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(800);
									}
									goto IL_010b;
								}
							}
							if (text.Contains("retry operation") | text.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E") | text.Contains("063906410648062700200627064406310642064500200627064406300649002006270"))
							{
								Application.DoEvents();
								break;
							}
							if (text.Contains("CME ERROR: unknown") | text.Contains("CUSD: 5") | text.Contains("063906410648062700200627064406310642064500200627064406300649002006270"))
							{
								Application.DoEvents();
								break;
							}
							Application.DoEvents();
							num5++;
						}
						while (num5 <= 20);
						break;
					}
					case 1234:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					commandCode = "AT+CUSD=2";
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(1000);
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1234;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVc365(string TransNum365, int EEs)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		int num6 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 2014:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_000f;
						case 4:
						case 88:
							goto IL_0015;
						case 5:
							goto IL_001b;
						case 7:
							goto IL_0081;
						case 9:
							goto IL_0099;
						case 10:
							goto IL_00cf;
						case 11:
							goto IL_00dd;
						case 12:
							goto IL_00f8;
						case 13:
							goto IL_0105;
						case 14:
							goto IL_0115;
						case 15:
							goto IL_012e;
						case 16:
							goto IL_013e;
						case 17:
							goto IL_0156;
						case 18:
							goto IL_016d;
						case 19:
						case 20:
							goto IL_0174;
						case 22:
							goto IL_018d;
						case 23:
							goto IL_01c3;
						case 24:
							goto IL_01d1;
						case 25:
							goto IL_01ec;
						case 26:
							goto IL_01f9;
						case 27:
							goto IL_0209;
						case 28:
							goto IL_0222;
						case 29:
							goto IL_0232;
						case 30:
							goto IL_024a;
						case 31:
							goto IL_0261;
						case 32:
						case 33:
							goto IL_0268;
						case 35:
							goto IL_0281;
						case 36:
							goto IL_02b7;
						case 37:
							goto IL_02c5;
						case 38:
							goto IL_02e0;
						case 39:
							goto IL_02ed;
						case 40:
							goto IL_02fd;
						case 41:
							goto IL_0316;
						case 42:
							goto IL_0326;
						case 43:
							goto IL_033e;
						case 44:
							goto IL_0355;
						case 45:
						case 46:
							goto IL_035c;
						case 48:
							goto IL_0375;
						case 49:
							goto IL_03ab;
						case 50:
							goto IL_03b9;
						case 51:
							goto IL_03d4;
						case 52:
							goto IL_03e1;
						case 53:
							goto IL_03f1;
						case 54:
							goto IL_040a;
						case 55:
							goto IL_041a;
						case 56:
							goto IL_0432;
						case 57:
							goto IL_0449;
						case 58:
						case 59:
							goto IL_0450;
						case 61:
							goto IL_0469;
						case 62:
							goto IL_049f;
						case 63:
							goto IL_04ad;
						case 64:
							goto IL_04c8;
						case 65:
							goto IL_04d5;
						case 66:
							goto IL_04e5;
						case 67:
							goto IL_04fe;
						case 68:
							goto IL_050e;
						case 69:
							goto IL_0526;
						case 70:
							goto IL_053d;
						case 71:
						case 72:
							goto IL_0544;
						case 74:
							goto IL_055d;
						case 75:
							goto IL_0593;
						case 76:
							goto IL_05a1;
						case 77:
							goto IL_05bc;
						case 78:
							goto IL_05c9;
						case 79:
							goto IL_05d9;
						case 80:
							goto IL_05f2;
						case 81:
							goto IL_0602;
						case 82:
							goto IL_061a;
						case 83:
							goto IL_0631;
						case 84:
						case 85:
							goto IL_0638;
						case 87:
							goto IL_064e;
						default:
							goto end_IL_0001;
						case 6:
						case 8:
						case 21:
						case 34:
						case 47:
						case 60:
						case 73:
						case 86:
						case 89:
							goto end_IL_0001_2;
						}
						goto default;
					}
					IL_0631:
					num2 = 83;
					num5 = 0;
					goto IL_0638;
					IL_0638:
					num2 = 85;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_064e;
					IL_061a:
					num2 = 82;
					if (!chkCh6.Checked)
					{
						goto IL_0631;
					}
					goto IL_0638;
					IL_064e:
					num2 = 87;
					if (num5 <= 15)
					{
						goto IL_0015;
					}
					goto end_IL_0001_2;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_000f;
					IL_000f:
					num2 = 3;
					num6 = EEs;
					goto IL_0015;
					IL_0015:
					num2 = 4;
					num5 = checked(num5 + 1);
					goto IL_001b;
					IL_001b:
					num2 = 5;
					if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0081;
					IL_0081:
					num2 = 7;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0099;
					IL_0099:
					num2 = 9;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_00cf;
					}
					goto IL_0174;
					IL_00cf:
					num2 = 10;
					if (num6 == 0)
					{
						goto IL_00dd;
					}
					goto IL_00f8;
					IL_00dd:
					num2 = 11;
					EEs = checked((int)Math.Round(Conversion.Val(lblGiftV1.Text)));
					goto IL_00f8;
					IL_00f8:
					num2 = 12;
					if (num5 == 4)
					{
						goto IL_0105;
					}
					goto IL_0115;
					IL_0105:
					num2 = 13;
					ResetUssdCodeVC(lblPort1);
					goto IL_0115;
					IL_0115:
					num2 = 14;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_012e;
					}
					goto IL_013e;
					IL_012e:
					num2 = 15;
					ResetUssdCode(lblPort1);
					goto IL_013e;
					IL_013e:
					num2 = 16;
					SetUssdOrderVc365X(lblPort1, chkCh1, TransNum365, EEs);
					goto IL_0156;
					IL_0156:
					num2 = 17;
					if (!chkCh1.Checked)
					{
						goto IL_016d;
					}
					goto IL_0174;
					IL_016d:
					num2 = 18;
					num5 = 0;
					goto IL_0174;
					IL_0174:
					num2 = 20;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_018d;
					IL_018d:
					num2 = 22;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_01c3;
					}
					goto IL_0268;
					IL_01c3:
					num2 = 23;
					if (num6 == 0)
					{
						goto IL_01d1;
					}
					goto IL_01ec;
					IL_01d1:
					num2 = 24;
					EEs = checked((int)Math.Round(Conversion.Val(lblGiftV2.Text)));
					goto IL_01ec;
					IL_01ec:
					num2 = 25;
					if (num5 == 4)
					{
						goto IL_01f9;
					}
					goto IL_0209;
					IL_01f9:
					num2 = 26;
					ResetUssdCodeVC(lblPort2);
					goto IL_0209;
					IL_0209:
					num2 = 27;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_0222;
					}
					goto IL_0232;
					IL_0222:
					num2 = 28;
					ResetUssdCode(lblPort2);
					goto IL_0232;
					IL_0232:
					num2 = 29;
					SetUssdOrderVc365X(lblPort2, chkCh2, TransNum365, EEs);
					goto IL_024a;
					IL_024a:
					num2 = 30;
					if (!chkCh2.Checked)
					{
						goto IL_0261;
					}
					goto IL_0268;
					IL_0261:
					num2 = 31;
					num5 = 0;
					goto IL_0268;
					IL_0268:
					num2 = 33;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0281;
					IL_0281:
					num2 = 35;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_02b7;
					}
					goto IL_035c;
					IL_02b7:
					num2 = 36;
					if (num6 == 0)
					{
						goto IL_02c5;
					}
					goto IL_02e0;
					IL_02c5:
					num2 = 37;
					EEs = checked((int)Math.Round(Conversion.Val(lblGiftV3.Text)));
					goto IL_02e0;
					IL_02e0:
					num2 = 38;
					if (num5 == 4)
					{
						goto IL_02ed;
					}
					goto IL_02fd;
					IL_02ed:
					num2 = 39;
					ResetUssdCodeVC(lblPort3);
					goto IL_02fd;
					IL_02fd:
					num2 = 40;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_0316;
					}
					goto IL_0326;
					IL_0316:
					num2 = 41;
					ResetUssdCode(lblPort3);
					goto IL_0326;
					IL_0326:
					num2 = 42;
					SetUssdOrderVc365X(lblPort3, chkCh3, TransNum365, EEs);
					goto IL_033e;
					IL_033e:
					num2 = 43;
					if (!chkCh3.Checked)
					{
						goto IL_0355;
					}
					goto IL_035c;
					IL_0355:
					num2 = 44;
					num5 = 0;
					goto IL_035c;
					IL_035c:
					num2 = 46;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0375;
					IL_0375:
					num2 = 48;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_03ab;
					}
					goto IL_0450;
					IL_03ab:
					num2 = 49;
					if (num6 == 0)
					{
						goto IL_03b9;
					}
					goto IL_03d4;
					IL_03b9:
					num2 = 50;
					EEs = checked((int)Math.Round(Conversion.Val(lblGiftV4.Text)));
					goto IL_03d4;
					IL_03d4:
					num2 = 51;
					if (num5 == 4)
					{
						goto IL_03e1;
					}
					goto IL_03f1;
					IL_03e1:
					num2 = 52;
					ResetUssdCodeVC(lblPort4);
					goto IL_03f1;
					IL_03f1:
					num2 = 53;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_040a;
					}
					goto IL_041a;
					IL_040a:
					num2 = 54;
					ResetUssdCode(lblPort4);
					goto IL_041a;
					IL_041a:
					num2 = 55;
					SetUssdOrderVc365X(lblPort4, chkCh4, TransNum365, EEs);
					goto IL_0432;
					IL_0432:
					num2 = 56;
					if (!chkCh4.Checked)
					{
						goto IL_0449;
					}
					goto IL_0450;
					IL_0449:
					num2 = 57;
					num5 = 0;
					goto IL_0450;
					IL_0450:
					num2 = 59;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0469;
					IL_0469:
					num2 = 61;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_049f;
					}
					goto IL_0544;
					IL_049f:
					num2 = 62;
					if (num6 == 0)
					{
						goto IL_04ad;
					}
					goto IL_04c8;
					IL_04ad:
					num2 = 63;
					EEs = checked((int)Math.Round(Conversion.Val(lblGiftV5.Text)));
					goto IL_04c8;
					IL_04c8:
					num2 = 64;
					if (num5 == 4)
					{
						goto IL_04d5;
					}
					goto IL_04e5;
					IL_04d5:
					num2 = 65;
					ResetUssdCodeVC(lblPort5);
					goto IL_04e5;
					IL_04e5:
					num2 = 66;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_04fe;
					}
					goto IL_050e;
					IL_04fe:
					num2 = 67;
					ResetUssdCode(lblPort4);
					goto IL_050e;
					IL_050e:
					num2 = 68;
					SetUssdOrderVc365X(lblPort5, chkCh5, TransNum365, EEs);
					goto IL_0526;
					IL_0526:
					num2 = 69;
					if (!chkCh5.Checked)
					{
						goto IL_053d;
					}
					goto IL_0544;
					IL_053d:
					num2 = 70;
					num5 = 0;
					goto IL_0544;
					IL_0544:
					num2 = 72;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_055d;
					IL_055d:
					num2 = 74;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_0593;
					}
					goto IL_0638;
					IL_0593:
					num2 = 75;
					if (num6 == 0)
					{
						goto IL_05a1;
					}
					goto IL_05bc;
					IL_05a1:
					num2 = 76;
					EEs = checked((int)Math.Round(Conversion.Val(lblGiftV6.Text)));
					goto IL_05bc;
					IL_05bc:
					num2 = 77;
					if (num5 == 4)
					{
						goto IL_05c9;
					}
					goto IL_05d9;
					IL_05c9:
					num2 = 78;
					ResetUssdCodeVC(lblPort6);
					goto IL_05d9;
					IL_05d9:
					num2 = 79;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_05f2;
					}
					goto IL_0602;
					IL_05f2:
					num2 = 80;
					ResetUssdCode(lblPort6);
					goto IL_0602;
					IL_0602:
					num2 = 81;
					SetUssdOrderVc365X(lblPort6, chkCh6, TransNum365, EEs);
					goto IL_061a;
					end_IL_0001:
					break;
				}
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 2014;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_2:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVc365_WithGifts(string TransNum365, int EEs)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		int num6 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 2554:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_000f;
						case 4:
						case 108:
							goto IL_0015;
						case 5:
							goto IL_001b;
						case 7:
							goto IL_0081;
						case 9:
							goto IL_0099;
						case 10:
							goto IL_00eb;
						case 11:
							goto IL_00f9;
						case 12:
							goto IL_0129;
						case 14:
							goto IL_0134;
						case 13:
						case 15:
						case 16:
						case 17:
							goto IL_0152;
						case 18:
							goto IL_015f;
						case 19:
							goto IL_016f;
						case 20:
							goto IL_0188;
						case 21:
							goto IL_0198;
						case 22:
							goto IL_01b0;
						case 23:
							goto IL_01c7;
						case 24:
						case 25:
							goto IL_01ce;
						case 27:
							goto IL_01e7;
						case 28:
							goto IL_0239;
						case 29:
							goto IL_0269;
						case 31:
							goto IL_0274;
						case 30:
						case 32:
						case 33:
							goto IL_0290;
						case 34:
							goto IL_029d;
						case 35:
							goto IL_02ad;
						case 36:
							goto IL_02c6;
						case 37:
							goto IL_02d6;
						case 38:
							goto IL_02ee;
						case 39:
							goto IL_0305;
						case 40:
						case 41:
							goto IL_030c;
						case 43:
							goto IL_0325;
						case 44:
							goto IL_0377;
						case 45:
							goto IL_03a7;
						case 47:
							goto IL_03b2;
						case 46:
						case 48:
						case 49:
							goto IL_03ce;
						case 50:
							goto IL_03db;
						case 51:
							goto IL_03eb;
						case 52:
							goto IL_0404;
						case 53:
							goto IL_0414;
						case 54:
							goto IL_042c;
						case 55:
							goto IL_0443;
						case 56:
						case 57:
							goto IL_044a;
						case 59:
							goto IL_0463;
						case 60:
							goto IL_04b5;
						case 61:
							goto IL_04e5;
						case 63:
							goto IL_04f0;
						case 62:
						case 64:
						case 65:
							goto IL_050c;
						case 66:
							goto IL_0519;
						case 67:
							goto IL_0529;
						case 68:
							goto IL_0542;
						case 69:
							goto IL_0552;
						case 70:
							goto IL_056a;
						case 71:
							goto IL_0581;
						case 72:
						case 73:
							goto IL_0588;
						case 75:
							goto IL_05a1;
						case 76:
							goto IL_05f3;
						case 77:
							goto IL_0623;
						case 79:
							goto IL_062e;
						case 78:
						case 80:
						case 81:
							goto IL_064a;
						case 82:
							goto IL_0657;
						case 83:
							goto IL_0667;
						case 84:
							goto IL_0680;
						case 85:
							goto IL_0690;
						case 86:
							goto IL_06a8;
						case 87:
							goto IL_06bf;
						case 88:
						case 89:
							goto IL_06c6;
						case 91:
							goto IL_06df;
						case 92:
							goto IL_0731;
						case 93:
							goto IL_0761;
						case 95:
							goto IL_076c;
						case 94:
						case 96:
						case 97:
							goto IL_0788;
						case 98:
							goto IL_0795;
						case 99:
							goto IL_07a5;
						case 100:
							goto IL_07be;
						case 101:
							goto IL_07ce;
						case 102:
							goto IL_07e6;
						case 103:
							goto IL_07fd;
						case 104:
						case 105:
							goto IL_0804;
						case 107:
							goto IL_081a;
						default:
							goto end_IL_0001;
						case 6:
						case 8:
						case 26:
						case 42:
						case 58:
						case 74:
						case 90:
						case 106:
						case 109:
							goto end_IL_0001_2;
						}
						goto default;
					}
					IL_07fd:
					num2 = 103;
					num5 = 0;
					goto IL_0804;
					IL_0804:
					num2 = 105;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_081a;
					IL_07e6:
					num2 = 102;
					if (!chkCh6.Checked)
					{
						goto IL_07fd;
					}
					goto IL_0804;
					IL_081a:
					num2 = 107;
					if (num5 <= 20)
					{
						goto IL_0015;
					}
					goto end_IL_0001_2;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_000f;
					IL_000f:
					num2 = 3;
					num6 = EEs;
					goto IL_0015;
					IL_0015:
					num2 = 4;
					num5 = checked(num5 + 1);
					goto IL_001b;
					IL_001b:
					num2 = 5;
					if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0081;
					IL_0081:
					num2 = 7;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0099;
					IL_0099:
					num2 = 9;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked & (Conversion.Val(lblGiftV1.Text) > 0.0))
					{
						goto IL_00eb;
					}
					goto IL_01ce;
					IL_00eb:
					num2 = 10;
					if (num6 == 0)
					{
						goto IL_00f9;
					}
					goto IL_0152;
					IL_00f9:
					num2 = 11;
					if (chkUse365inprcss10.Checked & (Conversion.Val(lblGiftV1.Text) == 5.0))
					{
						goto IL_0129;
					}
					goto IL_0134;
					IL_0129:
					num2 = 12;
					EEs = 10;
					goto IL_0152;
					IL_0134:
					num2 = 14;
					EEs = checked((int)Math.Round(Conversion.Val(lblGiftV1.Text)));
					goto IL_0152;
					IL_0152:
					num2 = 17;
					if (num5 == 4)
					{
						goto IL_015f;
					}
					goto IL_016f;
					IL_015f:
					num2 = 18;
					ResetUssdCodeVC(lblPort1);
					goto IL_016f;
					IL_016f:
					num2 = 19;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_0188;
					}
					goto IL_0198;
					IL_0188:
					num2 = 20;
					ResetUssdCode(lblPort1);
					goto IL_0198;
					IL_0198:
					num2 = 21;
					SetUssdOrderVc365X(lblPort1, chkCh1, TransNum365, EEs);
					goto IL_01b0;
					IL_01b0:
					num2 = 22;
					if (!chkCh1.Checked)
					{
						goto IL_01c7;
					}
					goto IL_01ce;
					IL_01c7:
					num2 = 23;
					num5 = 0;
					goto IL_01ce;
					IL_01ce:
					num2 = 25;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_01e7;
					IL_01e7:
					num2 = 27;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked & (Conversion.Val(lblGiftV2.Text) > 0.0))
					{
						goto IL_0239;
					}
					goto IL_030c;
					IL_0239:
					num2 = 28;
					if (chkUse365inprcss10.Checked & (Conversion.Val(lblGiftV2.Text) == 5.0))
					{
						goto IL_0269;
					}
					goto IL_0274;
					IL_0269:
					num2 = 29;
					EEs = 10;
					goto IL_0290;
					IL_0274:
					num2 = 31;
					EEs = checked((int)Math.Round(Conversion.Val(lblGiftV2.Text)));
					goto IL_0290;
					IL_0290:
					num2 = 33;
					if (num5 == 4)
					{
						goto IL_029d;
					}
					goto IL_02ad;
					IL_029d:
					num2 = 34;
					ResetUssdCodeVC(lblPort2);
					goto IL_02ad;
					IL_02ad:
					num2 = 35;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_02c6;
					}
					goto IL_02d6;
					IL_02c6:
					num2 = 36;
					ResetUssdCode(lblPort2);
					goto IL_02d6;
					IL_02d6:
					num2 = 37;
					SetUssdOrderVc365X(lblPort2, chkCh2, TransNum365, EEs);
					goto IL_02ee;
					IL_02ee:
					num2 = 38;
					if (!chkCh2.Checked)
					{
						goto IL_0305;
					}
					goto IL_030c;
					IL_0305:
					num2 = 39;
					num5 = 0;
					goto IL_030c;
					IL_030c:
					num2 = 41;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0325;
					IL_0325:
					num2 = 43;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked & (Conversion.Val(lblGiftV3.Text) > 0.0))
					{
						goto IL_0377;
					}
					goto IL_044a;
					IL_0377:
					num2 = 44;
					if (chkUse365inprcss10.Checked & (Conversion.Val(lblGiftV3.Text) == 5.0))
					{
						goto IL_03a7;
					}
					goto IL_03b2;
					IL_03a7:
					num2 = 45;
					EEs = 10;
					goto IL_03ce;
					IL_03b2:
					num2 = 47;
					EEs = checked((int)Math.Round(Conversion.Val(lblGiftV3.Text)));
					goto IL_03ce;
					IL_03ce:
					num2 = 49;
					if (num5 == 4)
					{
						goto IL_03db;
					}
					goto IL_03eb;
					IL_03db:
					num2 = 50;
					ResetUssdCodeVC(lblPort3);
					goto IL_03eb;
					IL_03eb:
					num2 = 51;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_0404;
					}
					goto IL_0414;
					IL_0404:
					num2 = 52;
					ResetUssdCode(lblPort3);
					goto IL_0414;
					IL_0414:
					num2 = 53;
					SetUssdOrderVc365X(lblPort3, chkCh3, TransNum365, EEs);
					goto IL_042c;
					IL_042c:
					num2 = 54;
					if (!chkCh3.Checked)
					{
						goto IL_0443;
					}
					goto IL_044a;
					IL_0443:
					num2 = 55;
					num5 = 0;
					goto IL_044a;
					IL_044a:
					num2 = 57;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0463;
					IL_0463:
					num2 = 59;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked & (Conversion.Val(lblGiftV4.Text) > 0.0))
					{
						goto IL_04b5;
					}
					goto IL_0588;
					IL_04b5:
					num2 = 60;
					if (chkUse365inprcss10.Checked & (Conversion.Val(lblGiftV4.Text) == 5.0))
					{
						goto IL_04e5;
					}
					goto IL_04f0;
					IL_04e5:
					num2 = 61;
					EEs = 10;
					goto IL_050c;
					IL_04f0:
					num2 = 63;
					EEs = checked((int)Math.Round(Conversion.Val(lblGiftV4.Text)));
					goto IL_050c;
					IL_050c:
					num2 = 65;
					if (num5 == 4)
					{
						goto IL_0519;
					}
					goto IL_0529;
					IL_0519:
					num2 = 66;
					ResetUssdCodeVC(lblPort4);
					goto IL_0529;
					IL_0529:
					num2 = 67;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_0542;
					}
					goto IL_0552;
					IL_0542:
					num2 = 68;
					ResetUssdCode(lblPort4);
					goto IL_0552;
					IL_0552:
					num2 = 69;
					SetUssdOrderVc365X(lblPort4, chkCh4, TransNum365, EEs);
					goto IL_056a;
					IL_056a:
					num2 = 70;
					if (!chkCh4.Checked)
					{
						goto IL_0581;
					}
					goto IL_0588;
					IL_0581:
					num2 = 71;
					num5 = 0;
					goto IL_0588;
					IL_0588:
					num2 = 73;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_05a1;
					IL_05a1:
					num2 = 75;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked & (Conversion.Val(lblGiftV5.Text) > 0.0))
					{
						goto IL_05f3;
					}
					goto IL_06c6;
					IL_05f3:
					num2 = 76;
					if (chkUse365inprcss10.Checked & (Conversion.Val(lblGiftV5.Text) == 5.0))
					{
						goto IL_0623;
					}
					goto IL_062e;
					IL_0623:
					num2 = 77;
					EEs = 10;
					goto IL_064a;
					IL_062e:
					num2 = 79;
					EEs = checked((int)Math.Round(Conversion.Val(lblGiftV5.Text)));
					goto IL_064a;
					IL_064a:
					num2 = 81;
					if (num5 == 4)
					{
						goto IL_0657;
					}
					goto IL_0667;
					IL_0657:
					num2 = 82;
					ResetUssdCodeVC(lblPort5);
					goto IL_0667;
					IL_0667:
					num2 = 83;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_0680;
					}
					goto IL_0690;
					IL_0680:
					num2 = 84;
					ResetUssdCode(lblPort4);
					goto IL_0690;
					IL_0690:
					num2 = 85;
					SetUssdOrderVc365X(lblPort5, chkCh5, TransNum365, EEs);
					goto IL_06a8;
					IL_06a8:
					num2 = 86;
					if (!chkCh5.Checked)
					{
						goto IL_06bf;
					}
					goto IL_06c6;
					IL_06bf:
					num2 = 87;
					num5 = 0;
					goto IL_06c6;
					IL_06c6:
					num2 = 89;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_06df;
					IL_06df:
					num2 = 91;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked & (Conversion.Val(lblGiftV6.Text) > 0.0))
					{
						goto IL_0731;
					}
					goto IL_0804;
					IL_0731:
					num2 = 92;
					if (chkUse365inprcss10.Checked & (Conversion.Val(lblGiftV6.Text) == 5.0))
					{
						goto IL_0761;
					}
					goto IL_076c;
					IL_0761:
					num2 = 93;
					EEs = 10;
					goto IL_0788;
					IL_076c:
					num2 = 95;
					EEs = checked((int)Math.Round(Conversion.Val(lblGiftV6.Text)));
					goto IL_0788;
					IL_0788:
					num2 = 97;
					if (num5 == 4)
					{
						goto IL_0795;
					}
					goto IL_07a5;
					IL_0795:
					num2 = 98;
					ResetUssdCodeVC(lblPort6);
					goto IL_07a5;
					IL_07a5:
					num2 = 99;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_07be;
					}
					goto IL_07ce;
					IL_07be:
					num2 = 100;
					ResetUssdCode(lblPort6);
					goto IL_07ce;
					IL_07ce:
					num2 = 101;
					SetUssdOrderVc365X(lblPort6, chkCh6, TransNum365, EEs);
					goto IL_07e6;
					end_IL_0001:
					break;
				}
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 2554;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_2:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVc365X(Label Exxc, CheckBox EErd, string TransNum365, int EEs)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					string commandCode;
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						int num3 = 0;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						int num4 = 0;
						AutoRes = 0;
						string text = serialPort.ReadExisting();
						while (true)
						{
							num4++;
							if (num4 >= 15)
							{
								break;
							}
							string ussdCommandFull = "*365#";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							lblProgress.Text = "365 " + Exxc.Text + "(" + Conversions.ToString(num4) + ")";
							Application.DoEvents();
							int num5 = 0;
							int num6 = 100;
							while (true)
							{
								Thread.Sleep(800);
								text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("+CUSD: "))
								{
									string text2 = text;
									num5 = text.IndexOf("+CUSD: ");
									text2 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text2.IndexOf(",");
									string text3 = text2.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text3 = text3.Trim('"').Trim(',').Trim('"');
									if (text3.Length > 3)
									{
										string text4;
										if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text3);
											text4 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text4 = encoding_mod.Decode7Bit(text3);
										}
										OutBoxDrop(Exxc, text4);
										Application.DoEvents();
										if (text4.Contains("Service"))
										{
											Application.DoEvents();
											break;
										}
										if (text4.Contains("محفظة فودافون كاش") & text4.Contains("جنيه\u00a0على"))
										{
											if (Exxc.BackColor == Color.LightBlue)
											{
												Exxc.BackColor = Color.Red;
											}
											else
											{
												Exxc.BackColor = Color.PaleGoldenrod;
											}
											Application.DoEvents();
											if (EEs > 0)
											{
												ChargeFromVCthismony(Exxc, EEs, serialPort, TransNum365);
												DisablePort(Exxc);
												Application.DoEvents();
												break;
											}
											if (!chk250int.Checked)
											{
												DisablePort(Exxc);
												Application.DoEvents();
												break;
											}
										}
										if (text4.Contains("فودافون كاش 10 جنيه") & text4.Contains("جنيه\u00a0على"))
										{
											if (Exxc.BackColor == Color.LightBlue)
											{
												Exxc.BackColor = Color.Red;
											}
											else
											{
												Exxc.BackColor = Color.PaleGoldenrod;
											}
											Application.DoEvents();
											if (EEs > 0)
											{
												ChargeFromVCthismony(Exxc, EEs, serialPort, TransNum365);
												DisablePort(Exxc);
												Application.DoEvents();
												break;
											}
											if (!chk250int.Checked)
											{
												DisablePort(Exxc);
												Application.DoEvents();
												break;
											}
										}
										if (text4.Contains("محفظة فودافون كاش") & text4.Contains("وإستمتع ب30"))
										{
											if (Exxc.BackColor == Color.LightBlue)
											{
												Exxc.BackColor = Color.Red;
											}
											else
											{
												Exxc.BackColor = Color.PaleGoldenrod;
											}
											if (EEs > 0)
											{
												ChargeFromVCthismony(Exxc, EEs, serialPort, TransNum365);
												DisablePort(Exxc);
												Application.DoEvents();
												break;
											}
											Application.DoEvents();
											if (!chk250int.Checked)
											{
												DisablePort(Exxc);
												Application.DoEvents();
												break;
											}
										}
										if (chk250int.Checked && (text4.Contains("فودافون كاش") & text4.Contains("وإستمتع ب250")))
										{
											if (Exxc.BackColor == Color.PaleGoldenrod)
											{
												Exxc.BackColor = Color.Red;
											}
											else
											{
												Exxc.BackColor = Color.LightBlue;
											}
											Application.DoEvents();
										}
										if (text4.Contains("مبروك كسبت 50 جنيه\u00a0على محفظتك"))
										{
											OKhave50 = 0;
											ChargeFromVCthismony50(Exxc, 50, serialPort, TransNum365);
											Exxc.BackColor = Color.PaleGreen;
											Application.DoEvents();
											break;
										}
										if (text4.Contains("هديتك كسبت 50 جنيه"))
										{
											OKhave50 = 0;
											ChargeFromVCthismony50(Exxc, 50, serialPort, TransNum365);
											Exxc.BackColor = Color.PaleGreen;
											Application.DoEvents();
											break;
										}
										if (text4.Contains("مبروك كسبت 20 جنيه\u00a0على محفظتك"))
										{
											OKhave50 = 0;
											ChargeFromVCthismony50(Exxc, 20, serialPort, TransNum365);
											Exxc.BackColor = Color.PaleGreen;
											Application.DoEvents();
											break;
										}
										if (text4.Contains("مبروك كسبت 15 جنيه\u00a0على محفظتك"))
										{
											OKhave50 = 0;
											ChargeFromVCthismony50(Exxc, 15, serialPort, TransNum365);
											Exxc.BackColor = Color.PaleGreen;
											Application.DoEvents();
											break;
										}
										if (chkFast365.Checked && (text4.Contains("محفظة فودافون كاش") & text4.Contains("وإستمتع ب250")))
										{
											DisablePort(Exxc);
											Application.DoEvents();
											break;
										}
										if (text4.Contains("لا يوجد عروض أخري من فودافون كاش") | text4.Contains("Please try again later"))
										{
											DisablePort(Exxc);
											Application.DoEvents();
											break;
										}
										if (text4.Contains("1: دقائق فودافون") & text4.Contains("4:دقائق لكل شبكات") & text4.Contains("2:رسائل") & text4.Contains("3:ميجابيتس"))
										{
											DisablePort(Exxc);
											Application.DoEvents();
											break;
										}
										if (num3 >= 3)
										{
											Application.DoEvents();
											EErd.Checked = false;
											break;
										}
										num6 = GetTypeOfmessage365(text4);
										if (num6 == 0)
										{
											ussdCommandFull = "0";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(800);
											continue;
										}
										if (num6 < 99)
										{
											if (num6 == 2)
											{
												num3++;
											}
											ussdCommandFull = num6.ToString();
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(800);
											continue;
										}
										Application.DoEvents();
									}
								}
								if (text.Contains("retry operation") | text.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E") | text.Contains("063906410648062700200627064406310642064500200627064406300649002006270"))
								{
									goto IL_081b;
								}
								if (!(text.Contains("CME ERROR: unknown") | text.Contains("CUSD: 5") | text.Contains("063906410648062700200627064406310642064500200627064406300649002006270")))
								{
									Application.DoEvents();
									num5++;
									if (num5 > 30)
									{
										break;
									}
									continue;
								}
								goto IL_0850;
							}
							break;
							IL_081b:
							Application.DoEvents();
							continue;
							IL_0850:
							Application.DoEvents();
						}
						break;
					}
					case 2236:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					commandCode = "AT+CUSD=2";
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(1000);
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 2236;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyAllTransferToVC365_50(int TransferVal)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		bool flag = default(bool);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 2009:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_000f;
						case 4:
							goto IL_001e;
						case 5:
							goto IL_002e;
						case 7:
						case 8:
							goto IL_0048;
						case 9:
							goto IL_0068;
						case 11:
						case 12:
							goto IL_007f;
						case 13:
							goto IL_0093;
						case 14:
							goto IL_00a7;
						case 15:
							goto IL_00b1;
						case 16:
						case 76:
							goto IL_00c2;
						case 17:
							goto IL_00c9;
						case 19:
							goto IL_0130;
						case 20:
							goto IL_017c;
						case 21:
							goto IL_0189;
						case 22:
							goto IL_0199;
						case 23:
							goto IL_01b2;
						case 24:
							goto IL_01c2;
						case 25:
							goto IL_01e0;
						case 26:
							goto IL_01f7;
						case 27:
						case 28:
							goto IL_01fe;
						case 29:
							goto IL_024a;
						case 30:
							goto IL_0257;
						case 31:
							goto IL_0267;
						case 32:
							goto IL_0280;
						case 33:
							goto IL_0290;
						case 34:
							goto IL_02ae;
						case 35:
							goto IL_02c5;
						case 36:
						case 37:
							goto IL_02cc;
						case 38:
							goto IL_0318;
						case 39:
							goto IL_0325;
						case 40:
							goto IL_0335;
						case 41:
							goto IL_034e;
						case 42:
							goto IL_035e;
						case 43:
							goto IL_037c;
						case 44:
							goto IL_0393;
						case 45:
						case 46:
							goto IL_039a;
						case 47:
							goto IL_03e6;
						case 48:
							goto IL_03f3;
						case 49:
							goto IL_0403;
						case 50:
							goto IL_041c;
						case 51:
							goto IL_042c;
						case 52:
							goto IL_044a;
						case 53:
							goto IL_0461;
						case 54:
						case 55:
							goto IL_0468;
						case 56:
							goto IL_04b4;
						case 57:
							goto IL_04c1;
						case 58:
							goto IL_04d1;
						case 59:
							goto IL_04ea;
						case 60:
							goto IL_04fa;
						case 61:
							goto IL_0518;
						case 62:
							goto IL_052f;
						case 63:
						case 64:
							goto IL_0536;
						case 65:
							goto IL_0582;
						case 66:
							goto IL_058f;
						case 67:
							goto IL_059f;
						case 68:
							goto IL_05b8;
						case 69:
							goto IL_05c8;
						case 70:
							goto IL_05e6;
						case 71:
							goto IL_05fd;
						case 72:
						case 73:
							goto IL_0604;
						case 75:
							goto IL_061a;
						case 77:
							goto IL_062f;
						case 18:
						case 74:
						case 78:
							goto IL_0639;
						case 79:
							goto IL_064a;
						case 80:
							goto IL_0654;
						case 81:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 6:
						case 10:
						case 82:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0639:
					num2 = 78;
					ckUse910.Checked = flag;
					goto IL_064a;
					IL_064a:
					num2 = 79;
					EnableCntl();
					goto IL_0654;
					IL_062f:
					num2 = 77;
					Application.DoEvents();
					goto IL_0639;
					IL_0654:
					num2 = 80;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_000f;
					IL_000f:
					num2 = 3;
					flag = ckUse910.Checked;
					goto IL_001e;
					IL_001e:
					num2 = 4;
					if (MysqlConn.MainProgLic < 7)
					{
						goto IL_002e;
					}
					goto IL_0048;
					IL_002e:
					num2 = 5;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0048:
					num2 = 8;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0068;
					}
					goto IL_007f;
					IL_0068:
					num2 = 9;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_007f:
					num2 = 12;
					lblProgress.BackColor = Color.Red;
					goto IL_0093;
					IL_0093:
					num2 = 13;
					lblProgress.Text = "تحويل المبلغ رصيد";
					goto IL_00a7;
					IL_00a7:
					num2 = 14;
					DisableCntl();
					goto IL_00b1;
					IL_00b1:
					num2 = 15;
					ckUse910.Checked = true;
					goto IL_00c2;
					IL_00c2:
					num2 = 16;
					num5 = checked(num5 + 1);
					goto IL_00c9;
					IL_00c9:
					num2 = 17;
					if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						goto IL_0130;
					}
					goto IL_0639;
					IL_0130:
					num2 = 19;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked & (lblPort1.BackColor == Color.PaleGreen))
					{
						goto IL_017c;
					}
					goto IL_01fe;
					IL_017c:
					num2 = 20;
					if (num5 == 4)
					{
						goto IL_0189;
					}
					goto IL_0199;
					IL_0189:
					num2 = 21;
					ResetUssdCodeVC(lblPort1);
					goto IL_0199;
					IL_0199:
					num2 = 22;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_01b2;
					}
					goto IL_01c2;
					IL_01b2:
					num2 = 23;
					ResetUssdCode(lblPort1);
					goto IL_01c2;
					IL_01c2:
					num2 = 24;
					SetUssdOrderVcashTraVXPVaryGift(lblPort1, 50, num5, txtTransNum2365Gft.Text);
					goto IL_01e0;
					IL_01e0:
					num2 = 25;
					if (!chkCh1.Checked)
					{
						goto IL_01f7;
					}
					goto IL_01fe;
					IL_01f7:
					num2 = 26;
					num5 = 0;
					goto IL_01fe;
					IL_01fe:
					num2 = 28;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked & (lblPort2.BackColor == Color.PaleGreen))
					{
						goto IL_024a;
					}
					goto IL_02cc;
					IL_024a:
					num2 = 29;
					if (num5 == 4)
					{
						goto IL_0257;
					}
					goto IL_0267;
					IL_0257:
					num2 = 30;
					ResetUssdCodeVC(lblPort2);
					goto IL_0267;
					IL_0267:
					num2 = 31;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_0280;
					}
					goto IL_0290;
					IL_0280:
					num2 = 32;
					ResetUssdCode(lblPort2);
					goto IL_0290;
					IL_0290:
					num2 = 33;
					SetUssdOrderVcashTraVXPVaryGift(lblPort2, 50, num5, txtTransNum2365Gft.Text);
					goto IL_02ae;
					IL_02ae:
					num2 = 34;
					if (!chkCh2.Checked)
					{
						goto IL_02c5;
					}
					goto IL_02cc;
					IL_02c5:
					num2 = 35;
					num5 = 0;
					goto IL_02cc;
					IL_02cc:
					num2 = 37;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked & (lblPort3.BackColor == Color.PaleGreen))
					{
						goto IL_0318;
					}
					goto IL_039a;
					IL_0318:
					num2 = 38;
					if (num5 == 4)
					{
						goto IL_0325;
					}
					goto IL_0335;
					IL_0325:
					num2 = 39;
					ResetUssdCodeVC(lblPort3);
					goto IL_0335;
					IL_0335:
					num2 = 40;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_034e;
					}
					goto IL_035e;
					IL_034e:
					num2 = 41;
					ResetUssdCode(lblPort3);
					goto IL_035e;
					IL_035e:
					num2 = 42;
					SetUssdOrderVcashTraVXPVaryGift(lblPort3, 50, num5, txtTransNum2365Gft.Text);
					goto IL_037c;
					IL_037c:
					num2 = 43;
					if (!chkCh3.Checked)
					{
						goto IL_0393;
					}
					goto IL_039a;
					IL_0393:
					num2 = 44;
					num5 = 0;
					goto IL_039a;
					IL_039a:
					num2 = 46;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked & (lblPort4.BackColor == Color.PaleGreen))
					{
						goto IL_03e6;
					}
					goto IL_0468;
					IL_03e6:
					num2 = 47;
					if (num5 == 4)
					{
						goto IL_03f3;
					}
					goto IL_0403;
					IL_03f3:
					num2 = 48;
					ResetUssdCodeVC(lblPort4);
					goto IL_0403;
					IL_0403:
					num2 = 49;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_041c;
					}
					goto IL_042c;
					IL_041c:
					num2 = 50;
					ResetUssdCode(lblPort4);
					goto IL_042c;
					IL_042c:
					num2 = 51;
					SetUssdOrderVcashTraVXPVaryGift(lblPort4, 50, num5, txtTransNum2365Gft.Text);
					goto IL_044a;
					IL_044a:
					num2 = 52;
					if (!chkCh4.Checked)
					{
						goto IL_0461;
					}
					goto IL_0468;
					IL_0461:
					num2 = 53;
					num5 = 0;
					goto IL_0468;
					IL_0468:
					num2 = 55;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked & (lblPort5.BackColor == Color.PaleGreen))
					{
						goto IL_04b4;
					}
					goto IL_0536;
					IL_04b4:
					num2 = 56;
					if (num5 == 4)
					{
						goto IL_04c1;
					}
					goto IL_04d1;
					IL_04c1:
					num2 = 57;
					ResetUssdCodeVC(lblPort5);
					goto IL_04d1;
					IL_04d1:
					num2 = 58;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_04ea;
					}
					goto IL_04fa;
					IL_04ea:
					num2 = 59;
					ResetUssdCode(lblPort5);
					goto IL_04fa;
					IL_04fa:
					num2 = 60;
					SetUssdOrderVcashTraVXPVaryGift(lblPort5, 50, num5, txtTransNum2365Gft.Text);
					goto IL_0518;
					IL_0518:
					num2 = 61;
					if (!chkCh5.Checked)
					{
						goto IL_052f;
					}
					goto IL_0536;
					IL_052f:
					num2 = 62;
					num5 = 0;
					goto IL_0536;
					IL_0536:
					num2 = 64;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked & (lblPort6.BackColor == Color.PaleGreen))
					{
						goto IL_0582;
					}
					goto IL_0604;
					IL_0582:
					num2 = 65;
					if (num5 == 4)
					{
						goto IL_058f;
					}
					goto IL_059f;
					IL_058f:
					num2 = 66;
					ResetUssdCodeVC(lblPort6);
					goto IL_059f;
					IL_059f:
					num2 = 67;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_05b8;
					}
					goto IL_05c8;
					IL_05b8:
					num2 = 68;
					ResetUssdCode(lblPort6);
					goto IL_05c8;
					IL_05c8:
					num2 = 69;
					SetUssdOrderVcashTraVXPVaryGift(lblPort6, 50, num5, txtTransNum2365Gft.Text);
					goto IL_05e6;
					IL_05e6:
					num2 = 70;
					if (!chkCh6.Checked)
					{
						goto IL_05fd;
					}
					goto IL_0604;
					IL_05fd:
					num2 = 71;
					num5 = 0;
					goto IL_0604;
					IL_0604:
					num2 = 73;
					if (!chkStop.Checked)
					{
						goto IL_061a;
					}
					goto IL_0639;
					IL_061a:
					num2 = 75;
					if (num5 <= 5)
					{
						goto IL_00c2;
					}
					goto IL_062f;
					end_IL_0001_2:
					break;
				}
				num2 = 81;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 2009;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private int GetTypeOfmessage365(string EEr)
	{
		checked
		{
			if (EEr.Contains("عروض كاش"))
			{
				int length = EEr.IndexOf("عروض كاش");
				EEr = EEr.Substring(0, length).Trim();
				do
				{
					length = EEr.IndexOf("\r\n");
					if (length < 0)
					{
						break;
					}
					EEr = EEr.Substring(length, EEr.Length - length).Trim('\r').Trim('\r')
						.Trim();
					length = EEr.IndexOf("\r\n");
				}
				while (length >= 0);
				do
				{
					length = EEr.IndexOf("\n");
					if (length < 0)
					{
						break;
					}
					EEr = EEr.Substring(length, EEr.Length - length).Trim('\n').Trim('\r')
						.Trim();
					length = EEr.IndexOf("\n");
				}
				while (length >= 0);
				int num = Conversions.ToInteger(EEr.Substring(0, 1));
				return (int)Math.Round(Conversion.Val(num));
			}
			if (EEr.Contains("مزيد"))
			{
				return 0;
			}
			if (EEr.Contains("لعرض آخر"))
			{
				return 2;
			}
			return 100;
		}
	}

	private int GetRechargeval365(string EEr)
	{
		checked
		{
			if (EEr.Contains("كاش"))
			{
				int num = EEr.IndexOf("كاش");
				EEr = EEr.Substring(num + 4, 3).Trim();
				return (int)Math.Round(Conversion.Val(EEr));
			}
			int result = default(int);
			return result;
		}
	}

	private void ChargeFromVCthismony(Label Exxc, int EEs, SerialPort SPGGx, string TransNum365)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		int num7 = default(int);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						AutoRes = 0;
						int num3 = 0;
						while (true)
						{
							num3++;
							string ussdCommandFull = "1";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							SPGGx.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							lblProgress.Text = "(" + Conversions.ToString(num3) + ")";
							Application.DoEvents();
							Application.DoEvents();
							string text = "#";
							string text2 = "#";
							string text3 = "#";
							string left = "#";
							int num4 = 0;
							while (true)
							{
								Thread.Sleep(700);
								string text4 = SPGGx.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text4) >= 2))
								{
									txtInfo.Text = text4 + "\r\n" + txtInfo.Text;
								}
								if (Operators.CompareString(text4, "", TextCompare: false) == 0)
								{
									if ((Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(text, "", TextCompare: false) == 0) & (Operators.CompareString(text2, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
									{
										break;
									}
									left = text3;
									text3 = text2;
									text2 = text;
									text = text4;
								}
								else
								{
									text = "#";
									text2 = "#";
									text3 = "#";
									left = "#";
								}
								if (text4.Contains("0050006C006500610073006500200069006E007300650072007400200061002000760061006C0069006400200061006E0073007700650072002E002E000A06440627064A0648062C062F002006310635064A062F002006430627064106490020064A") | text4.Contains("064406270020064A0648062C062F002006310635064A062F00"))
								{
									DisablePort(Exxc);
									OutBoxDrop(Exxc, "لا يوجد رصيد كافى للشحن");
									Application.DoEvents();
									goto end_IL_0001;
								}
								if (text4.Contains("+CUSD: "))
								{
									string text5 = text4;
									int num5 = text4.IndexOf("+CUSD: ");
									text5 = text4.Substring(num5 + 10, text4.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text5.IndexOf(",");
									string text6 = text5.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text6 = text6.Trim('"').Trim(',').Trim('"');
									if (text6.Length > 3)
									{
										string text7;
										if (Operators.CompareString(text6.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text6);
											text7 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text7 = encoding_mod.Decode7Bit(text6);
										}
										OutBoxDrop(Exxc, text7);
										if (text7.Contains("تم شحن"))
										{
											ussdCommandFull = "9";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											SPGGx.WriteLine(commandCode + "\r");
											Thread.Sleep(500);
											DisablePort(Exxc);
											goto end_IL_0001;
										}
										if (text7.Contains("لا يمكن"))
										{
											ussdCommandFull = "9";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											SPGGx.WriteLine(commandCode + "\r");
											Thread.Sleep(500);
											goto end_IL_0001;
										}
									}
								}
								if (text4.Contains("0634062D0646002006310635064A062F003A000"))
								{
									ussdCommandFull = (chkChargeOnSame365.Checked ? "1" : "2");
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									SPGGx.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
									text = "#";
									text2 = "#";
									text3 = "#";
									left = "#";
								}
								else if (text4.Contains("06280631062C0627062100200627062F062E06270644002006310642064500"))
								{
									object obj = TransNum365 ?? "";
									if (obj == null)
									{
										obj = "";
									}
									ussdCommandFull = (string)obj;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									SPGGx.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
									text = "#";
									text2 = "#";
									text3 = "#";
									left = "#";
								}
								else if (text4.Contains("0633064A062A06450020062706440634062D06460020064406440631"))
								{
									ussdCommandFull = "1";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									SPGGx.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
									text = "#";
									text2 = "#";
									text3 = "#";
									left = "#";
								}
								else if (text4.Contains("064506460020064106360644064300200627062F062E06440020064506280644063A0020"))
								{
									object obj2 = Conversions.ToString(EEs) ?? "";
									if (obj2 == null)
									{
										obj2 = "";
									}
									ussdCommandFull = (string)obj2;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									SPGGx.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
									text = "#";
									text2 = "#";
									text3 = "#";
									left = "#";
								}
								else if (text4.Contains("0627062F062E064400200627064406310642064500200627064406330631064A00200"))
								{
									object obj3 = txtPass.Text ?? "";
									if (obj3 == null)
									{
										obj3 = "";
									}
									ussdCommandFull = (string)obj3;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									SPGGx.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
									text = "#";
									text2 = "#";
									text3 = "#";
									left = "#";
								}
								else
								{
									if (text4.Contains("062A06450020062A062D0648064A06440020"))
									{
										ussdCommandFull = "9";
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										SPGGx.WriteLine(commandCode + "\r");
										Thread.Sleep(500);
										OutBoxDrop(Exxc, "تم الشحن بنجاح");
										DisablePort(Exxc);
										Application.DoEvents();
										goto end_IL_0001;
									}
									if (text4.Contains("+CME ERROR: 10"))
									{
										AutoRes++;
										if (chkStop.Checked)
										{
											goto end_IL_0001;
										}
										if ((AutoRes >= 3) & chkAutoRes.Checked)
										{
											while (true)
											{
												OutBoxDrop(Exxc, "جارى اعادة التشغيل للمودم");
												OutBoxDropNumber(Exxc);
												Application.DoEvents();
												int num6 = 0;
												while (true)
												{
													Thread.Sleep(250);
													if (chkStop.Checked)
													{
														break;
													}
													Application.DoEvents();
													num6++;
													if (num6 <= 40)
													{
														continue;
													}
													goto IL_0756;
												}
												break;
												IL_0756:
												OutBoxDrop(Exxc, "جارى البحث عن الشريحة ");
												Thread.Sleep(250);
												if (chkStop.Checked)
												{
													break;
												}
												Application.DoEvents();
												if (Exxc.ForeColor != Color.White)
												{
													OutOfgetnumber(Exxc);
													break;
												}
												if (num7 <= 3)
												{
													num7++;
													continue;
												}
												break;
											}
											goto end_IL_0001;
										}
									}
									if (text4.Contains("+CUSD: 5") | text4.Contains("unknown") | text4.Contains("retry operation") | text4.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
									{
										Application.DoEvents();
										goto end_IL_0001;
									}
								}
								Application.DoEvents();
								num4++;
								if (num4 > 25)
								{
									object obj4 = txtPass.Text ?? "";
									if (obj4 == null)
									{
										obj4 = "";
									}
									ussdCommandFull = (string)obj4;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									SPGGx.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
									goto end_IL_0001;
								}
							}
							Application.DoEvents();
							if (num3 <= 2)
							{
								Thread.Sleep(1000);
								continue;
							}
							break;
						}
						break;
					}
					case 2183:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_2;
							}
							break;
						}
						end_IL_0001:
						break;
					}
					SPGGx.Close();
					SPGGx.Dispose();
					SPGGx = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj5) when (obj5 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj5);
				try0001_dispatch = 2183;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ChargeFromVCthismony50(Label Exxc, int EEs, SerialPort SPGGx, string TransNum365)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						AutoRes = 0;
						int num3 = 0;
						while (true)
						{
							num3++;
							string ussdCommandFull = "1";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							SPGGx.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							OKhave50 = 0;
							lblProgress.Text = "(" + Conversions.ToString(num3) + ")";
							Application.DoEvents();
							Application.DoEvents();
							string text = "#";
							string text2 = "#";
							string text3 = "#";
							string left = "#";
							int num4 = 0;
							while (true)
							{
								Thread.Sleep(700);
								string text4 = SPGGx.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text4) >= 2))
								{
									txtInfo.Text = text4 + "\r\n" + txtInfo.Text;
								}
								if (Operators.CompareString(text4, "", TextCompare: false) == 0)
								{
									if ((Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(text, "", TextCompare: false) == 0) & (Operators.CompareString(text2, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
									{
										break;
									}
									left = text3;
									text3 = text2;
									text2 = text;
									text = text4;
								}
								else
								{
									text = "#";
									text2 = "#";
									text3 = "#";
									left = "#";
								}
								if (text4.Contains("+CUSD: "))
								{
									string text5 = text4;
									int num5 = text4.IndexOf("+CUSD: ");
									text5 = text4.Substring(num5 + 10, text4.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text5.IndexOf(",");
									string text6 = text5.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text6 = text6.Trim('"').Trim(',').Trim('"');
									if (text6.Length <= 3)
									{
										goto IL_0404;
									}
									string text7;
									if (Operators.CompareString(text6.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text6);
										text7 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text7 = encoding_mod.Decode7Bit(text6);
									}
									OutBoxDrop(Exxc, text7);
									if (text7.Contains("جاري تنفيذ"))
									{
										goto IL_0341;
									}
									if (text7.Contains("لاستخدام فودافون كاش انشئ رقم سري مكون من 6 أرقام (غير متشابهين أو متتاليين)"))
									{
										goto IL_038d;
									}
								}
								if (text4.Contains("+CUSD: 5") | text4.Contains("unknown") | text4.Contains("retry operation") | text4.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
								{
									goto IL_03fb;
								}
								goto IL_0404;
								IL_0404:
								Application.DoEvents();
								num4++;
								if (num4 <= 25)
								{
									continue;
								}
								goto IL_041a;
							}
							Application.DoEvents();
							if (num3 <= 2)
							{
								Thread.Sleep(1000);
								continue;
							}
							break;
							IL_038d:
							ussdCommandFull = "9";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							SPGGx.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							DisablePort(Exxc);
							break;
							IL_03fb:
							Application.DoEvents();
							break;
							IL_041a:
							Application.DoEvents();
							break;
							IL_0341:
							ussdCommandFull = "9";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							SPGGx.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							DisablePort(Exxc);
							break;
						}
						break;
					}
					case 1082:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					SPGGx.Close();
					SPGGx.Dispose();
					SPGGx = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1082;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private int GetTypeOfmessageLast2(string EEr)
	{
		PassGiftValue = 0;
		checked
		{
			if (EEr.Contains("3 "))
			{
				int num = EEr.IndexOf("3 ");
				EEr = EEr.Substring(num + 2, 5).Trim();
				PassGiftValue = (int)Math.Round(Conversion.Val(EEr));
				return 3;
			}
			return 0;
		}
	}

	private int GetTypeOfmessageLast3(string EEr)
	{
		PassGiftValue = 0;
		checked
		{
			if (EEr.Contains("5 "))
			{
				int num = EEr.IndexOf("5 ");
				EEr = EEr.Substring(num + 2, 5).Trim();
				PassGiftValue = (int)Math.Round(Conversion.Val(EEr));
				return 5;
			}
			return 0;
		}
	}

	private void btnTransVal_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		Stopwatch stopwatch = default(Stopwatch);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 791:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0023;
						case 6:
						case 7:
							goto IL_003d;
						case 8:
							goto IL_005d;
						case 10:
						case 11:
							goto IL_0073;
						case 12:
							goto IL_0094;
						case 14:
						case 15:
							goto IL_00ab;
						case 16:
							goto IL_00cf;
						case 18:
						case 19:
							goto IL_00e6;
						case 20:
							goto IL_00fa;
						case 21:
							goto IL_010e;
						case 22:
							goto IL_0118;
						case 23:
							goto IL_012c;
						case 24:
						case 37:
							goto IL_0141;
						case 25:
							goto IL_016f;
						case 26:
							goto IL_017d;
						case 27:
							goto IL_0187;
						case 30:
							goto IL_0193;
						case 28:
						case 29:
						case 31:
							goto IL_019d;
						case 32:
							goto IL_01c2;
						case 33:
							goto IL_01cc;
						case 34:
							goto IL_01d6;
						case 35:
							goto IL_01df;
						case 36:
							goto IL_020a;
						case 38:
						case 39:
							goto IL_0228;
						case 40:
							goto IL_0232;
						case 41:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
						case 9:
						case 13:
						case 17:
						case 42:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0228:
					num2 = 39;
					EnableCntl();
					goto IL_0232;
					IL_0232:
					num2 = 40;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_020a:
					num2 = 36;
					if (!chkStop.Checked)
					{
						goto IL_0141;
					}
					goto IL_0228;
					IL_0193:
					num2 = 30;
					Application.DoEvents();
					goto IL_019d;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					if (MysqlConn.MainProgLic < 3)
					{
						goto IL_0023;
					}
					goto IL_003d;
					IL_0023:
					num2 = 4;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_003d:
					num2 = 7;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_005d;
					}
					goto IL_0073;
					IL_005d:
					num2 = 8;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_0073:
					num2 = 11;
					if (txtTransNum.Text.Trim().Length == 0)
					{
						goto IL_0094;
					}
					goto IL_00ab;
					IL_0094:
					num2 = 12;
					Interaction.MsgBox("ادخل رقم الخط");
					goto end_IL_0001_3;
					IL_00ab:
					num2 = 15;
					if (Conversion.Val(txtTransMoney.Text) == 0.0)
					{
						goto IL_00cf;
					}
					goto IL_00e6;
					IL_00cf:
					num2 = 16;
					Interaction.MsgBox("ادخل المبلغ المراد تحويلة");
					goto end_IL_0001_3;
					IL_00e6:
					num2 = 19;
					lblProgress.BackColor = Color.Red;
					goto IL_00fa;
					IL_00fa:
					num2 = 20;
					lblProgress.Text = "تحويل الهدية رصيد";
					goto IL_010e;
					IL_010e:
					num2 = 21;
					DisableCntl();
					goto IL_0118;
					IL_0118:
					num2 = 22;
					txtTotalTransVal.Text = "0";
					goto IL_012c;
					IL_012c:
					num2 = 23;
					txtLoopSVC.Text = "0";
					goto IL_0141;
					IL_0141:
					num2 = 24;
					txtLoopSVC.Text = Conversions.ToString(Conversion.Val(txtLoopSVC.Text) + 1.0);
					goto IL_016f;
					IL_016f:
					num2 = 25;
					Thread.Sleep(500);
					goto IL_017d;
					IL_017d:
					num2 = 26;
					stopwatch.Start();
					goto IL_0187;
					IL_0187:
					num2 = 27;
					SetUssdOrderVcashTraV();
					goto IL_019d;
					IL_019d:
					num2 = 29;
					if ((double)stopwatch.ElapsedMilliseconds <= Conversion.Val(txtwait.Text))
					{
						goto IL_0193;
					}
					goto IL_01c2;
					IL_01c2:
					num2 = 32;
					stopwatch.Stop();
					goto IL_01cc;
					IL_01cc:
					num2 = 33;
					ReturnReadGift();
					goto IL_01d6;
					IL_01d6:
					num2 = 34;
					Application.DoEvents();
					goto IL_01df;
					IL_01df:
					num2 = 35;
					if (Conversion.Val(txtLoopSVC.Text) < Conversion.Val(txtLoopFVC.Text))
					{
						goto IL_020a;
					}
					goto IL_0228;
					end_IL_0001_2:
					break;
				}
				num2 = 41;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 791;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeEC_Mex(Label Exxc, string Tnumber, double Moneytotrasfer, CheckBox ExxcArd, CheckBox ExxcArdTo)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						int num3 = 0;
						num3++;
						lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						string ussdCommandFull = "*777*1*" + txtPassEC.Text + "*" + Conversions.ToString(Moneytotrasfer) + "*" + Tnumber + "*" + Tnumber + "*1#";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(800);
						Application.DoEvents();
						int num4 = 0;
						while (true)
						{
							num4++;
							if (num4 >= 10)
							{
								break;
							}
							lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num4) + ")";
							Application.DoEvents();
							int num5 = 0;
							while (true)
							{
								Thread.Sleep(500);
								string text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("+CUSD: "))
								{
									string text2 = text;
									int num6 = text.IndexOf("+CUSD: ");
									text2 = text.Substring(num6 + 10, text.Length - num6 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num6 = text2.IndexOf(",");
									string text3 = text2.Substring(0, num6).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text3 = text3.Trim('"').Trim(',').Trim('"');
									string text4;
									if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text3);
										text4 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text4 = encoding_mod.Decode7Bit(text3);
									}
									OutBoxDrop(Exxc, text4);
									if (text4.Contains("تم تحويل"))
									{
										break;
									}
									if (text4.Contains("تكلفة المعاملة المطلوبة"))
									{
										goto IL_035f;
									}
								}
								if (text.Contains("062A06450020062A062D0648064A0644002006270644064506280644063A002006280646062C0627062D"))
								{
									goto IL_03ab;
								}
								if (text.Contains("064406270020064A0648062C062F002006310635064A062F0020064306270641064A002006440625062A0"))
								{
									goto IL_03e7;
								}
								if (text.Contains("+CUSD: 5") | text.Contains("unknown") | text.Contains("retry operation"))
								{
									goto IL_0438;
								}
								Application.DoEvents();
								num5++;
								if (num5 <= 30)
								{
									continue;
								}
								goto IL_0456;
							}
							Application.DoEvents();
							ExxcArd.Checked = false;
							ExxcArdTo.Checked = true;
							break;
							IL_03e7:
							OutBoxDrop(Exxc, "لا يوجد رصيد كافي لإتمام العملية");
							ExxcArd.Checked = false;
							ExxcArdTo.Checked = true;
							Application.DoEvents();
							break;
							IL_0438:
							Application.DoEvents();
							break;
							IL_0456:
							Application.DoEvents();
							break;
							IL_035f:
							ussdCommandFull = "1";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(800);
							Application.DoEvents();
							continue;
							IL_03ab:
							OutBoxDrop(Exxc, "تم تحويل المبلغ بنجاح");
							ExxcArd.Checked = false;
							ExxcArdTo.Checked = true;
							Application.DoEvents();
							break;
						}
						break;
					}
					case 1144:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001_2;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1144;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeVC_Mex(Label Exxc, string UssdCommand, CheckBox ExxcArd, int EEFlage)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Trans " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						string text = serialPort.ReadExisting();
						AutoRes = 0;
						int num3 = 0;
						while (true)
						{
							num3++;
							string ussdCommandFull = "*9*7*" + UssdCommand + "*" + txtMonyMn.Text + "#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							lblProgress.Text = "Trans " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							while (true)
							{
								Application.DoEvents();
								string text2 = "#";
								string text3 = "#";
								string text4 = "#";
								string left = "#";
								int num4 = 0;
								while (true)
								{
									Thread.Sleep(800);
									text = serialPort.ReadExisting();
									if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
									{
										txtInfo.Text = text + "\r\n" + txtInfo.Text;
									}
									if (Operators.CompareString(text, "", TextCompare: false) == 0)
									{
										if ((Operators.CompareString(text, "", TextCompare: false) == 0) & (Operators.CompareString(text2, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
										{
											break;
										}
										left = text4;
										text4 = text3;
										text3 = text2;
										text2 = text;
									}
									else
									{
										text2 = "#";
										text3 = "#";
										text4 = "#";
										left = "#";
									}
									if (text.Contains("+CUSD: "))
									{
										string text5 = text;
										int num5 = text.IndexOf("+CUSD: ");
										text5 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
											.Trim('\r')
											.Trim('\r')
											.Trim();
										num5 = text5.IndexOf(",");
										string text6 = text5.Substring(0, num5).Trim().Trim('"')
											.Trim(',')
											.Trim('"');
										text6 = text6.Trim('"').Trim(',').Trim('"');
										if (text6.Length > 3)
										{
											string text7;
											if (Operators.CompareString(text6.Substring(0, 1), "0", TextCompare: false) == 0)
											{
												byte[] bytes = encoding_mod.StrToByteArray(text6);
												text7 = Encoding.BigEndianUnicode.GetString(bytes);
											}
											else
											{
												text7 = encoding_mod.Decode7Bit(text6);
											}
											OutBoxDrop(Exxc, text7);
											if (text7.Contains("تم تحويل"))
											{
												ussdCommandFull = "9";
												commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
												serialPort.WriteLine(commandCode + "\r");
												AddToRemoteDB_Transfer(GetNumberByPort(Exxc.Text), UssdCommand, Conversion.Val(txtMonyMn.Text));
												Thread.Sleep(1000);
												switch (EEFlage)
												{
												case 0:
													ExxcArd.Checked = false;
													break;
												case 1:
													ExxcArd.Checked = true;
													DisablePort(Exxc);
													break;
												}
												Application.DoEvents();
												goto end_IL_0001_2;
											}
											if (text7.Contains("بعد خصم 15.0") | text7.Contains("قد تم تجاوز الحد الأقصى للمعاملات"))
											{
												Application.DoEvents();
												chkStop.Checked = true;
												goto end_IL_0001_2;
											}
											if (text7.Contains("لا يوجد رصيد كاف في حسابك. يمكنك تحويل"))
											{
												ussdCommandFull = "1";
												commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
												serialPort.WriteLine(commandCode + "\r");
												Thread.Sleep(800);
												Application.DoEvents();
												goto end_IL_0001_2;
											}
											if (text7.Contains("لاستخدام فودافون كاش انشئ رقم سري") | text7.Contains("بعد خصم 15.0 ج رسوم"))
											{
												Application.DoEvents();
												chkStop.Checked = true;
												goto end_IL_0001_2;
											}
											if (text7.Contains("لا يمكن إتمام العملية") | text7.Contains("غير صحيح"))
											{
												Application.DoEvents();
												goto end_IL_0001_2;
											}
											if (text7.Contains("برجاء إختيار رقم صحيح"))
											{
												Application.DoEvents();
												goto end_IL_0001_2;
											}
										}
									}
									if (text.Contains("062A06450020062A062D0648064A06440020"))
									{
										ussdCommandFull = "9";
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(1000);
										AddToRemoteDB_Transfer(GetNumberByPort(Exxc.Text), UssdCommand, Conversion.Val(txtMonyMn.Text));
										OutBoxDrop(Exxc, "تم التحويل بنجاح");
										switch (EEFlage)
										{
										case 0:
											ExxcArd.Checked = false;
											break;
										case 1:
											ExxcArd.Checked = true;
											DisablePort(Exxc);
											break;
										}
										Application.DoEvents();
										goto end_IL_0001_2;
									}
									if (text.Contains("064406270020064A0648062C062F002006310635"))
									{
										switch (EEFlage)
										{
										case 0:
											DisablePort(Exxc);
											break;
										case 1:
											ExxcArd.Checked = true;
											DisablePort(Exxc);
											break;
										}
										AddToRemoteDB_Transfer(GetNumberByPort(Exxc.Text), UssdCommand, Conversion.Val(txtMonyMn.Text));
										OutBoxDrop(Exxc, "لا يوجد رصيد كافى للتحويل");
										Application.DoEvents();
										goto end_IL_0001_2;
									}
									if (!text.Contains("0623062F062E06440020062706440631064206450020062706"))
									{
										if (text.Contains("+CUSD: 5") | text.Contains("unknown") | text.Contains("00530065007200760069006300650020006900730020006E006F00740020006100760061006900") | text.Contains("retry operation") | text.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
										{
											Application.DoEvents();
											goto end_IL_0001_2;
										}
										Application.DoEvents();
										if (chkStop.Checked)
										{
											goto end_IL_0001_2;
										}
										num4++;
										if (num4 > 10)
										{
											object obj = txtPass.Text ?? "";
											if (obj == null)
											{
												obj = "";
											}
											ussdCommandFull = (string)obj;
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(1000);
											goto end_IL_0001_2;
										}
										continue;
									}
									goto IL_06de;
								}
								break;
								IL_06de:
								object obj2 = txtPass.Text ?? "";
								if (obj2 == null)
								{
									obj2 = "";
								}
								ussdCommandFull = (string)obj2;
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(2000);
								text2 = "#";
								text3 = "#";
								text4 = "#";
								left = "#";
								Application.DoEvents();
							}
							Application.DoEvents();
							if (num3 <= 2)
							{
								Thread.Sleep(1000);
								continue;
							}
							break;
						}
						break;
					}
					case 2078:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_3;
							}
							break;
						}
						end_IL_0001_2:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_3:;
			}
			catch (object obj3) when (obj3 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj3);
				try0001_dispatch = 2078;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeVC_Mex_Steper(Label Exxc, string UssdCommand, CheckBox ExxcArd, int EEFlage)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num7 = default(int);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						string text = serialPort.ReadExisting();
						AutoRes = 0;
						int num3 = 0;
						while (true)
						{
							num3++;
							string ussdCommandFull = "*9#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							while (true)
							{
								Application.DoEvents();
								string text2 = "#";
								string text3 = "#";
								string text4 = "#";
								string left = "#";
								int num4 = 0;
								while (true)
								{
									Thread.Sleep(800);
									text = serialPort.ReadExisting();
									if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
									{
										txtInfo.Text = text + "\r\n" + txtInfo.Text;
									}
									if (Operators.CompareString(text, "", TextCompare: false) == 0)
									{
										if ((Operators.CompareString(text, "", TextCompare: false) == 0) & (Operators.CompareString(text2, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
										{
											break;
										}
										left = text4;
										text4 = text3;
										text3 = text2;
										text2 = text;
									}
									else
									{
										text2 = "#";
										text3 = "#";
										text4 = "#";
										left = "#";
									}
									if (text.Contains("+CUSD: "))
									{
										string text5 = text;
										int num5 = text.IndexOf("+CUSD: ");
										text5 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
											.Trim('\r')
											.Trim('\r')
											.Trim();
										num5 = text5.IndexOf(",");
										string text6 = text5.Substring(0, num5).Trim().Trim('"')
											.Trim(',')
											.Trim('"');
										text6 = text6.Trim('"').Trim(',').Trim('"');
										if (text6.Length > 3)
										{
											string text7;
											if (Operators.CompareString(text6.Substring(0, 1), "0", TextCompare: false) == 0)
											{
												byte[] bytes = encoding_mod.StrToByteArray(text6);
												text7 = Encoding.BigEndianUnicode.GetString(bytes);
											}
											else
											{
												text7 = encoding_mod.Decode7Bit(text6);
											}
											OutBoxDrop(Exxc, text7);
											if (text7.Contains("تم تحويل"))
											{
												ussdCommandFull = "9";
												commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
												serialPort.WriteLine(commandCode + "\r");
												AddToRemoteDB_Transfer(UssdCommand, GetNumberByPort(Exxc.Text), Conversion.Val(txtMonyMn.Text));
												Thread.Sleep(1000);
												switch (EEFlage)
												{
												case 0:
													ExxcArd.Checked = false;
													break;
												case 1:
													ExxcArd.Checked = true;
													DisablePort(Exxc);
													break;
												}
												Application.DoEvents();
												goto end_IL_0001_2;
											}
											if (text7.Contains("لا يمكن إتمام العملية") | text7.Contains("لاستخدام فودافون كاش انشئ رقم سري") | text7.Contains("غير صحيح"))
											{
												Application.DoEvents();
												DisablePort(Exxc);
												goto end_IL_0001_2;
											}
										}
									}
									if (text.Contains("06410648062F06270641064806460020064306270634000A0031002E062A062D0648064A064400200"))
									{
										ussdCommandFull = "1";
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(500);
										Application.DoEvents();
									}
									else if (text.Contains("0031002E0625062F062E06270644002006270644063106420645"))
									{
										ussdCommandFull = "1";
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(500);
										Application.DoEvents();
									}
									else if (text.Contains("064506460020064106360644064300200627062F062E06440020063106420645002"))
									{
										object obj = UssdCommand ?? "";
										if (obj == null)
										{
											obj = "";
										}
										ussdCommandFull = (string)obj;
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(500);
										Application.DoEvents();
										text2 = "#";
										text3 = "#";
										text4 = "#";
										left = "#";
									}
									else if (text.Contains("06310642064500200627064406470627062A0641002006470648000A0030003100"))
									{
										ussdCommandFull = "1";
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(500);
										Application.DoEvents();
										text2 = "#";
										text3 = "#";
										text4 = "#";
										left = "#";
									}
									else if (text.Contains("0627062F062E06440020062706440642064A06450629002006270644064506310627062F0020062A062D"))
									{
										object obj2 = txtMonyMn.Text ?? "";
										if (obj2 == null)
										{
											obj2 = "";
										}
										ussdCommandFull = (string)obj2;
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(500);
										Application.DoEvents();
										text2 = "#";
										text3 = "#";
										text4 = "#";
										left = "#";
									}
									else if (text.Contains("0020064506460020064106360644064300200627062F062E064400200627064406310642064500200627"))
									{
										object obj3 = txtPass.Text ?? "";
										if (obj3 == null)
										{
											obj3 = "";
										}
										ussdCommandFull = (string)obj3;
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(500);
										Application.DoEvents();
										text2 = "#";
										text3 = "#";
										text4 = "#";
										left = "#";
									}
									else
									{
										if (text.Contains("062A06450020062A062D0648064A06440"))
										{
											ussdCommandFull = "9";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(1000);
											OutBoxDrop(Exxc, "تم التحويل بنجاح");
											switch (EEFlage)
											{
											case 0:
												ExxcArd.Checked = false;
												break;
											case 1:
												ExxcArd.Checked = true;
												DisablePort(Exxc);
												break;
											}
											Application.DoEvents();
											goto end_IL_0001_2;
										}
										if (text.Contains("064406270020064A0648062C062F002006310635"))
										{
											switch (EEFlage)
											{
											case 0:
												DisablePort(Exxc);
												break;
											case 1:
												ExxcArd.Checked = true;
												DisablePort(Exxc);
												break;
											}
											OutBoxDrop(Exxc, "لا يوجد رصيد كافى للتحويل");
											Application.DoEvents();
											goto end_IL_0001_2;
										}
										if (text.Contains("0627062F062E0644002006270644063106420645002006270644"))
										{
											goto IL_0809;
										}
										if (text.Contains("+CME ERROR: 10"))
										{
											AutoRes++;
											if (chkStop.Checked)
											{
												goto end_IL_0001_2;
											}
											if ((AutoRes >= 3) & chkAutoRes.Checked)
											{
												while (true)
												{
													OutBoxDrop(Exxc, "جارى اعادة التشغيل للمودم");
													OutBoxDropNumber(Exxc);
													Application.DoEvents();
													RestartModem(Exxc.Text);
													int num6 = 0;
													while (true)
													{
														Thread.Sleep(250);
														if (chkStop.Checked)
														{
															break;
														}
														Application.DoEvents();
														num6++;
														if (num6 <= 40)
														{
															continue;
														}
														goto IL_092f;
													}
													break;
													IL_092f:
													OutBoxDrop(Exxc, "جارى البحث عن الشريحة ");
													TryToIdntyThisModem(Exxc);
													Thread.Sleep(250);
													if (chkStop.Checked)
													{
														break;
													}
													Application.DoEvents();
													if (Exxc.ForeColor != Color.White)
													{
														OutOfgetnumber(Exxc);
														break;
													}
													if (num7 <= 3)
													{
														num7++;
														continue;
													}
													break;
												}
												goto end_IL_0001_2;
											}
										}
										if (text.Contains("+CUSD: 5") | text.Contains("unknown") | text.Contains("00530065007200760069006300650020006900730020006E006F00740020006100760061006900") | text.Contains("retry operation") | text.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
										{
											Application.DoEvents();
											goto end_IL_0001_2;
										}
										Application.DoEvents();
									}
									if (chkStop.Checked)
									{
										goto end_IL_0001_2;
									}
									num4++;
									if (num4 > 20)
									{
										object obj4 = txtPass.Text ?? "";
										if (obj4 == null)
										{
											obj4 = "";
										}
										ussdCommandFull = (string)obj4;
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(1000);
										goto end_IL_0001_2;
									}
								}
								break;
								IL_0809:
								object obj5 = txtPass.Text ?? "";
								if (obj5 == null)
								{
									obj5 = "";
								}
								ussdCommandFull = (string)obj5;
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(2000);
								text2 = "#";
								text3 = "#";
								text4 = "#";
								left = "#";
								Application.DoEvents();
							}
							Application.DoEvents();
							if (num3 <= 2)
							{
								Thread.Sleep(1000);
								continue;
							}
							break;
						}
						break;
					}
					case 2692:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_3;
							}
							break;
						}
						end_IL_0001_2:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_3:;
			}
			catch (object obj6) when (obj6 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj6);
				try0001_dispatch = 2692;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void GEtONCode(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "ON " + Exxc.Text;
						Application.DoEvents();
						string ussdCommandFull = "*9*100*" + txtOnValue.Text + "#";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(1000);
						Application.DoEvents();
						while (!chkStop.Checked)
						{
							lblProgress.Text = "ONPss " + Exxc.Text;
							Application.DoEvents();
							int num3 = 0;
							while (!chkStop.Checked)
							{
								Thread.Sleep(800);
								string text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("+CUSD: "))
								{
									string text2 = text;
									int num4 = text.IndexOf("+CUSD: ");
									text2 = text.Substring(num4 + 10, text.Length - num4 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num4 = text2.IndexOf(",");
									string text3 = text2.Substring(0, num4).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text3 = text3.Trim('"').Trim(',').Trim('"');
									string text4;
									if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text3);
										text4 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text4 = encoding_mod.Decode7Bit(text3);
									}
									OutBoxDrop(Exxc, text4);
									if (text4.Contains("بيانات الكارت"))
									{
										goto end_IL_0001;
									}
								}
								if (text.Contains("0041002000760061006C00690064006100740069006F006E0020006F00630063007500720072006500640020007700680069006C0065002000700061007200730069006E0067003A002000760061006C006900640061007400690"))
								{
									ussdCommandFull = "9";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
									goto end_IL_0001;
								}
								if (text.Contains("064406270020064A0648062C062F002006310635"))
								{
									DisablePort(Exxc);
									OutBoxDrop(Exxc, "لا يوجد رصيد كافى للتحويل");
									Application.DoEvents();
									goto end_IL_0001;
								}
								if (text.Contains("062D062F062F002006270644064506280644063A002006270644062306420635064A002006440644063406310627062100200628064306270631062A002006270644062F064106390020062"))
								{
									goto IL_0343;
								}
								if (!text.Contains("0627062F062E06440020063106420645064300200627064406330631064A00200628062706440644063A062900200627064406270646062C0644064A0632064A062900200644062E06"))
								{
									if (text.Contains("+CUSD: 5") | text.Contains("unknown") | text.Contains("retry operation") | text.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
									{
										Application.DoEvents();
										goto end_IL_0001;
									}
									Application.DoEvents();
									num3++;
									if (num3 > 30)
									{
										Application.DoEvents();
										goto end_IL_0001;
									}
									continue;
								}
								goto IL_03a5;
							}
							break;
							IL_0343:
							object obj = txtOnValue.Text ?? "";
							if (obj == null)
							{
								obj = "";
							}
							ussdCommandFull = (string)obj;
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1500);
							Application.DoEvents();
							continue;
							IL_03a5:
							object obj2 = txtPass.Text ?? "";
							if (obj2 == null)
							{
								obj2 = "";
							}
							ussdCommandFull = (string)obj2;
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1500);
							Application.DoEvents();
						}
						goto end_IL_0001_2;
					}
					case 1131:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_3;
							}
							break;
						}
						end_IL_0001:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_3:;
			}
			catch (object obj3) when (obj3 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj3);
				try0001_dispatch = 1131;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_2:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeVCP(Label Exxc, string UssdCommand)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						int num3 = 0;
						do
						{
							IL_0062:
							num3++;
							string ussdCommandFull = "*9*7*" + UssdCommand + "*" + txtMoney.Text + "#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							string text = "#";
							string text2 = "#";
							string text3 = "#";
							string left = "#";
							while (true)
							{
								lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
								Application.DoEvents();
								int num4 = 0;
								while (true)
								{
									Thread.Sleep(1000);
									string text4 = serialPort.ReadExisting();
									if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text4) >= 2))
									{
										txtInfo.Text = text4 + "\r\n" + txtInfo.Text;
									}
									if (Operators.CompareString(text4, "", TextCompare: false) == 0)
									{
										if ((Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(text, "", TextCompare: false) == 0) & (Operators.CompareString(text2, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
										{
											break;
										}
										left = text3;
										text3 = text2;
										text2 = text;
										text = text4;
									}
									else
									{
										text = "#";
										text2 = "#";
										text3 = "#";
										left = "#";
									}
									if (text4.Contains("+CUSD: "))
									{
										string text5 = text4;
										int num5 = text4.IndexOf("+CUSD: ");
										text5 = text4.Substring(num5 + 10, text4.Length - num5 - 10).Trim().Trim('o')
											.Trim('\r')
											.Trim('\r')
											.Trim();
										num5 = text5.IndexOf(",");
										string text6 = text5.Substring(0, num5).Trim().Trim('"')
											.Trim(',')
											.Trim('"');
										text6 = text6.Trim('"').Trim(',').Trim('"');
										string eEstr;
										if (Operators.CompareString(text6.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text6);
											eEstr = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											eEstr = encoding_mod.Decode7Bit(text6);
										}
										OutBoxDrop(Exxc, eEstr);
									}
									if (text4.Contains("062A06450020062A062D0648064A06440020"))
									{
										goto IL_03b8;
									}
									if (text4.Contains("064406270020064A0648062C062F002006310635"))
									{
										goto IL_0402;
									}
									if (text4.Contains("0627062F062E0644002006270644063106420645002006270644"))
									{
										goto IL_0434;
									}
									if (text4.Contains("+CUSD: 5") | text4.Contains("unknown") | text4.Contains("retry operation") | text4.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
									{
										goto IL_04d6;
									}
									Application.DoEvents();
									num4++;
									if (num4 <= 30)
									{
										continue;
									}
									goto IL_0508;
								}
								break;
								IL_0434:
								object obj = txtPass.Text ?? "";
								if (obj == null)
								{
									obj = "";
								}
								ussdCommandFull = (string)obj;
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(2000);
								text = "#";
								text2 = "#";
								text3 = "#";
								left = "#";
								Application.DoEvents();
							}
							Application.DoEvents();
							if (num3 <= 5)
							{
								goto IL_0062;
							}
							break;
							IL_04d6:
							Application.DoEvents();
							continue;
							IL_0508:
							object obj2 = txtPass.Text ?? "";
							if (obj2 == null)
							{
								obj2 = "";
							}
							ussdCommandFull = (string)obj2;
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							break;
							IL_03b8:
							ussdCommandFull = "9";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							Application.DoEvents();
							break;
							IL_0402:
							DisablePort(Exxc);
							OutBoxDrop(Exxc, "لا يوجد رصيد كافى للتحويل");
							Application.DoEvents();
							break;
						}
						while (num3 <= 2);
						break;
					}
					case 1391:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj3) when (obj3 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj3);
				try0001_dispatch = 1391;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void AddCardTochargedarchCV(string cardIDx, string Telnum)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 324:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0021;
						case 5:
							goto IL_002f;
						case 6:
							goto IL_0043;
						case 7:
							goto IL_0060;
						case 8:
							goto IL_0088;
						case 9:
							goto IL_009c;
						case 10:
							goto IL_00ac;
						case 11:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 12:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0088:
					num2 = 8;
					text = text + "'" + Telnum + "') ";
					goto IL_009c;
					IL_009c:
					num2 = 9;
					objData.DatabaseCommand(text);
					goto IL_00ac;
					IL_0060:
					num2 = 7;
					text = text + " " + Conversions.ToString(Conversion.Val(txtWorkID.Text)) + "  , ";
					goto IL_0088;
					IL_00ac:
					num2 = 10;
					text = "update  vcnums set evalue = " + Conversions.ToString(Conversion.Val(txtWorkID.Text)) + " where mobnum = '" + cardIDx + "'";
					break;
					IL_000b:
					num2 = 2;
					text = "Insert Into vcnumsrun ";
					goto IL_0013;
					IL_0013:
					num2 = 3;
					text += "(mobnum,xdate,enums,mobnum2)";
					goto IL_0021;
					IL_0021:
					num2 = 4;
					text += "Values (";
					goto IL_002f;
					IL_002f:
					num2 = 5;
					text = text + "'" + cardIDx + "' , ";
					goto IL_0043;
					IL_0043:
					num2 = 6;
					text = text + "#" + Conversions.ToString(DateTime.Today) + "#, ";
					goto IL_0060;
					end_IL_0001_2:
					break;
				}
				num2 = 11;
				objData.DatabaseCommand(text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 324;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnTransInv_Click(object sender, EventArgs e)
	{
		Stopwatch stopwatch = new Stopwatch();
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (txtTransNum.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("ادخل رقم الخط");
			return;
		}
		if (Conversion.Val(txtTransMoney.Text) == 0.0)
		{
			Interaction.MsgBox("ادخل المبلغ المراد تحويلة");
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "تحويل الهدية فاتورة";
		DisableCntl();
		txtLoopSVC.Text = "0";
		do
		{
			txtLoopSVC.Text = Conversions.ToString(Conversion.Val(txtLoopSVC.Text) + 1.0);
			Thread.Sleep(1000);
			ReSetUssdOrder();
			stopwatch.Start();
			SetUssdOrderVcashTraInv();
			while ((double)stopwatch.ElapsedMilliseconds <= Conversion.Val(txtwait.Text))
			{
				Application.DoEvents();
			}
			stopwatch.Stop();
			ReturnRead();
			Application.DoEvents();
		}
		while (Conversion.Val(txtLoopSVC.Text) < Conversion.Val(txtLoopFVC.Text) && !chkStop.Checked);
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btnExnums_Click(object sender, EventArgs e)
	{
		checked
		{
			int num = lstNumbers.Items.Count - 1;
			if (Conversion.Val(txtQtyDone.Text) >= (double)(num + 1))
			{
				Interaction.MsgBox("انتهت الدورة");
				return;
			}
			int num2 = (int)Math.Round(Conversion.Val(txtQtyDone.Text));
			if (lblNum1.Text.Length > 10)
			{
				lblCard1.Text = Conversions.ToString(lstNumbers.Items[num2]);
				num2 = ((num2 < num) ? (num2 + 1) : 0);
			}
			if (lblNum2.Text.Length > 10)
			{
				lblCard2.Text = Conversions.ToString(lstNumbers.Items[num2]);
				num2 = ((num2 < num) ? (num2 + 1) : 0);
			}
			if (lblNum3.Text.Length > 10)
			{
				lblCard3.Text = Conversions.ToString(lstNumbers.Items[num2]);
				num2 = ((num2 < num) ? (num2 + 1) : 0);
			}
			if (lblNum4.Text.Length > 10)
			{
				lblCard4.Text = Conversions.ToString(lstNumbers.Items[num2]);
				num2 = ((num2 < num) ? (num2 + 1) : 0);
			}
			if (lblNum5.Text.Length > 10)
			{
				lblCard5.Text = Conversions.ToString(lstNumbers.Items[num2]);
				num2 = ((num2 < num) ? (num2 + 1) : 0);
			}
			if (lblNum6.Text.Length > 10)
			{
				lblCard6.Text = Conversions.ToString(lstNumbers.Items[num2]);
			}
			txtQtyDone.Text = Conversions.ToString(Conversion.Val(txtQtyDone.Text) + 1.0);
		}
	}

	private void bt_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				Stopwatch stopwatch;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 681:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0023;
						case 6:
						case 7:
							goto IL_003d;
						case 8:
							goto IL_00e0;
						case 10:
						case 11:
							goto IL_00f6;
						case 12:
							goto IL_0117;
						case 14:
						case 15:
							goto IL_012e;
						case 16:
							goto IL_0152;
						case 18:
						case 19:
							goto IL_0169;
						case 20:
							goto IL_018d;
						case 22:
						case 23:
							goto IL_01a1;
						case 24:
							goto IL_01b5;
						case 25:
							goto IL_01bf;
						case 26:
							goto IL_01d3;
						case 27:
							goto IL_01dd;
						case 28:
							goto IL_01e6;
						case 29:
							goto IL_01f0;
						case 30:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
						case 9:
						case 13:
						case 17:
						case 21:
						case 31:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_01dd:
					num2 = 27;
					Application.DoEvents();
					goto IL_01e6;
					IL_01e6:
					num2 = 28;
					EnableCntl();
					goto IL_01f0;
					IL_01d3:
					num2 = 26;
					SetUssdOrderVcash();
					goto IL_01dd;
					IL_01f0:
					num2 = 29;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					if (MysqlConn.MainProgLic < 3)
					{
						goto IL_0023;
					}
					goto IL_003d;
					IL_0023:
					num2 = 4;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_003d:
					num2 = 7;
					if ((Operators.CompareString(lblCard1.Text, "", TextCompare: false) == 0) & (Operators.CompareString(lblCard2.Text, "", TextCompare: false) == 0) & (Operators.CompareString(lblCard3.Text, "", TextCompare: false) == 0) & (Operators.CompareString(lblCard4.Text, "", TextCompare: false) == 0) & (Operators.CompareString(lblCard5.Text, "", TextCompare: false) == 0) & (Operators.CompareString(lblCard6.Text, "", TextCompare: false) == 0))
					{
						goto IL_00e0;
					}
					goto IL_00f6;
					IL_00e0:
					num2 = 8;
					Interaction.MsgBox("لم يتم تحديد ارقام للتحويل لها");
					goto end_IL_0001_3;
					IL_00f6:
					num2 = 11;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0117;
					}
					goto IL_012e;
					IL_0117:
					num2 = 12;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_012e:
					num2 = 15;
					if (Conversion.Val(txtWorkID.Text) == 0.0)
					{
						goto IL_0152;
					}
					goto IL_0169;
					IL_0152:
					num2 = 16;
					Interaction.MsgBox("حدد رقم تشغيل من فضلك");
					goto end_IL_0001_3;
					IL_0169:
					num2 = 19;
					if (Conversion.Val(txtMoney.Text) < 5.0)
					{
						goto IL_018d;
					}
					goto IL_01a1;
					IL_018d:
					num2 = 20;
					Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
					goto end_IL_0001_3;
					IL_01a1:
					num2 = 23;
					lblProgress.BackColor = Color.Red;
					goto IL_01b5;
					IL_01b5:
					num2 = 24;
					DisableCntl();
					goto IL_01bf;
					IL_01bf:
					num2 = 25;
					lblProgress.Text = "تحويل فودافون كاش ";
					goto IL_01d3;
					end_IL_0001_2:
					break;
				}
				num2 = 30;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 681;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnRunAll_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		while (!(Conversion.Val(txtQtyDone.Text) >= 6.0))
		{
			bt_Click(RuntimeHelpers.GetObjectValue(sender), e);
			Thread.Sleep(500);
			btnRun02_Click(RuntimeHelpers.GetObjectValue(sender), e);
			Thread.Sleep(500);
			btnExnums_Click(RuntimeHelpers.GetObjectValue(sender), e);
			Thread.Sleep(500);
		}
	}

	private void ArrangVCsequnce()
	{
		if (((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0)) && ChekSequnce(lblNum1.Text, lblNum2.Text) && Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0)
		{
			if (!ChekSequnce(lblNum1.Text, lblNum3.Text))
			{
				EXchanel(2, 3);
			}
			else if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0)
			{
				if (!ChekSequnce(lblNum1.Text, lblNum4.Text))
				{
					EXchanel(2, 4);
				}
				else if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0)
				{
					if (!ChekSequnce(lblNum1.Text, lblNum5.Text))
					{
						EXchanel(2, 5);
					}
					else if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0)
					{
						if (ChekSequnce(lblNum1.Text, lblNum6.Text))
						{
							txtInfo.Text = "الرقم " + lblNum1.Text + "\r\nحول من قبل لكل الخطوط\r\n" + txtInfo.Text;
							chkStop.Checked = true;
							return;
						}
						EXchanel(2, 6);
					}
				}
			}
		}
		if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0 && ChekSequnce(lblNum2.Text, lblNum3.Text) && Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0)
		{
			if (!ChekSequnce(lblNum2.Text, lblNum4.Text))
			{
				EXchanel(3, 4);
			}
			else if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0)
			{
				if (!ChekSequnce(lblNum2.Text, lblNum5.Text))
				{
					EXchanel(3, 5);
				}
				else if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0)
				{
					if (ChekSequnce(lblNum2.Text, lblNum6.Text))
					{
						txtInfo.Text = "الرقم " + lblNum2.Text + "\r\nحول من قبل لكل الخطوط\r\n" + txtInfo.Text;
						chkStop.Checked = true;
						return;
					}
					EXchanel(3, 6);
				}
			}
		}
		if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0 || !ChekSequnce(lblNum3.Text, lblNum4.Text) || Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0)
		{
			return;
		}
		if (!ChekSequnce(lblNum3.Text, lblNum5.Text))
		{
			EXchanel(4, 5);
		}
		else if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0)
		{
			if (!ChekSequnce(lblNum3.Text, lblNum6.Text))
			{
				EXchanel(4, 6);
				return;
			}
			txtInfo.Text = "الرقم " + lblNum3.Text + "\r\nحول من قبل لكل الخطوط\r\n" + txtInfo.Text;
			chkStop.Checked = true;
		}
	}

	private void ArrangVClines()
	{
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum1.Text, lblMain.Text, TextCompare: false) != 0)
		{
			if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum6.Text, lblMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 6);
			}
			if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum5.Text, lblMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 5);
			}
			if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum4.Text, lblMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 4);
			}
			if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum3.Text, lblMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 3);
			}
			if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum2.Text, lblMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 2);
			}
		}
	}

	private void ArrangTal2a()
	{
		if (!((lblNum1.Text.Length <= 10) | (lblNum2.Text.Length <= 10)) && Operators.CompareString(lblNum2.Text.Trim().Substring(0, 3), "011", TextCompare: false) == 0)
		{
			EXchanel(1, 2);
		}
	}

	private void ArrangVClinesCon()
	{
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(1);
			if (reqFn <= 0)
			{
				goto IL_0167;
			}
			EXchanel(reqFn, 1);
		}
		if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(2);
			if (reqFn <= 0)
			{
				goto IL_0167;
			}
			EXchanel(reqFn, 2);
		}
		if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(3);
			if (reqFn <= 0)
			{
				goto IL_0167;
			}
			EXchanel(reqFn, 3);
		}
		if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(4);
			if (reqFn <= 0)
			{
				goto IL_0167;
			}
			EXchanel(reqFn, 4);
		}
		if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(5);
			if (reqFn > 0)
			{
				EXchanel(reqFn, 5);
			}
		}
		goto IL_0167;
		IL_0167:
		SetTrueNumber();
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum1.Text, lblMainCon.Text, TextCompare: false) != 0)
		{
			if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum6.Text, lblMainCon.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 6);
			}
			if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum5.Text, lblMainCon.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 5);
			}
			if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum4.Text, lblMainCon.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 4);
			}
			if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum3.Text, lblMainCon.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 3);
			}
			if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum2.Text, lblMainCon.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 2);
			}
		}
	}

	private int GetReqFn(int EErs)
	{
		if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0 && EErs < 6)
		{
			return 6;
		}
		if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0 && EErs < 5)
		{
			return 5;
		}
		if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0 && EErs < 4)
		{
			return 4;
		}
		if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0 && EErs < 3)
		{
			return 3;
		}
		if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0 && EErs < 2)
		{
			return 2;
		}
		return 0;
	}

	private void SetTrueNumber()
	{
		if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0)
		{
			lblCorrectNumber.Text = "6";
		}
		else if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0)
		{
			lblCorrectNumber.Text = "5";
		}
		else if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0)
		{
			lblCorrectNumber.Text = "4";
		}
		else if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0)
		{
			lblCorrectNumber.Text = "3";
		}
		else if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0)
		{
			lblCorrectNumber.Text = "2";
		}
		else if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0)
		{
			lblCorrectNumber.Text = "1";
		}
		else
		{
			lblCorrectNumber.Text = "0";
		}
	}

	private void SetTransChart()
	{
		txtArrayOut.Text = "";
		int num = 0;
		checked
		{
			do
			{
				PortsArray[num] = "";
				NumbersArray[num] = "";
				num++;
			}
			while (num <= 7);
			int num2 = 0;
			if (Conversion.Val(lblCorrectNumber.Text) > (double)num2)
			{
				PortsArray[num2] = lblPort1.Text;
				NumbersArray[num2] = lblNum2.Text;
			}
			if (Conversion.Val(lblCorrectNumber.Text) == (double)(num2 + 1))
			{
				NumbersArray[num2] = txtCashNextMasterCon.Text;
				txtArrayOut.Text = txtArrayOut.Text + "\r\n" + PortsArray[num2] + " >> " + NumbersArray[num2];
				return;
			}
			txtArrayOut.Text = txtArrayOut.Text + "\r\n" + PortsArray[num2] + " >> " + NumbersArray[num2];
			num2 = 1;
			if (Conversion.Val(lblCorrectNumber.Text) > (double)num2)
			{
				PortsArray[num2] = lblPort2.Text;
				NumbersArray[num2] = lblNum3.Text;
			}
			if (Conversion.Val(lblCorrectNumber.Text) == (double)(num2 + 1))
			{
				NumbersArray[num2] = txtCashNextMasterCon.Text;
				txtArrayOut.Text = txtArrayOut.Text + "\r\n" + PortsArray[num2] + " >> " + NumbersArray[num2];
				return;
			}
			txtArrayOut.Text = txtArrayOut.Text + "\r\n" + PortsArray[num2] + " >> " + NumbersArray[num2];
			num2 = 2;
			if (Conversion.Val(lblCorrectNumber.Text) > (double)num2)
			{
				PortsArray[num2] = lblPort3.Text;
				NumbersArray[num2] = lblNum4.Text;
			}
			if (Conversion.Val(lblCorrectNumber.Text) == (double)(num2 + 1))
			{
				NumbersArray[num2] = txtCashNextMasterCon.Text;
				txtArrayOut.Text = txtArrayOut.Text + "\r\n" + PortsArray[num2] + " >> " + NumbersArray[num2];
				return;
			}
			txtArrayOut.Text = txtArrayOut.Text + "\r\n" + PortsArray[num2] + " >> " + NumbersArray[num2];
			num2 = 3;
			if (Conversion.Val(lblCorrectNumber.Text) > (double)num2)
			{
				PortsArray[num2] = lblPort4.Text;
				NumbersArray[num2] = lblNum5.Text;
			}
			if (Conversion.Val(lblCorrectNumber.Text) == (double)(num2 + 1))
			{
				NumbersArray[num2] = txtCashNextMasterCon.Text;
				txtArrayOut.Text = txtArrayOut.Text + "\r\n" + PortsArray[num2] + " >> " + NumbersArray[num2];
				return;
			}
			txtArrayOut.Text = txtArrayOut.Text + "\r\n" + PortsArray[num2] + " >> " + NumbersArray[num2];
			num2 = 4;
			if (Conversion.Val(lblCorrectNumber.Text) > (double)num2)
			{
				PortsArray[num2] = lblPort5.Text;
				NumbersArray[num2] = lblNum6.Text;
			}
			if (Conversion.Val(lblCorrectNumber.Text) == (double)(num2 + 1))
			{
				NumbersArray[num2] = txtCashNextMasterCon.Text;
				txtArrayOut.Text = txtArrayOut.Text + "\r\n" + PortsArray[num2] + " >> " + NumbersArray[num2];
				return;
			}
			txtArrayOut.Text = txtArrayOut.Text + "\r\n" + PortsArray[num2] + " >> " + NumbersArray[num2];
			num2 = 5;
			if (Conversion.Val(lblCorrectNumber.Text) > (double)num2)
			{
				PortsArray[num2] = lblPort6.Text;
				NumbersArray[num2] = txtCashNextMasterCon.Text;
			}
			txtArrayOut.Text = txtArrayOut.Text + "\r\n" + PortsArray[num2] + " >> " + NumbersArray[num2];
			Application.DoEvents();
		}
	}

	private void ArrangVClinesEC()
	{
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum1.Text, lblMainEC.Text, TextCompare: false) != 0)
		{
			if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum6.Text, lblMainEC.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 6);
			}
			if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum5.Text, lblMainEC.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 5);
			}
			if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum4.Text, lblMainEC.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 4);
			}
			if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum3.Text, lblMainEC.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 3);
			}
			if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum2.Text, lblMainEC.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 2);
			}
		}
	}

	private void btnArrangIT_Click(object sender, EventArgs e)
	{
		if ((txtMS01.Text.Trim().Length != 11) & (txtMS01.Text.Trim().Length != 11))
		{
			Interaction.MsgBox("ادخل رقم خط الماستر");
			return;
		}
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum1.Text, txtMS01.Text, TextCompare: false) != 0)
		{
			if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum6.Text, txtMS01.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 6);
			}
			if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum5.Text, txtMS01.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 5);
			}
			if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum4.Text, txtMS01.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 4);
			}
			if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum3.Text, txtMS01.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 3);
			}
			if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum2.Text, txtMS01.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 2);
			}
		}
		if (((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblNum1.Text, txtMS01.Text, TextCompare: false) != 0)) && Operators.CompareString(lblNum1.Text, txtMS02.Text, TextCompare: false) != 0)
		{
			if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum6.Text, txtMS02.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 6);
			}
			if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum5.Text, txtMS02.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 5);
			}
			if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum4.Text, txtMS02.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 4);
			}
			if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum3.Text, txtMS02.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 3);
			}
			if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum2.Text, txtMS02.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 2);
			}
		}
	}

	private void btnTransFromMS_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		Stopwatch stopwatch = default(Stopwatch);
		double num5 = default(double);
		double num6 = default(double);
		double num7 = default(double);
		double num8 = default(double);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 3280:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0023;
						case 6:
						case 7:
							goto IL_003d;
						case 8:
							goto IL_005d;
						case 10:
						case 11:
							goto IL_0073;
						case 12:
							goto IL_0097;
						case 14:
						case 15:
							goto IL_00ae;
						case 16:
							goto IL_00c2;
						case 17:
							goto IL_00cc;
						case 18:
							goto IL_00d6;
						case 19:
							goto IL_00e7;
						case 20:
							goto IL_00f1;
						case 21:
							goto IL_0105;
						case 22:
							goto IL_0138;
						case 23:
							goto IL_0166;
						case 24:
							goto IL_016f;
						case 25:
							goto IL_01a5;
						case 28:
							goto IL_01b4;
						case 29:
							goto IL_01c8;
						case 30:
							goto IL_0208;
						case 31:
							goto IL_021e;
						case 32:
							goto IL_0241;
						case 33:
							goto IL_0267;
						case 34:
							goto IL_02af;
						case 35:
							goto IL_02b8;
						case 36:
							goto IL_02c7;
						case 37:
							goto IL_02db;
						case 38:
							goto IL_02ef;
						case 39:
							goto IL_02f9;
						case 41:
						case 42:
							goto IL_030a;
						case 26:
						case 27:
						case 43:
							goto IL_0314;
						case 44:
							goto IL_0350;
						case 45:
							goto IL_035a;
						case 46:
							goto IL_036e;
						case 47:
							goto IL_0377;
						case 48:
						case 49:
							goto IL_03a7;
						case 50:
							goto IL_03b0;
						case 51:
							goto IL_03e6;
						case 54:
							goto IL_03f5;
						case 55:
							goto IL_0409;
						case 56:
							goto IL_0449;
						case 57:
							goto IL_045f;
						case 58:
							goto IL_0482;
						case 59:
							goto IL_04a8;
						case 60:
							goto IL_04f0;
						case 61:
							goto IL_04f9;
						case 62:
							goto IL_0508;
						case 63:
							goto IL_051c;
						case 64:
							goto IL_0530;
						case 65:
							goto IL_053a;
						case 67:
						case 68:
							goto IL_054b;
						case 52:
						case 53:
						case 69:
							goto IL_0555;
						case 70:
							goto IL_0591;
						case 71:
							goto IL_059b;
						case 72:
							goto IL_05af;
						case 73:
							goto IL_05b8;
						case 74:
						case 75:
							goto IL_05e8;
						case 76:
							goto IL_05f1;
						case 77:
							goto IL_0627;
						case 80:
							goto IL_0636;
						case 81:
							goto IL_064a;
						case 82:
							goto IL_068a;
						case 83:
							goto IL_06a0;
						case 84:
							goto IL_06c3;
						case 85:
							goto IL_06e9;
						case 86:
							goto IL_0731;
						case 87:
							goto IL_073a;
						case 88:
							goto IL_0749;
						case 89:
							goto IL_075d;
						case 90:
							goto IL_0771;
						case 91:
							goto IL_077b;
						case 93:
						case 94:
							goto IL_078c;
						case 78:
						case 79:
						case 95:
							goto IL_0796;
						case 96:
							goto IL_07d2;
						case 97:
							goto IL_07dc;
						case 98:
							goto IL_07f0;
						case 99:
							goto IL_07f9;
						case 100:
						case 101:
							goto IL_0829;
						case 102:
							goto IL_0832;
						case 103:
							goto IL_0868;
						case 106:
							goto IL_0877;
						case 107:
							goto IL_088b;
						case 108:
							goto IL_08cb;
						case 109:
							goto IL_08e1;
						case 110:
							goto IL_0904;
						case 111:
							goto IL_092a;
						case 112:
							goto IL_0972;
						case 113:
							goto IL_097b;
						case 114:
							goto IL_098a;
						case 115:
							goto IL_099e;
						case 116:
							goto IL_09b2;
						case 117:
							goto IL_09bc;
						case 119:
						case 120:
							goto IL_09cd;
						case 104:
						case 105:
						case 121:
							goto IL_09d7;
						case 122:
							goto IL_0a13;
						case 123:
							goto IL_0a1d;
						case 124:
							goto IL_0a31;
						case 125:
							goto IL_0a3a;
						case 40:
						case 66:
						case 92:
						case 118:
						case 126:
						case 127:
							goto IL_0a6b;
						case 128:
							goto IL_0a74;
						case 129:
							goto IL_0a81;
						case 130:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
						case 9:
						case 13:
						case 131:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0a6b:
					num2 = 127;
					Application.DoEvents();
					goto IL_0a74;
					IL_0a74:
					num2 = 128;
					EnableCntl();
					goto IL_0a81;
					IL_09cd:
					num2 = 120;
					Application.DoEvents();
					goto IL_09d7;
					IL_0a81:
					num2 = 129;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					if (MysqlConn.MainProgLic < 3)
					{
						goto IL_0023;
					}
					goto IL_003d;
					IL_0023:
					num2 = 4;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_003d:
					num2 = 7;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_005d;
					}
					goto IL_0073;
					IL_005d:
					num2 = 8;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_0073:
					num2 = 11;
					if (Conversion.Val(txtMoneyMS2.Text) < 5.0)
					{
						goto IL_0097;
					}
					goto IL_00ae;
					IL_0097:
					num2 = 12;
					Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
					goto end_IL_0001_3;
					IL_00ae:
					num2 = 15;
					lblProgress.BackColor = Color.Red;
					goto IL_00c2;
					IL_00c2:
					num2 = 16;
					DisableCntl();
					goto IL_00cc;
					IL_00cc:
					num2 = 17;
					cancelAllTheProcess = false;
					goto IL_00d6;
					IL_00d6:
					num2 = 18;
					btnArrangIT_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_00e7;
					IL_00e7:
					num2 = 19;
					ReSetUssdOrder();
					goto IL_00f1;
					IL_00f1:
					num2 = 20;
					lblProgress.Text = "تحويل فودافون كاش ماستر";
					goto IL_0105;
					IL_0105:
					num2 = 21;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_0138;
					}
					goto IL_0166;
					IL_0138:
					num2 = 22;
					TransVCfromMsToNm(lblPort1, lblNum2, lblPort2, txtRet01, txtRet02, txtMoneyMS2);
					goto IL_0166;
					IL_0166:
					num2 = 23;
					Application.DoEvents();
					goto IL_016f;
					IL_016f:
					num2 = 24;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_01a5;
					}
					goto IL_03a7;
					IL_01a5:
					num2 = 25;
					stopwatch.Start();
					goto IL_0314;
					IL_0314:
					num2 = 27;
					if ((double)stopwatch.ElapsedMilliseconds <= Conversion.Val(txtMoneyMS3Dly.Text) * 60.0 * 1000.0)
					{
						goto IL_01b4;
					}
					goto IL_0350;
					IL_0350:
					num2 = 44;
					stopwatch.Stop();
					goto IL_035a;
					IL_035a:
					num2 = 45;
					txtRemTimeVC.Text = "تحويل";
					goto IL_036e;
					IL_036e:
					num2 = 46;
					Application.DoEvents();
					goto IL_0377;
					IL_0377:
					num2 = 47;
					TransVCfromMsToNm(lblPort1, lblNum3, lblPort3, txtRet01, txtRet03, txtMoneyMS3);
					goto IL_03a7;
					IL_01b4:
					num2 = 28;
					txtNextPortNum.Text = "3";
					goto IL_01c8;
					IL_01c8:
					num2 = 29;
					num5 = Conversion.Int((Conversion.Val(txtMoneyMS3Dly.Text) * 60.0 * 1000.0 - (double)stopwatch.ElapsedMilliseconds) / 100.0);
					goto IL_0208;
					IL_0208:
					num2 = 30;
					num6 = Conversion.Int(num5 / 600.0);
					goto IL_021e;
					IL_021e:
					num2 = 31;
					num7 = Conversion.Int((num5 - num6 * 600.0) / 10.0);
					goto IL_0241;
					IL_0241:
					num2 = 32;
					num8 = Conversion.Int(num5 - num6 * 600.0 - num7 * 10.0);
					goto IL_0267;
					IL_0267:
					num2 = 33;
					txtRemTimeVC.Text = num6 + ":" + num7 + ":" + num8;
					goto IL_02af;
					IL_02af:
					num2 = 34;
					Application.DoEvents();
					goto IL_02b8;
					IL_02b8:
					num2 = 35;
					if (cancelAllTheProcess)
					{
						goto IL_02c7;
					}
					goto IL_030a;
					IL_02c7:
					num2 = 36;
					txtNextPortNum.Text = "A";
					goto IL_02db;
					IL_02db:
					num2 = 37;
					txtRemTimeVC.Text = "تم الايقاف";
					goto IL_02ef;
					IL_02ef:
					num2 = 38;
					cancelAllTheProcess = false;
					goto IL_02f9;
					IL_02f9:
					num2 = 39;
					stopwatch.Stop();
					goto IL_0a6b;
					IL_030a:
					num2 = 42;
					Application.DoEvents();
					goto IL_0314;
					IL_03a7:
					num2 = 49;
					Application.DoEvents();
					goto IL_03b0;
					IL_03b0:
					num2 = 50;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_03e6;
					}
					goto IL_05e8;
					IL_03e6:
					num2 = 51;
					stopwatch.Start();
					goto IL_0555;
					IL_0555:
					num2 = 53;
					if ((double)stopwatch.ElapsedMilliseconds <= Conversion.Val(txtMoneyMS4Dly.Text) * 60.0 * 1000.0)
					{
						goto IL_03f5;
					}
					goto IL_0591;
					IL_0591:
					num2 = 70;
					stopwatch.Stop();
					goto IL_059b;
					IL_059b:
					num2 = 71;
					txtRemTimeVC.Text = "تحويل";
					goto IL_05af;
					IL_05af:
					num2 = 72;
					Application.DoEvents();
					goto IL_05b8;
					IL_05b8:
					num2 = 73;
					TransVCfromMsToNm(lblPort1, lblNum4, lblPort4, txtRet01, txtRet04, txtMoneyMS4);
					goto IL_05e8;
					IL_03f5:
					num2 = 54;
					txtNextPortNum.Text = "4";
					goto IL_0409;
					IL_0409:
					num2 = 55;
					num5 = Conversion.Int((Conversion.Val(txtMoneyMS4Dly.Text) * 60.0 * 1000.0 - (double)stopwatch.ElapsedMilliseconds) / 100.0);
					goto IL_0449;
					IL_0449:
					num2 = 56;
					num6 = Conversion.Int(num5 / 600.0);
					goto IL_045f;
					IL_045f:
					num2 = 57;
					num7 = Conversion.Int((num5 - num6 * 600.0) / 10.0);
					goto IL_0482;
					IL_0482:
					num2 = 58;
					num8 = Conversion.Int(num5 - num6 * 600.0 - num7 * 10.0);
					goto IL_04a8;
					IL_04a8:
					num2 = 59;
					txtRemTimeVC.Text = num6 + ":" + num7 + ":" + num8;
					goto IL_04f0;
					IL_04f0:
					num2 = 60;
					Application.DoEvents();
					goto IL_04f9;
					IL_04f9:
					num2 = 61;
					if (cancelAllTheProcess)
					{
						goto IL_0508;
					}
					goto IL_054b;
					IL_0508:
					num2 = 62;
					txtNextPortNum.Text = "A";
					goto IL_051c;
					IL_051c:
					num2 = 63;
					txtRemTimeVC.Text = "تم الايقاف";
					goto IL_0530;
					IL_0530:
					num2 = 64;
					cancelAllTheProcess = false;
					goto IL_053a;
					IL_053a:
					num2 = 65;
					stopwatch.Stop();
					goto IL_0a6b;
					IL_054b:
					num2 = 68;
					Application.DoEvents();
					goto IL_0555;
					IL_05e8:
					num2 = 75;
					Application.DoEvents();
					goto IL_05f1;
					IL_05f1:
					num2 = 76;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0627;
					}
					goto IL_0829;
					IL_0627:
					num2 = 77;
					stopwatch.Start();
					goto IL_0796;
					IL_0796:
					num2 = 79;
					if ((double)stopwatch.ElapsedMilliseconds <= Conversion.Val(txtMoneyMS5Dly.Text) * 60.0 * 1000.0)
					{
						goto IL_0636;
					}
					goto IL_07d2;
					IL_07d2:
					num2 = 96;
					stopwatch.Stop();
					goto IL_07dc;
					IL_07dc:
					num2 = 97;
					txtRemTimeVC.Text = "تحويل";
					goto IL_07f0;
					IL_07f0:
					num2 = 98;
					Application.DoEvents();
					goto IL_07f9;
					IL_07f9:
					num2 = 99;
					TransVCfromMsToNm(lblPort1, lblNum5, lblPort5, txtRet01, txtRet05, txtMoneyMS5);
					goto IL_0829;
					IL_0636:
					num2 = 80;
					txtNextPortNum.Text = "5";
					goto IL_064a;
					IL_064a:
					num2 = 81;
					num5 = Conversion.Int((Conversion.Val(txtMoneyMS5Dly.Text) * 60.0 * 1000.0 - (double)stopwatch.ElapsedMilliseconds) / 100.0);
					goto IL_068a;
					IL_068a:
					num2 = 82;
					num6 = Conversion.Int(num5 / 600.0);
					goto IL_06a0;
					IL_06a0:
					num2 = 83;
					num7 = Conversion.Int((num5 - num6 * 600.0) / 10.0);
					goto IL_06c3;
					IL_06c3:
					num2 = 84;
					num8 = Conversion.Int(num5 - num6 * 600.0 - num7 * 10.0);
					goto IL_06e9;
					IL_06e9:
					num2 = 85;
					txtRemTimeVC.Text = num6 + ":" + num7 + ":" + num8;
					goto IL_0731;
					IL_0731:
					num2 = 86;
					Application.DoEvents();
					goto IL_073a;
					IL_073a:
					num2 = 87;
					if (cancelAllTheProcess)
					{
						goto IL_0749;
					}
					goto IL_078c;
					IL_0749:
					num2 = 88;
					txtNextPortNum.Text = "A";
					goto IL_075d;
					IL_075d:
					num2 = 89;
					txtRemTimeVC.Text = "تم الايقاف";
					goto IL_0771;
					IL_0771:
					num2 = 90;
					cancelAllTheProcess = false;
					goto IL_077b;
					IL_077b:
					num2 = 91;
					stopwatch.Stop();
					goto IL_0a6b;
					IL_078c:
					num2 = 94;
					Application.DoEvents();
					goto IL_0796;
					IL_0829:
					num2 = 101;
					Application.DoEvents();
					goto IL_0832;
					IL_0832:
					num2 = 102;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_0868;
					}
					goto IL_0a6b;
					IL_0868:
					num2 = 103;
					stopwatch.Start();
					goto IL_09d7;
					IL_09d7:
					num2 = 105;
					if ((double)stopwatch.ElapsedMilliseconds <= Conversion.Val(txtMoneyMS6Dly.Text) * 60.0 * 1000.0)
					{
						goto IL_0877;
					}
					goto IL_0a13;
					IL_0a13:
					num2 = 122;
					stopwatch.Stop();
					goto IL_0a1d;
					IL_0a1d:
					num2 = 123;
					txtRemTimeVC.Text = "تحويل";
					goto IL_0a31;
					IL_0a31:
					num2 = 124;
					Application.DoEvents();
					goto IL_0a3a;
					IL_0a3a:
					num2 = 125;
					TransVCfromMsToNm(lblPort1, lblNum6, lblPort6, txtRet01, txtRet06, txtMoneyMS6);
					goto IL_0a6b;
					IL_0877:
					num2 = 106;
					txtNextPortNum.Text = "6";
					goto IL_088b;
					IL_088b:
					num2 = 107;
					num5 = Conversion.Int((Conversion.Val(txtMoneyMS6Dly.Text) * 60.0 * 1000.0 - (double)stopwatch.ElapsedMilliseconds) / 100.0);
					goto IL_08cb;
					IL_08cb:
					num2 = 108;
					num6 = Conversion.Int(num5 / 600.0);
					goto IL_08e1;
					IL_08e1:
					num2 = 109;
					num7 = Conversion.Int((num5 - num6 * 600.0) / 10.0);
					goto IL_0904;
					IL_0904:
					num2 = 110;
					num8 = Conversion.Int(num5 - num6 * 600.0 - num7 * 10.0);
					goto IL_092a;
					IL_092a:
					num2 = 111;
					txtRemTimeVC.Text = num6 + ":" + num7 + ":" + num8;
					goto IL_0972;
					IL_0972:
					num2 = 112;
					Application.DoEvents();
					goto IL_097b;
					IL_097b:
					num2 = 113;
					if (cancelAllTheProcess)
					{
						goto IL_098a;
					}
					goto IL_09cd;
					IL_098a:
					num2 = 114;
					txtNextPortNum.Text = "A";
					goto IL_099e;
					IL_099e:
					num2 = 115;
					txtRemTimeVC.Text = "تم الايقاف";
					goto IL_09b2;
					IL_09b2:
					num2 = 116;
					cancelAllTheProcess = false;
					goto IL_09bc;
					IL_09bc:
					num2 = 117;
					stopwatch.Stop();
					goto IL_0a6b;
					end_IL_0001_2:
					break;
				}
				num2 = 130;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 3280;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVcashTraV()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 481:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_003b;
						case 4:
							goto IL_004a;
						case 5:
							goto IL_007c;
						case 6:
							goto IL_008b;
						case 7:
							goto IL_00bd;
						case 8:
							goto IL_00cc;
						case 9:
							goto IL_00fe;
						case 10:
							goto IL_010e;
						case 11:
							goto IL_0141;
						case 12:
							goto IL_0151;
						case 13:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 14:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_010e:
					num2 = 10;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0141;
					}
					goto IL_0151;
					IL_0141:
					num2 = 11;
					SetUssdOrderVcashTraVXP(lblPort5);
					goto IL_0151;
					IL_00fe:
					num2 = 9;
					SetUssdOrderVcashTraVXP(lblPort4);
					goto IL_010e;
					IL_0151:
					num2 = 12;
					if (!((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						goto end_IL_0001_3;
					}
					break;
					IL_000b:
					num2 = 2;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_003b;
					}
					goto IL_004a;
					IL_003b:
					num2 = 3;
					SetUssdOrderVcashTraVXP(lblPort1);
					goto IL_004a;
					IL_004a:
					num2 = 4;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_007c;
					}
					goto IL_008b;
					IL_007c:
					num2 = 5;
					SetUssdOrderVcashTraVXP(lblPort2);
					goto IL_008b;
					IL_008b:
					num2 = 6;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_00bd;
					}
					goto IL_00cc;
					IL_00bd:
					num2 = 7;
					SetUssdOrderVcashTraVXP(lblPort3);
					goto IL_00cc;
					IL_00cc:
					num2 = 8;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_00fe;
					}
					goto IL_010e;
					end_IL_0001_2:
					break;
				}
				num2 = 13;
				SetUssdOrderVcashTraVXP(lblPort6);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 481;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVcashTraVNorm()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 481:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_003b;
						case 4:
							goto IL_004a;
						case 5:
							goto IL_007c;
						case 6:
							goto IL_008b;
						case 7:
							goto IL_00bd;
						case 8:
							goto IL_00cc;
						case 9:
							goto IL_00fe;
						case 10:
							goto IL_010e;
						case 11:
							goto IL_0141;
						case 12:
							goto IL_0151;
						case 13:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 14:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_010e:
					num2 = 10;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0141;
					}
					goto IL_0151;
					IL_0141:
					num2 = 11;
					SetUssdOrderVcashTraVXPNorm(lblPort5);
					goto IL_0151;
					IL_00fe:
					num2 = 9;
					SetUssdOrderVcashTraVXPNorm(lblPort4);
					goto IL_010e;
					IL_0151:
					num2 = 12;
					if (!((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						goto end_IL_0001_3;
					}
					break;
					IL_000b:
					num2 = 2;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_003b;
					}
					goto IL_004a;
					IL_003b:
					num2 = 3;
					SetUssdOrderVcashTraVXPNorm(lblPort1);
					goto IL_004a;
					IL_004a:
					num2 = 4;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_007c;
					}
					goto IL_008b;
					IL_007c:
					num2 = 5;
					SetUssdOrderVcashTraVXPNorm(lblPort2);
					goto IL_008b;
					IL_008b:
					num2 = 6;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_00bd;
					}
					goto IL_00cc;
					IL_00bd:
					num2 = 7;
					SetUssdOrderVcashTraVXPNorm(lblPort3);
					goto IL_00cc;
					IL_00cc:
					num2 = 8;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_00fe;
					}
					goto IL_010e;
					end_IL_0001_2:
					break;
				}
				num2 = 13;
				SetUssdOrderVcashTraVXPNorm(lblPort6);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 481;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnGetBalMS_Click(object sender, EventArgs e)
	{
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		btnArrangIT_Click(RuntimeHelpers.GetObjectValue(sender), e);
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "Get Balance";
		DisableCntl();
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			lblBal1.Text = "#";
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			lblBal2.Text = "#";
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			lblBal3.Text = "#";
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			lblBal4.Text = "#";
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			lblBal5.Text = "#";
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			lblBal6.Text = "#";
		}
		Application.DoEvents();
		ReSetUssdOrder();
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			if (Operators.CompareString(lblNum1.Text, txtMS01.Text, TextCompare: false) != 0)
			{
				GetBalVC(lblPort1);
				lblBal1.Text = GetBalVCX(lblPort1);
			}
			else
			{
				lblBal1.Text = GetBalVCMS(lblPort1);
			}
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			if (Operators.CompareString(lblNum2.Text, txtMS01.Text, TextCompare: false) != 0)
			{
				GetBalVC(lblPort2);
				lblBal2.Text = GetBalVCX(lblPort2);
			}
			else
			{
				lblBal2.Text = GetBalVCMS(lblPort2);
			}
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			if (Operators.CompareString(lblNum3.Text, txtMS01.Text, TextCompare: false) != 0)
			{
				GetBalVC(lblPort3);
				lblBal3.Text = GetBalVCX(lblPort3);
			}
			else
			{
				lblBal3.Text = GetBalVCMS(lblPort3);
			}
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			GetBalVC(lblPort4);
			lblBal4.Text = GetBalVCX(lblPort4);
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			GetBalVC(lblPort5);
			lblBal5.Text = GetBalVCX(lblPort5);
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			GetBalVC(lblPort6);
			lblBal6.Text = GetBalVCX(lblPort6);
		}
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btn3G_Click(object sender, EventArgs e)
	{
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		if (Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0)
		{
			lblProgress.Text = "3G Network ... " + lblPort1.Text;
			Application.DoEvents();
			SetThisModenTo3F(lblPort1);
			RestartModem(lblPort1.Text);
		}
		if (Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0)
		{
			lblProgress.Text = "3G Network ... " + lblPort2.Text;
			Application.DoEvents();
			SetThisModenTo3F(lblPort2);
			RestartModem(lblPort2.Text);
		}
		if (Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0)
		{
			lblProgress.Text = "3G Network ... " + lblPort3.Text;
			Application.DoEvents();
			SetThisModenTo3F(lblPort3);
			RestartModem(lblPort3.Text);
		}
		if (Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0)
		{
			lblProgress.Text = "3G Network ... " + lblPort4.Text;
			Application.DoEvents();
			SetThisModenTo3F(lblPort4);
			RestartModem(lblPort4.Text);
		}
		if (Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0)
		{
			lblProgress.Text = "3G Network ... " + lblPort5.Text;
			Application.DoEvents();
			SetThisModenTo3F(lblPort5);
			RestartModem(lblPort5.Text);
		}
		if (Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0)
		{
			lblProgress.Text = "3G Network ... " + lblPort6.Text;
			Application.DoEvents();
			SetThisModenTo3F(lblPort6);
			RestartModem(lblPort6.Text);
		}
		EnableCntl();
		lblProgress.Text = "OK";
		lblProgress.BackColor = Color.LimeGreen;
		Application.DoEvents();
	}

	private void SetThisModenTo3F(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 176:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0022;
						case 5:
							goto IL_0033;
						case 6:
							goto IL_003c;
						case 7:
							goto IL_004a;
						case 8:
							goto IL_0057;
						case 9:
							goto IL_0060;
						case 10:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 11:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_004a:
					num2 = 7;
					Thread.Sleep(1000);
					goto IL_0057;
					IL_0057:
					num2 = 8;
					serialPort.Close();
					goto IL_0060;
					IL_003c:
					num2 = 6;
					serialPort.WriteLine("AT+ZSNT=2,0,0\r");
					goto IL_004a;
					IL_0060:
					num2 = 9;
					serialPort.Dispose();
					break;
					IL_000b:
					num2 = 2;
					serialPort = new SerialPort();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					serialPort.PortName = Exxc.Text;
					goto IL_0022;
					IL_0022:
					num2 = 4;
					if (!serialPort.IsOpen)
					{
						goto IL_0033;
					}
					goto IL_003c;
					IL_0033:
					num2 = 5;
					serialPort.Open();
					goto IL_003c;
					end_IL_0001_2:
					break;
				}
				num2 = 10;
				serialPort = null;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 176;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetThisModenTo2F(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 176:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0022;
						case 5:
							goto IL_0033;
						case 6:
							goto IL_003c;
						case 7:
							goto IL_004a;
						case 8:
							goto IL_0057;
						case 9:
							goto IL_0060;
						case 10:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 11:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_004a:
					num2 = 7;
					Thread.Sleep(1000);
					goto IL_0057;
					IL_0057:
					num2 = 8;
					serialPort.Close();
					goto IL_0060;
					IL_003c:
					num2 = 6;
					serialPort.WriteLine("AT+ZSNT=1,0,0\r");
					goto IL_004a;
					IL_0060:
					num2 = 9;
					serialPort.Dispose();
					break;
					IL_000b:
					num2 = 2;
					serialPort = new SerialPort();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					serialPort.PortName = Exxc.Text;
					goto IL_0022;
					IL_0022:
					num2 = 4;
					if (!serialPort.IsOpen)
					{
						goto IL_0033;
					}
					goto IL_003c;
					IL_0033:
					num2 = 5;
					serialPort.Open();
					goto IL_003c;
					end_IL_0001_2:
					break;
				}
				num2 = 10;
				serialPort = null;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 176;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnTransTo_Click(object sender, EventArgs e)
	{
		Stopwatch stopwatch = new Stopwatch();
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Conversion.Val(txtMoneyMS2.Text) < 5.0)
		{
			Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
			return;
		}
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		ReSetUssdOrder();
		btnArrangIT_Click(RuntimeHelpers.GetObjectValue(sender), e);
		stopwatch.Start();
		lblProgress.Text = "سحب فودافون كاش ماستر";
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			lblProgress.Text = "سحب فودافون كاش 2 ";
			Application.DoEvents();
			TransVCfromMsToNmRS(lblPort1, lblNum2, lblPort2, txtRet02, txtMoneyMS2);
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			lblProgress.Text = "سحب فودافون كاش 3 ";
			Application.DoEvents();
			TransVCfromMsToNmRS(lblPort1, lblNum3, lblPort3, txtRet03, txtMoneyMS3);
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			lblProgress.Text = "سحب فودافون كاش 4 ";
			Application.DoEvents();
			TransVCfromMsToNmRS(lblPort1, lblNum4, lblPort4, txtRet04, txtMoneyMS4);
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			lblProgress.Text = "سحب فودافون كاش 5 ";
			Application.DoEvents();
			TransVCfromMsToNmRS(lblPort1, lblNum5, lblPort5, txtRet05, txtMoneyMS5);
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			lblProgress.Text = "سحب فودافون كاش 6 ";
			Application.DoEvents();
			TransVCfromMsToNmRS(lblPort1, lblNum6, lblPort6, txtRet06, txtMoneyMS6);
		}
		Application.DoEvents();
		while ((double)stopwatch.ElapsedMilliseconds <= Conversion.Val(txtwait.Text))
		{
			Application.DoEvents();
		}
		stopwatch.Stop();
		ReturnRead();
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void SetUssdOrderVcashTraVXPNorm(Label Exxc)
	{
		SerialPort serialPort = new SerialPort();
		serialPort.PortName = Exxc.Text;
		if (!serialPort.IsOpen)
		{
			serialPort.Open();
		}
		int num = 0;
		checked
		{
			while (true)
			{
				num++;
				string ussdCommandFull = "9";
				string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
				serialPort.WriteLine(commandCode + "\r");
				Thread.Sleep(1500);
				ussdCommandFull = "*868*2*" + txtTransNum.Text + "*" + txtTransMoney.Text + "#";
				commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
				serialPort.WriteLine(commandCode + "\r");
				Thread.Sleep(500);
				Application.DoEvents();
				string text = "#";
				string text2 = "#";
				string text3 = "#";
				string left = "#";
				lblProgress.Text = "Read " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num) + ")";
				while (true)
				{
					Application.DoEvents();
					int num2 = 0;
					while (true)
					{
						Thread.Sleep(1000);
						string text4 = serialPort.ReadExisting();
						if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text4) >= 2))
						{
							txtInfo.Text = text4 + "\r\n" + txtInfo.Text;
						}
						if (Operators.CompareString(text4, "", TextCompare: false) == 0)
						{
							if ((Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(text, "", TextCompare: false) == 0) & (Operators.CompareString(text2, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
							{
								Application.DoEvents();
								if (num <= 5)
								{
									break;
								}
								goto IL_04e6;
							}
							left = text3;
							text3 = text2;
							text2 = text;
							text = text4;
						}
						else
						{
							text = "#";
							text2 = "#";
							text3 = "#";
							left = "#";
						}
						if (text4.Contains("+CUSD: "))
						{
							string text5 = text4;
							int num3 = text4.IndexOf("+CUSD: ");
							text5 = text4.Substring(num3 + 10, text4.Length - num3 - 10).Trim().Trim('o')
								.Trim('\r')
								.Trim('\r')
								.Trim();
							num3 = text5.IndexOf(",");
							string text6 = text5.Substring(0, num3).Trim().Trim('"')
								.Trim(',')
								.Trim('"');
							text6 = text6.Trim('"').Trim(',').Trim('"');
							string eEstr;
							if (Operators.CompareString(text6.Substring(0, 1), "0", TextCompare: false) == 0)
							{
								byte[] bytes = encoding_mod.StrToByteArray(text6);
								eEstr = Encoding.BigEndianUnicode.GetString(bytes);
							}
							else
							{
								eEstr = encoding_mod.Decode7Bit(text6);
							}
							OutBoxDrop(Exxc, eEstr);
						}
						if (text4.Contains("0644062A06230643064A062F0020062A062D0648064A0644002000"))
						{
							goto IL_03b8;
						}
						if (text4.Contains("062A06450020062A062D0648064A064400200627064406310635064A062F002006280646062C0627062D"))
						{
							Application.DoEvents();
						}
						else if (text4.Contains("+CUSD: 5") | text4.Contains("unknown") | text4.Contains("retry operation") | text4.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
						{
							Application.DoEvents();
							if (num <= 2)
							{
								break;
							}
						}
						else if (text4.Contains("0639064106480627060C0020064406270020064A0648062C062F00200644062F064A06"))
						{
							DisablePort(Exxc);
							Application.DoEvents();
						}
						else
						{
							Application.DoEvents();
							num2++;
							if (num2 <= 30)
							{
								continue;
							}
							ussdCommandFull = "1";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							Application.DoEvents();
						}
						goto IL_04e6;
						IL_04e6:
						serialPort.Close();
						serialPort.Dispose();
						serialPort = null;
						Application.DoEvents();
						return;
					}
					break;
					IL_03b8:
					ussdCommandFull = "1";
					commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(1000);
					Application.DoEvents();
					text = "#";
					text2 = "#";
					text3 = "#";
					left = "#";
				}
			}
		}
	}

	private void SetUssdOrderVcashTraVXP(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						int num3 = 0;
						do
						{
							IL_003a:
							num3++;
							string ussdCommandFull = "9";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1500);
							ussdCommandFull = "*7000*3*" + txtTransNum.Text + "*" + txtTransMoney.Text + "#";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							lblProgress.Text = "Read " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							Application.DoEvents();
							string text = "#";
							string text2 = "#";
							string text3 = "#";
							string left = "#";
							int num4 = 0;
							while (true)
							{
								Thread.Sleep(500);
								string text4 = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text4) >= 2))
								{
									txtInfo.Text = text4 + "\r\n" + txtInfo.Text;
								}
								if (Operators.CompareString(text4, "", TextCompare: false) == 0)
								{
									if ((Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(text, "", TextCompare: false) == 0) & (Operators.CompareString(text2, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
									{
										break;
									}
									left = text3;
									text3 = text2;
									text2 = text;
									text = text4;
								}
								else
								{
									text = "#";
									text2 = "#";
									text3 = "#";
									left = "#";
								}
								if (text4.Contains("+CUSD: "))
								{
									string text5 = text4;
									int num5 = text4.IndexOf("+CUSD: ");
									text5 = text4.Substring(num5 + 10, text4.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text5.IndexOf(",");
									string text6 = text5.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text6 = text6.Trim('"').Trim(',').Trim('"');
									string text7;
									if (Operators.CompareString(text6.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text6);
										text7 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text7 = encoding_mod.Decode7Bit(text6);
									}
									OutBoxDrop(Exxc, text7);
									if (text7.Contains("تم شحن"))
									{
										goto IL_03c6;
									}
									if (text7.Contains("لا يمكن إتمام"))
									{
										goto IL_041a;
									}
								}
								if (text4.Contains("0627062F062E0644002006270644063106420645002006270644"))
								{
									object obj = txtPass.Text ?? "";
									if (obj == null)
									{
										obj = "";
									}
									ussdCommandFull = (string)obj;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
									text = "#";
									text2 = "#";
									text3 = "#";
									left = "#";
								}
								if (text4.Contains("062A06450020062A062D0648064A06440020"))
								{
									goto IL_04b5;
								}
								if (text4.Contains("+CUSD: 5") | text4.Contains("unknown") | text4.Contains("retry operation") | text4.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
								{
									goto IL_0530;
								}
								if (text4.Contains("0050006C006500610073006500200069006E007300650072007400200061002000760061006C0069006400200061006E0073007700650072002E002E000A06440627064A0648062C062F002006310635064A062F002006430627064106490020064A") | text4.Contains("064406270020064A0648062C062F002006310635064A062F00"))
								{
									goto IL_056d;
								}
								Application.DoEvents();
								num4++;
								if (num4 <= 20)
								{
									continue;
								}
								goto IL_05a0;
							}
							Application.DoEvents();
							if (num3 <= 5)
							{
								goto IL_003a;
							}
							break;
							IL_056d:
							DisablePort(Exxc);
							OutBoxDrop(Exxc, "لا يوجد رصيد كافى للتحويل");
							Application.DoEvents();
							break;
							IL_05a0:
							object obj2 = txtPass.Text ?? "";
							if (obj2 == null)
							{
								obj2 = "";
							}
							ussdCommandFull = (string)obj2;
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							Application.DoEvents();
							break;
							IL_03c6:
							txtTotalTransVal.Text = Conversions.ToString(Conversion.Val(txtTotalTransVal.Text) + Conversion.Val(txtTransMoney.Text) * 0.7);
							break;
							IL_041a:
							DisablePort(Exxc);
							break;
							IL_04b5:
							ussdCommandFull = "9";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							OutBoxDrop(Exxc, "تم التحويل بنجاح");
							Application.DoEvents();
							break;
							IL_0530:
							Application.DoEvents();
						}
						while (num3 <= 2);
						break;
					}
					case 1543:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj3) when (obj3 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj3);
				try0001_dispatch = 1543;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVcashTraInv()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		Stopwatch stopwatch = default(Stopwatch);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1028:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_001c;
						case 5:
							goto IL_004e;
						case 6:
							goto IL_005d;
						case 7:
							goto IL_008f;
						case 8:
							goto IL_009e;
						case 9:
							goto IL_00d0;
						case 10:
							goto IL_00e0;
						case 11:
							goto IL_0113;
						case 12:
							goto IL_0123;
						case 13:
							goto IL_0156;
						case 14:
							goto IL_0166;
						case 15:
							goto IL_0199;
						case 18:
							goto IL_01ab;
						case 16:
						case 17:
						case 19:
							goto IL_01b5;
						case 20:
							goto IL_01cf;
						case 21:
							goto IL_01d9;
						case 22:
							goto IL_020c;
						case 23:
							goto IL_021c;
						case 24:
							goto IL_024f;
						case 25:
							goto IL_025f;
						case 26:
							goto IL_0292;
						case 27:
							goto IL_02a2;
						case 28:
							goto IL_02d5;
						case 29:
							goto IL_02e5;
						case 30:
							goto IL_0318;
						case 31:
							goto IL_0328;
						case 32:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 33:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0318:
					num2 = 30;
					SetUssdOrderVcashTraVXP(lblPort5);
					goto IL_0328;
					IL_0328:
					num2 = 31;
					if (!((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						goto end_IL_0001_3;
					}
					break;
					IL_02e5:
					num2 = 29;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0318;
					}
					goto IL_0328;
					IL_01ab:
					num2 = 18;
					Application.DoEvents();
					goto IL_01b5;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					stopwatch.Start();
					goto IL_001c;
					IL_001c:
					num2 = 4;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_004e;
					}
					goto IL_005d;
					IL_004e:
					num2 = 5;
					SetUssdOrderVcashTraInvX(lblPort1);
					goto IL_005d;
					IL_005d:
					num2 = 6;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_008f;
					}
					goto IL_009e;
					IL_008f:
					num2 = 7;
					SetUssdOrderVcashTraInvX(lblPort2);
					goto IL_009e;
					IL_009e:
					num2 = 8;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_00d0;
					}
					goto IL_00e0;
					IL_00d0:
					num2 = 9;
					SetUssdOrderVcashTraInvX(lblPort3);
					goto IL_00e0;
					IL_00e0:
					num2 = 10;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0113;
					}
					goto IL_0123;
					IL_0113:
					num2 = 11;
					SetUssdOrderVcashTraInvX(lblPort4);
					goto IL_0123;
					IL_0123:
					num2 = 12;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0156;
					}
					goto IL_0166;
					IL_0156:
					num2 = 13;
					SetUssdOrderVcashTraInvX(lblPort5);
					goto IL_0166;
					IL_0166:
					num2 = 14;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_0199;
					}
					goto IL_01b5;
					IL_0199:
					num2 = 15;
					SetUssdOrderVcashTraInvX(lblPort6);
					goto IL_01b5;
					IL_01b5:
					num2 = 17;
					if (stopwatch.ElapsedMilliseconds <= 6000)
					{
						goto IL_01ab;
					}
					goto IL_01cf;
					IL_01cf:
					num2 = 20;
					stopwatch.Stop();
					goto IL_01d9;
					IL_01d9:
					num2 = 21;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_020c;
					}
					goto IL_021c;
					IL_020c:
					num2 = 22;
					SetUssdOrderVcashTraVXP(lblPort1);
					goto IL_021c;
					IL_021c:
					num2 = 23;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_024f;
					}
					goto IL_025f;
					IL_024f:
					num2 = 24;
					SetUssdOrderVcashTraVXP(lblPort2);
					goto IL_025f;
					IL_025f:
					num2 = 25;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_0292;
					}
					goto IL_02a2;
					IL_0292:
					num2 = 26;
					SetUssdOrderVcashTraVXP(lblPort3);
					goto IL_02a2;
					IL_02a2:
					num2 = 27;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_02d5;
					}
					goto IL_02e5;
					IL_02d5:
					num2 = 28;
					SetUssdOrderVcashTraVXP(lblPort4);
					goto IL_02e5;
					end_IL_0001_2:
					break;
				}
				num2 = 32;
				SetUssdOrderVcashTraVXP(lblPort6);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1028;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVccX()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 481:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_003b;
						case 4:
							goto IL_004a;
						case 5:
							goto IL_007c;
						case 6:
							goto IL_008b;
						case 7:
							goto IL_00bd;
						case 8:
							goto IL_00cc;
						case 9:
							goto IL_00fe;
						case 10:
							goto IL_010e;
						case 11:
							goto IL_0141;
						case 12:
							goto IL_0151;
						case 13:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 14:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_010e:
					num2 = 10;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0141;
					}
					goto IL_0151;
					IL_0141:
					num2 = 11;
					SetUssdOrder6VCCx(lblPort5);
					goto IL_0151;
					IL_00fe:
					num2 = 9;
					SetUssdOrder6VCCx(lblPort4);
					goto IL_010e;
					IL_0151:
					num2 = 12;
					if (!((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						goto end_IL_0001_3;
					}
					break;
					IL_000b:
					num2 = 2;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_003b;
					}
					goto IL_004a;
					IL_003b:
					num2 = 3;
					SetUssdOrder6VCCx(lblPort1);
					goto IL_004a;
					IL_004a:
					num2 = 4;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_007c;
					}
					goto IL_008b;
					IL_007c:
					num2 = 5;
					SetUssdOrder6VCCx(lblPort2);
					goto IL_008b;
					IL_008b:
					num2 = 6;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_00bd;
					}
					goto IL_00cc;
					IL_00bd:
					num2 = 7;
					SetUssdOrder6VCCx(lblPort3);
					goto IL_00cc;
					IL_00cc:
					num2 = 8;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_00fe;
					}
					goto IL_010e;
					end_IL_0001_2:
					break;
				}
				num2 = 13;
				SetUssdOrder6VCCx(lblPort6);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 481;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void EXchanel(int Floc, int Sloc)
	{
		if (!(Floc <= 0 || Floc > 6 || Sloc <= 0 || Sloc > 6))
		{
			Label label;
			Label label2;
			Label label3;
			Label label4;
			TextBox textBox;
			Label label5;
			Label label6;
			Label label7;
			switch (Floc)
			{
			case 1:
				label = lblPort1;
				label2 = lblNum1;
				label3 = lblBal1;
				label4 = lblGiftV1;
				textBox = txtRet01;
				label5 = lblChargeDone1;
				label6 = lblGifts01;
				label7 = lblGifttotal1;
				break;
			case 2:
				label = lblPort2;
				label2 = lblNum2;
				label3 = lblBal2;
				label4 = lblGiftV2;
				textBox = txtRet02;
				label5 = lblChargeDone2;
				label6 = lblGifts02;
				label7 = lblGifttotal2;
				break;
			case 3:
				label = lblPort3;
				label2 = lblNum3;
				label3 = lblBal3;
				label4 = lblGiftV3;
				textBox = txtRet03;
				label5 = lblChargeDone3;
				label6 = lblGifts03;
				label7 = lblGifttotal3;
				break;
			case 4:
				label = lblPort4;
				label2 = lblNum4;
				label3 = lblBal4;
				label4 = lblGiftV4;
				textBox = txtRet04;
				label5 = lblChargeDone4;
				label6 = lblGifts04;
				label7 = lblGifttotal4;
				break;
			case 5:
				label = lblPort5;
				label2 = lblNum5;
				label3 = lblBal5;
				label4 = lblGiftV5;
				textBox = txtRet05;
				label5 = lblChargeDone5;
				label6 = lblGifts05;
				label7 = lblGifttotal5;
				break;
			case 6:
				label = lblPort6;
				label2 = lblNum6;
				label3 = lblBal6;
				label4 = lblGiftV6;
				textBox = txtRet06;
				label5 = lblChargeDone6;
				label6 = lblGifts06;
				label7 = lblGifttotal6;
				break;
			default:
				label = lblPort6;
				label2 = lblNum6;
				label3 = lblBal6;
				label4 = lblGiftV6;
				textBox = txtRet06;
				label5 = lblChargeDone6;
				label6 = lblGifts06;
				label7 = lblGifttotal6;
				break;
			}
			Label label8;
			Label label9;
			Label label10;
			Label label11;
			TextBox textBox2;
			Label label12;
			Label label13;
			Label label14;
			switch (Sloc)
			{
			case 1:
				label8 = lblPort1;
				label9 = lblNum1;
				label10 = lblBal1;
				label11 = lblGiftV1;
				textBox2 = txtRet01;
				label12 = lblChargeDone1;
				label13 = lblGifts01;
				label14 = lblGifttotal1;
				break;
			case 2:
				label8 = lblPort2;
				label9 = lblNum2;
				label10 = lblBal2;
				label11 = lblGiftV2;
				textBox2 = txtRet02;
				label12 = lblChargeDone2;
				label13 = lblGifts02;
				label14 = lblGifttotal2;
				break;
			case 3:
				label8 = lblPort3;
				label9 = lblNum3;
				label10 = lblBal3;
				label11 = lblGiftV3;
				textBox2 = txtRet03;
				label12 = lblChargeDone3;
				label13 = lblGifts03;
				label14 = lblGifttotal3;
				break;
			case 4:
				label8 = lblPort4;
				label9 = lblNum4;
				label10 = lblBal4;
				label11 = lblGiftV4;
				textBox2 = txtRet04;
				label12 = lblChargeDone4;
				label13 = lblGifts04;
				label14 = lblGifttotal4;
				break;
			case 5:
				label8 = lblPort5;
				label9 = lblNum5;
				label10 = lblBal5;
				label11 = lblGiftV5;
				textBox2 = txtRet05;
				label12 = lblChargeDone5;
				label13 = lblGifts05;
				label14 = lblGifttotal5;
				break;
			case 6:
				label8 = lblPort6;
				label9 = lblNum6;
				label10 = lblBal6;
				label11 = lblGiftV6;
				textBox2 = txtRet06;
				label12 = lblChargeDone6;
				label13 = lblGifts06;
				label14 = lblGifttotal6;
				break;
			default:
				label8 = lblPort6;
				label9 = lblNum6;
				label10 = lblBal6;
				label11 = lblGiftV6;
				textBox2 = txtRet06;
				label12 = lblChargeDone6;
				label13 = lblGifts06;
				label14 = lblGifttotal6;
				break;
			}
			string text = label.Text;
			string text2 = label2.Text;
			string text3 = label3.Text;
			string text4 = label4.Text;
			Color foreColor = label.ForeColor;
			string text5 = textBox.Text;
			Color foreColor2 = textBox.ForeColor;
			string text6 = label5.Text;
			string text7 = label6.Text;
			string text8 = label7.Text;
			label.Text = label8.Text;
			label2.Text = label9.Text;
			label3.Text = label10.Text;
			label4.Text = label11.Text;
			label.ForeColor = label8.ForeColor;
			textBox.Text = textBox2.Text;
			textBox.ForeColor = textBox2.ForeColor;
			label5.Text = label12.Text;
			label6.Text = label13.Text;
			label7.Text = label14.Text;
			label8.Text = text;
			label9.Text = text2;
			label10.Text = text3;
			label11.Text = text4;
			label8.ForeColor = foreColor;
			textBox2.Text = text5;
			textBox2.ForeColor = foreColor2;
			label12.Text = text6;
			label13.Text = text7;
			label14.Text = text8;
		}
	}

	private void btnRunAuto_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh1.Checked = false;
		}
		if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh2.Checked = false;
		}
		if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh3.Checked = false;
		}
		if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh4.Checked = false;
		}
		if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh5.Checked = false;
		}
		if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh6.Checked = false;
		}
		Application.DoEvents();
		lblGifts01.Text = "0";
		lblGifts02.Text = "0";
		lblGifts03.Text = "0";
		lblGifts04.Text = "0";
		lblGifts05.Text = "0";
		lblGifts06.Text = "0";
		Application.DoEvents();
		btnUssdReset_Click(RuntimeHelpers.GetObjectValue(sender), e);
		Application.DoEvents();
		checked
		{
			int num = (int)Math.Round(Conversion.Val(txtQtyDone.Text));
			int num2 = 1;
			while (num <= lstNumbers.Items.Count - 1)
			{
				if (!chkChargedB4(num))
				{
					fullNums(num);
					Application.DoEvents();
					bt_Click(RuntimeHelpers.GetObjectValue(sender), e);
					Application.DoEvents();
					num2++;
					Application.DoEvents();
					Thread.Sleep(200);
					btnRun02_Click(RuntimeHelpers.GetObjectValue(sender), e);
					Application.DoEvents();
					if (chkStop.Checked || (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						break;
					}
					Application.DoEvents();
					if (Conversion.Val(lblGifts01.Text) >= 1.0)
					{
						chkCh1.Checked = true;
					}
					else
					{
						chkCh1.Checked = false;
					}
					if (Conversion.Val(lblGifts02.Text) >= 1.0)
					{
						chkCh2.Checked = true;
					}
					else
					{
						chkCh2.Checked = false;
					}
					if (Conversion.Val(lblGifts03.Text) >= 1.0)
					{
						chkCh3.Checked = true;
					}
					else
					{
						chkCh3.Checked = false;
					}
					if (Conversion.Val(lblGifts04.Text) >= 1.0)
					{
						chkCh4.Checked = true;
					}
					else
					{
						chkCh4.Checked = false;
					}
					if (Conversion.Val(lblGifts05.Text) >= 1.0)
					{
						chkCh5.Checked = true;
					}
					else
					{
						chkCh5.Checked = false;
					}
					if (Conversion.Val(lblGifts06.Text) >= 1.0)
					{
						chkCh6.Checked = true;
					}
					else
					{
						chkCh6.Checked = false;
					}
					Application.DoEvents();
					btnTransVal_Click(RuntimeHelpers.GetObjectValue(sender), e);
					Application.DoEvents();
				}
				else
				{
					txtInfo.Text = "توجد ارقام تم شحنها بنفس رقم التشغيل من قبل\r\n" + txtInfo.Text;
				}
				num++;
				txtQtyDone.Text = Conversions.ToString(num);
				if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0)
				{
					chkCh1.Checked = true;
				}
				if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0)
				{
					chkCh2.Checked = true;
				}
				if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0)
				{
					chkCh3.Checked = true;
				}
				if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0)
				{
					chkCh4.Checked = true;
				}
				if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0)
				{
					chkCh5.Checked = true;
				}
				if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0)
				{
					chkCh6.Checked = true;
				}
				Application.DoEvents();
				lblGifts01.Text = "0";
				lblGifts02.Text = "0";
				lblGifts03.Text = "0";
				lblGifts04.Text = "0";
				lblGifts05.Text = "0";
				lblGifts06.Text = "0";
				Application.DoEvents();
			}
		}
	}

	private void SetUssdOrder6VCCx(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					string ussdCommandFull = "*6#";
					string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(1500);
					Application.DoEvents();
					string text = serialPort.ReadExisting();
					if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
					{
						txtInfo.Text = text + "\r\n" + txtInfo.Text;
					}
					if (text.Contains("+CUSD: "))
					{
						string text2 = text;
						int num3 = text.IndexOf("+CUSD: ");
						text2 = checked(text.Substring(num3 + 10, text.Length - num3 - 10)).Trim().Trim('o').Trim('\r')
							.Trim('\r')
							.Trim();
						num3 = text2.IndexOf(",");
						string text3 = text2.Substring(0, num3).Trim().Trim('"')
							.Trim(',')
							.Trim('"');
						text3 = text3.Trim('"').Trim(',').Trim('"');
						string eEstr;
						if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
						{
							byte[] bytes = encoding_mod.StrToByteArray(text3);
							eEstr = Encoding.BigEndianUnicode.GetString(bytes);
						}
						else
						{
							eEstr = encoding_mod.Decode7Bit(text3);
						}
						OutBoxDrop(Exxc, eEstr);
					}
					break;
				}
				case 550:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 550;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVcashTraInvX(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					string ussdCommandFull = "*9*4*" + txtTransNum.Text + "*" + txtTransMoney.Text + "#";
					string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(500);
					Application.DoEvents();
					break;
				}
				case 192:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 192;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void TransVCfromMsToNm(Label Exxc, Label Eeret, Label ExxcTo, TextBox outtxt, TextBox outtxt2, TextBox TransMony)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						int num3 = 0;
						int num4 = 0;
						int num5 = 0;
						string text = "";
						string text2 = serialPort.ReadExisting();
						if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text2) >= 2))
						{
							txtInfo.Text = text2 + "\r\n" + txtInfo.Text;
						}
						txtInfo.Text = ExxcTo.Text + "\r\n" + txtInfo.Text;
						Application.DoEvents();
						while (true)
						{
							string ussdCommandFull = "*7070#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							while (true)
							{
								num3++;
								Thread.Sleep(500);
								text2 = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text2) >= 2))
								{
									txtInfo.Text = text2 + "\r\n" + txtInfo.Text;
								}
								if (text2.Length == 0)
								{
									num5++;
									if (num5 >= 30)
									{
										num5 = 0;
										commandCode = "AT+CUSD=0";
										serialPort.WriteLine(commandCode + "\r");
										break;
									}
								}
								if (text2.Contains("+CUSD: "))
								{
									num3 = text2.IndexOf("+CUSD: ");
									string text3 = text2.Substring(num3 + 10, text2.Length - num3 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num3 = text3.IndexOf(",");
									string text4 = text3.Substring(0, num3).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text4 = text4.Trim('"').Trim(',').Trim('"');
									if (Operators.CompareString(text4.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text4);
										text = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text = encoding_mod.Decode7Bit(text4);
									}
									outtxt.Text = text + "\r\n" + outtxt.Text;
									Application.DoEvents();
								}
								if (text2.Contains("003100200627064A062F06270639000A003200200633062D0628000A003300200634062D0646000A00340020062F06410639002006410627062A064806310629"))
								{
									ussdCommandFull = "1";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									continue;
								}
								if (text2.Contains("0627062F062E064400200631064206450020064506480628064A064400200627064406390645064A06440020064406440627064A062F06270639"))
								{
									ussdCommandFull = Eeret.Text;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									continue;
								}
								if (text2.Contains("064A0631062C06490020062A06230643064A062F002006270644063106420645"))
								{
									ussdCommandFull = Eeret.Text;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									continue;
								}
								if (text2.Contains("0627062F062E06440020064506280644063A0020062706440625064A062F062706390020000A002806270"))
								{
									ussdCommandFull = Conversions.ToString(Conversion.Val(TransMony.Text));
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									continue;
								}
								if (text2.Contains("0644062A06270643064A062F00200627064A062F06270639002000"))
								{
									ussdCommandFull = "1";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									continue;
								}
								if (text2.Contains("CUSD: 5") && num3 <= 10)
								{
									break;
								}
								if (text2.Contains("0633064A062A06440642064900200627064406390645064A06440020062706440627064600200631063306270644062900200644062A0"))
								{
									Thread.Sleep(2500);
									ConfirmTansVCMSRequest(ExxcTo, outtxt2);
									Thread.Sleep(2500);
									while (true)
									{
										IL_04cb:
										ussdCommandFull = "*7070*101#";
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(2500);
										while (true)
										{
											Thread.Sleep(1000);
											text2 = serialPort.ReadExisting();
											if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text2) >= 2))
											{
												txtInfo.Text = text2 + "\r\n" + txtInfo.Text;
											}
											if (text2.Contains("+CUSD: 1"))
											{
												break;
											}
											if (text2.Contains("CME ERROR") && num4 <= 10)
											{
												goto IL_04cb;
											}
											num4++;
											if (num4 <= 15)
											{
												continue;
											}
											goto IL_05e9;
										}
										break;
									}
									ussdCommandFull = txtPassMs.Text;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(10000);
									continue;
								}
								goto IL_05e9;
								IL_05e9:
								if ((text2.Contains("retry operation") | text2.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E")) && num3 <= 10)
								{
									break;
								}
								if (text2.Contains("CME ERROR"))
								{
									commandCode = "AT+CUSD=0";
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(2000);
									break;
								}
								if (text2.Contains("004E006F00200043006F00640065002000410073007300690067006E0065006400200046006F0072002000540068006900730020004F007000650072006100740069006F006E"))
								{
									commandCode = "AT+CUSD=0";
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(3000);
									break;
								}
								if (text2.Contains("062A064500200625064A062F06270639002000"))
								{
									if (text2.Contains("+CUSD: "))
									{
										num3 = text2.IndexOf("+CUSD: ");
										string text3 = text2.Substring(num3 + 10, text2.Length - num3 - 10).Trim().Trim('o')
											.Trim('\r')
											.Trim('\r')
											.Trim();
										num3 = text3.IndexOf(",");
										string text4 = text3.Substring(0, num3).Trim().Trim('"')
											.Trim(',')
											.Trim('"');
										text4 = text4.Trim('"').Trim(',').Trim('"');
										if (Operators.CompareString(text4.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text4);
											text = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text = encoding_mod.Decode7Bit(text4);
										}
									}
									if (text.Contains(Eeret.Text))
									{
										goto end_IL_0001;
									}
								}
								if (num3 > 60)
								{
									goto end_IL_0001;
								}
							}
						}
					}
					case 2090:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_2;
							}
							break;
						}
						end_IL_0001:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 2090;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ConfirmTansVCMSRequest(Label Exxc, TextBox outtxt2)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						int num3 = 0;
						while (true)
						{
							IL_003a:
							string ussdCommandFull = "*900*2#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							do
							{
								num3++;
								Thread.Sleep(500);
								string text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("+CUSD: "))
								{
									num3 = text.IndexOf("+CUSD: ");
									string text2 = text.Substring(num3 + 10, text.Length - num3 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num3 = text2.IndexOf(",");
									string text3 = text2.Substring(0, num3).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text3 = text3.Trim('"').Trim(',').Trim('"');
									string text4;
									if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text3);
										text4 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text4 = encoding_mod.Decode7Bit(text3);
									}
									outtxt2.Text = text4 + "\r\n" + outtxt2.Text;
									Application.DoEvents();
								}
								if (text.Contains("064A0631062C064900200627062F062E0627064400200631064206450643002006270644063306310649"))
								{
									ussdCommandFull = txtPass.Text;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									break;
								}
								if ((text.Contains("retry operation") | text.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E")) && num3 <= 10)
								{
									goto IL_003a;
								}
							}
							while (num3 <= 10);
							break;
						}
						break;
					}
					case 732:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 732;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnGetBalNM_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		ReSetUssdOrder();
		lblProgress.Text = "Get Balance";
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			lblBal1.Text = "#";
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			lblBal2.Text = "#";
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			lblBal3.Text = "#";
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			lblBal4.Text = "#";
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			lblBal5.Text = "#";
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			lblBal6.Text = "#";
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			lblBal1.Text = GetBalVCReal(lblPort1);
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			lblBal2.Text = GetBalVCReal(lblPort2);
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			lblBal3.Text = GetBalVCReal(lblPort3);
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			lblBal4.Text = GetBalVCReal(lblPort4);
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			lblBal5.Text = GetBalVCReal(lblPort5);
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			lblBal6.Text = GetBalVCReal(lblPort6);
		}
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void TransVCfromMsToNmRS(Label Exxc, Label Eeret, Label ExxcTo, TextBox outtxt, TextBox TransMony)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						int num3 = 0;
						while (true)
						{
							IL_003a:
							string ussdCommandFull = "*7070#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							while (true)
							{
								num3++;
								Thread.Sleep(500);
								string text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("+CUSD: "))
								{
									num3 = text.IndexOf("+CUSD: ");
									text = text.Substring(num3 + 10, text.Length - num3 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num3 = text.IndexOf(",");
									string text2 = text.Substring(0, num3).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text2 = text2.Trim('"').Trim(',').Trim('"');
									string text3;
									if (Operators.CompareString(text2.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text2);
										text3 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text3 = encoding_mod.Decode7Bit(text2);
									}
									outtxt.Text = text3 + "\r\n" + outtxt.Text;
									Application.DoEvents();
								}
								if (text.Contains("003100200627064A062F06270639000A003200200633062D0628000A003300200634062D0646000A00340020062F06410639002006410627062A064806310629"))
								{
									ussdCommandFull = "2";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									continue;
								}
								if (text.Contains("0627062F062E064400200631064206450020064506480628064A064400200627064406390645064A0644002006440644"))
								{
									ussdCommandFull = Eeret.Text;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									continue;
								}
								if (text.Contains("064A0631062C06490020062A06230643064A062F002006270644063106420645"))
								{
									ussdCommandFull = Eeret.Text;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									continue;
								}
								if (text.Contains("0627062F062E06440020064506280644063A0020062706440633062D06280020000A00280627064406"))
								{
									ussdCommandFull = Conversions.ToString(Conversion.Val(TransMony.Text));
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									continue;
								}
								if (text.Contains("0627062F062E06440020063106420645064300200627064406330631064900200644"))
								{
									ussdCommandFull = txtPassMs.Text;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(4000);
									ConfirmTansVCMSRequestRS(ExxcTo);
									Thread.Sleep(1000);
									break;
								}
								if ((text.Contains("CUSD: 5") && num3 <= 10) || ((text.Contains("retry operation") | text.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E")) && num3 <= 10) || (text.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C00790020007") && num3 <= 10))
								{
									goto IL_003a;
								}
								if (num3 > 10)
								{
									break;
								}
							}
							break;
						}
						break;
					}
					case 1117:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1117;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void TransVCfromMsToNmRS_All(Label Exxc, Label Eeret, Label ExxcTo, Label Emony, TextBox outtxt)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						double num3 = Conversion.Int(Conversion.Val(Emony.Text) / 1.01) - 1.0;
						int num4 = 0;
						while (true)
						{
							IL_0061:
							string ussdCommandFull = "*7070#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							while (true)
							{
								num4++;
								Thread.Sleep(500);
								string text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("+CUSD: "))
								{
									num4 = text.IndexOf("+CUSD: ");
									text = text.Substring(num4 + 10, text.Length - num4 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num4 = text.IndexOf(",");
									string text2 = text.Substring(0, num4).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text2 = text2.Trim('"').Trim(',').Trim('"');
									string text3;
									if (Operators.CompareString(text2.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text2);
										text3 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text3 = encoding_mod.Decode7Bit(text2);
									}
									outtxt.Text = text3 + "\r\n" + outtxt.Text;
									Application.DoEvents();
								}
								if (text.Contains("003100200627064A062F06270639000A003200200633062D0628000A003300200634062D0646000A00340020062F06410639002006410627062A064806310629"))
								{
									ussdCommandFull = "2";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									continue;
								}
								if (text.Contains("0627062F062E064400200631064206450020064506480628064A064400200627064406390645064A0644002006440644"))
								{
									ussdCommandFull = Eeret.Text;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									continue;
								}
								if (text.Contains("064A0631062C06490020062A06230643064A062F002006270644063106420645"))
								{
									ussdCommandFull = Eeret.Text;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									continue;
								}
								if (text.Contains("0627062F062E06440020064506280644063A0020062706440633062D06280020000A00280627064406"))
								{
									ussdCommandFull = Conversions.ToString(num3);
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									continue;
								}
								if (text.Contains("0627062F062E06440020063106420645064300200627064406330631064900200644"))
								{
									ussdCommandFull = txtPassMs.Text;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(4000);
									ConfirmTansVCMSRequestRS(ExxcTo);
									Thread.Sleep(1000);
									break;
								}
								if ((text.Contains("CUSD: 5") && num4 <= 10) || ((text.Contains("retry operation") | text.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E")) && num4 <= 10) || (text.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C00790020007") && num4 <= 10))
								{
									goto IL_0061;
								}
								if (num4 > 10)
								{
									break;
								}
							}
							break;
						}
						break;
					}
					case 1146:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1146;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnVodaTrans_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 758:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0019;
						case 5:
						case 6:
							goto IL_0033;
						case 7:
							goto IL_0053;
						case 9:
						case 10:
							goto IL_0069;
						case 11:
							goto IL_008a;
						case 13:
						case 14:
							goto IL_00a1;
						case 15:
							goto IL_00c5;
						case 17:
						case 18:
							goto IL_00dc;
						case 19:
							goto IL_00f0;
						case 20:
							goto IL_0104;
						case 21:
							goto IL_010e;
						case 22:
						case 30:
							goto IL_0123;
						case 24:
							goto IL_018a;
						case 25:
							goto IL_01b8;
						case 26:
							goto IL_01c6;
						case 27:
							goto IL_01d0;
						case 28:
							goto IL_01d9;
						case 29:
							goto IL_0204;
						case 23:
						case 31:
						case 32:
							goto IL_0223;
						case 33:
							goto IL_022d;
						case 34:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 8:
						case 12:
						case 16:
						case 35:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0204:
					num2 = 29;
					if (!chkStop.Checked)
					{
						goto IL_0123;
					}
					goto IL_0223;
					IL_0223:
					num2 = 32;
					EnableCntl();
					goto IL_022d;
					IL_01d9:
					num2 = 28;
					if (Conversion.Val(txtLoopSVC.Text) < Conversion.Val(txtLoopFVC.Text))
					{
						goto IL_0204;
					}
					goto IL_0223;
					IL_022d:
					num2 = 33;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if (MysqlConn.MainProgLic < 3)
					{
						goto IL_0019;
					}
					goto IL_0033;
					IL_0019:
					num2 = 3;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0033:
					num2 = 6;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0053;
					}
					goto IL_0069;
					IL_0053:
					num2 = 7;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_0069:
					num2 = 10;
					if (txtTransNum.Text.Trim().Length == 0)
					{
						goto IL_008a;
					}
					goto IL_00a1;
					IL_008a:
					num2 = 11;
					Interaction.MsgBox("ادخل رقم الخط");
					goto end_IL_0001_3;
					IL_00a1:
					num2 = 14;
					if (Conversion.Val(txtTransMoney.Text) == 0.0)
					{
						goto IL_00c5;
					}
					goto IL_00dc;
					IL_00c5:
					num2 = 15;
					Interaction.MsgBox("ادخل المبلغ المراد تحويلة");
					goto end_IL_0001_3;
					IL_00dc:
					num2 = 18;
					lblProgress.BackColor = Color.Red;
					goto IL_00f0;
					IL_00f0:
					num2 = 19;
					lblProgress.Text = "تحويل الهدية رصيد";
					goto IL_0104;
					IL_0104:
					num2 = 20;
					DisableCntl();
					goto IL_010e;
					IL_010e:
					num2 = 21;
					txtLoopSVC.Text = "0";
					goto IL_0123;
					IL_0123:
					num2 = 22;
					if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						goto IL_018a;
					}
					goto IL_0223;
					IL_018a:
					num2 = 24;
					txtLoopSVC.Text = Conversions.ToString(Conversion.Val(txtLoopSVC.Text) + 1.0);
					goto IL_01b8;
					IL_01b8:
					num2 = 25;
					Thread.Sleep(500);
					goto IL_01c6;
					IL_01c6:
					num2 = 26;
					SetUssdOrderVcashTraVNorm();
					goto IL_01d0;
					IL_01d0:
					num2 = 27;
					Application.DoEvents();
					goto IL_01d9;
					end_IL_0001_2:
					break;
				}
				num2 = 34;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 758;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ConfirmTansVCMSRequestRS(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					int num3 = 0;
					while (true)
					{
						IL_003a:
						string ussdCommandFull = "*900*1#";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(1000);
						Application.DoEvents();
						while (true)
						{
							num3 = checked(num3 + 1);
							Thread.Sleep(500);
							string text = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
							{
								txtInfo.Text = text + "\r\n" + txtInfo.Text;
							}
							if (text.Contains("0633064A062A064500200633"))
							{
								ussdCommandFull = txtPass.Text;
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(1000);
								continue;
							}
							if (text.Contains("062E062F0627064500200645062D06410638062A06430020062F0648063300200031"))
							{
								ussdCommandFull = "0";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(1000);
								break;
							}
							if (((text.Contains("retry operation") | text.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E")) && num3 <= 10) || (text.Contains("CME ERROR") && num3 <= 10) || (text.Contains("064406270020064A0648062C062F00200627064A0020063906450644064A0627062A00200633062D0628002006320648063100200") && num3 <= 10))
							{
								goto IL_003a;
							}
							if (num3 > 10)
							{
								break;
							}
						}
						break;
					}
					break;
				}
				case 535:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 535;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void txtSpNum2_TextChanged(object sender, EventArgs e)
	{
	}

	private void fullNums(int eIndex)
	{
		if (lblNum1.Text.Length > 10)
		{
			lblCard1.Text = Conversions.ToString(lstNumbers.Items[eIndex]);
		}
		if (lblNum2.Text.Length > 10)
		{
			lblCard2.Text = Conversions.ToString(lstNumbers.Items[eIndex]);
		}
		if (lblNum3.Text.Length > 10)
		{
			lblCard3.Text = Conversions.ToString(lstNumbers.Items[eIndex]);
		}
		if (lblNum4.Text.Length > 10)
		{
			lblCard4.Text = Conversions.ToString(lstNumbers.Items[eIndex]);
		}
		if (lblNum5.Text.Length > 10)
		{
			lblCard5.Text = Conversions.ToString(lstNumbers.Items[eIndex]);
		}
		if (lblNum6.Text.Length > 10)
		{
			lblCard6.Text = Conversions.ToString(lstNumbers.Items[eIndex]);
		}
	}

	private bool chkChargedB4(int eindex)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		bool result = default(bool);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 202:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_006c;
						case 4:
							goto IL_0087;
						case 6:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
						case 7:
						case 8:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					objDataTabletemp = objData.QueryDatabase(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject("SELECT mobnum FROM vcnums where mobnum = '", lstNumbers.Items[eindex]), "' and enums = "), Conversion.Val(txtWorkID.Text)), " ")));
					goto IL_006c;
					IL_006c:
					num2 = 3;
					if (objDataTabletemp.Rows.Count != 0)
					{
						break;
					}
					goto IL_0087;
					IL_0087:
					num2 = 4;
					result = false;
					goto end_IL_0001_3;
					end_IL_0001_2:
					break;
				}
				num2 = 6;
				result = true;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 202;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void OutBoxDrop(Label eIndex, string EEstr)
	{
		string text = "";
		string text2 = "";
		string text3 = "";
		checked
		{
			if (EEstr.Contains("بيانات الكارت"))
			{
				if (EEstr.Contains("5482"))
				{
					int startIndex = EEstr.IndexOf("5482");
					text = EEstr.Substring(startIndex, 16);
					startIndex = EEstr.IndexOf("EXP:");
					text2 = EEstr.Substring(startIndex + 4, 5);
					startIndex = EEstr.IndexOf("CVV:");
					text3 = EEstr.Substring(startIndex + 4, 3);
				}
				if (Operators.CompareString(eIndex.Text, lblPort1.Text, TextCompare: false) == 0)
				{
					lblONnum1.Text = lblNum1.Text;
					lblONmc1.Text = text;
					lblONv1.Text = text3;
					lblONed.Text = text2;
					chkCh1.Checked = false;
				}
				if (Operators.CompareString(eIndex.Text, lblPort2.Text, TextCompare: false) == 0)
				{
					lblONnum2.Text = lblNum2.Text;
					lblONmc2.Text = text;
					lblONv2.Text = text3;
					chkCh2.Checked = false;
				}
				if (Operators.CompareString(eIndex.Text, lblPort3.Text, TextCompare: false) == 0)
				{
					lblONnum3.Text = lblNum3.Text;
					lblONmc3.Text = text;
					lblONv3.Text = text3;
					chkCh3.Checked = false;
				}
				if (Operators.CompareString(eIndex.Text, lblPort4.Text, TextCompare: false) == 0)
				{
					lblONnum4.Text = lblNum4.Text;
					lblONmc4.Text = text;
					lblONv4.Text = text3;
					chkCh4.Checked = false;
				}
				if (Operators.CompareString(eIndex.Text, lblPort5.Text, TextCompare: false) == 0)
				{
					lblONnum5.Text = lblNum5.Text;
					lblONmc5.Text = text;
					lblONv5.Text = text3;
					chkCh5.Checked = false;
				}
				if (Operators.CompareString(eIndex.Text, lblPort6.Text, TextCompare: false) == 0)
				{
					lblONnum6.Text = lblNum6.Text;
					lblONmc6.Text = text;
					lblONv6.Text = text3;
					chkCh6.Checked = false;
				}
			}
			if (Operators.CompareString(eIndex.Text, lblPort1.Text, TextCompare: false) == 0)
			{
				txtRet01.Text = EEstr + "\r\n" + txtRet01.Text;
				if (EEstr.Contains("مبروك"))
				{
					txtRet01.ForeColor = Color.LightPink;
				}
				if (EEstr.Contains("حول من علي المحفظة  ب100 جنية واكسب 5"))
				{
					txtRet01.ForeColor = Color.Red;
				}
				if (EEstr.Contains("مبروك, ستصلك رسالة تأكيد بالهدية!") | EEstr.Contains("Congrats, you will ") | EEstr.Contains("تم دفع"))
				{
					lblGifts01.Text = Conversions.ToString(Conversion.Val(lblGifts01.Text) + 1.0);
				}
				if (EEstr.Contains("تم شحن"))
				{
					txtRet01.ForeColor = Color.Yellow;
					lblChargeDone1.Text = Conversions.ToString(Conversion.Val(lblChargeDone1.Text) + 1.0);
				}
				if (EEstr.Contains("تم تحويل") | EEstr.Contains("تم الايداع بنجاح"))
				{
					lblChargeDone1.Text = Conversions.ToString(Conversion.Val(lblChargeDone1.Text) + 1.0);
				}
			}
			if (Operators.CompareString(eIndex.Text, lblPort2.Text, TextCompare: false) == 0)
			{
				txtRet02.Text = EEstr + "\r\n" + txtRet02.Text;
				if (EEstr.Contains("مبروك"))
				{
					txtRet02.ForeColor = Color.LightPink;
				}
				if (EEstr.Contains("حول من علي المحفظة  ب100 جنية واكسب 5"))
				{
					txtRet02.ForeColor = Color.LightCoral;
				}
				if (EEstr.Contains("مبروك, ستصلك رسالة تأكيد بالهدية!") | EEstr.Contains("Congrats, you will ") | EEstr.Contains("تم دفع"))
				{
					lblGifts02.Text = Conversions.ToString(Conversion.Val(lblGifts02.Text) + 1.0);
				}
				if (EEstr.Contains("تم شحن"))
				{
					txtRet02.ForeColor = Color.Yellow;
					lblChargeDone2.Text = Conversions.ToString(Conversion.Val(lblChargeDone2.Text) + 1.0);
				}
				if (EEstr.Contains("تم تحويل") | EEstr.Contains("تم الايداع بنجاح"))
				{
					lblChargeDone2.Text = Conversions.ToString(Conversion.Val(lblChargeDone2.Text) + 1.0);
				}
			}
			if (Operators.CompareString(eIndex.Text, lblPort3.Text, TextCompare: false) == 0)
			{
				txtRet03.Text = EEstr + "\r\n" + txtRet03.Text;
				if (EEstr.Contains("مبروك"))
				{
					txtRet03.ForeColor = Color.LightPink;
				}
				if (EEstr.Contains("حول من علي المحفظة  ب100 جنية واكسب 5"))
				{
					txtRet03.ForeColor = Color.LightCoral;
				}
				if (EEstr.Contains("مبروك, ستصلك رسالة تأكيد بالهدية!") | EEstr.Contains("Congrats, you will ") | EEstr.Contains("تم دفع"))
				{
					lblGifts03.Text = Conversions.ToString(Conversion.Val(lblGifts03.Text) + 1.0);
				}
				if (EEstr.Contains("تم شحن"))
				{
					txtRet03.ForeColor = Color.Yellow;
					lblChargeDone3.Text = Conversions.ToString(Conversion.Val(lblChargeDone3.Text) + 1.0);
				}
				if (EEstr.Contains("تم تحويل") | EEstr.Contains("تم الايداع بنجاح"))
				{
					lblChargeDone3.Text = Conversions.ToString(Conversion.Val(lblChargeDone3.Text) + 1.0);
				}
			}
			if (Operators.CompareString(eIndex.Text, lblPort4.Text, TextCompare: false) == 0)
			{
				txtRet04.Text = EEstr + "\r\n" + txtRet04.Text;
				if (EEstr.Contains("مبروك"))
				{
					txtRet04.ForeColor = Color.LightPink;
				}
				if (EEstr.Contains("حول من علي المحفظة  ب100 جنية واكسب 5"))
				{
					txtRet04.ForeColor = Color.LightCoral;
				}
				if (EEstr.Contains("مبروك, ستصلك رسالة تأكيد بالهدية!") | EEstr.Contains("Congrats, you will ") | EEstr.Contains("تم دفع"))
				{
					lblGifts04.Text = Conversions.ToString(Conversion.Val(lblGifts04.Text) + 1.0);
				}
				if (EEstr.Contains("تم شحن"))
				{
					txtRet04.ForeColor = Color.Yellow;
					lblChargeDone4.Text = Conversions.ToString(Conversion.Val(lblChargeDone4.Text) + 1.0);
				}
				if (EEstr.Contains("تم تحويل") | EEstr.Contains("تم الايداع بنجاح"))
				{
					lblChargeDone4.Text = Conversions.ToString(Conversion.Val(lblChargeDone4.Text) + 1.0);
				}
			}
			if (Operators.CompareString(eIndex.Text, lblPort5.Text, TextCompare: false) == 0)
			{
				txtRet05.Text = EEstr + "\r\n" + txtRet05.Text;
				if (EEstr.Contains("مبروك"))
				{
					txtRet05.ForeColor = Color.LightPink;
				}
				if (EEstr.Contains("حول من علي المحفظة  ب100 جنية واكسب 5"))
				{
					txtRet05.ForeColor = Color.LightCoral;
				}
				if (EEstr.Contains("مبروك, ستصلك رسالة تأكيد بالهدية!") | EEstr.Contains("Congrats, you will ") | EEstr.Contains("تم دفع"))
				{
					lblGifts05.Text = Conversions.ToString(Conversion.Val(lblGifts05.Text) + 1.0);
				}
				if (EEstr.Contains("تم شحن"))
				{
					txtRet05.ForeColor = Color.Yellow;
					lblChargeDone5.Text = Conversions.ToString(Conversion.Val(lblChargeDone5.Text) + 1.0);
				}
				if (EEstr.Contains("تم تحويل") | EEstr.Contains("تم الايداع بنجاح"))
				{
					lblChargeDone5.Text = Conversions.ToString(Conversion.Val(lblChargeDone5.Text) + 1.0);
				}
			}
			if (Operators.CompareString(eIndex.Text, lblPort6.Text, TextCompare: false) == 0)
			{
				txtRet06.Text = EEstr + "\r\n" + txtRet06.Text;
				if (EEstr.Contains("مبروك"))
				{
					txtRet06.ForeColor = Color.LightPink;
				}
				if (EEstr.Contains("حول من علي المحفظة  ب100 جنية واكسب 5"))
				{
					txtRet06.ForeColor = Color.LightCoral;
				}
				if (EEstr.Contains("مبروك, ستصلك رسالة تأكيد بالهدية!") | EEstr.Contains("Congrats, you will ") | EEstr.Contains("تم دفع"))
				{
					lblGifts06.Text = Conversions.ToString(Conversion.Val(lblGifts06.Text) + 1.0);
				}
				if (EEstr.Contains("تم شحن"))
				{
					txtRet06.ForeColor = Color.Yellow;
					lblChargeDone6.Text = Conversions.ToString(Conversion.Val(lblChargeDone6.Text) + 1.0);
				}
				if (EEstr.Contains("تم تحويل") | EEstr.Contains("تم الايداع بنجاح"))
				{
					lblChargeDone6.Text = Conversions.ToString(Conversion.Val(lblChargeDone6.Text) + 1.0);
				}
			}
			if (EEstr.Contains("كلمة المرور غير صحيحة"))
			{
				cancelAllTheProcess = true;
				chkStop.Checked = true;
				btnCancelTrans.Text = "تشغيل";
				Interaction.MsgBox("يوجد مشكلة فى كلمة المرور - تم ايقاف العملية");
			}
			Application.DoEvents();
		}
	}

	private void OutOfgetnumber(Label eIndex)
	{
		if (Operators.CompareString(eIndex.Text, lblPort1.Text, TextCompare: false) == 0)
		{
			SetNumberForIndex(lblPort1, lblNum1);
		}
		if (Operators.CompareString(eIndex.Text, lblPort2.Text, TextCompare: false) == 0)
		{
			SetNumberForIndex(lblPort2, lblNum2);
		}
		if (Operators.CompareString(eIndex.Text, lblPort3.Text, TextCompare: false) == 0)
		{
			SetNumberForIndex(lblPort3, lblNum3);
		}
		if (Operators.CompareString(eIndex.Text, lblPort4.Text, TextCompare: false) == 0)
		{
			SetNumberForIndex(lblPort4, lblNum4);
		}
		if (Operators.CompareString(eIndex.Text, lblPort5.Text, TextCompare: false) == 0)
		{
			SetNumberForIndex(lblPort5, lblNum5);
		}
		if (Operators.CompareString(eIndex.Text, lblPort6.Text, TextCompare: false) == 0)
		{
			SetNumberForIndex(lblPort6, lblNum6);
		}
		Application.DoEvents();
	}

	private string GetNumberByPort(string eIndex)
	{
		if (Operators.CompareString(eIndex, lblPort1.Text, TextCompare: false) == 0)
		{
			return lblNum1.Text;
		}
		if (Operators.CompareString(eIndex, lblPort2.Text, TextCompare: false) == 0)
		{
			return lblNum2.Text;
		}
		if (Operators.CompareString(eIndex, lblPort3.Text, TextCompare: false) == 0)
		{
			return lblNum3.Text;
		}
		if (Operators.CompareString(eIndex, lblPort4.Text, TextCompare: false) == 0)
		{
			return lblNum4.Text;
		}
		if (Operators.CompareString(eIndex, lblPort5.Text, TextCompare: false) == 0)
		{
			return lblNum5.Text;
		}
		if (Operators.CompareString(eIndex, lblPort6.Text, TextCompare: false) == 0)
		{
			return lblNum6.Text;
		}
		Application.DoEvents();
		string result = default(string);
		return result;
	}

	private void OutBoxDropNumber(Label eIndex)
	{
		if (Operators.CompareString(eIndex.Text, lblPort1.Text, TextCompare: false) == 0)
		{
			txtRet01.Text = lblNum1.Text + "\r\n" + txtRet01.Text;
			lblNum1.Text = "";
		}
		if (Operators.CompareString(eIndex.Text, lblPort2.Text, TextCompare: false) == 0)
		{
			txtRet02.Text = lblNum2.Text + "\r\n" + txtRet02.Text;
			lblNum2.Text = "";
		}
		if (Operators.CompareString(eIndex.Text, lblPort3.Text, TextCompare: false) == 0)
		{
			txtRet03.Text = lblNum3.Text + "\r\n" + txtRet03.Text;
			lblNum3.Text = "";
		}
		if (Operators.CompareString(eIndex.Text, lblPort4.Text, TextCompare: false) == 0)
		{
			txtRet04.Text = lblNum4.Text + "\r\n" + txtRet04.Text;
			lblNum4.Text = "";
		}
		if (Operators.CompareString(eIndex.Text, lblPort5.Text, TextCompare: false) == 0)
		{
			txtRet05.Text = lblNum5.Text + "\r\n" + txtRet05.Text;
			lblNum5.Text = "";
		}
		if (Operators.CompareString(eIndex.Text, lblPort6.Text, TextCompare: false) == 0)
		{
			txtRet06.Text = lblNum6.Text + "\r\n" + txtRet06.Text;
			lblNum6.Text = "";
		}
	}

	private void OutBoxDropCon(string eIndex, string EEstr)
	{
		if (Operators.CompareString(eIndex, lblPort1.Text, TextCompare: false) == 0)
		{
			txtRet01.Text = EEstr + "\r\n" + txtRet01.Text;
		}
		if (Operators.CompareString(eIndex, lblPort2.Text, TextCompare: false) == 0)
		{
			txtRet02.Text = EEstr + "\r\n" + txtRet02.Text;
		}
		if (Operators.CompareString(eIndex, lblPort3.Text, TextCompare: false) == 0)
		{
			txtRet03.Text = EEstr + "\r\n" + txtRet03.Text;
		}
		if (Operators.CompareString(eIndex, lblPort4.Text, TextCompare: false) == 0)
		{
			txtRet04.Text = EEstr + "\r\n" + txtRet04.Text;
		}
		if (Operators.CompareString(eIndex, lblPort5.Text, TextCompare: false) == 0)
		{
			txtRet05.Text = EEstr + "\r\n" + txtRet05.Text;
		}
		if (Operators.CompareString(eIndex, lblPort6.Text, TextCompare: false) == 0)
		{
			txtRet06.Text = EEstr + "\r\n" + txtRet06.Text;
		}
		Application.DoEvents();
		if (txtRet01.Text.Contains("Error") && txtRet01.ForeColor == Color.Cyan)
		{
			txtRet01.ForeColor = Color.Red;
		}
		if (txtRet02.Text.Contains("Error") && txtRet02.ForeColor == Color.Cyan)
		{
			txtRet02.ForeColor = Color.Red;
		}
		if (txtRet03.Text.Contains("Error") && txtRet03.ForeColor == Color.Cyan)
		{
			txtRet03.ForeColor = Color.Red;
		}
		if (txtRet04.Text.Contains("Error") && txtRet04.ForeColor == Color.Cyan)
		{
			txtRet04.ForeColor = Color.Red;
		}
		if (txtRet05.Text.Contains("Error") && txtRet05.ForeColor == Color.Cyan)
		{
			txtRet05.ForeColor = Color.Red;
		}
		if (txtRet06.Text.Contains("Error") && txtRet06.ForeColor == Color.Cyan)
		{
			txtRet06.ForeColor = Color.Red;
		}
	}

	private void OutBoxDropBal(Label eIndex, string EEstr)
	{
		if (Operators.CompareString(eIndex.Text, lblPort1.Text, TextCompare: false) == 0)
		{
			lblBal1.Text = EEstr;
		}
		if (Operators.CompareString(eIndex.Text, lblPort2.Text, TextCompare: false) == 0)
		{
			lblBal2.Text = EEstr;
		}
		if (Operators.CompareString(eIndex.Text, lblPort3.Text, TextCompare: false) == 0)
		{
			lblBal3.Text = EEstr;
		}
		if (Operators.CompareString(eIndex.Text, lblPort4.Text, TextCompare: false) == 0)
		{
			lblBal4.Text = EEstr;
		}
		if (Operators.CompareString(eIndex.Text, lblPort5.Text, TextCompare: false) == 0)
		{
			lblBal5.Text = EEstr;
		}
		if (Operators.CompareString(eIndex.Text, lblPort6.Text, TextCompare: false) == 0)
		{
			lblBal6.Text = EEstr;
		}
		Application.DoEvents();
	}

	private void DisablePort(Label eIndex)
	{
		if (Operators.CompareString(eIndex.Text, lblPort1.Text, TextCompare: false) == 0)
		{
			chkCh1.Checked = false;
			if ((lblNum1.BackColor == Color.PaleGreen) & (lblPort1.BackColor != Color.PaleGreen))
			{
				lblNum1.BackColor = Color.Green;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort2.Text, TextCompare: false) == 0)
		{
			chkCh2.Checked = false;
			if ((lblNum2.BackColor == Color.PaleGreen) & (lblPort2.BackColor != Color.PaleGreen))
			{
				lblNum2.BackColor = Color.Green;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort3.Text, TextCompare: false) == 0)
		{
			chkCh3.Checked = false;
			if ((lblNum3.BackColor == Color.PaleGreen) & (lblPort3.BackColor != Color.PaleGreen))
			{
				lblNum3.BackColor = Color.Green;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort4.Text, TextCompare: false) == 0)
		{
			chkCh4.Checked = false;
			if ((lblNum4.BackColor == Color.PaleGreen) & (lblPort4.BackColor != Color.PaleGreen))
			{
				lblNum4.BackColor = Color.Green;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort5.Text, TextCompare: false) == 0)
		{
			chkCh5.Checked = false;
			if ((lblNum5.BackColor == Color.PaleGreen) & (lblPort5.BackColor != Color.PaleGreen))
			{
				lblNum5.BackColor = Color.Green;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort6.Text, TextCompare: false) == 0)
		{
			chkCh6.Checked = false;
			if ((lblNum6.BackColor == Color.PaleGreen) & (lblPort6.BackColor != Color.PaleGreen))
			{
				lblNum6.BackColor = Color.Green;
			}
		}
	}

	private void DisablePortdonnt(Label eIndex)
	{
		if (Operators.CompareString(eIndex.Text, lblPort1.Text, TextCompare: false) == 0)
		{
			chkCh1.Checked = false;
			if ((lblNum1.BackColor == Color.PaleGreen) & (lblPort1.BackColor != Color.PaleGreen))
			{
				lblNum1.BackColor = Color.PaleTurquoise;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort2.Text, TextCompare: false) == 0)
		{
			chkCh2.Checked = false;
			if ((lblNum2.BackColor == Color.PaleGreen) & (lblPort2.BackColor != Color.PaleGreen))
			{
				lblNum2.BackColor = Color.PaleTurquoise;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort3.Text, TextCompare: false) == 0)
		{
			chkCh3.Checked = false;
			if ((lblNum3.BackColor == Color.PaleGreen) & (lblPort3.BackColor != Color.PaleGreen))
			{
				lblNum3.BackColor = Color.PaleTurquoise;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort4.Text, TextCompare: false) == 0)
		{
			chkCh4.Checked = false;
			if ((lblNum4.BackColor == Color.PaleGreen) & (lblPort4.BackColor != Color.PaleGreen))
			{
				lblNum4.BackColor = Color.PaleTurquoise;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort5.Text, TextCompare: false) == 0)
		{
			chkCh5.Checked = false;
			if ((lblNum5.BackColor == Color.PaleGreen) & (lblPort5.BackColor != Color.PaleGreen))
			{
				lblNum5.BackColor = Color.PaleTurquoise;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort6.Text, TextCompare: false) == 0)
		{
			chkCh6.Checked = false;
			if ((lblNum6.BackColor == Color.PaleGreen) & (lblPort6.BackColor != Color.PaleGreen))
			{
				lblNum6.BackColor = Color.PaleTurquoise;
			}
		}
	}

	private void AddToBalBox(Label eIndex, double EEx)
	{
		if (Operators.CompareString(eIndex.Text, lblPort1.Text, TextCompare: false) == 0)
		{
			lblBal1.Text = Conversions.ToString(EEx);
		}
		if (Operators.CompareString(eIndex.Text, lblPort2.Text, TextCompare: false) == 0)
		{
			lblBal2.Text = Conversions.ToString(EEx);
		}
		if (Operators.CompareString(eIndex.Text, lblPort3.Text, TextCompare: false) == 0)
		{
			lblBal3.Text = Conversions.ToString(EEx);
		}
		if (Operators.CompareString(eIndex.Text, lblPort4.Text, TextCompare: false) == 0)
		{
			lblBal4.Text = Conversions.ToString(EEx);
		}
		if (Operators.CompareString(eIndex.Text, lblPort5.Text, TextCompare: false) == 0)
		{
			lblBal5.Text = Conversions.ToString(EEx);
		}
		if (Operators.CompareString(eIndex.Text, lblPort6.Text, TextCompare: false) == 0)
		{
			lblBal6.Text = Conversions.ToString(EEx);
		}
		Application.DoEvents();
	}

	private void txtSpNum1_MouseDoubleClick(object sender, MouseEventArgs e)
	{
		Clipboard.SetText(txtSpNum1.Text);
	}

	private void btnCopyAll_Click(object sender, EventArgs e)
	{
		lblCard1.Text = "";
		lblCard2.Text = "";
		lblCard3.Text = "";
		lblCard4.Text = "";
		lblCard5.Text = "";
		lblCard6.Text = "";
		if (txtSpNum1.Text.Trim().Length == 11)
		{
			lblCard1.Text = txtSpNum1.Text.Trim();
		}
		if (txtSpNum2.Text.Trim().Length == 11)
		{
			lblCard2.Text = txtSpNum2.Text.Trim();
		}
		if (txtSpNum3.Text.Trim().Length == 11)
		{
			lblCard3.Text = txtSpNum3.Text.Trim();
		}
		if (txtSpNum4.Text.Trim().Length == 11)
		{
			lblCard4.Text = txtSpNum4.Text.Trim();
		}
		if (txtSpNum5.Text.Trim().Length == 11)
		{
			lblCard5.Text = txtSpNum5.Text.Trim();
		}
		if (txtSpNum6.Text.Trim().Length == 11)
		{
			lblCard6.Text = txtSpNum6.Text.Trim();
		}
		Application.DoEvents();
	}

	private void txtSpNum2_MouseDoubleClick(object sender, MouseEventArgs e)
	{
		Clipboard.SetText(txtSpNum2.Text);
	}

	private void txtSpNum3_MouseDoubleClick(object sender, MouseEventArgs e)
	{
		Clipboard.SetText(txtSpNum3.Text);
	}

	private void txtSpNum4_MouseDoubleClick(object sender, MouseEventArgs e)
	{
		Clipboard.SetText(txtSpNum4.Text);
	}

	private void txtSpNum5_MouseDoubleClick(object sender, MouseEventArgs e)
	{
		Clipboard.SetText(txtSpNum5.Text);
	}

	private void txtSpNum6_MouseDoubleClick(object sender, MouseEventArgs e)
	{
		Clipboard.SetText(txtSpNum6.Text);
	}

	private void lblCard1_DoubleClick(object sender, EventArgs e)
	{
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			lblCard2.Text = lblCard1.Text;
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			lblCard3.Text = lblCard1.Text;
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			lblCard4.Text = lblCard1.Text;
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			lblCard5.Text = lblCard1.Text;
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			lblCard6.Text = lblCard1.Text;
		}
		Application.DoEvents();
	}

	private void lblCard1_Click(object sender, EventArgs e)
	{
		if (Clipboard.GetText().Length == 11)
		{
			lblCard1.Text = Clipboard.GetText();
		}
	}

	private void btnTransAllMony_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if ((Operators.CompareString(lblCard1.Text, "", TextCompare: false) == 0) & (Operators.CompareString(lblCard2.Text, "", TextCompare: false) == 0) & (Operators.CompareString(lblCard3.Text, "", TextCompare: false) == 0) & (Operators.CompareString(lblCard4.Text, "", TextCompare: false) == 0) & (Operators.CompareString(lblCard5.Text, "", TextCompare: false) == 0) & (Operators.CompareString(lblCard6.Text, "", TextCompare: false) == 0))
		{
			Interaction.MsgBox("لم يتم تحديد ارقام للتحويل لها");
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Conversion.Val(txtWorkID.Text) == 0.0)
		{
			Interaction.MsgBox("حدد رقم تشغيل من فضلك");
			return;
		}
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		lblProgress.Text = "تحويل فودافون كاش كامل المبلغ ";
		SetUssdOrderVcash_EXAll();
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
		Application.DoEvents();
	}

	private void lblCard2_Click(object sender, EventArgs e)
	{
		if (Clipboard.GetText().Length == 11)
		{
			lblCard2.Text = Clipboard.GetText();
		}
	}

	private void lblCard3_Click(object sender, EventArgs e)
	{
		if (Clipboard.GetText().Length == 11)
		{
			lblCard3.Text = Clipboard.GetText();
		}
	}

	private void lblCard4_Click(object sender, EventArgs e)
	{
		if (Clipboard.GetText().Length == 11)
		{
			lblCard4.Text = Clipboard.GetText();
		}
	}

	private void lblCard5_Click(object sender, EventArgs e)
	{
		if (Clipboard.GetText().Length == 11)
		{
			lblCard5.Text = Clipboard.GetText();
		}
	}

	private void lblCard6_Click(object sender, EventArgs e)
	{
		if (Clipboard.GetText().Length == 11)
		{
			lblCard6.Text = Clipboard.GetText();
		}
	}

	private void SetUssdOrderVcash_EXAll()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		Stopwatch stopwatch = default(Stopwatch);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 2649:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_001c;
						case 5:
							goto IL_008c;
						case 6:
							goto IL_00b6;
						case 7:
							goto IL_0126;
						case 8:
							goto IL_0150;
						case 9:
							goto IL_01c0;
						case 10:
							goto IL_01eb;
						case 11:
							goto IL_025c;
						case 12:
							goto IL_0287;
						case 13:
							goto IL_02f8;
						case 14:
							goto IL_0323;
						case 15:
							goto IL_0394;
						case 18:
							goto IL_03c1;
						case 16:
						case 17:
						case 19:
							goto IL_03cb;
						case 20:
							goto IL_03e5;
						case 21:
							goto IL_03ef;
						case 22:
							goto IL_0463;
						case 23:
							goto IL_048e;
						case 24:
						case 25:
							goto IL_04ec;
						case 26:
							goto IL_04f5;
						case 27:
							goto IL_054a;
						case 28:
							goto IL_0575;
						case 29:
						case 30:
							goto IL_05d3;
						case 31:
							goto IL_05dc;
						case 32:
							goto IL_0631;
						case 33:
							goto IL_065c;
						case 34:
						case 35:
							goto IL_06ba;
						case 36:
							goto IL_06c3;
						case 37:
							goto IL_0718;
						case 38:
							goto IL_0743;
						case 39:
						case 40:
							goto IL_07a1;
						case 41:
							goto IL_07aa;
						case 42:
							goto IL_07ff;
						case 43:
							goto IL_082a;
						case 44:
						case 45:
							goto IL_0888;
						case 46:
							goto IL_0891;
						case 47:
							goto IL_08e6;
						case 48:
							goto IL_0911;
						case 49:
						case 50:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 51:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_08e6:
					num2 = 47;
					ApplyUssdCodeVCP_EXAll(lblPort6, lblCard6.Text.Trim(), lblBal6.Text);
					goto IL_0911;
					IL_0911:
					num2 = 48;
					txtInfo.Text = "تم طلب تحويل\r\n" + lblCard6.Text + "\r\n" + lblNum6.Text + "\r\n" + txtInfo.Text;
					break;
					IL_0891:
					num2 = 46;
					if (!((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						break;
					}
					goto IL_08e6;
					IL_03c1:
					num2 = 18;
					Application.DoEvents();
					goto IL_03cb;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					stopwatch.Start();
					goto IL_001c;
					IL_001c:
					num2 = 4;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked & (Conversion.Val(lblBal1.Text) >= 10.0))
					{
						goto IL_008c;
					}
					goto IL_00b6;
					IL_008c:
					num2 = 5;
					ApplyUssdCodeVC_EXAll(lblPort1, lblCard1.Text.Trim(), lblBal1.Text);
					goto IL_00b6;
					IL_00b6:
					num2 = 6;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked & (Conversion.Val(lblBal2.Text) >= 10.0))
					{
						goto IL_0126;
					}
					goto IL_0150;
					IL_0126:
					num2 = 7;
					ApplyUssdCodeVC_EXAll(lblPort2, lblCard2.Text.Trim(), lblBal2.Text);
					goto IL_0150;
					IL_0150:
					num2 = 8;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked & (Conversion.Val(lblBal3.Text) >= 10.0))
					{
						goto IL_01c0;
					}
					goto IL_01eb;
					IL_01c0:
					num2 = 9;
					ApplyUssdCodeVC_EXAll(lblPort3, lblCard3.Text.Trim(), lblBal3.Text);
					goto IL_01eb;
					IL_01eb:
					num2 = 10;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked & (Conversion.Val(lblBal4.Text) >= 10.0))
					{
						goto IL_025c;
					}
					goto IL_0287;
					IL_025c:
					num2 = 11;
					ApplyUssdCodeVC_EXAll(lblPort4, lblCard4.Text.Trim(), lblBal4.Text);
					goto IL_0287;
					IL_0287:
					num2 = 12;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked & (Conversion.Val(lblBal5.Text) >= 10.0))
					{
						goto IL_02f8;
					}
					goto IL_0323;
					IL_02f8:
					num2 = 13;
					ApplyUssdCodeVC_EXAll(lblPort5, lblCard5.Text.Trim(), lblBal5.Text);
					goto IL_0323;
					IL_0323:
					num2 = 14;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked & (Conversion.Val(lblBal6.Text) >= 10.0))
					{
						goto IL_0394;
					}
					goto IL_03cb;
					IL_0394:
					num2 = 15;
					ApplyUssdCodeVC_EXAll(lblPort6, lblCard6.Text.Trim(), lblBal6.Text);
					goto IL_03cb;
					IL_03cb:
					num2 = 17;
					if (stopwatch.ElapsedMilliseconds <= 10000)
					{
						goto IL_03c1;
					}
					goto IL_03e5;
					IL_03e5:
					num2 = 20;
					stopwatch.Stop();
					goto IL_03ef;
					IL_03ef:
					num2 = 21;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked & (Conversion.Val(lblBal1.Text) >= 10.0))
					{
						goto IL_0463;
					}
					goto IL_04ec;
					IL_0463:
					num2 = 22;
					ApplyUssdCodeVCP_EXAll(lblPort1, lblCard1.Text.Trim(), lblBal1.Text);
					goto IL_048e;
					IL_048e:
					num2 = 23;
					txtInfo.Text = "تم طلب تحويل\r\n" + lblCard1.Text + "\r\n" + lblNum1.Text + "\r\n" + txtInfo.Text;
					goto IL_04ec;
					IL_04ec:
					num2 = 25;
					Application.DoEvents();
					goto IL_04f5;
					IL_04f5:
					num2 = 26;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_054a;
					}
					goto IL_05d3;
					IL_054a:
					num2 = 27;
					ApplyUssdCodeVCP_EXAll(lblPort2, lblCard2.Text.Trim(), lblBal2.Text);
					goto IL_0575;
					IL_0575:
					num2 = 28;
					txtInfo.Text = "تم طلب تحويل\r\n" + lblCard2.Text + "\r\n" + lblNum2.Text + "\r\n" + txtInfo.Text;
					goto IL_05d3;
					IL_05d3:
					num2 = 30;
					Application.DoEvents();
					goto IL_05dc;
					IL_05dc:
					num2 = 31;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_0631;
					}
					goto IL_06ba;
					IL_0631:
					num2 = 32;
					ApplyUssdCodeVCP_EXAll(lblPort3, lblCard3.Text.Trim(), lblBal3.Text);
					goto IL_065c;
					IL_065c:
					num2 = 33;
					txtInfo.Text = "تم طلب تحويل\r\n" + lblCard3.Text + "\r\n" + lblNum3.Text + "\r\n" + txtInfo.Text;
					goto IL_06ba;
					IL_06ba:
					num2 = 35;
					Application.DoEvents();
					goto IL_06c3;
					IL_06c3:
					num2 = 36;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0718;
					}
					goto IL_07a1;
					IL_0718:
					num2 = 37;
					ApplyUssdCodeVCP_EXAll(lblPort4, lblCard4.Text.Trim(), lblBal4.Text);
					goto IL_0743;
					IL_0743:
					num2 = 38;
					txtInfo.Text = "تم طلب تحويل\r\n" + lblCard4.Text + "\r\n" + lblNum4.Text + "\r\n" + txtInfo.Text;
					goto IL_07a1;
					IL_07a1:
					num2 = 40;
					Application.DoEvents();
					goto IL_07aa;
					IL_07aa:
					num2 = 41;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & (Operators.CompareString(lblCard5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_07ff;
					}
					goto IL_0888;
					IL_07ff:
					num2 = 42;
					ApplyUssdCodeVCP_EXAll(lblPort5, lblCard5.Text.Trim(), lblBal5.Text);
					goto IL_082a;
					IL_082a:
					num2 = 43;
					txtInfo.Text = "تم طلب تحويل\r\n" + lblCard5.Text + "\r\n" + lblNum5.Text + "\r\n" + txtInfo.Text;
					goto IL_0888;
					IL_0888:
					num2 = 45;
					Application.DoEvents();
					goto IL_0891;
					end_IL_0001_2:
					break;
				}
				num2 = 50;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 2649;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderOrange_Acc()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 728:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0057;
						case 4:
							goto IL_0071;
						case 5:
							goto IL_00bf;
						case 6:
							goto IL_00d9;
						case 7:
							goto IL_0127;
						case 8:
							goto IL_0141;
						case 9:
							goto IL_018f;
						case 10:
							goto IL_01aa;
						case 11:
							goto IL_01f9;
						case 12:
							goto IL_0214;
						case 13:
							goto IL_0263;
						case 14:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 15:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_01f9:
					num2 = 11;
					ApplyUssdCodeOrange_Acc(lblPort5, lblBal5.Text);
					goto IL_0214;
					IL_0214:
					num2 = 12;
					if (!((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked & (Conversion.Val(lblBal6.Text) > 5.0)))
					{
						break;
					}
					goto IL_0263;
					IL_01aa:
					num2 = 10;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked & (Conversion.Val(lblBal5.Text) > 5.0))
					{
						goto IL_01f9;
					}
					goto IL_0214;
					IL_0263:
					num2 = 13;
					ApplyUssdCodeOrange_Acc(lblPort6, lblBal6.Text);
					break;
					IL_000b:
					num2 = 2;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked & (Conversion.Val(lblBal1.Text) > 5.0))
					{
						goto IL_0057;
					}
					goto IL_0071;
					IL_0057:
					num2 = 3;
					ApplyUssdCodeOrange_Acc(lblPort1, lblBal1.Text);
					goto IL_0071;
					IL_0071:
					num2 = 4;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked & (Conversion.Val(lblBal2.Text) > 5.0))
					{
						goto IL_00bf;
					}
					goto IL_00d9;
					IL_00bf:
					num2 = 5;
					ApplyUssdCodeOrange_Acc(lblPort2, lblBal2.Text);
					goto IL_00d9;
					IL_00d9:
					num2 = 6;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked & (Conversion.Val(lblBal3.Text) > 5.0))
					{
						goto IL_0127;
					}
					goto IL_0141;
					IL_0127:
					num2 = 7;
					ApplyUssdCodeOrange_Acc(lblPort3, lblBal3.Text);
					goto IL_0141;
					IL_0141:
					num2 = 8;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked & (Conversion.Val(lblBal4.Text) > 5.0))
					{
						goto IL_018f;
					}
					goto IL_01aa;
					IL_018f:
					num2 = 9;
					ApplyUssdCodeOrange_Acc(lblPort4, lblBal4.Text);
					goto IL_01aa;
					end_IL_0001_2:
					break;
				}
				num2 = 14;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 728;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnTransToA_Click(object sender, EventArgs e)
	{
		Stopwatch stopwatch = new Stopwatch();
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		ReSetUssdOrder();
		btnArrangIT_Click(RuntimeHelpers.GetObjectValue(sender), e);
		stopwatch.Start();
		lblProgress.Text = "سحب فودافون كاش ماستر";
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked & (Conversion.Val(lblBal2.Text) >= 6.0))
		{
			lblProgress.Text = "سحب فودافون كاش 2 ";
			Application.DoEvents();
			TransVCfromMsToNmRS_All(lblPort1, lblNum2, lblPort2, lblBal2, txtRet02);
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked & (Conversion.Val(lblBal3.Text) >= 6.0))
		{
			lblProgress.Text = "سحب فودافون كاش 3 ";
			Application.DoEvents();
			TransVCfromMsToNmRS_All(lblPort1, lblNum3, lblPort3, lblBal3, txtRet03);
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked & (Conversion.Val(lblBal4.Text) >= 6.0))
		{
			lblProgress.Text = "سحب فودافون كاش 4 ";
			Application.DoEvents();
			TransVCfromMsToNmRS_All(lblPort1, lblNum4, lblPort4, lblBal4, txtRet04);
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked & (Conversion.Val(lblBal5.Text) >= 6.0))
		{
			lblProgress.Text = "سحب فودافون كاش 5 ";
			Application.DoEvents();
			TransVCfromMsToNmRS_All(lblPort1, lblNum5, lblPort5, lblBal5, txtRet05);
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked & (Conversion.Val(lblBal6.Text) >= 6.0))
		{
			lblProgress.Text = "سحب فودافون كاش 6 ";
			Application.DoEvents();
			TransVCfromMsToNmRS_All(lblPort1, lblNum6, lblPort6, lblBal6, txtRet06);
		}
		Application.DoEvents();
		while ((double)stopwatch.ElapsedMilliseconds <= Conversion.Val(txtwait.Text))
		{
			Application.DoEvents();
		}
		stopwatch.Stop();
		ReturnRead();
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void ApplyUssdCodeOrange_Acc(Label Exxc, string EXmony)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						double num3 = ((Conversion.Val(txtOtransMP.Text) != 0.0) ? Conversion.Val(txtOtransMP.Text) : Conversion.Int(Conversion.Val(EXmony) * 250.0 / 175.0 - Conversion.Val(txtOtransRem.Text)));
						while (true)
						{
							string ussdCommandFull = "#147#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							int num4 = 0;
							while (true)
							{
								num4++;
								Application.DoEvents();
								int num5 = 0;
								while (true)
								{
									Thread.Sleep(250);
									string text = serialPort.ReadExisting();
									if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
									{
										txtInfo.Text = text + "\r\n" + txtInfo.Text;
									}
									if (text.Contains("+CUSD: "))
									{
										string text2 = text;
										int num6 = text.IndexOf("+CUSD: ");
										text2 = text.Substring(num6 + 10, text.Length - num6 - 10).Trim().Trim('o')
											.Trim('\r')
											.Trim('\r')
											.Trim();
										num6 = text2.IndexOf(",");
										string text3 = text2.Substring(0, num6).Trim().Trim('"')
											.Trim(',')
											.Trim('"');
										text3 = text3.Trim('"').Trim(',').Trim('"');
										if (text3.Length > 3)
										{
											string text4;
											if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
											{
												byte[] bytes = encoding_mod.StrToByteArray(text3);
												text4 = Encoding.BigEndianUnicode.GetString(bytes);
											}
											else
											{
												text4 = encoding_mod.Decode7Bit(text3);
											}
											OutBoxDrop(Exxc, text4);
											if (text4.Contains("لم نتلقى اختيارك في المدة المحددة"))
											{
												Application.DoEvents();
												OutBoxDrop(Exxc, "Restart operation");
												if (num4 <= 1)
												{
													break;
												}
											}
											if (text4.Contains("دفوع لسداد الفاتورة عن طريق كروت") | text4.Contains("إعادة ادخال رقم الحس"))
											{
												goto IL_0345;
											}
											if (text4.Contains("برجاء العلم أن سوف يتم استرداد قيمة الضريبة"))
											{
												goto IL_03a8;
											}
											if (text4.Contains("في رصيد حسابك"))
											{
												goto IL_03f3;
											}
											if (text4.Contains("تم دفع مبلغ"))
											{
												DisablePort(Exxc);
												Application.DoEvents();
												goto end_IL_0001_2;
											}
											if (text4.Contains("ناسف , الخدمة غير متاحة الان"))
											{
												DisablePort(Exxc);
												Application.DoEvents();
												goto end_IL_0001_2;
											}
										}
									}
									if (text.Contains("+CME ERROR") | text.Contains("+CUSD: 5") | text.Contains("unknown") | text.Contains("retry operation"))
									{
										if (num4 <= 3)
										{
											break;
										}
										goto end_IL_0001_2;
									}
									Application.DoEvents();
									if (chkStop.Checked)
									{
										goto end_IL_0001_2;
									}
									num5++;
									if (num5 > 25)
									{
										goto end_IL_0001_2;
									}
								}
								break;
								IL_03f3:
								ussdCommandFull = num3.ToString();
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(1000);
								Application.DoEvents();
								continue;
								IL_0345:
								object obj = txtOtransACC.Text ?? "";
								if (obj == null)
								{
									obj = "";
								}
								ussdCommandFull = (string)obj;
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(1000);
								Application.DoEvents();
								continue;
								IL_03a8:
								ussdCommandFull = "1";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(1000);
								Application.DoEvents();
							}
						}
					}
					case 1290:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_3;
							}
							break;
						}
						end_IL_0001_2:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_3:;
			}
			catch (object obj2) when (obj2 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj2);
				try0001_dispatch = 1290;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeVC_EXAll(Label Exxc, string UssdCommand, string EXmony)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					if (Exxc.ForeColor == Color.White)
					{
						goto end_IL_0001;
					}
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
					Application.DoEvents();
					double num3 = Conversion.Int(Conversion.Val(EXmony) - 2.0);
					string ussdCommandFull = "*9*7*" + UssdCommand + "*" + num3 + "#";
					string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(1000);
					Application.DoEvents();
					break;
				}
				case 268:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001_2;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				break;
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 268;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeVCP_EXAll(Label Exxc, string UssdCommand, string EXmony)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						double num3 = Conversion.Int(Conversion.Val(EXmony) - 2.0);
						int num4 = 0;
						while (true)
						{
							num4++;
							if (num4 >= 20)
							{
								break;
							}
							lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num4) + ")";
							Application.DoEvents();
							string text = "#";
							string text2 = "#";
							string text3 = "#";
							string left = "#";
							int num5 = 0;
							string text4;
							while (true)
							{
								Thread.Sleep(500);
								text4 = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text4) >= 2))
								{
									txtInfo.Text = text4 + "\r\n" + txtInfo.Text;
								}
								if (Operators.CompareString(text4, "", TextCompare: false) == 0)
								{
									break;
								}
								text = "#";
								text2 = "#";
								text3 = "#";
								left = "#";
								if (text4.Contains("+CUSD: "))
								{
									string text5 = text4;
									int num6 = text4.IndexOf("+CUSD: ");
									text5 = text4.Substring(num6 + 10, text4.Length - num6 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num6 = text5.IndexOf(",");
									string text6 = text5.Substring(0, num6).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text6 = text6.Trim('"').Trim(',').Trim('"');
									string eEstr;
									if (Operators.CompareString(text6.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text6);
										eEstr = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										eEstr = encoding_mod.Decode7Bit(text6);
									}
									OutBoxDrop(Exxc, eEstr);
								}
								if (text4.Contains("062A06450020062A062D0648064A06440020"))
								{
									goto IL_039e;
								}
								if (text4.Contains("064406270020064A0648062C062F002006310635"))
								{
									goto IL_03e8;
								}
								if (text4.Contains("0627062F062E0644002006270644063106420645002006270644"))
								{
									goto IL_041a;
								}
								if (text4.Contains("+CUSD: 5") | text4.Contains("unknown") | text4.Contains("retry operation") | text4.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
								{
									goto IL_04bc;
								}
								Application.DoEvents();
								num5++;
								if (num5 <= 20)
								{
									continue;
								}
								goto IL_0536;
							}
							string ussdCommandFull;
							string commandCode;
							if ((Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(text, "", TextCompare: false) == 0) & (Operators.CompareString(text2, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
							{
								ussdCommandFull = "*9*7*" + UssdCommand + "*" + num3 + "#";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(2000);
								Application.DoEvents();
							}
							else
							{
								left = text3;
								text3 = text2;
								text2 = text;
								text = text4;
							}
							continue;
							IL_039e:
							ussdCommandFull = "9";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							Application.DoEvents();
							break;
							IL_03e8:
							DisablePort(Exxc);
							OutBoxDrop(Exxc, "لا يوجد رصيد كافى للتحويل");
							Application.DoEvents();
							break;
							IL_041a:
							object obj = txtPass.Text ?? "";
							if (obj == null)
							{
								obj = "";
							}
							ussdCommandFull = (string)obj;
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(2000);
							text = "#";
							text2 = "#";
							text3 = "#";
							left = "#";
							Application.DoEvents();
							continue;
							IL_04bc:
							ussdCommandFull = "*9*7*" + UssdCommand + "*" + num3 + "#";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(2500);
							Application.DoEvents();
							continue;
							IL_0536:
							object obj2 = txtPass.Text ?? "";
							if (obj2 == null)
							{
								obj2 = "";
							}
							ussdCommandFull = (string)obj2;
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							break;
						}
						break;
					}
					case 1437:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj3) when (obj3 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj3);
				try0001_dispatch = 1437;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void Inc_Gift_Count(Label eIndex)
	{
		if (Operators.CompareString(eIndex.Text, lblPort1.Text, TextCompare: false) == 0)
		{
			lblGifts01.Text = Conversions.ToString(Conversion.Val(lblGifts01.Text) + 1.0);
			if (PassGiftValue > 0)
			{
				lblGiftV1.Text = Conversions.ToString(PassGiftValue);
			}
			if (Conversion.Val(lblGifts01.Text) >= Conversion.Val(txtGftLmt.Text))
			{
				chkCh1.Checked = false;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort2.Text, TextCompare: false) == 0)
		{
			lblGifts02.Text = Conversions.ToString(Conversion.Val(lblGifts02.Text) + 1.0);
			if (PassGiftValue > 0)
			{
				lblGiftV2.Text = Conversions.ToString(PassGiftValue);
			}
			if (Conversion.Val(lblGifts02.Text) >= Conversion.Val(txtGftLmt.Text))
			{
				chkCh2.Checked = false;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort3.Text, TextCompare: false) == 0)
		{
			lblGifts03.Text = Conversions.ToString(Conversion.Val(lblGifts03.Text) + 1.0);
			if (PassGiftValue > 0)
			{
				lblGiftV3.Text = Conversions.ToString(PassGiftValue);
			}
			if (Conversion.Val(lblGifts03.Text) >= Conversion.Val(txtGftLmt.Text))
			{
				chkCh3.Checked = false;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort4.Text, TextCompare: false) == 0)
		{
			lblGifts04.Text = Conversions.ToString(Conversion.Val(lblGifts04.Text) + 1.0);
			if (PassGiftValue > 0)
			{
				lblGiftV4.Text = Conversions.ToString(PassGiftValue);
			}
			if (Conversion.Val(lblGifts04.Text) >= Conversion.Val(txtGftLmt.Text))
			{
				chkCh4.Checked = false;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort5.Text, TextCompare: false) == 0)
		{
			lblGifts05.Text = Conversions.ToString(Conversion.Val(lblGifts05.Text) + 1.0);
			if (PassGiftValue > 0)
			{
				lblGiftV5.Text = Conversions.ToString(PassGiftValue);
			}
			if (Conversion.Val(lblGifts05.Text) >= Conversion.Val(txtGftLmt.Text))
			{
				chkCh5.Checked = false;
			}
		}
		if (Operators.CompareString(eIndex.Text, lblPort6.Text, TextCompare: false) == 0)
		{
			lblGifts06.Text = Conversions.ToString(Conversion.Val(lblGifts06.Text) + 1.0);
			if (PassGiftValue > 0)
			{
				lblGiftV6.Text = Conversions.ToString(PassGiftValue);
			}
			if (Conversion.Val(lblGifts06.Text) >= Conversion.Val(txtGftLmt.Text))
			{
				chkCh6.Checked = false;
			}
		}
	}

	private void ReturnReadGift()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 675:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0031;
						case 5:
							goto IL_0039;
						case 6:
							goto IL_0069;
						case 7:
							goto IL_0084;
						case 8:
							goto IL_00b6;
						case 9:
							goto IL_00d1;
						case 10:
							goto IL_0104;
						case 11:
							goto IL_0120;
						case 12:
							goto IL_0153;
						case 13:
							goto IL_016f;
						case 14:
							goto IL_01a2;
						case 15:
							goto IL_01be;
						case 16:
							goto IL_01f1;
						case 17:
							goto IL_020d;
						case 18:
							goto IL_0216;
						case 19:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 20:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_01f1:
					num2 = 16;
					ReadUssdReturnGft(lblPort6, txtRet06, lblNum6);
					goto IL_020d;
					IL_020d:
					num2 = 17;
					Application.DoEvents();
					goto IL_0216;
					IL_01be:
					num2 = 15;
					if ((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_01f1;
					}
					goto IL_020d;
					IL_0216:
					num2 = 18;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "قراءة رد الشبكة";
					goto IL_0031;
					IL_0031:
					num2 = 4;
					Application.DoEvents();
					goto IL_0039;
					IL_0039:
					num2 = 5;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_0069;
					}
					goto IL_0084;
					IL_0069:
					num2 = 6;
					ReadUssdReturnGft(lblPort1, txtRet01, lblNum1);
					goto IL_0084;
					IL_0084:
					num2 = 7;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_00b6;
					}
					goto IL_00d1;
					IL_00b6:
					num2 = 8;
					ReadUssdReturnGft(lblPort2, txtRet02, lblNum2);
					goto IL_00d1;
					IL_00d1:
					num2 = 9;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_0104;
					}
					goto IL_0120;
					IL_0104:
					num2 = 10;
					ReadUssdReturnGft(lblPort3, txtRet03, lblNum3);
					goto IL_0120;
					IL_0120:
					num2 = 11;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0153;
					}
					goto IL_016f;
					IL_0153:
					num2 = 12;
					ReadUssdReturnGft(lblPort4, txtRet04, lblNum4);
					goto IL_016f;
					IL_016f:
					num2 = 13;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_01a2;
					}
					goto IL_01be;
					IL_01a2:
					num2 = 14;
					ReadUssdReturnGft(lblPort5, txtRet05, lblNum5);
					goto IL_01be;
					end_IL_0001_2:
					break;
				}
				num2 = 19;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 675;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ReadUssdReturnGft(Label Exxc, TextBox Eeret, Label Enumtxt)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num4 = default(int);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						Application.DoEvents();
						int num3 = 1;
						while (true)
						{
							string text = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
							{
								txtInfo.Text = text + "\r\n" + txtInfo.Text;
							}
							if (text.Contains("+CUSD: "))
							{
								if (text.Contains("064406270020064A06450643064600200625062A064506270645002006270644063906450644064A0629002006440639062F064500200648062C0648062F002006310635064A062F0020064306270641064A0020"))
								{
									Eeret.Text = "لا يمكن إتمام العملية لعدم وجود رصيد كافي في حساب فودافون كاش\r\n" + Eeret.Text;
									DisablePort(Exxc);
									Application.DoEvents();
									break;
								}
								if (text.Contains("+CUSD: "))
								{
									num4 = text.IndexOf("+CUSD: ");
								}
								string text2 = text.Substring(num4 + 10, text.Length - num4 - 10).Trim().Trim('o')
									.Trim('\r')
									.Trim('\r')
									.Trim()
									.Trim(',');
								num4 = text2.IndexOf(",");
								string text3 = text2.Substring(0, num4).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								string text4;
								if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
								{
									byte[] bytes = encoding_mod.StrToByteArray(text3);
									text4 = Encoding.BigEndianUnicode.GetString(bytes);
								}
								else
								{
									text4 = encoding_mod.Decode7Bit(text3);
								}
								Eeret.Text = text4 + "\r\n" + Eeret.Text;
								if (text4.Contains("تم شحن"))
								{
									txtTotalTransVal.Text = Conversions.ToString(Conversion.Val(txtTotalTransVal.Text) + Conversion.Val(txtTransMoney.Text) * 0.7);
									break;
								}
								if (text4.Contains("rge mobile of number x is successfu"))
								{
									txtTotalTransVal.Text = Conversions.ToString(Conversion.Val(txtTotalTransVal.Text) + Conversion.Val(txtTransMoney.Text) * 0.7);
									break;
								}
							}
							else
							{
								if (text.Contains("retry operation") | text.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E"))
								{
									Eeret.Text = "retry operation\r\n" + Eeret.Text;
									Application.DoEvents();
								}
								if (text.Contains("CME ERROR: unknown") | text.Contains("CUSD: 5") | text.Contains("063906410648062700200627064406310642064500200627064406300649002006270"))
								{
									Application.DoEvents();
									break;
								}
								if (num3 <= 2)
								{
									num3++;
									Thread.Sleep(1000);
									Application.DoEvents();
									continue;
								}
							}
							Application.DoEvents();
							break;
						}
						break;
					}
					case 930:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001_2;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Thread.Sleep(500);
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 930;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void txtMoneyMS2_MouseDoubleClick(object sender, MouseEventArgs e)
	{
		txtMoneyMS3.Text = txtMoneyMS2.Text;
		txtMoneyMS4.Text = txtMoneyMS2.Text;
		txtMoneyMS5.Text = txtMoneyMS2.Text;
		txtMoneyMS6.Text = txtMoneyMS2.Text;
	}

	private void lblNum1_MouseDoubleClick(object sender, MouseEventArgs e)
	{
		if ((lblNum1.Text.Length == 11) & (lblMain.Text.Trim().Length > 0))
		{
			int num = (int)Interaction.MsgBox("هل تريد تحديد رقم اساسى اخر", MsgBoxStyle.YesNo);
			if (num == 7)
			{
				return;
			}
		}
		if (lblNum1.Text.Length == 11)
		{
			lblMain.Text = lblNum1.Text;
		}
	}

	private void btnTransFromNm_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				Stopwatch stopwatch;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1508:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0018;
						case 5:
							goto IL_0028;
						case 7:
						case 8:
							goto IL_0042;
						case 9:
							goto IL_0062;
						case 11:
						case 12:
							goto IL_0079;
						case 13:
							goto IL_009d;
						case 15:
						case 16:
							goto IL_00b4;
						case 17:
							goto IL_00d9;
						case 19:
						case 20:
							goto IL_00f0;
						case 21:
							goto IL_0104;
						case 22:
							goto IL_010e;
						case 23:
							goto IL_0118;
						case 24:
						case 60:
							goto IL_0123;
						case 25:
							goto IL_012d;
						case 26:
							goto IL_0141;
						case 27:
							goto IL_014a;
						case 29:
							goto IL_0163;
						case 31:
							goto IL_01ca;
						case 32:
							goto IL_01d3;
						case 33:
							goto IL_0206;
						case 34:
							goto IL_0228;
						case 36:
							goto IL_0241;
						case 37:
							goto IL_024a;
						case 38:
							goto IL_027d;
						case 39:
							goto IL_029f;
						case 41:
							goto IL_02b8;
						case 42:
							goto IL_02c1;
						case 43:
							goto IL_02f4;
						case 44:
							goto IL_0316;
						case 46:
							goto IL_032f;
						case 47:
							goto IL_0338;
						case 48:
							goto IL_036b;
						case 49:
							goto IL_038d;
						case 51:
							goto IL_03a6;
						case 52:
							goto IL_03af;
						case 53:
							goto IL_03e2;
						case 54:
							goto IL_0404;
						case 56:
							goto IL_041a;
						case 57:
							goto IL_0423;
						case 58:
							goto IL_0456;
						case 59:
							goto IL_0478;
						case 28:
						case 30:
						case 35:
						case 40:
						case 45:
						case 50:
						case 55:
						case 61:
							goto IL_0490;
						case 62:
							goto IL_0499;
						case 63:
							goto IL_04a3;
						case 64:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 6:
						case 10:
						case 14:
						case 18:
						case 65:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0490:
					num2 = 61;
					Application.DoEvents();
					goto IL_0499;
					IL_0499:
					num2 = 62;
					EnableCntl();
					goto IL_04a3;
					IL_0478:
					num2 = 59;
					if (num5 <= 25)
					{
						goto IL_0123;
					}
					goto IL_0490;
					IL_04a3:
					num2 = 63;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					num5 = 0;
					goto IL_0018;
					IL_0018:
					num2 = 4;
					if (MysqlConn.MainProgLic < 6)
					{
						goto IL_0028;
					}
					goto IL_0042;
					IL_0028:
					num2 = 5;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0042:
					num2 = 8;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0062;
					}
					goto IL_0079;
					IL_0062:
					num2 = 9;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_0079:
					num2 = 12;
					if (Conversion.Val(txtMonyMn.Text) < 5.0)
					{
						goto IL_009d;
					}
					goto IL_00b4;
					IL_009d:
					num2 = 13;
					Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
					goto end_IL_0001_3;
					IL_00b4:
					num2 = 16;
					if (txtCashNextMaster.Text.Trim().Length != 11)
					{
						goto IL_00d9;
					}
					goto IL_00f0;
					IL_00d9:
					num2 = 17;
					Interaction.MsgBox("حدد رقم كاش لسحب الرصيد علية - الاساسى التالى");
					goto end_IL_0001_3;
					IL_00f0:
					num2 = 20;
					lblProgress.BackColor = Color.Red;
					goto IL_0104;
					IL_0104:
					num2 = 21;
					DisableCntl();
					goto IL_010e;
					IL_010e:
					num2 = 22;
					ClearCadsLocs();
					goto IL_0118;
					IL_0118:
					num2 = 23;
					ArrangVClines();
					goto IL_0123;
					IL_0123:
					num2 = 24;
					ReSetUssdOrder();
					goto IL_012d;
					IL_012d:
					num2 = 25;
					lblProgress.Text = "سحب فودافون كاش ";
					goto IL_0141;
					IL_0141:
					num2 = 26;
					num5 = checked(num5 + 1);
					goto IL_014a;
					IL_014a:
					num2 = 27;
					if (!chkStop.Checked)
					{
						goto IL_0163;
					}
					goto IL_0490;
					IL_0163:
					num2 = 29;
					if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						goto IL_01ca;
					}
					goto IL_0490;
					IL_01ca:
					num2 = 31;
					Application.DoEvents();
					goto IL_01d3;
					IL_01d3:
					num2 = 32;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_0206;
					}
					goto IL_0228;
					IL_0206:
					num2 = 33;
					ApplyUssdCodeVC_Mex(lblPort1, txtCashNextMaster.Text, chkCh1, 0);
					goto IL_0228;
					IL_0228:
					num2 = 34;
					if (!chkStop.Checked)
					{
						goto IL_0241;
					}
					goto IL_0490;
					IL_0241:
					num2 = 36;
					Application.DoEvents();
					goto IL_024a;
					IL_024a:
					num2 = 37;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_027d;
					}
					goto IL_029f;
					IL_027d:
					num2 = 38;
					ApplyUssdCodeVC_Mex(lblPort2, txtCashNextMaster.Text, chkCh2, 0);
					goto IL_029f;
					IL_029f:
					num2 = 39;
					if (!chkStop.Checked)
					{
						goto IL_02b8;
					}
					goto IL_0490;
					IL_02b8:
					num2 = 41;
					Application.DoEvents();
					goto IL_02c1;
					IL_02c1:
					num2 = 42;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_02f4;
					}
					goto IL_0316;
					IL_02f4:
					num2 = 43;
					ApplyUssdCodeVC_Mex(lblPort3, txtCashNextMaster.Text, chkCh3, 0);
					goto IL_0316;
					IL_0316:
					num2 = 44;
					if (!chkStop.Checked)
					{
						goto IL_032f;
					}
					goto IL_0490;
					IL_032f:
					num2 = 46;
					Application.DoEvents();
					goto IL_0338;
					IL_0338:
					num2 = 47;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_036b;
					}
					goto IL_038d;
					IL_036b:
					num2 = 48;
					ApplyUssdCodeVC_Mex(lblPort4, txtCashNextMaster.Text, chkCh4, 0);
					goto IL_038d;
					IL_038d:
					num2 = 49;
					if (!chkStop.Checked)
					{
						goto IL_03a6;
					}
					goto IL_0490;
					IL_03a6:
					num2 = 51;
					Application.DoEvents();
					goto IL_03af;
					IL_03af:
					num2 = 52;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_03e2;
					}
					goto IL_0404;
					IL_03e2:
					num2 = 53;
					ApplyUssdCodeVC_Mex(lblPort5, txtCashNextMaster.Text, chkCh5, 0);
					goto IL_0404;
					IL_0404:
					num2 = 54;
					if (!chkStop.Checked)
					{
						goto IL_041a;
					}
					goto IL_0490;
					IL_041a:
					num2 = 56;
					Application.DoEvents();
					goto IL_0423;
					IL_0423:
					num2 = 57;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_0456;
					}
					goto IL_0478;
					IL_0456:
					num2 = 58;
					ApplyUssdCodeVC_Mex(lblPort6, txtCashNextMaster.Text, chkCh6, 0);
					goto IL_0478;
					end_IL_0001_2:
					break;
				}
				num2 = 64;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1508;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnTransAllMn_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 6)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (txtCashNextMaster.Text.Trim().Length != 11)
		{
			Interaction.MsgBox("حدد رقم لسحب رصيد الكاش علية");
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "سحب كامل الرصيد";
		DisableCntl();
		ReSetUssdOrder();
		do
		{
			num = checked(num + 1);
			Application.DoEvents();
			if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
			{
				lblBal1.Text = GetBalVCXTransferTransAll(lblPort1);
			}
			if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
			{
				lblBal2.Text = GetBalVCXTransferTransAll(lblPort2);
			}
			if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
			{
				lblBal3.Text = GetBalVCXTransferTransAll(lblPort3);
			}
			if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
			{
				lblBal4.Text = GetBalVCXTransferTransAll(lblPort4);
			}
			if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
			{
				lblBal5.Text = GetBalVCXTransferTransAll(lblPort5);
			}
			if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
			{
				lblBal6.Text = GetBalVCXTransferTransAll(lblPort6);
			}
			Application.DoEvents();
		}
		while (num <= 25);
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
		Application.DoEvents();
		if (chbeep.Checked)
		{
			EEmosemove = false;
			while (!EEmosemove)
			{
				Interaction.Beep();
				Application.DoEvents();
			}
		}
	}

	private string GetBalVCXTransferTransAll(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string result = default(string);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						string text = serialPort.ReadExisting();
						string text2 = "0";
						int num3 = 0;
						while (true)
						{
							num3++;
							string ussdCommandFull = "*9*7*" + txtCashNextMaster.Text + "*20000#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							while (true)
							{
								Application.DoEvents();
								string text3 = "#";
								string text4 = "#";
								string text5 = "#";
								string left = "#";
								int num4 = 0;
								string text8;
								int num5;
								while (true)
								{
									Thread.Sleep(800);
									text = serialPort.ReadExisting();
									if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
									{
										txtInfo.Text = text + "\r\n" + txtInfo.Text;
									}
									if (Operators.CompareString(text, "", TextCompare: false) == 0)
									{
										if ((Operators.CompareString(text, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(text5, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
										{
											break;
										}
										left = text5;
										text5 = text4;
										text4 = text3;
										text3 = text;
									}
									else
									{
										text3 = "#";
										text4 = "#";
										text5 = "#";
										left = "#";
									}
									if (text.Contains("+CUSD: "))
									{
										string text6 = text;
										num5 = text.IndexOf("+CUSD: ");
										text6 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
											.Trim('\r')
											.Trim('\r')
											.Trim();
										num5 = text6.IndexOf(",");
										string text7 = text6.Substring(0, num5).Trim().Trim('"')
											.Trim(',')
											.Trim('"');
										text7 = text7.Trim('"').Trim(',').Trim('"');
										if (text7.Length > 3)
										{
											if (Operators.CompareString(text7.Substring(0, 1), "0", TextCompare: false) == 0)
											{
												byte[] bytes = encoding_mod.StrToByteArray(text7);
												text8 = Encoding.BigEndianUnicode.GetString(bytes);
											}
											else
											{
												text8 = encoding_mod.Decode7Bit(text7);
											}
											OutBoxDrop(Exxc, text8);
											if (text8.Contains("تم تحويل"))
											{
												ussdCommandFull = "9";
												commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
												serialPort.WriteLine(commandCode + "\r");
												Thread.Sleep(1000);
												DisablePort(Exxc);
												serialPort.Close();
												serialPort.Dispose();
												serialPort = null;
												result = text2;
												goto end_IL_0001;
											}
											if (text8.Contains("يمكنك تحويل"))
											{
												goto IL_0458;
											}
											if (text8.Contains("لا يوجد رصيد كاف"))
											{
												Application.DoEvents();
												DisablePort(Exxc);
												serialPort.Close();
												serialPort.Dispose();
												serialPort = null;
												result = "<5";
												goto end_IL_0001;
											}
											if (text8.Contains("غير صحيح"))
											{
												Application.DoEvents();
												serialPort.Close();
												serialPort.Dispose();
												serialPort = null;
												result = "E";
												goto end_IL_0001;
											}
										}
									}
									if (!text.Contains("0627062F062E0644002006270644063106420645002006270644"))
									{
										if (text.Contains("+CUSD: 5") | text.Contains("unknown") | text.Contains("00530065007200760069006300650020006900730020006E006F00740020006100760061006900") | text.Contains("retry operation") | text.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
										{
											Application.DoEvents();
											goto end_IL_0001_2;
										}
										Application.DoEvents();
										num4++;
										if (num4 > 10)
										{
											goto end_IL_0001_2;
										}
										continue;
									}
									goto IL_0553;
								}
								break;
								IL_0553:
								object obj = txtPass.Text ?? "";
								if (obj == null)
								{
									obj = "";
								}
								ussdCommandFull = (string)obj;
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(2000);
								text3 = "#";
								text4 = "#";
								text5 = "#";
								left = "#";
								Application.DoEvents();
								continue;
								IL_0458:
								num5 = text8.IndexOf("تحويل");
								text2 = Conversions.ToString(Conversion.Val(text8.Substring(num5 + 6, 10).Trim('"')));
								ussdCommandFull = "1";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(2000);
								Application.DoEvents();
							}
							Application.DoEvents();
							if (num3 <= 2)
							{
								Thread.Sleep(1000);
								continue;
							}
							break;
						}
						break;
					}
					case 1600:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_3;
							}
							break;
						}
						end_IL_0001_2:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_3:;
			}
			catch (object obj2) when (obj2 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj2);
				try0001_dispatch = 1600;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void ClearCadsLocs()
	{
		lblCard1.Text = "";
		lblCard2.Text = "";
		lblCard3.Text = "";
		lblCard4.Text = "";
		lblCard5.Text = "";
		lblCard6.Text = "";
	}

	private void btnTransToNm_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1740:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_000f;
						case 4:
							goto IL_001f;
						case 6:
						case 7:
							goto IL_0039;
						case 8:
							goto IL_0059;
						case 10:
						case 11:
							goto IL_006f;
						case 12:
							goto IL_0093;
						case 14:
						case 15:
							goto IL_00aa;
						case 16:
							goto IL_0172;
						case 17:
							goto IL_0182;
						case 19:
						case 20:
							goto IL_0199;
						case 21:
							goto IL_01ad;
						case 22:
							goto IL_01b7;
						case 23:
							goto IL_01c1;
						case 24:
						case 68:
							goto IL_01cc;
						case 25:
							goto IL_01d3;
						case 27:
							goto IL_01ec;
						case 28:
							goto IL_0200;
						case 29:
							goto IL_0211;
						case 30:
							goto IL_021b;
						case 32:
							goto IL_0234;
						case 33:
							goto IL_0248;
						case 34:
							goto IL_0287;
						case 35:
							goto IL_02a9;
						case 36:
						case 37:
							goto IL_02b4;
						case 38:
							goto IL_02bd;
						case 40:
							goto IL_02d6;
						case 41:
							goto IL_0315;
						case 42:
							goto IL_0337;
						case 43:
						case 44:
							goto IL_0342;
						case 45:
							goto IL_034b;
						case 47:
							goto IL_0364;
						case 48:
							goto IL_03a3;
						case 49:
							goto IL_03c5;
						case 50:
						case 51:
							goto IL_03d0;
						case 53:
							goto IL_03e9;
						case 54:
							goto IL_03f2;
						case 55:
							goto IL_0431;
						case 56:
							goto IL_0453;
						case 57:
						case 58:
							goto IL_045e;
						case 60:
							goto IL_0477;
						case 61:
							goto IL_0480;
						case 62:
							goto IL_04bf;
						case 63:
							goto IL_04e1;
						case 64:
						case 65:
							goto IL_04ec;
						case 67:
							goto IL_0541;
						case 26:
						case 31:
						case 39:
						case 46:
						case 52:
						case 59:
						case 66:
						case 69:
							goto IL_0558;
						case 70:
							goto IL_0561;
						case 71:
							goto IL_056b;
						case 72:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
						case 9:
						case 13:
						case 18:
						case 73:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0558:
					num2 = 69;
					Application.DoEvents();
					goto IL_0561;
					IL_0561:
					num2 = 70;
					EnableCntl();
					goto IL_056b;
					IL_0541:
					num2 = 67;
					if (num5 <= 25)
					{
						goto IL_01cc;
					}
					goto IL_0558;
					IL_056b:
					num2 = 71;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_000f;
					IL_000f:
					num2 = 3;
					if (MysqlConn.MainProgLic < 6)
					{
						goto IL_001f;
					}
					goto IL_0039;
					IL_001f:
					num2 = 4;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0039:
					num2 = 7;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0059;
					}
					goto IL_006f;
					IL_0059:
					num2 = 8;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_006f:
					num2 = 11;
					if (Conversion.Val(txtMonyMn.Text) < 5.0)
					{
						goto IL_0093;
					}
					goto IL_00aa;
					IL_0093:
					num2 = 12;
					Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
					goto end_IL_0001_3;
					IL_00aa:
					num2 = 15;
					if ((Operators.CompareString(lblMain.Text, lblNum1.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum2.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum3.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum4.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum5.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum6.Text, TextCompare: false) != 0))
					{
						goto IL_0172;
					}
					goto IL_0199;
					IL_0172:
					num2 = 16;
					Interaction.MsgBox("مشكلة بالاساسى");
					goto IL_0182;
					IL_0182:
					num2 = 17;
					chkStop.Checked = true;
					goto end_IL_0001_3;
					IL_0199:
					num2 = 20;
					lblProgress.BackColor = Color.Red;
					goto IL_01ad;
					IL_01ad:
					num2 = 21;
					DisableCntl();
					goto IL_01b7;
					IL_01b7:
					num2 = 22;
					ClearCadsLocs();
					goto IL_01c1;
					IL_01c1:
					num2 = 23;
					ArrangVClinesCon();
					goto IL_01cc;
					IL_01cc:
					num2 = 24;
					num5 = checked(num5 + 1);
					goto IL_01d3;
					IL_01d3:
					num2 = 25;
					if (!chkStop.Checked)
					{
						goto IL_01ec;
					}
					goto IL_0558;
					IL_01ec:
					num2 = 27;
					if (chkimpsms.Checked)
					{
						goto IL_0200;
					}
					goto IL_0211;
					IL_0200:
					num2 = 28;
					btnClearSMS_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_0211;
					IL_0211:
					num2 = 29;
					ReSetUssdOrder();
					goto IL_021b;
					IL_021b:
					num2 = 30;
					if (!chkStop.Checked)
					{
						goto IL_0234;
					}
					goto IL_0558;
					IL_0234:
					num2 = 32;
					lblProgress.Text = "تحويل فودافون كاش ";
					goto IL_0248;
					IL_0248:
					num2 = 33;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked & chkCh1.Checked)
					{
						goto IL_0287;
					}
					goto IL_02b4;
					IL_0287:
					num2 = 34;
					ApplyUssdCodeVC_Mex(lblPort1, lblNum2.Text, chkCh2, 0);
					goto IL_02a9;
					IL_02a9:
					num2 = 35;
					Application.DoEvents();
					goto IL_02b4;
					IL_02b4:
					num2 = 37;
					Application.DoEvents();
					goto IL_02bd;
					IL_02bd:
					num2 = 38;
					if (!chkStop.Checked)
					{
						goto IL_02d6;
					}
					goto IL_0558;
					IL_02d6:
					num2 = 40;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked & chkCh1.Checked)
					{
						goto IL_0315;
					}
					goto IL_0342;
					IL_0315:
					num2 = 41;
					ApplyUssdCodeVC_Mex(lblPort1, lblNum3.Text, chkCh3, 0);
					goto IL_0337;
					IL_0337:
					num2 = 42;
					Application.DoEvents();
					goto IL_0342;
					IL_0342:
					num2 = 44;
					Application.DoEvents();
					goto IL_034b;
					IL_034b:
					num2 = 45;
					if (!chkStop.Checked)
					{
						goto IL_0364;
					}
					goto IL_0558;
					IL_0364:
					num2 = 47;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked & chkCh1.Checked)
					{
						goto IL_03a3;
					}
					goto IL_03d0;
					IL_03a3:
					num2 = 48;
					ApplyUssdCodeVC_Mex(lblPort1, lblNum4.Text, chkCh4, 0);
					goto IL_03c5;
					IL_03c5:
					num2 = 49;
					Application.DoEvents();
					goto IL_03d0;
					IL_03d0:
					num2 = 51;
					if (!chkStop.Checked)
					{
						goto IL_03e9;
					}
					goto IL_0558;
					IL_03e9:
					num2 = 53;
					Application.DoEvents();
					goto IL_03f2;
					IL_03f2:
					num2 = 54;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked & chkCh1.Checked)
					{
						goto IL_0431;
					}
					goto IL_045e;
					IL_0431:
					num2 = 55;
					ApplyUssdCodeVC_Mex(lblPort1, lblNum5.Text, chkCh5, 0);
					goto IL_0453;
					IL_0453:
					num2 = 56;
					Application.DoEvents();
					goto IL_045e;
					IL_045e:
					num2 = 58;
					if (!chkStop.Checked)
					{
						goto IL_0477;
					}
					goto IL_0558;
					IL_0477:
					num2 = 60;
					Application.DoEvents();
					goto IL_0480;
					IL_0480:
					num2 = 61;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked & chkCh1.Checked)
					{
						goto IL_04bf;
					}
					goto IL_04ec;
					IL_04bf:
					num2 = 62;
					ApplyUssdCodeVC_Mex(lblPort1, lblNum6.Text, chkCh6, 0);
					goto IL_04e1;
					IL_04e1:
					num2 = 63;
					Application.DoEvents();
					goto IL_04ec;
					IL_04ec:
					num2 = 65;
					if (!(!chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						goto IL_0541;
					}
					goto IL_0558;
					end_IL_0001_2:
					break;
				}
				num2 = 72;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1740;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void Button1_Click(object sender, EventArgs e)
	{
		MyProject.Forms.frmSrvNums.Show();
	}

	private void lblNum2_MouseDoubleClick(object sender, MouseEventArgs e)
	{
		if ((lblNum2.Text.Length == 11) & (lblMain.Text.Trim().Length > 0))
		{
			int num = (int)Interaction.MsgBox("هل تريد تحديد رقم اساسى اخر", MsgBoxStyle.YesNo);
			if (num == 7)
			{
				return;
			}
		}
		lblMain.Text = lblNum2.Text;
	}

	private void TabPage8_Click(object sender, EventArgs e)
	{
	}

	private void btnRefreshMsg_Click(object sender, EventArgs e)
	{
		lstNames.Items.Clear();
		lstNum.Items.Clear();
		fillBoxsWithSrvName();
	}

	private void lstNames_SelectedIndexChanged(object sender, EventArgs e)
	{
	}

	private void lblNum3_MouseDoubleClick(object sender, MouseEventArgs e)
	{
		if ((lblNum3.Text.Length == 11) & (lblMain.Text.Trim().Length > 0))
		{
			int num = (int)Interaction.MsgBox("هل تريد تحديد رقم اساسى اخر", MsgBoxStyle.YesNo);
			if (num == 7)
			{
				return;
			}
		}
		if (lblNum3.Text.Length == 11)
		{
			lblMain.Text = lblNum3.Text;
		}
	}

	private void lblNum4_MouseDoubleClick(object sender, MouseEventArgs e)
	{
		if ((lblNum4.Text.Length == 11) & (lblMain.Text.Trim().Length > 0))
		{
			int num = (int)Interaction.MsgBox("هل تريد تحديد رقم اساسى اخر", MsgBoxStyle.YesNo);
			if (num == 7)
			{
				return;
			}
		}
		if (lblNum4.Text.Length == 11)
		{
			lblMain.Text = lblNum4.Text;
		}
	}

	private void lblNum5_MouseDoubleClick(object sender, MouseEventArgs e)
	{
		if ((lblNum5.Text.Length == 11) & (lblMain.Text.Trim().Length > 0))
		{
			int num = (int)Interaction.MsgBox("هل تريد تحديد رقم اساسى اخر", MsgBoxStyle.YesNo);
			if (num == 7)
			{
				return;
			}
		}
		if (lblNum5.Text.Length == 11)
		{
			lblMain.Text = lblNum5.Text;
		}
	}

	private void lblNum6_MouseDoubleClick(object sender, MouseEventArgs e)
	{
		if ((lblNum6.Text.Length == 11) & (lblMain.Text.Trim().Length > 0))
		{
			int num = (int)Interaction.MsgBox("هل تريد تحديد رقم اساسى اخر", MsgBoxStyle.YesNo);
			if (num == 7)
			{
				return;
			}
		}
		if (lblNum6.Text.Length == 11)
		{
			lblMain.Text = lblNum6.Text;
		}
	}

	private void btnSendSms_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 311:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0019;
						case 5:
						case 6:
							goto IL_0033;
						case 7:
							goto IL_0059;
						case 9:
						case 10:
							goto IL_0070;
						case 11:
							goto IL_0084;
						case 12:
							goto IL_0098;
						case 13:
							goto IL_00a2;
						case 14:
							goto IL_00ac;
						case 15:
							goto IL_00b6;
						case 16:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 8:
						case 17:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_00a2:
					num2 = 13;
					sendSMStoSrv();
					goto IL_00ac;
					IL_00ac:
					num2 = 14;
					EnableCntl();
					goto IL_00b6;
					IL_0098:
					num2 = 12;
					DisableCntl();
					goto IL_00a2;
					IL_00b6:
					num2 = 15;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if (MysqlConn.MainProgLic < 3)
					{
						goto IL_0019;
					}
					goto IL_0033;
					IL_0019:
					num2 = 3;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0033:
					num2 = 6;
					if (Operators.CompareString(txtMobnum.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_0059;
					}
					goto IL_0070;
					IL_0059:
					num2 = 7;
					lblProgress.Text = "حدد رقم خدمة من فضلك";
					goto end_IL_0001_3;
					IL_0070:
					num2 = 10;
					lblProgress.BackColor = Color.Red;
					goto IL_0084;
					IL_0084:
					num2 = 11;
					lblProgress.Text = "ارسال رسائل الى خدمة ";
					goto IL_0098;
					end_IL_0001_2:
					break;
				}
				num2 = 16;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 311;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void sendSMStoSrv()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string exNum = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 521:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0019;
						case 4:
							goto IL_004b;
						case 5:
							goto IL_005b;
						case 6:
							goto IL_008d;
						case 7:
							goto IL_009d;
						case 8:
							goto IL_00cf;
						case 9:
							goto IL_00df;
						case 10:
							goto IL_0112;
						case 11:
							goto IL_0123;
						case 12:
							goto IL_0156;
						case 13:
							goto IL_0167;
						case 14:
							goto IL_019a;
						case 15:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 16:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0156:
					num2 = 12;
					SetCallSpSMSSrv(lblPort5, exNum);
					goto IL_0167;
					IL_0167:
					num2 = 13;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						break;
					}
					goto IL_019a;
					IL_0123:
					num2 = 11;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0156;
					}
					goto IL_0167;
					IL_019a:
					num2 = 14;
					SetCallSpSMSSrv(lblPort6, exNum);
					break;
					IL_000b:
					num2 = 2;
					exNum = txtSrvMsg.Text;
					goto IL_0019;
					IL_0019:
					num2 = 3;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_004b;
					}
					goto IL_005b;
					IL_004b:
					num2 = 4;
					SetCallSpSMSSrv(lblPort1, exNum);
					goto IL_005b;
					IL_005b:
					num2 = 5;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_008d;
					}
					goto IL_009d;
					IL_008d:
					num2 = 6;
					SetCallSpSMSSrv(lblPort2, exNum);
					goto IL_009d;
					IL_009d:
					num2 = 7;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_00cf;
					}
					goto IL_00df;
					IL_00cf:
					num2 = 8;
					SetCallSpSMSSrv(lblPort3, exNum);
					goto IL_00df;
					IL_00df:
					num2 = 9;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0112;
					}
					goto IL_0123;
					IL_0112:
					num2 = 10;
					SetCallSpSMSSrv(lblPort4, exNum);
					goto IL_0123;
					end_IL_0001_2:
					break;
				}
				num2 = 15;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 521;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetCallSpSMSSrv(Label Exxc, string ExNum)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string text = default(string);
		int num5 = default(int);
		int num7 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				int num6;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 593:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0014;
						case 4:
							goto IL_0019;
						case 5:
							goto IL_0022;
						case 6:
							goto IL_0032;
						case 7:
							goto IL_0044;
						case 8:
							goto IL_004e;
						case 9:
							goto IL_00b0;
						case 10:
							goto IL_00b9;
						case 11:
							goto IL_00d0;
						case 12:
							goto IL_0135;
						case 13:
							goto IL_014c;
						case 14:
							goto IL_015a;
						case 15:
							goto IL_0163;
						case 16:
							goto IL_0171;
						case 17:
							goto IL_0188;
						case 18:
							goto IL_0196;
						case 19:
							goto IL_019f;
						case 20:
							goto IL_01b1;
						case 21:
							goto IL_01c0;
						case 22:
							goto IL_01cb;
						case 23:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 24:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0188:
					num2 = 17;
					Thread.Sleep(300);
					goto IL_0196;
					IL_0196:
					num2 = 18;
					Application.DoEvents();
					goto IL_019f;
					IL_0171:
					num2 = 16;
					serialPort.WriteLine(text + "\u001a");
					goto IL_0188;
					IL_019f:
					num2 = 19;
					num5 = checked(num5 + 1);
					goto IL_01a8;
					IL_000b:
					num2 = 2;
					serialPort = new SerialPort();
					goto IL_0014;
					IL_0014:
					num2 = 3;
					num6 = 0;
					goto IL_0019;
					IL_0019:
					num2 = 4;
					DataCodingSchem = 0;
					goto IL_0022;
					IL_0022:
					num2 = 5;
					serialPort.PortName = Exxc.Text;
					goto IL_0032;
					IL_0032:
					num2 = 6;
					if (!serialPort.IsOpen)
					{
						goto IL_0044;
					}
					goto IL_004e;
					IL_0044:
					num2 = 7;
					serialPort.Open();
					goto IL_004e;
					IL_004e:
					num2 = 8;
					PDUCodes = GetPDU(GetSmsCenter(txtMobnum.Text), txtMobnum.Text, (MTUssd.SMS.Encoder.SMS.ENUM_TP_DCS)checked((int)Math.Round(Conversion.Val(DataCodingSchem))), (MTUssd.SMS.Encoder.SMS.ENUM_TP_VALID_PERIOD)checked((int)Math.Round(Conversion.Val(MTUssd.SMS.Encoder.SMS.ENUM_TP_VALID_PERIOD.Maximum))), 0, StatusReport: false, txtSrvMsg.Text);
					goto IL_00b0;
					IL_00b0:
					num2 = 9;
					Application.DoEvents();
					goto IL_00b9;
					IL_00b9:
					num2 = 10;
					num7 = checked(PDUCodes.Length - 1);
					num5 = 0;
					goto IL_01a8;
					IL_01a8:
					if (num5 <= num7)
					{
						goto IL_00d0;
					}
					goto IL_01b1;
					IL_01b1:
					num2 = 20;
					Thread.Sleep(1000);
					goto IL_01c0;
					IL_01c0:
					num2 = 21;
					serialPort.Close();
					goto IL_01cb;
					IL_01cb:
					num2 = 22;
					serialPort.Dispose();
					break;
					IL_00d0:
					num2 = 11;
					text = "AT+CMGS=" + ((double)PDUCodes[num5].Length - Conversion.Val("&H" + Strings.Mid(PDUCodes[num5], 1, 2)) * 2.0 - 2.0) / 2.0;
					goto IL_0135;
					IL_0135:
					num2 = 12;
					serialPort.WriteLine(text + "\r");
					goto IL_014c;
					IL_014c:
					num2 = 13;
					Thread.Sleep(300);
					goto IL_015a;
					IL_015a:
					num2 = 14;
					Application.DoEvents();
					goto IL_0163;
					IL_0163:
					num2 = 15;
					text = PDUCodes[num5];
					goto IL_0171;
					end_IL_0001_2:
					break;
				}
				num2 = 23;
				serialPort = null;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 593;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void lblBal1_Click(object sender, EventArgs e)
	{
	}

	private void fillBoxsWithSrvName()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		int num6 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 303:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_000f;
						case 4:
							goto IL_0022;
						case 5:
							goto IL_003a;
						case 7:
						case 8:
							goto IL_005c;
						case 9:
							goto IL_0076;
						case 10:
							goto IL_00aa;
						case 11:
							goto IL_00de;
						default:
							goto end_IL_0001;
						case 6:
						case 12:
							goto end_IL_0001_2;
						}
						goto default;
					}
					IL_0076:
					num2 = 9;
					lstNum.Items.Add(RuntimeHelpers.GetObjectValue(objDataTabletemp.Rows[num5]["mobnum"]));
					goto IL_00aa;
					IL_00aa:
					num2 = 10;
					lstNames.Items.Add(RuntimeHelpers.GetObjectValue(objDataTabletemp.Rows[num5]["edscrp"]));
					goto IL_00de;
					IL_00e5:
					if (num5 > num6)
					{
						goto end_IL_0001_2;
					}
					goto IL_0076;
					IL_00de:
					num2 = 11;
					num5 = checked(num5 + 1);
					goto IL_00e5;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_000f;
					IL_000f:
					num2 = 3;
					lstNumbers.Items.Clear();
					goto IL_0022;
					IL_0022:
					num2 = 4;
					objDataTabletemp = objData.QueryDatabase("SELECT * FROM svrnums");
					goto IL_003a;
					IL_003a:
					num2 = 5;
					if (objDataTabletemp.Rows.Count < 1)
					{
						goto end_IL_0001_2;
					}
					goto IL_005c;
					IL_005c:
					num2 = 8;
					num6 = checked(objDataTabletemp.Rows.Count - 1);
					num5 = 0;
					goto IL_00e5;
					end_IL_0001:
					break;
				}
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 303;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_2:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void GetsrvNumByName(string EEEX)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 321:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_002e;
						case 5:
						case 6:
							goto IL_004e;
						case 7:
							goto IL_007c;
						case 8:
							goto IL_00aa;
						case 9:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 10:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_004e:
					num2 = 6;
					txtMobnum.Text = Conversions.ToString(objDataTabletemp.Rows[0]["mobnum"]);
					goto IL_007c;
					IL_007c:
					num2 = 7;
					txtEnote.Text = Conversions.ToString(objDataTabletemp.Rows[0]["enote"]);
					goto IL_00aa;
					IL_002e:
					num2 = 3;
					if (objDataTabletemp.Rows.Count < 1)
					{
						goto end_IL_0001_3;
					}
					goto IL_004e;
					IL_00aa:
					num2 = 8;
					txtSrvMsg.Text = Conversions.ToString(objDataTabletemp.Rows[0]["srvmsg"]);
					break;
					IL_000b:
					num2 = 2;
					objDataTabletemp = objData.QueryDatabase("SELECT * FROM svrnums where edscrp = '" + EEEX + "'");
					goto IL_002e;
					end_IL_0001_2:
					break;
				}
				num2 = 9;
				txtSvrName.Text = Conversions.ToString(objDataTabletemp.Rows[0]["edscrp"]);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 321;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void GetsrvNumByNum(string EEEX)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 321:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_002e;
						case 5:
						case 6:
							goto IL_004e;
						case 7:
							goto IL_007c;
						case 8:
							goto IL_00aa;
						case 9:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 10:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_004e:
					num2 = 6;
					txtMobnum.Text = Conversions.ToString(objDataTabletemp.Rows[0]["mobnum"]);
					goto IL_007c;
					IL_007c:
					num2 = 7;
					txtEnote.Text = Conversions.ToString(objDataTabletemp.Rows[0]["enote"]);
					goto IL_00aa;
					IL_002e:
					num2 = 3;
					if (objDataTabletemp.Rows.Count < 1)
					{
						goto end_IL_0001_3;
					}
					goto IL_004e;
					IL_00aa:
					num2 = 8;
					txtSrvMsg.Text = Conversions.ToString(objDataTabletemp.Rows[0]["srvmsg"]);
					break;
					IL_000b:
					num2 = 2;
					objDataTabletemp = objData.QueryDatabase("SELECT * FROM svrnums where mobnum = '" + EEEX + "'");
					goto IL_002e;
					end_IL_0001_2:
					break;
				}
				num2 = 9;
				txtSvrName.Text = Conversions.ToString(objDataTabletemp.Rows[0]["edscrp"]);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 321;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void lstNames_MouseClick(object sender, MouseEventArgs e)
	{
		if (lstNames.SelectedIndex >= 0)
		{
			txtMobnum.Text = "";
			txtEnote.Text = "";
			txtSrvMsg.Text = "";
			txtSvrName.Text = "";
			GetsrvNumByName(Conversions.ToString(lstNames.SelectedItem));
		}
	}

	private void lstNum_MouseClick(object sender, MouseEventArgs e)
	{
		if (lstNum.SelectedIndex >= 0)
		{
			txtMobnum.Text = "";
			txtEnote.Text = "";
			txtSrvMsg.Text = "";
			txtSvrName.Text = "";
			GetsrvNumByNum(Conversions.ToString(lstNum.SelectedItem));
		}
	}

	private void AddBalToDb(string eeTel, double EEx)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 264:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 4:
							goto IL_0025;
						case 5:
							goto IL_002d;
						case 6:
							goto IL_003b;
						case 7:
							goto IL_0049;
						case 8:
							goto IL_005d;
						case 9:
							goto IL_007a;
						case 10:
							goto IL_0094;
						case 11:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 3:
						case 12:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_005d:
					num2 = 8;
					text = text + "#" + Conversions.ToString(DateTime.Today) + "#, ";
					goto IL_007a;
					IL_007a:
					num2 = 9;
					text = text + " " + Conversions.ToString(EEx) + " , ";
					goto IL_0094;
					IL_0049:
					num2 = 7;
					text = text + " '" + eeTel + "' , ";
					goto IL_005d;
					IL_0094:
					num2 = 10;
					text = text + "'" + txtEproc.Text + "') ";
					break;
					IL_000b:
					num2 = 2;
					if (eeTel.Length != 11)
					{
						goto end_IL_0001_3;
					}
					goto IL_0025;
					IL_0025:
					num2 = 4;
					text = "Insert Into numsBal ";
					goto IL_002d;
					IL_002d:
					num2 = 5;
					text += "(mobnum,xdate,evalue,enums)";
					goto IL_003b;
					IL_003b:
					num2 = 6;
					text += "Values (";
					goto IL_0049;
					end_IL_0001_2:
					break;
				}
				num2 = 11;
				objData.DatabaseCommand(text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 264;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void AddThisNumber(string eeTel)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 159:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 4:
							goto IL_0022;
						case 5:
							goto IL_002a;
						case 6:
							goto IL_0038;
						case 7:
							goto IL_0046;
						case 8:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 3:
						case 9:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_002a:
					num2 = 5;
					text += "(enum)";
					goto IL_0038;
					IL_0038:
					num2 = 6;
					text += "Values (";
					goto IL_0046;
					IL_0022:
					num2 = 4;
					text = "Insert Into smssave04 ";
					goto IL_002a;
					IL_0046:
					num2 = 7;
					text = text + " '" + eeTel + "') ";
					break;
					IL_000b:
					num2 = 2;
					if (eeTel.Length != 11)
					{
						goto end_IL_0001_3;
					}
					goto IL_0022;
					end_IL_0001_2:
					break;
				}
				num2 = 8;
				objData.DatabaseCommand(text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 159;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void GetGiftsForThisNumber(string eeTel)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		int num6 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 427:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0057;
						case 4:
							goto IL_0075;
						case 5:
							goto IL_0092;
						case 6:
							goto IL_0113;
						case 7:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 8:
						case 9:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0119:
					if (num5 > num6)
					{
						break;
					}
					goto IL_0092;
					IL_0092:
					num2 = 5;
					txtInfo.Text = Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject("\r\n", objDataTabletemp.Rows[num5]["evalue"]), "     -     "), Strings.Format(RuntimeHelpers.GetObjectValue(objDataTabletemp.Rows[num5]["xdate"]), "yyyy/MM/dd")), txtInfo.Text));
					goto IL_0113;
					IL_0075:
					num2 = 4;
					num6 = checked(objDataTabletemp.Rows.Count - 1);
					num5 = 0;
					goto IL_0119;
					IL_0113:
					num2 = 6;
					num5 = checked(num5 + 1);
					goto IL_0119;
					IL_000b:
					num2 = 2;
					objDataTabletemp = objData.QueryDatabase("SELECT * FROM numsgifts where  mobnum = '" + eeTel + "' and enums = " + Conversions.ToString(DateAndTime.Month(DateTime.Today)) + " order by xdate");
					goto IL_0057;
					IL_0057:
					num2 = 3;
					if (objDataTabletemp.Rows.Count <= 0)
					{
						goto end_IL_0001_3;
					}
					goto IL_0075;
					end_IL_0001_2:
					break;
				}
				num2 = 7;
				txtInfo.Text = Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject("\r\n--------- ", objDataTabletemp.Rows[0]["mobnum"]), " ---------"), txtInfo.Text));
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 427;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void AddOrangeBalTrans(string eeTel, double EEx)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string text = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 433:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 4:
							goto IL_0025;
						case 5:
							goto IL_002d;
						case 6:
							goto IL_003b;
						case 7:
							goto IL_0049;
						case 8:
							goto IL_005d;
						case 9:
							goto IL_007a;
						case 10:
							goto IL_0094;
						case 11:
							goto IL_00b3;
						case 12:
							goto IL_010a;
						case 13:
							goto IL_0131;
						case 14:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 3:
						case 15:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_00b3:
					num2 = 11;
					text = text + " " + DateAndTime.Today.Month + DateAndTime.Today.Day + " , ";
					goto IL_010a;
					IL_010a:
					num2 = 12;
					text = text + " " + Conversions.ToString(DateAndTime.Today.Year) + " , ";
					goto IL_0131;
					IL_0094:
					num2 = 10;
					text = text + "'" + txtOtransACC.Text + "' , ";
					goto IL_00b3;
					IL_0131:
					num2 = 13;
					text = text + "'" + txtOtransTN.Text + "') ";
					break;
					IL_000b:
					num2 = 2;
					if (eeTel.Length != 11)
					{
						goto end_IL_0001_3;
					}
					goto IL_0025;
					IL_0025:
					num2 = 4;
					text = "Insert Into orngtransfers ";
					goto IL_002d;
					IL_002d:
					num2 = 5;
					text += "(mobnum,xdate,evalue,accname,dateinf,dateyear,enums)";
					goto IL_003b;
					IL_003b:
					num2 = 6;
					text += "Values (";
					goto IL_0049;
					IL_0049:
					num2 = 7;
					text = text + " '" + eeTel + "' , ";
					goto IL_005d;
					IL_005d:
					num2 = 8;
					text = text + "#" + Conversions.ToString(DateTime.Today) + "#, ";
					goto IL_007a;
					IL_007a:
					num2 = 9;
					text = text + " " + Conversions.ToString(EEx) + " , ";
					goto IL_0094;
					end_IL_0001_2:
					break;
				}
				num2 = 14;
				objData.DatabaseCommand(text);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 433;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void lblBal1_TextChanged(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 112:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(lblBal1.Text, "#", TextCompare: false) == 0)
					{
						goto end_IL_0001_3;
					}
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 3;
				AddBalToDb(lblNum1.Text, Conversion.Val(lblBal1.Text));
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 112;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void lblBal2_TextChanged(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 112:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(lblBal2.Text, "#", TextCompare: false) == 0)
					{
						goto end_IL_0001_3;
					}
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 3;
				AddBalToDb(lblNum2.Text, Conversion.Val(lblBal2.Text));
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 112;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void lblBal3_TextChanged(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 112:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(lblBal3.Text, "#", TextCompare: false) == 0)
					{
						goto end_IL_0001_3;
					}
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 3;
				AddBalToDb(lblNum3.Text, Conversion.Val(lblBal3.Text));
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 112;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void lblBal4_TextChanged(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 112:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(lblBal4.Text, "#", TextCompare: false) == 0)
					{
						goto end_IL_0001_3;
					}
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 3;
				AddBalToDb(lblNum4.Text, Conversion.Val(lblBal4.Text));
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 112;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void lblBal5_TextChanged(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 112:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(lblBal5.Text, "#", TextCompare: false) == 0)
					{
						goto end_IL_0001_3;
					}
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 3;
				AddBalToDb(lblNum5.Text, Conversion.Val(lblBal5.Text));
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 112;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void fillBoxsWithQry()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		int num6 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 323:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_000f;
						case 4:
							goto IL_0022;
						case 5:
							goto IL_0035;
						case 6:
							goto IL_0067;
						case 8:
						case 9:
							goto IL_0086;
						case 10:
							goto IL_00a1;
						case 11:
							goto IL_00d5;
						case 12:
							goto IL_00ee;
						default:
							goto end_IL_0001;
						case 7:
						case 13:
							goto end_IL_0001_2;
						}
						goto default;
					}
					IL_00a1:
					num2 = 10;
					lstQryNumbers.Items.Add(RuntimeHelpers.GetObjectValue(objDataTabletemp.Rows[num5]["mobnum"]));
					goto IL_00d5;
					IL_00d5:
					num2 = 11;
					lstQryBal.Items.Add("#");
					goto IL_00ee;
					IL_00f5:
					if (num5 > num6)
					{
						goto end_IL_0001_2;
					}
					goto IL_00a1;
					IL_00ee:
					num2 = 12;
					num5 = checked(num5 + 1);
					goto IL_00f5;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_000f;
					IL_000f:
					num2 = 3;
					lstQryNumbers.Items.Clear();
					goto IL_0022;
					IL_0022:
					num2 = 4;
					lstQryBal.Items.Clear();
					goto IL_0035;
					IL_0035:
					num2 = 5;
					objDataTabletemp = objData.QueryDatabase("SELECT mobnum FROM vcnums where   enums = " + Conversions.ToString(Conversion.Val(txtEnumsVCQry.Text)));
					goto IL_0067;
					IL_0067:
					num2 = 6;
					if (objDataTabletemp.Rows.Count < 1)
					{
						goto end_IL_0001_2;
					}
					goto IL_0086;
					IL_0086:
					num2 = 9;
					num6 = checked(objDataTabletemp.Rows.Count - 1);
					num5 = 0;
					goto IL_00f5;
					end_IL_0001:
					break;
				}
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 323;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_2:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnGetQry_Click(object sender, EventArgs e)
	{
		if (Conversion.Val(txtEnumsVCQry.Text) > 0.0)
		{
			lblQryTotal.Text = "";
			fillBoxsWithQry();
		}
	}

	private void btnQryQry_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		checked
		{
			int num = lstQryNumbers.Items.Count - 1;
			for (int i = 0; i <= num; i++)
			{
				string mobBal = GetMobBal(Conversions.ToString(lstQryNumbers.Items[i]));
				if (Operators.CompareString(mobBal, "#", TextCompare: false) != 0)
				{
					lstQryBal.Items[i] = mobBal;
					lblQryTotal.Text = Conversions.ToString(Conversion.Val(lblQryTotal.Text) + Conversion.Val(mobBal));
				}
			}
		}
	}

	private void lblBal6_TextChanged(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 112:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					if (Operators.CompareString(lblBal6.Text, "#", TextCompare: false) == 0)
					{
						goto end_IL_0001_3;
					}
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 3;
				AddBalToDb(lblNum6.Text, Conversion.Val(lblBal6.Text));
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 112;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void GetAllQryBalZ()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		DataTable dataTable = default(DataTable);
		DataRow dataRow = default(DataRow);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				int num6;
				int num7;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 493:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0019;
						case 4:
							goto IL_002d;
						case 5:
							goto IL_0041;
						case 6:
							goto IL_0046;
						case 7:
							goto IL_0078;
						case 8:
							goto IL_0096;
						case 9:
							goto IL_00b4;
						case 10:
							goto IL_00c0;
						case 11:
							goto IL_00ec;
						case 12:
							goto IL_0118;
						case 13:
							goto IL_012a;
						case 14:
							goto IL_0130;
						case 15:
						case 16:
							goto IL_0140;
						case 17:
							goto IL_0151;
						case 18:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 19:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0130:
					num2 = 14;
					num5 = checked(num5 + -1);
					goto IL_0137;
					IL_0140:
					num2 = 16;
					dataViewGridQryBal.DataSource = dataTable;
					goto IL_0151;
					IL_012a:
					num2 = 13;
					dataRow = null;
					goto IL_0130;
					IL_0151:
					num2 = 17;
					dataViewGridQryBal.Columns[0].Width = 80;
					break;
					IL_000b:
					num2 = 2;
					dataTable = new DataTable("temp");
					goto IL_0019;
					IL_0019:
					num2 = 3;
					dataTable.Columns.Add("المبلغ");
					goto IL_002d;
					IL_002d:
					num2 = 4;
					dataTable.Columns.Add("التاريخ");
					goto IL_0041;
					IL_0041:
					num2 = 5;
					num6 = 0;
					goto IL_0046;
					IL_0046:
					num2 = 6;
					objDataTabletemp = objData.QueryDatabase("SELECT * FROM numsBal where mobnum = '" + txtNumQry.Text.Trim() + "' order by eid");
					goto IL_0078;
					IL_0078:
					num2 = 7;
					if (objDataTabletemp.Rows.Count > 0)
					{
						goto IL_0096;
					}
					goto IL_0140;
					IL_0096:
					num2 = 8;
					num7 = checked(objDataTabletemp.Rows.Count - 1);
					num5 = num7;
					goto IL_0137;
					IL_0137:
					if (num5 >= 0)
					{
						goto IL_00b4;
					}
					goto IL_0140;
					IL_00b4:
					num2 = 9;
					dataRow = dataTable.NewRow();
					goto IL_00c0;
					IL_00c0:
					num2 = 10;
					dataRow[0] = RuntimeHelpers.GetObjectValue(objDataTabletemp.Rows[num5]["evalue"]);
					goto IL_00ec;
					IL_00ec:
					num2 = 11;
					dataRow[1] = RuntimeHelpers.GetObjectValue(objDataTabletemp.Rows[num5]["xdate"]);
					goto IL_0118;
					IL_0118:
					num2 = 12;
					dataTable.Rows.Add(dataRow);
					goto IL_012a;
					end_IL_0001_2:
					break;
				}
				num2 = 18;
				dataViewGridQryBal.Columns[1].Width = 250;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 493;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string GetMobBal(string EEx)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string result = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 175:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_002e;
						case 4:
							goto IL_0049;
						case 6:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
						case 7:
						case 8:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					objDataTabletemp = objData.QueryDatabase("SELECT * FROM numsBal where mobnum = '" + EEx + "'  order by eid desc");
					goto IL_002e;
					IL_002e:
					num2 = 3;
					if (objDataTabletemp.Rows.Count <= 0)
					{
						break;
					}
					goto IL_0049;
					IL_0049:
					num2 = 4;
					result = objDataTabletemp.Rows[0]["evalue"].ToString();
					goto end_IL_0001_3;
					end_IL_0001_2:
					break;
				}
				num2 = 6;
				result = "#";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 175;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void GetAllQryBalCh()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		DataTable dataTable = default(DataTable);
		DataRow dataRow = default(DataRow);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				int num6;
				int num7;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 493:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0019;
						case 4:
							goto IL_002d;
						case 5:
							goto IL_0041;
						case 6:
							goto IL_0046;
						case 7:
							goto IL_0078;
						case 8:
							goto IL_0096;
						case 9:
							goto IL_00b4;
						case 10:
							goto IL_00c0;
						case 11:
							goto IL_00ec;
						case 12:
							goto IL_0118;
						case 13:
							goto IL_012a;
						case 14:
							goto IL_0130;
						case 15:
						case 16:
							goto IL_0140;
						case 17:
							goto IL_0151;
						case 18:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 19:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0130:
					num2 = 14;
					num5 = checked(num5 + -1);
					goto IL_0137;
					IL_0140:
					num2 = 16;
					dataViewGridQryChrg.DataSource = dataTable;
					goto IL_0151;
					IL_012a:
					num2 = 13;
					dataRow = null;
					goto IL_0130;
					IL_0151:
					num2 = 17;
					dataViewGridQryChrg.Columns[0].Width = 80;
					break;
					IL_000b:
					num2 = 2;
					dataTable = new DataTable("temp");
					goto IL_0019;
					IL_0019:
					num2 = 3;
					dataTable.Columns.Add("المبلغ");
					goto IL_002d;
					IL_002d:
					num2 = 4;
					dataTable.Columns.Add("التاريخ");
					goto IL_0041;
					IL_0041:
					num2 = 5;
					num6 = 0;
					goto IL_0046;
					IL_0046:
					num2 = 6;
					objDataTabletemp = objDataChg.QueryDatabase("SELECT * FROM shahnT where telnum = '" + txtNumQry.Text.Trim() + "'  order by id");
					goto IL_0078;
					IL_0078:
					num2 = 7;
					if (objDataTabletemp.Rows.Count > 0)
					{
						goto IL_0096;
					}
					goto IL_0140;
					IL_0096:
					num2 = 8;
					num7 = checked(objDataTabletemp.Rows.Count - 1);
					num5 = num7;
					goto IL_0137;
					IL_0137:
					if (num5 >= 0)
					{
						goto IL_00b4;
					}
					goto IL_0140;
					IL_00b4:
					num2 = 9;
					dataRow = dataTable.NewRow();
					goto IL_00c0;
					IL_00c0:
					num2 = 10;
					dataRow[0] = RuntimeHelpers.GetObjectValue(objDataTabletemp.Rows[num5]["emony"]);
					goto IL_00ec;
					IL_00ec:
					num2 = 11;
					dataRow[1] = RuntimeHelpers.GetObjectValue(objDataTabletemp.Rows[num5]["ckdate"]);
					goto IL_0118;
					IL_0118:
					num2 = 12;
					dataTable.Rows.Add(dataRow);
					goto IL_012a;
					end_IL_0001_2:
					break;
				}
				num2 = 18;
				dataViewGridQryChrg.Columns[1].Width = 250;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 493;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void lblMain_Click(object sender, EventArgs e)
	{
		Clipboard.Clear();
		if (lblMain.Text.Length > 5)
		{
			Clipboard.SetText(lblMain.Text);
		}
	}

	private void btnPast_Click(object sender, EventArgs e)
	{
		if (Clipboard.GetText().Length == 11)
		{
			txtNumQry.Text = Clipboard.GetText();
			if (txtNumQry.Text.Trim().Length == 11)
			{
				GetAllQryBalZ();
				GetAllQryBalCh();
			}
		}
	}

	private void lblSavePath3_Click(object sender, EventArgs e)
	{
	}

	private void btnGetOrngBal_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "Get Balance";
		DisableCntl();
		ReSetUssdOrder();
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			lblBal1.Text = "#";
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			lblBal2.Text = "#";
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			lblBal3.Text = "#";
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			lblBal4.Text = "#";
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			lblBal5.Text = "#";
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			lblBal6.Text = "#";
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			GetBalOrng(lblPort1);
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			GetBalOrng(lblPort2);
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			GetBalOrng(lblPort3);
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			GetBalOrng(lblPort4);
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			GetBalOrng(lblPort5);
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			GetBalOrng(lblPort6);
		}
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			lblBal1.Text = GetBalOrngX(lblPort1);
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			lblBal2.Text = GetBalOrngX(lblPort2);
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			lblBal3.Text = GetBalOrngX(lblPort3);
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			lblBal4.Text = GetBalOrngX(lblPort4);
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			lblBal5.Text = GetBalOrngX(lblPort5);
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			lblBal6.Text = GetBalOrngX(lblPort6);
		}
		Application.DoEvents();
		btnUssdReset_Click(RuntimeHelpers.GetObjectValue(sender), e);
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btnGetOrngBalAcc_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (txtOtransACC.Text.Trim().Length < 1)
		{
			lblProgress.Text = "ادخل رقم حساب استعلام";
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "Get Balance";
		DisableCntl();
		ReSetUssdOrder();
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			lblBal1.Text = "#";
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			lblBal2.Text = "#";
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			lblBal3.Text = "#";
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			lblBal4.Text = "#";
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			lblBal5.Text = "#";
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			lblBal6.Text = "#";
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			GetBalOrngAcc(lblPort1);
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			GetBalOrngAcc(lblPort2);
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			GetBalOrngAcc(lblPort3);
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			GetBalOrngAcc(lblPort4);
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			GetBalOrngAcc(lblPort5);
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			GetBalOrngAcc(lblPort6);
		}
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			lblBal1.Text = GetBalOrngXAcc(lblPort1);
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			lblBal2.Text = GetBalOrngXAcc(lblPort2);
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			lblBal3.Text = GetBalOrngXAcc(lblPort3);
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			lblBal4.Text = GetBalOrngXAcc(lblPort4);
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			lblBal5.Text = GetBalOrngXAcc(lblPort5);
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			lblBal6.Text = GetBalOrngXAcc(lblPort6);
		}
		Application.DoEvents();
		btnUssdReset_Click(RuntimeHelpers.GetObjectValue(sender), e);
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btnSaveAS3_Click(object sender, EventArgs e)
	{
		string text = "";
		string text2 = "X_" + DateAndTime.Today.Month + "_" + DateAndTime.Today.Day;
		if (Strings.Len(text2) > 2)
		{
			text = OpensaveAs(text2);
			if (Operators.CompareString(text, "", TextCompare: false) != 0)
			{
				lblSavePath3.Text = text.Trim('s').Trim('l').Trim('x')
					.Trim('.');
			}
		}
	}

	private void btnExport3_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						string text = "";
						double num3 = 1.0;
						if (lblSavePath3.Text.Length > 1)
						{
							Cursor = Cursors.WaitCursor;
							object objectValue = RuntimeHelpers.GetObjectValue(Interaction.CreateObject("EXCEL.APPLICATION"));
							object objectValue2 = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(NewLateBinding.LateGet(objectValue, null, "Workbooks", new object[0], null, null, null), null, "Open", new object[1] { Application.StartupPath + "\\reports\\xyz4.xls" }, null, null, null));
							NewLateBinding.LateSet(objectValue, null, "DisplayAlerts", new object[1] { false }, null, null);
							object objectValue3 = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(objectValue2, null, "Worksheets", new object[1] { "Sheet1" }, null, null, null));
							int num4 = dataViewGrid.RowCount - 1;
							for (int i = 0; i <= num4; i++)
							{
								NewLateBinding.LateSetComplex(NewLateBinding.LateGet(objectValue3, null, "Range", new object[1] { "A" + num3 }, null, null, null), null, "Value", new object[1] { dataViewGrid[0, i].Value.ToString() }, null, null, OptimisticSet: false, RValueBase: true);
								NewLateBinding.LateSetComplex(NewLateBinding.LateGet(objectValue3, null, "Range", new object[1] { "B" + num3 }, null, null, null), null, "Value", new object[1] { dataViewGrid[1, i].Value.ToString() }, null, null, OptimisticSet: false, RValueBase: true);
								NewLateBinding.LateSetComplex(NewLateBinding.LateGet(objectValue3, null, "Range", new object[1] { "C" + num3 }, null, null, null), null, "Value", new object[1] { dataViewGrid[2, i].Value.ToString() }, null, null, OptimisticSet: false, RValueBase: true);
								num3 += 1.0;
							}
							num3 += 1.0;
							num3 += 1.0;
							NewLateBinding.LateSetComplex(NewLateBinding.LateGet(objectValue3, null, "Range", new object[1] { "A" + num3 }, null, null, null), null, "Value", new object[1] { "اجمالى" }, null, null, OptimisticSet: false, RValueBase: true);
							NewLateBinding.LateSetComplex(NewLateBinding.LateGet(objectValue3, null, "Range", new object[1] { "B" + num3 }, null, null, null), null, "Value", new object[1] { txtOtotalTrans.Text }, null, null, OptimisticSet: false, RValueBase: true);
							num3 += 1.0;
							NewLateBinding.LateSetComplex(NewLateBinding.LateGet(objectValue3, null, "Range", new object[1] { "A" + num3 }, null, null, null), null, "Value", new object[1] { "العدد" }, null, null, OptimisticSet: false, RValueBase: true);
							NewLateBinding.LateSetComplex(NewLateBinding.LateGet(objectValue3, null, "Range", new object[1] { "B" + num3 }, null, null, null), null, "Value", new object[1] { txtOTotalTransQ.Text }, null, null, OptimisticSet: false, RValueBase: true);
							if (num3 > 1.0)
							{
								NewLateBinding.LateCall(objectValue2, null, "SaveAs", new object[1] { lblSavePath3.Text + ".xls" }, null, null, null, IgnoreReturn: true);
							}
							else
							{
								Interaction.MsgBox("لا توجد اى ارقام ", MsgBoxStyle.Critical);
							}
							NewLateBinding.LateCall(objectValue2, null, "Close", new object[0], null, null, null, IgnoreReturn: true);
							releaseObject(RuntimeHelpers.GetObjectValue(objectValue));
							releaseObject(RuntimeHelpers.GetObjectValue(objectValue2));
							releaseObject(RuntimeHelpers.GetObjectValue(objectValue3));
							objectValue = null;
							Cursor = Cursors.Default;
							if (num3 > 3.0)
							{
								Interaction.MsgBox("تم تصدير جميع العمليات بنجاح", MsgBoxStyle.Information);
							}
						}
						goto end_IL_0001;
					}
					case 1127:
						num = -1;
						switch (num2)
						{
						case 2:
							Cursor = Cursors.Default;
							Interaction.MsgBox("حدث خطء", MsgBoxStyle.Critical);
							goto end_IL_0001;
						}
						break;
					}
				}
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1127;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnOtransRun_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtOtransACC.Text.Length <= 0)
		{
			Interaction.MsgBox("لم يتم تحديد رقم  حساب للتحويل له");
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Conversion.Val(txtOtransTN.Text) == 0.0)
		{
			Interaction.MsgBox("حدد رقم عملية من فضلك");
			return;
		}
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		lblProgress.Text = "سداد فاتورة اورنج";
		int num = 0;
		do
		{
			num = checked(num + 1);
			ReSetUssdOrder();
			Application.DoEvents();
			SetUssdOrderOrange_Acc();
			Application.DoEvents();
		}
		while (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) && num <= 10);
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btnCancelTrans_Click(object sender, EventArgs e)
	{
		if (chkStop.Checked)
		{
			cancelAllTheProcess = false;
			chkStop.Checked = false;
			btnCancelTrans.Text = "STOP";
			btnCancelTrans.BackColor = Color.PaleGreen;
		}
		else
		{
			cancelAllTheProcess = true;
			chkStop.Checked = true;
			btnCancelTrans.Text = "Ready";
			btnCancelTrans.BackColor = Color.PaleVioletRed;
		}
	}

	private void btnVC6_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "*6#";
		DisableCntl();
		txtLoopSvc2.Text = "0";
		ReSetUssdOrder();
		do
		{
			txtLoopSvc2.Text = Conversions.ToString(Conversion.Val(txtLoopSvc2.Text) + 1.0);
			Thread.Sleep(1000);
			SetUssdOrderVccX();
			Application.DoEvents();
		}
		while (Conversion.Val(txtLoopSvc2.Text) < Conversion.Val(txtLoopFvc2.Text) && !chkStop.Checked);
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btnVCChargeToSelf_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (txtMonyMn.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بتحديد المبلغ");
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "شحن";
		DisableCntl();
		txtLoopSvc2.Text = "0";
		do
		{
			txtLoopSvc2.Text = Conversions.ToString(Conversion.Val(txtLoopSvc2.Text) + 1.0);
			Thread.Sleep(1000);
			ReSetUssdOrder();
			SetUssdOrderVCcharge();
			Application.DoEvents();
		}
		while (Conversion.Val(txtLoopSvc2.Text) < Conversion.Val(txtLoopFvc2.Text) && !chkStop.Checked);
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void SetUssdOrderVCcharge()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		Stopwatch stopwatch = default(Stopwatch);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1106:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_001c;
						case 5:
							goto IL_004e;
						case 6:
							goto IL_005d;
						case 7:
							goto IL_008f;
						case 8:
							goto IL_009e;
						case 9:
							goto IL_00d0;
						case 10:
							goto IL_00e0;
						case 11:
							goto IL_0113;
						case 12:
							goto IL_0123;
						case 13:
							goto IL_0156;
						case 14:
							goto IL_0166;
						case 15:
							goto IL_0199;
						case 18:
							goto IL_01ab;
						case 16:
						case 17:
						case 19:
							goto IL_01b5;
						case 20:
							goto IL_01cf;
						case 21:
							goto IL_01d9;
						case 22:
							goto IL_020c;
						case 23:
							goto IL_021c;
						case 24:
							goto IL_0225;
						case 25:
							goto IL_0258;
						case 26:
							goto IL_0268;
						case 27:
							goto IL_0271;
						case 28:
							goto IL_02a4;
						case 29:
							goto IL_02b4;
						case 30:
							goto IL_02bd;
						case 31:
							goto IL_02f0;
						case 32:
							goto IL_0300;
						case 33:
							goto IL_0309;
						case 34:
							goto IL_033c;
						case 35:
							goto IL_034c;
						case 36:
							goto IL_0355;
						case 37:
							goto IL_0388;
						case 38:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 39:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0355:
					num2 = 36;
					if (!((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						break;
					}
					goto IL_0388;
					IL_0388:
					num2 = 37;
					ApplyUssdCodeVCPSelfy(lblPort6);
					break;
					IL_034c:
					num2 = 35;
					Application.DoEvents();
					goto IL_0355;
					IL_01ab:
					num2 = 18;
					Application.DoEvents();
					goto IL_01b5;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					stopwatch.Start();
					goto IL_001c;
					IL_001c:
					num2 = 4;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_004e;
					}
					goto IL_005d;
					IL_004e:
					num2 = 5;
					ApplyUssdCodeVCSelfy(lblPort1);
					goto IL_005d;
					IL_005d:
					num2 = 6;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_008f;
					}
					goto IL_009e;
					IL_008f:
					num2 = 7;
					ApplyUssdCodeVCSelfy(lblPort2);
					goto IL_009e;
					IL_009e:
					num2 = 8;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_00d0;
					}
					goto IL_00e0;
					IL_00d0:
					num2 = 9;
					ApplyUssdCodeVCSelfy(lblPort3);
					goto IL_00e0;
					IL_00e0:
					num2 = 10;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0113;
					}
					goto IL_0123;
					IL_0113:
					num2 = 11;
					ApplyUssdCodeVCSelfy(lblPort4);
					goto IL_0123;
					IL_0123:
					num2 = 12;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0156;
					}
					goto IL_0166;
					IL_0156:
					num2 = 13;
					ApplyUssdCodeVCSelfy(lblPort5);
					goto IL_0166;
					IL_0166:
					num2 = 14;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_0199;
					}
					goto IL_01b5;
					IL_0199:
					num2 = 15;
					ApplyUssdCodeVCSelfy(lblPort6);
					goto IL_01b5;
					IL_01b5:
					num2 = 17;
					if (stopwatch.ElapsedMilliseconds <= 8000)
					{
						goto IL_01ab;
					}
					goto IL_01cf;
					IL_01cf:
					num2 = 20;
					stopwatch.Stop();
					goto IL_01d9;
					IL_01d9:
					num2 = 21;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_020c;
					}
					goto IL_021c;
					IL_020c:
					num2 = 22;
					ApplyUssdCodeVCPSelfy(lblPort1);
					goto IL_021c;
					IL_021c:
					num2 = 23;
					Application.DoEvents();
					goto IL_0225;
					IL_0225:
					num2 = 24;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_0258;
					}
					goto IL_0268;
					IL_0258:
					num2 = 25;
					ApplyUssdCodeVCPSelfy(lblPort2);
					goto IL_0268;
					IL_0268:
					num2 = 26;
					Application.DoEvents();
					goto IL_0271;
					IL_0271:
					num2 = 27;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_02a4;
					}
					goto IL_02b4;
					IL_02a4:
					num2 = 28;
					ApplyUssdCodeVCPSelfy(lblPort3);
					goto IL_02b4;
					IL_02b4:
					num2 = 29;
					Application.DoEvents();
					goto IL_02bd;
					IL_02bd:
					num2 = 30;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_02f0;
					}
					goto IL_0300;
					IL_02f0:
					num2 = 31;
					ApplyUssdCodeVCPSelfy(lblPort4);
					goto IL_0300;
					IL_0300:
					num2 = 32;
					Application.DoEvents();
					goto IL_0309;
					IL_0309:
					num2 = 33;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_033c;
					}
					goto IL_034c;
					IL_033c:
					num2 = 34;
					ApplyUssdCodeVCPSelfy(lblPort5);
					goto IL_034c;
					end_IL_0001_2:
					break;
				}
				num2 = 38;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1106;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeVCSelfy(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					if (Exxc.ForeColor == Color.White)
					{
						goto end_IL_0001;
					}
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
					Application.DoEvents();
					string ussdCommandFull = "*9*0*" + txtMonyMn.Text + "#";
					string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(1000);
					Application.DoEvents();
					break;
				}
				case 222:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001_2;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				break;
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 222;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeVCPSelfy(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						string text = "";
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						int num3 = 0;
						while (true)
						{
							num3++;
							if (num3 >= 10)
							{
								break;
							}
							lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							Application.DoEvents();
							string text2 = "#";
							string text3 = "#";
							string text4 = "#";
							string left = "#";
							int num4 = 0;
							string text5;
							while (true)
							{
								Thread.Sleep(1000);
								text5 = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text5) >= 2))
								{
									txtInfo.Text = text5 + "\r\n" + txtInfo.Text;
								}
								if (text5.Contains("+CUSD: "))
								{
									string text6 = text5;
									int num5 = text5.IndexOf("+CUSD: ");
									text6 = text5.Substring(num5 + 10, text5.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text6.IndexOf(",");
									string text7 = text6.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text7 = text7.Trim('"').Trim(',').Trim('"');
									if (Operators.CompareString(text7.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text7);
										text = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text = encoding_mod.Decode7Bit(text7);
									}
									OutBoxDrop(Exxc, text);
									if (text.Contains("الرقم السري"))
									{
										break;
									}
									if (text.Contains("تم شحن"))
									{
										goto IL_0303;
									}
								}
								if (Operators.CompareString(text5, "", TextCompare: false) == 0)
								{
									goto IL_0329;
								}
								text2 = "#";
								text3 = "#";
								text4 = "#";
								left = "#";
								if (text5.Contains("+CUSD: 5") | text5.Contains("unknown") | text5.Contains("retry operation"))
								{
									goto IL_042c;
								}
								Application.DoEvents();
								num4++;
								if (num4 <= 20)
								{
									continue;
								}
								goto IL_048f;
							}
							string ussdCommandFull = (txtPass.Text ?? "") ?? "";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(2000);
							text2 = "#";
							text3 = "#";
							text4 = "#";
							left = "#";
							Application.DoEvents();
							continue;
							IL_0303:
							Application.DoEvents();
							break;
							IL_048f:
							object obj = txtPass.Text ?? "";
							if (obj == null)
							{
								obj = "";
							}
							ussdCommandFull = (string)obj;
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							break;
							IL_042c:
							ussdCommandFull = "*9*0*" + txtMonyMn.Text + "#";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1500);
							Application.DoEvents();
							continue;
							IL_0329:
							if ((Operators.CompareString(text5, "", TextCompare: false) == 0) & (Operators.CompareString(text2, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
							{
								ussdCommandFull = "*9*0*" + txtMonyMn.Text + "#";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(2000);
								Application.DoEvents();
							}
							else
							{
								left = text4;
								text4 = text3;
								text3 = text2;
								text2 = text5;
							}
						}
						break;
					}
					case 1270:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj2) when (obj2 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj2);
				try0001_dispatch = 1270;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string GetBalEtsReal(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string text = default(string);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						text = "#";
						string text2 = "#";
						string ussdCommandFull = "*888#";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(1000);
						Application.DoEvents();
						while (true)
						{
							double num3 = 0.0;
							while (true)
							{
								Thread.Sleep(500);
								string text3 = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text3) >= 2))
								{
									txtInfo.Text = text3 + "\r\n" + txtInfo.Text;
								}
								if (text3.Contains("+CUSD:"))
								{
									int num4 = text3.IndexOf("+CUSD:");
									text3 = text3.Substring(num4 + 9, text3.Length - num4 - 9).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num4 = text3.IndexOf(",");
									string text4 = text3.Substring(0, num4).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text4 = text4.Trim('"').Trim(',').Trim('"');
									string text5;
									if (Operators.CompareString(text4.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text4);
										text5 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text5 = encoding_mod.Decode7Bit(text4);
									}
									OutBoxDrop(Exxc, text5);
									if (text5.Contains("الاساسي"))
									{
										num4 = text5.IndexOf("الاساسي");
										text2 = Conversions.ToString(Conversion.Val(text5.Substring(num4 + 8, text5.Length - (num4 + 8)).Trim('"')));
										goto IL_032f;
									}
								}
								if (text3.Contains("064706300647002006270644062E062F064506290020063A064A063100200645062A0627062D06290020064406460638062706450020062E0"))
								{
									text2 = "E";
								}
								else if (text3.Contains("06440642062F0020064606410630062A002006270644064506310627062A0020062706440645062C06270646064A0629002006440645063906310641062900200627064406310635064A062F002006270644064A0"))
								{
									text2 = "G";
									if (chkPay.Checked)
									{
										break;
									}
								}
								else
								{
									Application.DoEvents();
									num3 += 1.0;
									if (num3 <= 15.0)
									{
										continue;
									}
								}
								goto IL_032f;
								IL_032f:
								text = text2;
								goto end_IL_0001;
							}
							Thread.Sleep(2000);
							ussdCommandFull = "1";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
						}
					}
					case 853:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_2;
							}
							break;
						}
						end_IL_0001:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					result = text;
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 853;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void btnVCtransFrom3Up_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Conversion.Val(txtMonyMn.Text) < 5.0)
		{
			Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
			return;
		}
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		ClearCadsLocs();
		num = checked(num + 1);
		ReSetUssdOrder();
		lblProgress.Text = "تحويل فودافون كاش ";
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked & chkCh1.Checked)
		{
			ApplyUssdCodeVC_Mex(lblPort1, lblNum4.Text, chkCh4, 0);
			Application.DoEvents();
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked & chkCh2.Checked)
		{
			ApplyUssdCodeVC_Mex(lblPort2, lblNum5.Text, chkCh5, 0);
			Application.DoEvents();
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked & chkCh3.Checked)
		{
			ApplyUssdCodeVC_Mex(lblPort3, lblNum6.Text, chkCh6, 0);
			Application.DoEvents();
		}
		Application.DoEvents();
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btnVCtransFrom3Dn_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Conversion.Val(txtMonyMn.Text) < 5.0)
		{
			Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
			return;
		}
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		ClearCadsLocs();
		num = checked(num + 1);
		ReSetUssdOrder();
		lblProgress.Text = "تحويل فودافون كاش ";
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked & chkCh4.Checked)
		{
			ApplyUssdCodeVC_Mex(lblPort4, lblNum1.Text, chkCh1, 0);
			Application.DoEvents();
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked & chkCh2.Checked)
		{
			ApplyUssdCodeVC_Mex(lblPort5, lblNum2.Text, chkCh2, 0);
			Application.DoEvents();
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked & chkCh3.Checked)
		{
			ApplyUssdCodeVC_Mex(lblPort6, lblNum3.Text, chkCh3, 0);
			Application.DoEvents();
		}
		Application.DoEvents();
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void txtNumQry_TextChanged(object sender, EventArgs e)
	{
	}

	private void SetTotalPay()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 211:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0056;
						case 4:
							goto IL_0071;
						case 5:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 6:
						case 7:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					objDataTabletemp = objData.QueryDatabase(("SELECT sum(evalue)  FROM orngtransfers where  accname = '" + txtOtransACC.Text.Trim() + "' and enums = " + txtOtransTN.Text.Trim()) ?? "");
					goto IL_0056;
					IL_0071:
					num2 = 4;
					txtOtotalTrans.Text = Conversions.ToString(objDataTabletemp.Rows[0][0]);
					break;
					IL_0056:
					num2 = 3;
					if (objDataTabletemp.Rows.Count <= 0)
					{
						goto end_IL_0001_3;
					}
					goto IL_0071;
					end_IL_0001_2:
					break;
				}
				num2 = 5;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 211;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnOrngAccQry_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtOtransACC.Text.Trim().Length < 1)
		{
			lblProgress.Text = "ادخل رقم حساب استعلام";
			return;
		}
		if (txtOtransTN.Text.Trim().Length < 1)
		{
			lblProgress.Text = "ادخل رقم العملية";
			return;
		}
		btnOrngAccQry.Enabled = false;
		txtOtotalTrans.Text = "";
		txtOTotalTransQ.Text = "0";
		SetTotalPay();
		SetAllCatPays();
		btnOrngAccQry.Enabled = true;
	}

	private void SetAllCatPays()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		DataTable dataTable = default(DataTable);
		int num5 = default(int);
		int num6 = default(int);
		int num7 = default(int);
		DataRow dataRow = default(DataRow);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
						ProjectData.ClearProjectError();
						num3 = -2;
						goto IL_000b;
					case 714:
						{
							num = num2;
							switch ((num3 <= -2) ? 1 : num3)
							{
							case 1:
								break;
							default:
								goto end_IL_0001;
							}
							int num4 = unchecked(num + 1);
							num = 0;
							switch (num4)
							{
							case 1:
								break;
							case 2:
								goto IL_000b;
							case 3:
								goto IL_0019;
							case 4:
								goto IL_002d;
							case 5:
								goto IL_0041;
							case 6:
								goto IL_0055;
							case 7:
								goto IL_00b1;
							case 8:
								goto IL_00b6;
							case 9:
								goto IL_00d4;
							case 10:
								goto IL_00f2;
							case 11:
								goto IL_00fe;
							case 12:
								goto IL_0126;
							case 13:
								goto IL_0158;
							case 14:
								goto IL_0180;
							case 15:
								goto IL_01ae;
							case 16:
								goto IL_01b7;
							case 17:
								goto IL_01c9;
							case 18:
								goto IL_01cf;
							case 19:
							case 20:
								goto IL_01e0;
							case 21:
								goto IL_01f1;
							case 22:
								goto IL_0210;
							case 23:
								goto IL_022c;
							case 24:
								goto end_IL_0001_2;
							default:
								goto end_IL_0001;
							case 25:
								goto end_IL_0001_3;
							}
							goto default;
						}
						IL_01f1:
						num2 = 21;
						dataViewGrid.Columns[0].Width = 130;
						goto IL_0210;
						IL_0210:
						num2 = 22;
						dataViewGrid.Columns[1].Width = 60;
						goto IL_022c;
						IL_01e0:
						num2 = 20;
						dataViewGrid.DataSource = dataTable;
						goto IL_01f1;
						IL_022c:
						num2 = 23;
						dataViewGrid.Columns[2].Width = 120;
						break;
						IL_000b:
						num2 = 2;
						dataTable = new DataTable("temp");
						goto IL_0019;
						IL_0019:
						num2 = 3;
						dataTable.Columns.Add("الرقم");
						goto IL_002d;
						IL_002d:
						num2 = 4;
						dataTable.Columns.Add("المبلغ");
						goto IL_0041;
						IL_0041:
						num2 = 5;
						dataTable.Columns.Add("التاريخ");
						goto IL_0055;
						IL_0055:
						num2 = 6;
						objDataTabletemp = objData.QueryDatabase("SELECT mobnum , evalue , xdate FROM orngtransfers where  accname = '" + txtOtransACC.Text.Trim() + "' and enums = " + txtOtransTN.Text.Trim() + " order by mobnum , xdate");
						goto IL_00b1;
						IL_00b1:
						num2 = 7;
						num5 = 0;
						goto IL_00b6;
						IL_00b6:
						num2 = 8;
						if (objDataTabletemp.Rows.Count > 0)
						{
							goto IL_00d4;
						}
						goto IL_01e0;
						IL_00d4:
						num2 = 9;
						num6 = objDataTabletemp.Rows.Count - 1;
						num7 = 0;
						goto IL_01d6;
						IL_01d6:
						if (num7 <= num6)
						{
							goto IL_00f2;
						}
						goto IL_01e0;
						IL_00f2:
						num2 = 10;
						dataRow = dataTable.NewRow();
						goto IL_00fe;
						IL_00fe:
						num2 = 11;
						dataRow[0] = RuntimeHelpers.GetObjectValue(objDataTabletemp.Rows[num7][0]);
						goto IL_0126;
						IL_0126:
						num2 = 12;
						dataRow[1] = Conversion.Val(RuntimeHelpers.GetObjectValue(objDataTabletemp.Rows[num7][1]));
						goto IL_0158;
						IL_0158:
						num2 = 13;
						dataRow[2] = RuntimeHelpers.GetObjectValue(objDataTabletemp.Rows[num7][2]);
						goto IL_0180;
						IL_0180:
						num2 = 14;
						txtOTotalTransQ.Text = Conversions.ToString(Conversion.Val(txtOTotalTransQ.Text) + 1.0);
						goto IL_01ae;
						IL_01ae:
						num2 = 15;
						num5++;
						goto IL_01b7;
						IL_01b7:
						num2 = 16;
						dataTable.Rows.Add(dataRow);
						goto IL_01c9;
						IL_01c9:
						num2 = 17;
						dataRow = null;
						goto IL_01cf;
						IL_01cf:
						num2 = 18;
						num7++;
						goto IL_01d6;
						end_IL_0001_2:
						break;
					}
					num2 = 24;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 714;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnBalGetEts_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		lblProgress.Text = "Get Balance";
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			lblBal1.Text = "#";
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			lblBal2.Text = "#";
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			lblBal3.Text = "#";
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			lblBal4.Text = "#";
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			lblBal5.Text = "#";
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			lblBal6.Text = "#";
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			lblBal1.Text = GetBalVCRealEts(lblPort1);
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			lblBal2.Text = GetBalVCRealEts(lblPort2);
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			lblBal3.Text = GetBalVCRealEts(lblPort3);
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			lblBal4.Text = GetBalVCRealEts(lblPort4);
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			lblBal5.Text = GetBalVCRealEts(lblPort5);
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			lblBal6.Text = GetBalVCRealEts(lblPort6);
		}
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btnSA3edhmReg_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 291:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_002d;
						case 5:
						case 6:
							goto IL_0057;
						case 7:
							goto IL_006a;
						case 8:
							goto IL_007d;
						case 9:
							goto IL_0086;
						case 10:
							goto IL_0096;
						case 11:
							goto IL_00a4;
						case 12:
							goto IL_00ae;
						case 13:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 14:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0096:
					num2 = 10;
					Thread.Sleep(1000);
					goto IL_00a4;
					IL_00a4:
					num2 = 11;
					EnableCntl();
					goto IL_00ae;
					IL_0086:
					num2 = 9;
					SetUssdOrderSa3ed(txtUssd);
					goto IL_0096;
					IL_00ae:
					num2 = 12;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if (txtSA3edhmNum.Text.Trim().Length != 11)
					{
						goto IL_002d;
					}
					goto IL_0057;
					IL_002d:
					num2 = 3;
					txtInfo.Text = "ادخل رقم صحيح للاضافة فى قائمة ساعدهم\r\n" + txtInfo.Text;
					goto end_IL_0001_3;
					IL_0057:
					num2 = 6;
					lblProgress.BackColor = Color.Red;
					goto IL_006a;
					IL_006a:
					num2 = 7;
					lblProgress.Text = "اشتراك فى ساعدهم";
					goto IL_007d;
					IL_007d:
					num2 = 8;
					DisableCntl();
					goto IL_0086;
					end_IL_0001_2:
					break;
				}
				num2 = 13;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 291;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnSA3edhmRAdd_Click(object sender, EventArgs e)
	{
		if (txtSA3edhmNum.Text.Trim().Length != 11)
		{
			txtInfo.Text = "ادخل رقم صحيح للاضافة فى قائمة ساعدهم\r\n" + txtInfo.Text;
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "اضافة الى ساعدهم";
		DisableCntl();
		SetUssdOrderSa3edAdd(txtUssd);
		Thread.Sleep(1000);
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void txtNumQry_KeyPress(object sender, KeyPressEventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 288:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0020;
						case 4:
							goto IL_0030;
						case 6:
						case 7:
							goto IL_004a;
						case 8:
							goto IL_006b;
						case 9:
							goto IL_0074;
						case 10:
						case 11:
						case 12:
							goto IL_0082;
						case 13:
							goto IL_009c;
						case 14:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
						case 15:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0074:
					num2 = 9;
					GetAllQryBalCh();
					goto IL_0082;
					IL_0082:
					num2 = 12;
					if (Strings.Asc(e.KeyChar) == 8)
					{
						goto end_IL_0001_3;
					}
					goto IL_009c;
					IL_006b:
					num2 = 8;
					GetAllQryBalZ();
					goto IL_0074;
					IL_009c:
					num2 = 13;
					if (!((Strings.Asc(e.KeyChar) < 48) | (Strings.Asc(e.KeyChar) > 57)))
					{
						goto end_IL_0001_3;
					}
					break;
					IL_000b:
					num2 = 2;
					if (Strings.Asc(e.KeyChar) == 13)
					{
						goto IL_0020;
					}
					goto IL_0082;
					IL_0020:
					num2 = 3;
					if (MysqlConn.MainProgLic < 3)
					{
						goto IL_0030;
					}
					goto IL_004a;
					IL_0030:
					num2 = 4;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_004a:
					num2 = 7;
					if (txtNumQry.Text.Trim().Length == 11)
					{
						goto IL_006b;
					}
					goto IL_0082;
					end_IL_0001_2:
					break;
				}
				num2 = 14;
				e.KeyChar = '\0';
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 288;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnSaveAS_Click(object sender, EventArgs e)
	{
		string text = "";
		string text2 = "X_" + DateAndTime.Today.Month + "_" + DateAndTime.Today.Day;
		if (Strings.Len(text2) > 2)
		{
			text = OpensaveAs(text2);
			if (Operators.CompareString(text, "", TextCompare: false) != 0)
			{
				lblSavePath.Text = text.Trim('s').Trim('l').Trim('x')
					.Trim('.');
			}
		}
	}

	private void btnExport2_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						string text = "";
						double num3 = 0.0;
						double num4 = 0.0;
						double num5 = 1.0;
						if (lblSavePath.Text.Length > 1)
						{
							Cursor = Cursors.WaitCursor;
							object objectValue = RuntimeHelpers.GetObjectValue(Interaction.CreateObject("EXCEL.APPLICATION"));
							object objectValue2 = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(NewLateBinding.LateGet(objectValue, null, "Workbooks", new object[0], null, null, null), null, "Open", new object[1] { Application.StartupPath + "\\reports\\xyz3.xls" }, null, null, null));
							NewLateBinding.LateSet(objectValue, null, "DisplayAlerts", new object[1] { false }, null, null);
							object objectValue3 = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(objectValue2, null, "Worksheets", new object[1] { "Sheet1" }, null, null, null));
							for (num3 = 0.0; !(num3 > (double)(lstQryNumbers.Items.Count - 1)); num3 += 1.0)
							{
								NewLateBinding.LateSetComplex(NewLateBinding.LateGet(objectValue3, null, "Range", new object[1] { "A" + num5 }, null, null, null), null, "Value", new object[1] { lstQryNumbers.Items[(int)Math.Round(num3)] }, null, null, OptimisticSet: false, RValueBase: true);
								NewLateBinding.LateSetComplex(NewLateBinding.LateGet(objectValue3, null, "Range", new object[1] { "B" + num5 }, null, null, null), null, "Value", new object[1] { lstQryBal.Items[(int)Math.Round(num3)] }, null, null, OptimisticSet: false, RValueBase: true);
								num5 += 1.0;
							}
							num5 += 1.0;
							num5 += 1.0;
							NewLateBinding.LateSetComplex(NewLateBinding.LateGet(objectValue3, null, "Range", new object[1] { "A" + num5 }, null, null, null), null, "Value", new object[1] { "اجمالى" }, null, null, OptimisticSet: false, RValueBase: true);
							NewLateBinding.LateSetComplex(NewLateBinding.LateGet(objectValue3, null, "Range", new object[1] { "B" + num5 }, null, null, null), null, "Value", new object[1] { lblQryTotal.Text }, null, null, OptimisticSet: false, RValueBase: true);
							if (num5 > 1.0)
							{
								NewLateBinding.LateCall(objectValue2, null, "SaveAs", new object[1] { lblSavePath.Text + ".xls" }, null, null, null, IgnoreReturn: true);
							}
							else
							{
								Interaction.MsgBox("لا توجد اى ارقام ", MsgBoxStyle.Critical);
							}
							NewLateBinding.LateCall(objectValue2, null, "Close", new object[0], null, null, null, IgnoreReturn: true);
							releaseObject(RuntimeHelpers.GetObjectValue(objectValue));
							releaseObject(RuntimeHelpers.GetObjectValue(objectValue2));
							releaseObject(RuntimeHelpers.GetObjectValue(objectValue3));
							objectValue = null;
							Cursor = Cursors.Default;
							if (num5 > 3.0)
							{
								Interaction.MsgBox("تم تصدير جميع الارقام بنجاح", MsgBoxStyle.Information);
							}
						}
						goto end_IL_0001;
					}
					case 919:
						num = -1;
						switch (num2)
						{
						case 2:
							Cursor = Cursors.Default;
							Interaction.MsgBox("حدث خطء", MsgBoxStyle.Critical);
							goto end_IL_0001;
						}
						break;
					}
				}
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 919;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void releaseObject(object obj)
	{
		try
		{
			Marshal.ReleaseComObject(RuntimeHelpers.GetObjectValue(obj));
			obj = null;
		}
		catch (Exception ex)
		{
			ProjectData.SetProjectError(ex);
			Exception ex2 = ex;
			obj = null;
			ProjectData.ClearProjectError();
		}
		finally
		{
			if (obj != null)
			{
				int generation = GC.GetGeneration(RuntimeHelpers.GetObjectValue(obj));
				GC.Collect(generation);
			}
			else
			{
				GC.Collect();
				GC.WaitForPendingFinalizers();
			}
		}
	}

	private void btnSA3edhmRDell_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 192:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0031;
						case 5:
							goto IL_003a;
						case 6:
							goto IL_0049;
						case 7:
							goto IL_0056;
						case 8:
							goto IL_005f;
						case 9:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 10:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0049:
					num2 = 6;
					Thread.Sleep(1000);
					goto IL_0056;
					IL_0056:
					num2 = 7;
					EnableCntl();
					goto IL_005f;
					IL_003a:
					num2 = 5;
					SetUssdOrderSa3edDell(txtUssd);
					goto IL_0049;
					IL_005f:
					num2 = 8;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "حذف من ساعدهم";
					goto IL_0031;
					IL_0031:
					num2 = 4;
					DisableCntl();
					goto IL_003a;
					end_IL_0001_2:
					break;
				}
				num2 = 9;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 192;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnSA3edhmTrans_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 585:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0048;
						case 5:
						case 6:
							goto IL_0072;
						case 7:
							goto IL_0098;
						case 9:
						case 10:
							goto IL_00c2;
						case 11:
							goto IL_00d6;
						case 12:
							goto IL_00ea;
						case 13:
							goto IL_00f4;
						case 14:
						case 20:
							goto IL_0109;
						case 15:
							goto IL_0137;
						case 16:
							goto IL_0147;
						case 17:
							goto IL_0155;
						case 19:
							goto IL_016b;
						case 18:
						case 21:
						case 22:
							goto IL_019e;
						case 23:
							goto IL_01a8;
						case 24:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 8:
						case 25:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_016b:
					num2 = 19;
					if (Conversion.Val(txtLoopSSD.Text) < Conversion.Val(txtLoopFSD.Text))
					{
						goto IL_0109;
					}
					goto IL_019e;
					IL_019e:
					num2 = 22;
					EnableCntl();
					goto IL_01a8;
					IL_0155:
					num2 = 17;
					if (!chkStop.Checked)
					{
						goto IL_016b;
					}
					goto IL_019e;
					IL_01a8:
					num2 = 23;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if ((Conversion.Val(txtSa3edhmV.Text) < 5.0) | (Conversion.Val(txtSa3edhmV.Text) > 50.0))
					{
						goto IL_0048;
					}
					goto IL_0072;
					IL_0048:
					num2 = 3;
					txtInfo.Text = " ادخل المبلغ المراد تحويلة من 5 الى 50 جنية\r\n" + txtInfo.Text;
					goto end_IL_0001_3;
					IL_0072:
					num2 = 6;
					if (Conversion.Val(txtSA3edhmReq.Text) <= 0.0)
					{
						goto IL_0098;
					}
					goto IL_00c2;
					IL_0098:
					num2 = 7;
					txtInfo.Text = " ادخل مسلسل الخط المطلوب التحويل لة\r\n" + txtInfo.Text;
					goto end_IL_0001_3;
					IL_00c2:
					num2 = 10;
					lblProgress.BackColor = Color.Red;
					goto IL_00d6;
					IL_00d6:
					num2 = 11;
					lblProgress.Text = "تحويل بواسطة ساعدهم";
					goto IL_00ea;
					IL_00ea:
					num2 = 12;
					DisableCntl();
					goto IL_00f4;
					IL_00f4:
					num2 = 13;
					txtLoopSSD.Text = "0";
					goto IL_0109;
					IL_0109:
					num2 = 14;
					txtLoopSSD.Text = Conversions.ToString(Conversion.Val(txtLoopSSD.Text) + 1.0);
					goto IL_0137;
					IL_0137:
					num2 = 15;
					SetUssdOrderSa3edTransfer(txtUssd);
					goto IL_0147;
					IL_0147:
					num2 = 16;
					Thread.Sleep(1000);
					goto IL_0155;
					end_IL_0001_2:
					break;
				}
				num2 = 24;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 585;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnViewSa3edList_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 223:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0031;
						case 5:
							goto IL_003a;
						case 6:
							goto IL_0043;
						case 7:
							goto IL_0052;
						case 8:
							goto IL_005b;
						case 9:
							goto IL_0068;
						case 10:
							goto IL_0072;
						case 11:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 12:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_005b:
					num2 = 8;
					Thread.Sleep(1000);
					goto IL_0068;
					IL_0068:
					num2 = 9;
					EnableCntl();
					goto IL_0072;
					IL_0052:
					num2 = 7;
					ReSetUssdOrder();
					goto IL_005b;
					IL_0072:
					num2 = 10;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "ارقام ساعدهم";
					goto IL_0031;
					IL_0031:
					num2 = 4;
					DisableCntl();
					goto IL_003a;
					IL_003a:
					num2 = 5;
					ClearStoredSa3ed();
					goto IL_0043;
					IL_0043:
					num2 = 6;
					SetUssdOrderSa3edDellView(txtUssd);
					goto IL_0052;
					end_IL_0001_2:
					break;
				}
				num2 = 11;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 223;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnSA3edhmCancel_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 168:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0031;
						case 5:
							goto IL_003a;
						case 6:
							goto IL_0043;
						case 7:
							goto IL_004c;
						case 8:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 9:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_003a:
					num2 = 5;
					ReSetUssdOrder();
					goto IL_0043;
					IL_0043:
					num2 = 6;
					EnableCntl();
					goto IL_004c;
					IL_0031:
					num2 = 4;
					DisableCntl();
					goto IL_003a;
					IL_004c:
					num2 = 7;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "حذف من ساعدهم";
					goto IL_0031;
					end_IL_0001_2:
					break;
				}
				num2 = 8;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 168;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnChkOK_Click(object sender, EventArgs e)
	{
		CkStoredSa3ed();
	}

	private void BtnTransGiftAuto_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 2822:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_000f;
						case 4:
							goto IL_001f;
						case 6:
						case 7:
							goto IL_0039;
						case 8:
							goto IL_0059;
						case 10:
						case 11:
							goto IL_006f;
						case 12:
							goto IL_00c0;
						case 14:
						case 15:
							goto IL_00d7;
						case 16:
							goto IL_00eb;
						case 17:
							goto IL_00ff;
						case 18:
							goto IL_0109;
						case 19:
							goto IL_0120;
						case 20:
							goto IL_0144;
						case 21:
							goto IL_0158;
						case 22:
						case 23:
							goto IL_016e;
						case 24:
							goto IL_0192;
						case 25:
							goto IL_01a6;
						case 26:
						case 27:
							goto IL_01bc;
						case 28:
							goto IL_01e0;
						case 29:
							goto IL_01f4;
						case 30:
						case 31:
							goto IL_020a;
						case 32:
							goto IL_022e;
						case 33:
							goto IL_0242;
						case 34:
						case 35:
							goto IL_0258;
						case 36:
							goto IL_027c;
						case 37:
							goto IL_0290;
						case 38:
						case 39:
							goto IL_02a6;
						case 40:
							goto IL_02ca;
						case 41:
							goto IL_02de;
						case 42:
						case 43:
						case 44:
						case 104:
							goto IL_02f7;
						case 45:
							goto IL_02fe;
						case 47:
							goto IL_0365;
						case 48:
							goto IL_03b7;
						case 49:
							goto IL_03c4;
						case 50:
							goto IL_03d4;
						case 51:
							goto IL_03ed;
						case 52:
							goto IL_03fd;
						case 53:
							goto IL_042f;
						case 54:
							goto IL_0446;
						case 55:
						case 56:
							goto IL_044d;
						case 57:
							goto IL_049f;
						case 58:
							goto IL_04ac;
						case 59:
							goto IL_04bc;
						case 60:
							goto IL_04d5;
						case 61:
							goto IL_04e5;
						case 62:
							goto IL_0517;
						case 63:
							goto IL_052e;
						case 64:
						case 65:
							goto IL_0535;
						case 66:
							goto IL_0587;
						case 67:
							goto IL_0594;
						case 68:
							goto IL_05a4;
						case 69:
							goto IL_05bd;
						case 70:
							goto IL_05cd;
						case 71:
							goto IL_05ff;
						case 72:
							goto IL_0616;
						case 73:
						case 74:
							goto IL_061d;
						case 75:
							goto IL_066f;
						case 76:
							goto IL_067c;
						case 77:
							goto IL_068c;
						case 78:
							goto IL_06a5;
						case 79:
							goto IL_06b5;
						case 80:
							goto IL_06e7;
						case 81:
							goto IL_06fe;
						case 82:
						case 83:
							goto IL_0705;
						case 84:
							goto IL_0757;
						case 85:
							goto IL_0764;
						case 86:
							goto IL_0774;
						case 87:
							goto IL_078d;
						case 88:
							goto IL_079d;
						case 89:
							goto IL_07cf;
						case 90:
							goto IL_07e6;
						case 91:
						case 92:
							goto IL_07ed;
						case 93:
							goto IL_083f;
						case 94:
							goto IL_084c;
						case 95:
							goto IL_085c;
						case 96:
							goto IL_0875;
						case 97:
							goto IL_0885;
						case 98:
							goto IL_08b7;
						case 99:
							goto IL_08ce;
						case 100:
						case 101:
							goto IL_08d5;
						case 103:
							goto IL_08eb;
						case 105:
							goto IL_0901;
						case 46:
						case 102:
						case 106:
							goto IL_090b;
						case 107:
							goto IL_0915;
						case 108:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
						case 9:
						case 13:
						case 109:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0901:
					num2 = 105;
					Application.DoEvents();
					goto IL_090b;
					IL_090b:
					num2 = 106;
					EnableCntl();
					goto IL_0915;
					IL_08eb:
					num2 = 103;
					if (num5 <= 35)
					{
						goto IL_02f7;
					}
					goto IL_0901;
					IL_0915:
					num2 = 107;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_000f;
					IL_000f:
					num2 = 3;
					if (MysqlConn.MainProgLic < 6)
					{
						goto IL_001f;
					}
					goto IL_0039;
					IL_001f:
					num2 = 4;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0039:
					num2 = 7;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0059;
					}
					goto IL_006f;
					IL_0059:
					num2 = 8;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_006f:
					num2 = 11;
					if ((txtTransNum2.Text.Trim().Length != 11) & (txtTransNum2Con.Text.Trim().Length != 11) & !chkChargeOnSame.Checked)
					{
						goto IL_00c0;
					}
					goto IL_00d7;
					IL_00c0:
					num2 = 12;
					Interaction.MsgBox("ادخل رقم الخط المراد تحويل الهدايا له");
					goto end_IL_0001_3;
					IL_00d7:
					num2 = 15;
					lblProgress.BackColor = Color.Red;
					goto IL_00eb;
					IL_00eb:
					num2 = 16;
					lblProgress.Text = "تحويل الهدية رصيد";
					goto IL_00ff;
					IL_00ff:
					num2 = 17;
					DisableCntl();
					goto IL_0109;
					IL_0109:
					num2 = 18;
					if (ckTrans.Checked)
					{
						goto IL_0120;
					}
					goto IL_02f7;
					IL_0120:
					num2 = 19;
					if (Conversion.Val(lblGiftV1.Text) == 0.0)
					{
						goto IL_0144;
					}
					goto IL_016e;
					IL_0144:
					num2 = 20;
					lblGiftV1.Text = "5";
					goto IL_0158;
					IL_0158:
					num2 = 21;
					lblGifts01.Text = "1";
					goto IL_016e;
					IL_016e:
					num2 = 23;
					if (Conversion.Val(lblGiftV2.Text) == 0.0)
					{
						goto IL_0192;
					}
					goto IL_01bc;
					IL_0192:
					num2 = 24;
					lblGiftV2.Text = "5";
					goto IL_01a6;
					IL_01a6:
					num2 = 25;
					lblGifts02.Text = "1";
					goto IL_01bc;
					IL_01bc:
					num2 = 27;
					if (Conversion.Val(lblGiftV3.Text) == 0.0)
					{
						goto IL_01e0;
					}
					goto IL_020a;
					IL_01e0:
					num2 = 28;
					lblGiftV3.Text = "5";
					goto IL_01f4;
					IL_01f4:
					num2 = 29;
					lblGifts03.Text = "1";
					goto IL_020a;
					IL_020a:
					num2 = 31;
					if (Conversion.Val(lblGiftV4.Text) == 0.0)
					{
						goto IL_022e;
					}
					goto IL_0258;
					IL_022e:
					num2 = 32;
					lblGiftV4.Text = "5";
					goto IL_0242;
					IL_0242:
					num2 = 33;
					lblGifts04.Text = "1";
					goto IL_0258;
					IL_0258:
					num2 = 35;
					if (Conversion.Val(lblGiftV5.Text) == 0.0)
					{
						goto IL_027c;
					}
					goto IL_02a6;
					IL_027c:
					num2 = 36;
					lblGiftV5.Text = "5";
					goto IL_0290;
					IL_0290:
					num2 = 37;
					lblGifts05.Text = "1";
					goto IL_02a6;
					IL_02a6:
					num2 = 39;
					if (Conversion.Val(lblGiftV6.Text) == 0.0)
					{
						goto IL_02ca;
					}
					goto IL_02f7;
					IL_02ca:
					num2 = 40;
					lblGiftV6.Text = "5";
					goto IL_02de;
					IL_02de:
					num2 = 41;
					lblGifts06.Text = "1";
					goto IL_02f7;
					IL_02f7:
					num2 = 44;
					num5 = checked(num5 + 1);
					goto IL_02fe;
					IL_02fe:
					num2 = 45;
					if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						goto IL_0365;
					}
					goto IL_090b;
					IL_0365:
					num2 = 47;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked & (Conversion.Val(lblGiftV1.Text) > 0.0))
					{
						goto IL_03b7;
					}
					goto IL_044d;
					IL_03b7:
					num2 = 48;
					if (num5 == 4)
					{
						goto IL_03c4;
					}
					goto IL_03d4;
					IL_03c4:
					num2 = 49;
					ResetUssdCodeVC(lblPort1);
					goto IL_03d4;
					IL_03d4:
					num2 = 50;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_03ed;
					}
					goto IL_03fd;
					IL_03ed:
					num2 = 51;
					ResetUssdCode(lblPort1);
					goto IL_03fd;
					IL_03fd:
					num2 = 52;
					SetUssdOrderVcashTraVXPVaryGift(lblPort1, checked((int)Math.Round(Conversion.Val(lblGiftV1.Text))), num5, txtTransNum2.Text);
					goto IL_042f;
					IL_042f:
					num2 = 53;
					if (!chkCh1.Checked)
					{
						goto IL_0446;
					}
					goto IL_044d;
					IL_0446:
					num2 = 54;
					num5 = 0;
					goto IL_044d;
					IL_044d:
					num2 = 56;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked & (Conversion.Val(lblGiftV2.Text) > 0.0))
					{
						goto IL_049f;
					}
					goto IL_0535;
					IL_049f:
					num2 = 57;
					if (num5 == 4)
					{
						goto IL_04ac;
					}
					goto IL_04bc;
					IL_04ac:
					num2 = 58;
					ResetUssdCodeVC(lblPort2);
					goto IL_04bc;
					IL_04bc:
					num2 = 59;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_04d5;
					}
					goto IL_04e5;
					IL_04d5:
					num2 = 60;
					ResetUssdCode(lblPort2);
					goto IL_04e5;
					IL_04e5:
					num2 = 61;
					SetUssdOrderVcashTraVXPVaryGift(lblPort2, checked((int)Math.Round(Conversion.Val(lblGiftV2.Text))), num5, txtTransNum2.Text);
					goto IL_0517;
					IL_0517:
					num2 = 62;
					if (!chkCh2.Checked)
					{
						goto IL_052e;
					}
					goto IL_0535;
					IL_052e:
					num2 = 63;
					num5 = 0;
					goto IL_0535;
					IL_0535:
					num2 = 65;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked & (Conversion.Val(lblGiftV3.Text) > 0.0))
					{
						goto IL_0587;
					}
					goto IL_061d;
					IL_0587:
					num2 = 66;
					if (num5 == 4)
					{
						goto IL_0594;
					}
					goto IL_05a4;
					IL_0594:
					num2 = 67;
					ResetUssdCodeVC(lblPort3);
					goto IL_05a4;
					IL_05a4:
					num2 = 68;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_05bd;
					}
					goto IL_05cd;
					IL_05bd:
					num2 = 69;
					ResetUssdCode(lblPort3);
					goto IL_05cd;
					IL_05cd:
					num2 = 70;
					SetUssdOrderVcashTraVXPVaryGift(lblPort3, checked((int)Math.Round(Conversion.Val(lblGiftV3.Text))), num5, txtTransNum2.Text);
					goto IL_05ff;
					IL_05ff:
					num2 = 71;
					if (!chkCh3.Checked)
					{
						goto IL_0616;
					}
					goto IL_061d;
					IL_0616:
					num2 = 72;
					num5 = 0;
					goto IL_061d;
					IL_061d:
					num2 = 74;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked & (Conversion.Val(lblGiftV4.Text) > 0.0))
					{
						goto IL_066f;
					}
					goto IL_0705;
					IL_066f:
					num2 = 75;
					if (num5 == 4)
					{
						goto IL_067c;
					}
					goto IL_068c;
					IL_067c:
					num2 = 76;
					ResetUssdCodeVC(lblPort4);
					goto IL_068c;
					IL_068c:
					num2 = 77;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_06a5;
					}
					goto IL_06b5;
					IL_06a5:
					num2 = 78;
					ResetUssdCode(lblPort4);
					goto IL_06b5;
					IL_06b5:
					num2 = 79;
					SetUssdOrderVcashTraVXPVaryGift(lblPort4, checked((int)Math.Round(Conversion.Val(lblGiftV4.Text))), num5, txtTransNum2.Text);
					goto IL_06e7;
					IL_06e7:
					num2 = 80;
					if (!chkCh4.Checked)
					{
						goto IL_06fe;
					}
					goto IL_0705;
					IL_06fe:
					num2 = 81;
					num5 = 0;
					goto IL_0705;
					IL_0705:
					num2 = 83;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked & (Conversion.Val(lblGiftV5.Text) > 0.0))
					{
						goto IL_0757;
					}
					goto IL_07ed;
					IL_0757:
					num2 = 84;
					if (num5 == 4)
					{
						goto IL_0764;
					}
					goto IL_0774;
					IL_0764:
					num2 = 85;
					ResetUssdCodeVC(lblPort5);
					goto IL_0774;
					IL_0774:
					num2 = 86;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_078d;
					}
					goto IL_079d;
					IL_078d:
					num2 = 87;
					ResetUssdCode(lblPort5);
					goto IL_079d;
					IL_079d:
					num2 = 88;
					SetUssdOrderVcashTraVXPVaryGift(lblPort5, checked((int)Math.Round(Conversion.Val(lblGiftV5.Text))), num5, txtTransNum2.Text);
					goto IL_07cf;
					IL_07cf:
					num2 = 89;
					if (!chkCh5.Checked)
					{
						goto IL_07e6;
					}
					goto IL_07ed;
					IL_07e6:
					num2 = 90;
					num5 = 0;
					goto IL_07ed;
					IL_07ed:
					num2 = 92;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked & (Conversion.Val(lblGiftV6.Text) > 0.0))
					{
						goto IL_083f;
					}
					goto IL_08d5;
					IL_083f:
					num2 = 93;
					if (num5 == 4)
					{
						goto IL_084c;
					}
					goto IL_085c;
					IL_084c:
					num2 = 94;
					ResetUssdCodeVC(lblPort6);
					goto IL_085c;
					IL_085c:
					num2 = 95;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_0875;
					}
					goto IL_0885;
					IL_0875:
					num2 = 96;
					ResetUssdCode(lblPort6);
					goto IL_0885;
					IL_0885:
					num2 = 97;
					SetUssdOrderVcashTraVXPVaryGift(lblPort6, checked((int)Math.Round(Conversion.Val(lblGiftV6.Text))), num5, txtTransNum2.Text);
					goto IL_08b7;
					IL_08b7:
					num2 = 98;
					if (!chkCh6.Checked)
					{
						goto IL_08ce;
					}
					goto IL_08d5;
					IL_08ce:
					num2 = 99;
					num5 = 0;
					goto IL_08d5;
					IL_08d5:
					num2 = 101;
					if (!chkStop.Checked)
					{
						goto IL_08eb;
					}
					goto IL_090b;
					end_IL_0001_2:
					break;
				}
				num2 = 108;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 2822;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string OpensaveAs(string tempFilename)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string result = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 234:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0031;
						case 5:
							goto IL_0040;
						case 6:
							goto IL_004f;
						case 7:
							goto IL_0065;
						case 8:
							goto IL_0080;
						case 10:
						case 11:
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 9:
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_004f:
					num2 = 6;
					if (SFD.ShowDialog() != DialogResult.OK)
					{
						break;
					}
					goto IL_0065;
					IL_0065:
					num2 = 7;
					if (Strings.Len(SFD.FileName) <= 2)
					{
						break;
					}
					goto IL_0080;
					IL_0040:
					num2 = 5;
					SFD.FileName = tempFilename;
					goto IL_004f;
					IL_0080:
					num2 = 8;
					result = SFD.FileName;
					goto end_IL_0001_3;
					IL_000b:
					num2 = 2;
					SFD.Title = "Save File AS";
					goto IL_001e;
					IL_001e:
					num2 = 3;
					SFD.Filter = "Excel - (*.xls)|*.xls";
					goto IL_0031;
					IL_0031:
					num2 = 4;
					SFD.FilterIndex = 1;
					goto IL_0040;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				result = "";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 234;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void txtMoney_KeyPress(object sender, KeyPressEventArgs e)
	{
		if (Strings.Asc(e.KeyChar) != 8 && ((Strings.Asc(e.KeyChar) < 48) | (Strings.Asc(e.KeyChar) > 57)))
		{
			e.KeyChar = '\0';
		}
	}

	private void txtSa3edhmV_KeyPress(object sender, KeyPressEventArgs e)
	{
		if (Strings.Asc(e.KeyChar) != 8 && ((Strings.Asc(e.KeyChar) < 48) | (Strings.Asc(e.KeyChar) > 57)))
		{
			e.KeyChar = '\0';
		}
	}

	private void txtSA3edhmReq_KeyPress(object sender, KeyPressEventArgs e)
	{
		if (Strings.Asc(e.KeyChar) != 8 && ((Strings.Asc(e.KeyChar) < 48) | (Strings.Asc(e.KeyChar) > 57)))
		{
			e.KeyChar = '\0';
		}
	}

	private void txtSA3edhmNum_KeyPress(object sender, KeyPressEventArgs e)
	{
		if (Strings.Asc(e.KeyChar) != 8 && ((Strings.Asc(e.KeyChar) < 48) | (Strings.Asc(e.KeyChar) > 57)))
		{
			e.KeyChar = '\0';
		}
	}

	private void SetUssdOrderVcashTraVXPVaryGift(Label Exxc, int EEs, int Retnum, string Etransnumberto)
	{
		SetUssdOrderVcashTraVXPVaryGiftNormal(Exxc, EEs, Etransnumberto);
	}

	private void SetUssdOrderVcashTraVXPVaryPoints(Label Exxc, int EEs, int Retnum, string Etransnumberto, CheckBox Ech, TextBox txtInfx)
	{
		SetUssdOrderVcashTraVXPVaryGiftPoints(Exxc, EEs, Etransnumberto, Ech, txtInfx);
	}

	private void SetUssdOrderVcashTraVXPVaryGiftPoints(Label Exxc, int EEs, string Etransnumberto, CheckBox Ech, TextBox txtInfx)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						AutoRes = 0;
						string ussdCommandFull = "9";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(1300);
						string text = serialPort.ReadExisting();
						int num3 = 0;
						while (true)
						{
							num3++;
							if (num3 >= 8)
							{
								break;
							}
							ussdCommandFull = "*7000*3*" + Etransnumberto + "*" + Conversions.ToString(EEs) + "#";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							lblProgress.Text = "Read " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							Application.DoEvents();
							Application.DoEvents();
							string text2 = "#";
							string text3 = "#";
							string text4 = "#";
							string left = "#";
							int num4 = 0;
							do
							{
								Thread.Sleep(700);
								text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (Operators.CompareString(text, "", TextCompare: false) == 0)
								{
									if ((Operators.CompareString(text, "", TextCompare: false) == 0) & (Operators.CompareString(text2, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
									{
										Application.DoEvents();
									}
									else
									{
										left = text4;
										text4 = text3;
										text3 = text2;
										text2 = text;
									}
								}
								else
								{
									text2 = "#";
									text3 = "#";
									text4 = "#";
									left = "#";
									if (text.Contains("0050006C006500610073006500200069006E007300650072007400200061002000760061006C0069006400200061006E0073007700650072002E002E000A06440627064A0648062C062F002006310635064A062F002006430627064106490020064A") | text.Contains("064406270020064A0648062C062F002006310635064A062F00"))
									{
										DisablePortdonnt(Exxc);
										OutBoxDrop(Exxc, "لا يوجد رصيد كافى للتحويل");
										Application.DoEvents();
										break;
									}
									if (text.Contains("+CUSD: "))
									{
										string text5 = text;
										int num5 = text.IndexOf("+CUSD: ");
										text5 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
											.Trim('\r')
											.Trim('\r')
											.Trim();
										num5 = text5.IndexOf(",");
										string text6 = text5.Substring(0, num5).Trim().Trim('"')
											.Trim(',')
											.Trim('"');
										text6 = text6.Trim('"').Trim(',').Trim('"');
										if (text6.Length > 3)
										{
											string text7;
											if (Operators.CompareString(text6.Substring(0, 1), "0", TextCompare: false) == 0)
											{
												byte[] bytes = encoding_mod.StrToByteArray(text6);
												text7 = Encoding.BigEndianUnicode.GetString(bytes);
											}
											else
											{
												text7 = encoding_mod.Decode7Bit(text6);
											}
											OutBoxDrop(Exxc, text7);
											if (text7.Contains("لرقم السري غير صحيح. برجاء اعادة المحاولة"))
											{
												DisablePortdonnt(Exxc);
												Application.DoEvents();
												break;
											}
											if (text7.Contains("ادخل الرقم السري باللغة الانجليزية"))
											{
												object obj = txtPass.Text ?? "";
												if (obj == null)
												{
													obj = "";
												}
												ussdCommandFull = (string)obj;
												commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
												serialPort.WriteLine(commandCode + "\r");
												Thread.Sleep(500);
												Application.DoEvents();
											}
											if (text7.Contains("تم شحن"))
											{
												Thread.Sleep(500);
												Ech.Checked = false;
												txtInfx.Text += "\r\nتم شحن بنجاح";
												break;
											}
											if (text7.Contains("لا يمكن"))
											{
												ussdCommandFull = "9";
												commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
												serialPort.WriteLine(commandCode + "\r");
												Thread.Sleep(500);
												break;
											}
											if (text7.Contains("الرقم السري غير صحيح برجاء اعادة المحاولة"))
											{
												DisablePortdonnt(Exxc);
												Application.DoEvents();
												break;
											}
										}
									}
									if (text.Contains("0031003A064406270633062A062E062F062706450020003"))
									{
										ussdCommandFull = "1";
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(500);
										Application.DoEvents();
									}
									if (text.Contains("0633064A062A06450020062E06350645002006450628064406"))
									{
										object obj2 = txtPass.Text ?? "";
										if (obj2 == null)
										{
											obj2 = "";
										}
										ussdCommandFull = (string)obj2;
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(500);
										Application.DoEvents();
									}
									if (text.Contains("062A064500200634062D06460020063106"))
									{
										Thread.Sleep(500);
										Ech.Checked = false;
										txtInfx.Text += "\r\nتم شحن بنجاح";
										Application.DoEvents();
										break;
									}
									if (text.Contains("+CUSD: 5") | text.Contains("ERROR") | text.Contains("unknown") | text.Contains("retry operation") | text.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
									{
										goto IL_0670;
									}
								}
								Application.DoEvents();
								num4++;
							}
							while (num4 <= 10);
							break;
							IL_0670:
							Thread.Sleep(500);
							Application.DoEvents();
						}
						break;
					}
					case 1721:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj3) when (obj3 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj3);
				try0001_dispatch = 1721;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVcashTraVXPVaryGiftNormal(Label Exxc, int EEs, string Etransnumberto)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						AutoRes = 0;
						string ussdCommandFull = "9";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(1300);
						string text = serialPort.ReadExisting();
						int num3 = 0;
						while (true)
						{
							num3++;
							ussdCommandFull = (chkChargeOnSame.Checked ? ("*7000*0*" + Conversions.ToString(EEs) + "#") : ("*7000*3*" + Etransnumberto + "*" + Conversions.ToString(EEs) + "#"));
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							while (true)
							{
								lblProgress.Text = "TopUp " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
								Application.DoEvents();
								Application.DoEvents();
								string text2 = "#";
								string text3 = "#";
								string text4 = "#";
								string left = "#";
								int num4 = 0;
								while (true)
								{
									Thread.Sleep(700);
									text = serialPort.ReadExisting();
									if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
									{
										txtInfo.Text = text + "\r\n" + txtInfo.Text;
									}
									if (Operators.CompareString(text, "", TextCompare: false) == 0)
									{
										if ((Operators.CompareString(text, "", TextCompare: false) == 0) & (Operators.CompareString(text2, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
										{
											break;
										}
										left = text4;
										text4 = text3;
										text3 = text2;
										text2 = text;
									}
									else
									{
										text2 = "#";
										text3 = "#";
										text4 = "#";
										left = "#";
									}
									if (text.Contains("0050006C006500610073006500200069006E007300650072007400200061002000760061006C0069006400200061006E0073007700650072002E002E000A06440627064A0648062C062F002006310635064A062F002006430627064106490020064A") | text.Contains("064406270020064A0648062C062F002006310635064A062F00"))
									{
										DisablePortdonnt(Exxc);
										OutBoxDrop(Exxc, "لا يوجد رصيد كافى للتحويل");
										Application.DoEvents();
										goto end_IL_0001;
									}
									if (text.Contains("+CUSD: "))
									{
										string text5 = text;
										int num5 = text.IndexOf("+CUSD: ");
										text5 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
											.Trim('\r')
											.Trim('\r')
											.Trim();
										num5 = text5.IndexOf(",");
										string text6 = text5.Substring(0, num5).Trim().Trim('"')
											.Trim(',')
											.Trim('"');
										text6 = text6.Trim('"').Trim(',').Trim('"');
										if (text6.Length > 3)
										{
											string text7;
											if (Operators.CompareString(text6.Substring(0, 1), "0", TextCompare: false) == 0)
											{
												byte[] bytes = encoding_mod.StrToByteArray(text6);
												text7 = Encoding.BigEndianUnicode.GetString(bytes);
											}
											else
											{
												text7 = encoding_mod.Decode7Bit(text6);
											}
											OutBoxDrop(Exxc, text7);
											if (text7.Contains("لرقم السري غير صحيح. برجاء اعادة المحاولة") | text7.Contains("ادخل الرقم السري باللغة الانجليزية لتأكيد خصم"))
											{
												ussdCommandFull = "9";
												commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
												serialPort.WriteLine(commandCode + "\r");
												Thread.Sleep(500);
												DisablePortdonnt(Exxc);
												Application.DoEvents();
												goto end_IL_0001;
											}
											if (text7.Contains("لاستخدام"))
											{
												goto IL_04bd;
											}
											if (text7.Contains("تم شحن"))
											{
												ussdCommandFull = "9";
												commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
												serialPort.WriteLine(commandCode + "\r");
												AddToRemoteDB_TOPUP(GetNumberByPort(Exxc.Text), Etransnumberto, EEs);
												Thread.Sleep(500);
												DisablePort(Exxc);
												goto end_IL_0001;
											}
											if (text7.Contains("لا يمكن"))
											{
												ussdCommandFull = "9";
												commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
												serialPort.WriteLine(commandCode + "\r");
												Thread.Sleep(500);
												goto end_IL_0001;
											}
										}
									}
									if (text.Contains("0031003A064406270633062A062E062F062706450020003"))
									{
										ussdCommandFull = "1";
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(500);
										Application.DoEvents();
									}
									if (text.Contains("0633064A062A06450020062E06350645002006450628064406"))
									{
										object obj = txtPass.Text ?? "";
										if (obj == null)
										{
											obj = "";
										}
										ussdCommandFull = (string)obj;
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(500);
										Application.DoEvents();
									}
									if (text.Contains("062A064500200634062D06460020063106"))
									{
										ussdCommandFull = "9";
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(500);
										AddToRemoteDB_TOPUP(GetNumberByPort(Exxc.Text), Etransnumberto, EEs);
										OutBoxDrop(Exxc, "تم التحويل بنجاح");
										DisablePort(Exxc);
										Application.DoEvents();
										goto end_IL_0001;
									}
									if (text.Contains("+CUSD: 5") | text.Contains("ERROR") | text.Contains("unknown") | text.Contains("retry operation") | text.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
									{
										Application.DoEvents();
										goto end_IL_0001;
									}
									Application.DoEvents();
									num4++;
									if (num4 > 7)
									{
										goto end_IL_0001;
									}
								}
								break;
								IL_04bd:
								ussdCommandFull = "1";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(500);
							}
							Application.DoEvents();
							if (num3 <= 2)
							{
								Thread.Sleep(1000);
								continue;
							}
							break;
						}
						break;
					}
					case 1835:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_2;
							}
							break;
						}
						end_IL_0001:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj2) when (obj2 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj2);
				try0001_dispatch = 1835;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVcashTraVXPVaryGiftTosame(Label Exxc, int EEs)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						AutoRes = 0;
						string ussdCommandFull = "9";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(1300);
						string text = serialPort.ReadExisting();
						int num3 = 0;
						while (true)
						{
							num3++;
							ussdCommandFull = "*7000*0*" + Conversions.ToString(EEs) + "#";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							lblProgress.Text = "Read " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							Application.DoEvents();
							Application.DoEvents();
							string text2 = "#";
							string text3 = "#";
							string text4 = "#";
							string left = "#";
							int num4 = 0;
							while (true)
							{
								Thread.Sleep(700);
								text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (Operators.CompareString(text, "", TextCompare: false) == 0)
								{
									if ((Operators.CompareString(text, "", TextCompare: false) == 0) & (Operators.CompareString(text2, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
									{
										break;
									}
									left = text4;
									text4 = text3;
									text3 = text2;
									text2 = text;
								}
								else
								{
									text2 = "#";
									text3 = "#";
									text4 = "#";
									left = "#";
								}
								if (text.Contains("0050006C006500610073006500200069006E007300650072007400200061002000760061006C0069006400200061006E0073007700650072002E002E000A06440627064A0648062C062F002006310635064A062F002006430627064106490020064A") | text.Contains("064406270020064A0648062C062F002006310635064A062F00"))
								{
									DisablePortdonnt(Exxc);
									OutBoxDrop(Exxc, "لا يوجد رصيد كافى للتحويل");
									Application.DoEvents();
									goto end_IL_0001;
								}
								if (text.Contains("+CUSD: "))
								{
									string text5 = text;
									int num5 = text.IndexOf("+CUSD: ");
									text5 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text5.IndexOf(",");
									string text6 = text5.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text6 = text6.Trim('"').Trim(',').Trim('"');
									if (text6.Length > 3)
									{
										string text7;
										if (Operators.CompareString(text6.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text6);
											text7 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text7 = encoding_mod.Decode7Bit(text6);
										}
										OutBoxDrop(Exxc, text7);
										if (text7.Contains("لرقم السري غير صحيح. برجاء اعادة المحاولة"))
										{
											DisablePortdonnt(Exxc);
											Application.DoEvents();
											goto end_IL_0001;
										}
										if (text7.Contains("تم شحن"))
										{
											ussdCommandFull = "9";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(500);
											goto end_IL_0001;
										}
										if (text7.Contains("لا يمكن"))
										{
											ussdCommandFull = "9";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(500);
											goto end_IL_0001;
										}
										if (text7.Contains("ادخل الرقم السري باللغة"))
										{
											object obj = txtPass.Text ?? "";
											if (obj == null)
											{
												obj = "";
											}
											ussdCommandFull = (string)obj;
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(500);
											Application.DoEvents();
										}
										if (text7.Contains("الرقم السري غير صحيح برجاء اعادة المحاولة"))
										{
											DisablePortdonnt(Exxc);
											Application.DoEvents();
											goto end_IL_0001;
										}
									}
								}
								if (text.Contains("0031003A064406270633062A062E062F062706450020003"))
								{
									ussdCommandFull = "1";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
								}
								if (text.Contains("0633064A062A06450020062E06350645002006450628064406"))
								{
									object obj2 = txtPass.Text ?? "";
									if (obj2 == null)
									{
										obj2 = "";
									}
									ussdCommandFull = (string)obj2;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
								}
								if (text.Contains("062A064500200634062D06460020063106"))
								{
									ussdCommandFull = "9";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									DisablePort(Exxc);
									Application.DoEvents();
									goto end_IL_0001;
								}
								if (text.Contains("+CUSD: 5") | text.Contains("ERROR") | text.Contains("unknown") | text.Contains("retry operation") | text.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
								{
									Application.DoEvents();
									goto end_IL_0001;
								}
								Application.DoEvents();
								num4++;
								if (num4 > 7)
								{
									goto end_IL_0001;
								}
							}
							Application.DoEvents();
							if (num3 <= 2)
							{
								Thread.Sleep(1000);
								continue;
							}
							break;
						}
						break;
					}
					case 1701:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_2;
							}
							break;
						}
						end_IL_0001:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj3) when (obj3 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj3);
				try0001_dispatch = 1701;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVcashTraVXPVaryGiftAll(Label Exxc, string Etransnumberto)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						AutoRes = 0;
						int num3 = 0;
						int num4 = 200;
						string ussdCommandFull = "9";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(1300);
						string text = serialPort.ReadExisting();
						int num5 = 0;
						while (true)
						{
							num5++;
							ussdCommandFull = (chkChargeOnSame.Checked ? ("*7000*0*" + Conversions.ToString(num4) + "#") : ("*7000*3*" + Etransnumberto + "*" + Conversions.ToString(num4) + "#"));
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							lblProgress.Text = "Read " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num5) + ")";
							Application.DoEvents();
							Application.DoEvents();
							string text2 = "#";
							string text3 = "#";
							string text4 = "#";
							string left = "#";
							int num6 = 0;
							while (true)
							{
								Thread.Sleep(700);
								text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (Operators.CompareString(text, "", TextCompare: false) == 0)
								{
									if ((Operators.CompareString(text, "", TextCompare: false) == 0) & (Operators.CompareString(text2, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
									{
										break;
									}
									left = text4;
									text4 = text3;
									text3 = text2;
									text2 = text;
								}
								else
								{
									text2 = "#";
									text3 = "#";
									text4 = "#";
									left = "#";
								}
								if (text.Contains("0050006C006500610073006500200069006E007300650072007400200061002000760061006C0069006400200061006E0073007700650072002E002E000A06440627064A0648062C062F002006310635064A062F002006430627064106490020064A") | text.Contains("064406270020064A0648062C062F002006310635064A062F00"))
								{
									DisablePortdonnt(Exxc);
									OutBoxDrop(Exxc, "لا يوجد رصيد كافى للتحويل");
									Application.DoEvents();
									goto end_IL_0001;
								}
								if (text.Contains("+CUSD: "))
								{
									string text5 = text;
									int num7 = text.IndexOf("+CUSD: ");
									text5 = text.Substring(num7 + 10, text.Length - num7 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num7 = text5.IndexOf(",");
									string text6 = text5.Substring(0, num7).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text6 = text6.Trim('"').Trim(',').Trim('"');
									if (text6.Length > 3)
									{
										string text7;
										if (Operators.CompareString(text6.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text6);
											text7 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text7 = encoding_mod.Decode7Bit(text6);
										}
										OutBoxDrop(Exxc, text7);
										if (text7.Contains("ج من الكاش باك"))
										{
											int num8 = text7.IndexOf("ج من الك");
											int num9 = text7.IndexOf("تخدام");
											num3 = (int)Math.Round(Conversion.Val(text7.Substring(num9 + 6, num8 - num9 - 7).Trim('"')));
											if (num3 != num4)
											{
												goto IL_04fb;
											}
											ussdCommandFull = "1";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(500);
											Application.DoEvents();
											goto IL_078f;
										}
										if (text7.Contains("لرقم السري غير صحيح. برجاء اعادة المحاولة") | text7.Contains("ادخل الرقم السري باللغة الانجليزية لتأكيد خصم"))
										{
											ussdCommandFull = "9";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(500);
											DisablePortdonnt(Exxc);
											Application.DoEvents();
											goto end_IL_0001;
										}
										if (text7.Contains("تم شحن"))
										{
											ussdCommandFull = "9";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(500);
											DisablePort(Exxc);
											goto end_IL_0001;
										}
										if (text7.Contains("لا يمكن"))
										{
											ussdCommandFull = "9";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(500);
											goto end_IL_0001;
										}
										if (text7.Contains("الرقم السري غير صحيح برجاء اعادة المحاولة"))
										{
											DisablePortdonnt(Exxc);
											Application.DoEvents();
											goto end_IL_0001;
										}
									}
								}
								if (text.Contains("0031003A064406270633062A062E062F062706450020003"))
								{
									ussdCommandFull = "1";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
								}
								if (text.Contains("0633064A062A06450020062E06350645002006450628064406"))
								{
									object obj = txtPass.Text ?? "";
									if (obj == null)
									{
										obj = "";
									}
									ussdCommandFull = (string)obj;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
								}
								if (text.Contains("062A064500200634062D06460020063106"))
								{
									ussdCommandFull = "9";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									DisablePort(Exxc);
									Application.DoEvents();
									goto end_IL_0001;
								}
								if (text.Contains("+CUSD: 5") | text.Contains("ERROR") | text.Contains("unknown") | text.Contains("retry operation") | text.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
								{
									Application.DoEvents();
									goto end_IL_0001;
								}
								Application.DoEvents();
								goto IL_078f;
								IL_078f:
								num6++;
								if (num6 > 7)
								{
									goto end_IL_0001;
								}
							}
							Application.DoEvents();
							if (num5 <= 2)
							{
								Thread.Sleep(1000);
								continue;
							}
							break;
							IL_04fb:
							num4 = num3;
							serialPort.WriteLine("AT+CUSD=2\r");
							Thread.Sleep(1000);
							text = serialPort.ReadExisting();
							Thread.Sleep(500);
						}
						break;
					}
					case 1978:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_2;
							}
							break;
						}
						end_IL_0001:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj2) when (obj2 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj2);
				try0001_dispatch = 1978;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVcashTraVXPVaryGift_9_10(Label Exxc, int EEs, string Etransnumberto)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num7 = default(int);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						AutoRes = 0;
						string ussdCommandFull = "9";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(1300);
						string text = serialPort.ReadExisting();
						int num3 = 0;
						while (true)
						{
							num3++;
							ussdCommandFull = "*9*10#";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							lblProgress.Text = "Read " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							Application.DoEvents();
							Application.DoEvents();
							string text2 = "#";
							string text3 = "#";
							string text4 = "#";
							string left = "#";
							int num4 = 0;
							while (true)
							{
								Thread.Sleep(700);
								text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (Operators.CompareString(text, "", TextCompare: false) == 0)
								{
									if ((Operators.CompareString(text, "", TextCompare: false) == 0) & (Operators.CompareString(text2, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
									{
										break;
									}
									left = text4;
									text4 = text3;
									text3 = text2;
									text2 = text;
								}
								else
								{
									text2 = "#";
									text3 = "#";
									text4 = "#";
									left = "#";
								}
								if (text.Contains("0050006C006500610073006500200069006E007300650072007400200061002000760061006C0069006400200061006E0073007700650072002E002E000A06440627064A0648062C062F002006310635064A062F002006430627064106490020064A") | text.Contains("064406270020064A0648062C062F002006310635064A062F00"))
								{
									DisablePortdonnt(Exxc);
									OutBoxDrop(Exxc, "لا يوجد رصيد كافى للتحويل");
									Application.DoEvents();
									goto end_IL_0001;
								}
								if (text.Contains("+CUSD: "))
								{
									string text5 = text;
									int num5 = text.IndexOf("+CUSD: ");
									text5 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text5.IndexOf(",");
									string text6 = text5.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text6 = text6.Trim('"').Trim(',').Trim('"');
									if (text6.Length > 3)
									{
										string text7;
										if (Operators.CompareString(text6.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text6);
											text7 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text7 = encoding_mod.Decode7Bit(text6);
										}
										OutBoxDrop(Exxc, text7);
										if (text7.Contains("تم شحن"))
										{
											ussdCommandFull = "9";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(500);
											DisablePort(Exxc);
											goto end_IL_0001;
										}
										if (text7.Contains("لا يمكن"))
										{
											ussdCommandFull = "9";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(500);
											goto end_IL_0001;
										}
										if (text7.Contains("الرقم السري غير صحيح برجاء اعادة المحاولة"))
										{
											DisablePortdonnt(Exxc);
											Application.DoEvents();
											goto end_IL_0001;
										}
									}
								}
								if (text.Contains("0634062D0646002006310635064A062F003A000A0031002E0631064206450649"))
								{
									ussdCommandFull = (chkChargeOnSame.Checked ? "1" : "2");
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
									text2 = "#";
									text3 = "#";
									text4 = "#";
									left = "#";
								}
								else if (text.Contains("06280631062C0627062100200627062F062E06270644002006310642064500"))
								{
									object obj = Etransnumberto ?? "";
									if (obj == null)
									{
										obj = "";
									}
									ussdCommandFull = (string)obj;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
									text2 = "#";
									text3 = "#";
									text4 = "#";
									left = "#";
								}
								else if (text.Contains("0633064A062A06450020062706440634062D06460020064406440631"))
								{
									ussdCommandFull = "1";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
									text2 = "#";
									text3 = "#";
									text4 = "#";
									left = "#";
								}
								else if (text.Contains("064506460020064106360644064300200627062F062E06440020064506280644063A0020"))
								{
									object obj2 = Conversions.ToString(EEs) ?? "";
									if (obj2 == null)
									{
										obj2 = "";
									}
									ussdCommandFull = (string)obj2;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
									text2 = "#";
									text3 = "#";
									text4 = "#";
									left = "#";
								}
								else if (text.Contains("0031003A064406270633062A062E062F06270645002000350020062C0020"))
								{
									ussdCommandFull = "1";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
									text2 = "#";
									text3 = "#";
									text4 = "#";
									left = "#";
								}
								else if (text.Contains("0633064A062A06450020062E06350645002006450628064406"))
								{
									object obj3 = txtPass.Text ?? "";
									if (obj3 == null)
									{
										obj3 = "";
									}
									ussdCommandFull = (string)obj3;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
									text2 = "#";
									text3 = "#";
									text4 = "#";
									left = "#";
								}
								else
								{
									if (text.Contains("062A06450020062A062D0648064A06440020"))
									{
										ussdCommandFull = "9";
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(500);
										DisablePort(Exxc);
										Application.DoEvents();
										goto end_IL_0001;
									}
									if (text.Contains("+CME ERROR: 10"))
									{
										AutoRes++;
										if (chkStop.Checked)
										{
											goto end_IL_0001;
										}
										if ((AutoRes >= 3) & chkAutoRes.Checked)
										{
											while (true)
											{
												OutBoxDrop(Exxc, "جارى اعادة التشغيل للمودم");
												OutBoxDropNumber(Exxc);
												Application.DoEvents();
												RestartModem(Exxc.Text);
												int num6 = 0;
												while (true)
												{
													Thread.Sleep(250);
													if (chkStop.Checked)
													{
														break;
													}
													Application.DoEvents();
													num6++;
													if (num6 <= 40)
													{
														continue;
													}
													goto IL_0873;
												}
												break;
												IL_0873:
												OutBoxDrop(Exxc, "جارى البحث عن الشريحة ");
												TryToIdntyThisModem(Exxc);
												Thread.Sleep(250);
												if (chkStop.Checked)
												{
													break;
												}
												Application.DoEvents();
												if (Exxc.ForeColor != Color.White)
												{
													OutOfgetnumber(Exxc);
													break;
												}
												if (num7 <= 3)
												{
													num7++;
													continue;
												}
												break;
											}
											goto end_IL_0001;
										}
									}
									if (text.Contains("+CUSD: 5") | text.Contains("unknown") | text.Contains("retry operation") | text.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
									{
										Application.DoEvents();
										goto end_IL_0001;
									}
								}
								Application.DoEvents();
								num4++;
								if (num4 > 25)
								{
									object obj4 = txtPass.Text ?? "";
									if (obj4 == null)
									{
										obj4 = "";
									}
									ussdCommandFull = (string)obj4;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
									goto end_IL_0001;
								}
							}
							Application.DoEvents();
							if (num3 <= 2)
							{
								Thread.Sleep(1000);
								continue;
							}
							break;
						}
						break;
					}
					case 2479:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_2;
							}
							break;
						}
						end_IL_0001:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj5) when (obj5 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj5);
				try0001_dispatch = 2479;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void BtnAutoVCnorm_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 6)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Conversion.Val(txtMonyMn.Text) < 5.0)
		{
			Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
			return;
		}
		if (txtCashNextMaster.Text.Trim().Length != 11)
		{
			Interaction.MsgBox("حدد رقم كاش لسحب الرصيد علية - الاساسى التالى");
			return;
		}
		if ((txtTransNum2.Text.Trim().Length != 11) & !chkChargeOnSame.Checked)
		{
			Interaction.MsgBox("ادخل رقم الخط المراد تحويل الهدايا له");
			return;
		}
		if (chkChargeOnSame.Checked)
		{
			int num = (int)Interaction.MsgBox("هل تريد شحن الهدايا على نفس خط الكاش", MsgBoxStyle.YesNo | MsgBoxStyle.Question);
			if (num == 7)
			{
				return;
			}
		}
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh1.Checked = false;
		}
		if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh2.Checked = false;
		}
		if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh3.Checked = false;
		}
		if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh4.Checked = false;
		}
		if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh5.Checked = false;
		}
		if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh6.Checked = false;
		}
		lblGifts01.Text = "0";
		lblGifts02.Text = "0";
		lblGifts03.Text = "0";
		lblGifts04.Text = "0";
		lblGifts05.Text = "0";
		lblGifts06.Text = "0";
		lblGiftV1.Text = "0";
		lblGiftV2.Text = "0";
		lblGiftV3.Text = "0";
		lblGiftV4.Text = "0";
		lblGiftV5.Text = "0";
		lblGiftV6.Text = "0";
		if (chkStop.Checked)
		{
			return;
		}
		btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		Application.DoEvents();
		btnTransToNm_Click(RuntimeHelpers.GetObjectValue(sender), e);
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		Application.DoEvents();
		btnTransFromNm_Click(RuntimeHelpers.GetObjectValue(sender), e);
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		Application.DoEvents();
		btnRun02_Click(RuntimeHelpers.GetObjectValue(sender), e);
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		Application.DoEvents();
		if (Conversion.Val(lblGifts01.Text) >= 1.0)
		{
			chkCh1.Checked = true;
		}
		else
		{
			chkCh1.Checked = false;
		}
		if (Conversion.Val(lblGifts02.Text) >= 1.0)
		{
			chkCh2.Checked = true;
		}
		else
		{
			chkCh2.Checked = false;
		}
		if (Conversion.Val(lblGifts03.Text) >= 1.0)
		{
			chkCh3.Checked = true;
		}
		else
		{
			chkCh3.Checked = false;
		}
		if (Conversion.Val(lblGifts04.Text) >= 1.0)
		{
			chkCh4.Checked = true;
		}
		else
		{
			chkCh4.Checked = false;
		}
		if (Conversion.Val(lblGifts05.Text) >= 1.0)
		{
			chkCh5.Checked = true;
		}
		else
		{
			chkCh5.Checked = false;
		}
		if (Conversion.Val(lblGifts06.Text) >= 1.0)
		{
			chkCh6.Checked = true;
		}
		else
		{
			chkCh6.Checked = false;
		}
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		Application.DoEvents();
		BtnTransGiftAuto_Click(RuntimeHelpers.GetObjectValue(sender), e);
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		if (chkTransferAllNormalVoda.Checked)
		{
			btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
			Application.DoEvents();
			BtnTransGiftAutoNorm_Click(RuntimeHelpers.GetObjectValue(sender), e);
			Application.DoEvents();
			if (chkStop.Checked)
			{
				return;
			}
		}
		lblMain.Text = txtCashNextMaster.Text;
		txtCashNextMaster.Text = "";
		Application.DoEvents();
		Application.DoEvents();
		if (chbeep.Checked)
		{
			EEmosemove = false;
			while (!EEmosemove)
			{
				Interaction.Beep();
				Application.DoEvents();
			}
		}
		txtCashNextMaster.Focus();
	}

	private void BtnAutoVCnormEC_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		double num6 = default(double);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				int num5;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 2419:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_000f;
						case 4:
							goto IL_001f;
						case 6:
						case 7:
							goto IL_0039;
						case 8:
							goto IL_0059;
						case 10:
						case 11:
							goto IL_006f;
						case 12:
							goto IL_008c;
						case 14:
						case 15:
							goto IL_00a3;
						case 16:
							goto IL_00c7;
						case 18:
						case 19:
							goto IL_00de;
						case 20:
							goto IL_00f2;
						case 21:
							goto IL_00fd;
						case 22:
							goto IL_0107;
						case 23:
							goto IL_011b;
						case 24:
							goto IL_0142;
						case 25:
							goto IL_0156;
						case 26:
							goto IL_017a;
						case 27:
							goto IL_0190;
						case 28:
							goto IL_01b9;
						case 29:
						case 30:
							goto IL_01c4;
						case 31:
							goto IL_01cd;
						case 32:
							goto IL_01e1;
						case 33:
							goto IL_0205;
						case 34:
							goto IL_021b;
						case 35:
							goto IL_0244;
						case 36:
						case 37:
							goto IL_024f;
						case 38:
							goto IL_0258;
						case 39:
							goto IL_026c;
						case 40:
							goto IL_0290;
						case 41:
							goto IL_02a6;
						case 42:
							goto IL_02cf;
						case 43:
						case 44:
							goto IL_02da;
						case 45:
							goto IL_02e3;
						case 46:
							goto IL_02f7;
						case 47:
							goto IL_031b;
						case 48:
							goto IL_0331;
						case 49:
							goto IL_035a;
						case 50:
						case 51:
							goto IL_0365;
						case 52:
							goto IL_036e;
						case 53:
							goto IL_0382;
						case 54:
							goto IL_03a6;
						case 55:
							goto IL_03bc;
						case 56:
							goto IL_03e5;
						case 57:
						case 58:
							goto IL_03f0;
						case 59:
							goto IL_03f9;
						case 60:
							goto IL_040d;
						case 61:
							goto IL_0431;
						case 62:
							goto IL_0447;
						case 63:
							goto IL_0470;
						case 66:
							goto IL_0482;
						case 67:
							goto IL_0496;
						case 68:
							goto IL_04ab;
						case 69:
							goto IL_04c1;
						case 70:
							goto IL_04ea;
						case 71:
						case 72:
							goto IL_04f5;
						case 73:
							goto IL_04fe;
						case 74:
							goto IL_0512;
						case 75:
							goto IL_0527;
						case 76:
							goto IL_053d;
						case 77:
							goto IL_0566;
						case 78:
						case 79:
							goto IL_0571;
						case 80:
							goto IL_057a;
						case 81:
							goto IL_058e;
						case 82:
							goto IL_05a3;
						case 83:
							goto IL_05b9;
						case 84:
							goto IL_05e2;
						case 85:
						case 86:
							goto IL_05ed;
						case 87:
							goto IL_05f6;
						case 88:
							goto IL_060a;
						case 89:
							goto IL_061f;
						case 90:
							goto IL_0635;
						case 91:
							goto IL_065e;
						case 92:
						case 93:
							goto IL_0669;
						case 94:
							goto IL_0672;
						case 95:
							goto IL_0686;
						case 96:
							goto IL_069b;
						case 97:
							goto IL_06b1;
						case 98:
							goto IL_06da;
						case 99:
						case 100:
							goto IL_06e5;
						case 101:
							goto IL_06ee;
						case 102:
							goto IL_0702;
						case 103:
							goto IL_0717;
						case 104:
							goto IL_072d;
						case 105:
							goto IL_0756;
						case 64:
						case 65:
						case 106:
						case 107:
						case 108:
							goto IL_0763;
						case 109:
							goto IL_076c;
						case 110:
							goto IL_0776;
						case 111:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
						case 9:
						case 13:
						case 17:
						case 112:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0763:
					num2 = 108;
					Application.DoEvents();
					goto IL_076c;
					IL_076c:
					num2 = 109;
					EnableCntl();
					goto IL_0776;
					IL_0756:
					num2 = 105;
					Application.DoEvents();
					goto IL_0763;
					IL_0776:
					num2 = 110;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_000f;
					IL_000f:
					num2 = 3;
					if (MysqlConn.MainProgLic < 6)
					{
						goto IL_001f;
					}
					goto IL_0039;
					IL_001f:
					num2 = 4;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0039:
					num2 = 7;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0059;
					}
					goto IL_006f;
					IL_0059:
					num2 = 8;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_006f:
					num2 = 11;
					if (txtCashNextMasterEC.Text.Length < 11)
					{
						goto IL_008c;
					}
					goto IL_00a3;
					IL_008c:
					num2 = 12;
					Interaction.MsgBox("حدد الرقم المستقبل من فضلك");
					goto end_IL_0001_3;
					IL_00a3:
					num2 = 15;
					if (txtPassEC.Text.Trim().Length != 6)
					{
						goto IL_00c7;
					}
					goto IL_00de;
					IL_00c7:
					num2 = 16;
					Interaction.MsgBox("ادخل باسورد الكاش");
					goto end_IL_0001_3;
					IL_00de:
					num2 = 19;
					lblProgress.BackColor = Color.Red;
					goto IL_00f2;
					IL_00f2:
					num2 = 20;
					DisableCntl();
					goto IL_00fd;
					IL_00fd:
					num2 = 21;
					ReSetUssdOrder();
					goto IL_0107;
					IL_0107:
					num2 = 22;
					lblProgress.Text = "تحويل اتصالات كاش ";
					goto IL_011b;
					IL_011b:
					num2 = 23;
					if (Conversion.Val(txtMonyMnEC.Text) < 1.0)
					{
						goto IL_0142;
					}
					goto IL_0482;
					IL_0142:
					num2 = 24;
					if (chkCh1.Checked)
					{
						goto IL_0156;
					}
					goto IL_01c4;
					IL_0156:
					num2 = 25;
					num6 = Conversion.Fix(Conversion.Val(lblBal1.Text)) - 2.0;
					goto IL_017a;
					IL_017a:
					num2 = 26;
					if (num6 > 5.0)
					{
						goto IL_0190;
					}
					goto IL_01b9;
					IL_0190:
					num2 = 27;
					ApplyUssdCodeEC_Mex(lblPort1, txtCashNextMasterEC.Text, num6, TempCheck, TempCheck);
					goto IL_01b9;
					IL_01b9:
					num2 = 28;
					Application.DoEvents();
					goto IL_01c4;
					IL_01c4:
					num2 = 30;
					Application.DoEvents();
					goto IL_01cd;
					IL_01cd:
					num2 = 31;
					if (chkCh2.Checked)
					{
						goto IL_01e1;
					}
					goto IL_024f;
					IL_01e1:
					num2 = 32;
					num6 = Conversion.Fix(Conversion.Val(lblBal2.Text)) - 2.0;
					goto IL_0205;
					IL_0205:
					num2 = 33;
					if (num6 > 5.0)
					{
						goto IL_021b;
					}
					goto IL_0244;
					IL_021b:
					num2 = 34;
					ApplyUssdCodeEC_Mex(lblPort2, txtCashNextMasterEC.Text, num6, TempCheck, TempCheck);
					goto IL_0244;
					IL_0244:
					num2 = 35;
					Application.DoEvents();
					goto IL_024f;
					IL_024f:
					num2 = 37;
					Application.DoEvents();
					goto IL_0258;
					IL_0258:
					num2 = 38;
					if (chkCh3.Checked)
					{
						goto IL_026c;
					}
					goto IL_02da;
					IL_026c:
					num2 = 39;
					num6 = Conversion.Fix(Conversion.Val(lblBal3.Text)) - 2.0;
					goto IL_0290;
					IL_0290:
					num2 = 40;
					if (num6 > 5.0)
					{
						goto IL_02a6;
					}
					goto IL_02cf;
					IL_02a6:
					num2 = 41;
					ApplyUssdCodeEC_Mex(lblPort3, txtCashNextMasterEC.Text, num6, TempCheck, TempCheck);
					goto IL_02cf;
					IL_02cf:
					num2 = 42;
					Application.DoEvents();
					goto IL_02da;
					IL_02da:
					num2 = 44;
					Application.DoEvents();
					goto IL_02e3;
					IL_02e3:
					num2 = 45;
					if (chkCh4.Checked)
					{
						goto IL_02f7;
					}
					goto IL_0365;
					IL_02f7:
					num2 = 46;
					num6 = Conversion.Fix(Conversion.Val(lblBal4.Text)) - 2.0;
					goto IL_031b;
					IL_031b:
					num2 = 47;
					if (num6 > 5.0)
					{
						goto IL_0331;
					}
					goto IL_035a;
					IL_0331:
					num2 = 48;
					ApplyUssdCodeEC_Mex(lblPort4, txtCashNextMasterEC.Text, num6, TempCheck, TempCheck);
					goto IL_035a;
					IL_035a:
					num2 = 49;
					Application.DoEvents();
					goto IL_0365;
					IL_0365:
					num2 = 51;
					Application.DoEvents();
					goto IL_036e;
					IL_036e:
					num2 = 52;
					if (chkCh5.Checked)
					{
						goto IL_0382;
					}
					goto IL_03f0;
					IL_0382:
					num2 = 53;
					num6 = Conversion.Fix(Conversion.Val(lblBal5.Text)) - 2.0;
					goto IL_03a6;
					IL_03a6:
					num2 = 54;
					if (num6 > 5.0)
					{
						goto IL_03bc;
					}
					goto IL_03e5;
					IL_03bc:
					num2 = 55;
					ApplyUssdCodeEC_Mex(lblPort5, txtCashNextMasterEC.Text, num6, TempCheck, TempCheck);
					goto IL_03e5;
					IL_03e5:
					num2 = 56;
					Application.DoEvents();
					goto IL_03f0;
					IL_03f0:
					num2 = 58;
					Application.DoEvents();
					goto IL_03f9;
					IL_03f9:
					num2 = 59;
					if (chkCh6.Checked)
					{
						goto IL_040d;
					}
					goto IL_0763;
					IL_040d:
					num2 = 60;
					num6 = Conversion.Fix(Conversion.Val(lblBal6.Text)) - 2.0;
					goto IL_0431;
					IL_0431:
					num2 = 61;
					if (num6 > 5.0)
					{
						goto IL_0447;
					}
					goto IL_0470;
					IL_0447:
					num2 = 62;
					ApplyUssdCodeEC_Mex(lblPort6, txtCashNextMasterEC.Text, num6, TempCheck, TempCheck);
					goto IL_0470;
					IL_0470:
					num2 = 63;
					Application.DoEvents();
					goto IL_0763;
					IL_0482:
					num2 = 66;
					if (chkCh1.Checked)
					{
						goto IL_0496;
					}
					goto IL_04f5;
					IL_0496:
					num2 = 67;
					num6 = Conversion.Val(txtMonyMnEC.Text);
					goto IL_04ab;
					IL_04ab:
					num2 = 68;
					if (num6 > 2.0)
					{
						goto IL_04c1;
					}
					goto IL_04ea;
					IL_04c1:
					num2 = 69;
					ApplyUssdCodeEC_Mex(lblPort1, txtCashNextMasterEC.Text, num6, TempCheck, TempCheck);
					goto IL_04ea;
					IL_04ea:
					num2 = 70;
					Application.DoEvents();
					goto IL_04f5;
					IL_04f5:
					num2 = 72;
					Application.DoEvents();
					goto IL_04fe;
					IL_04fe:
					num2 = 73;
					if (chkCh2.Checked)
					{
						goto IL_0512;
					}
					goto IL_0571;
					IL_0512:
					num2 = 74;
					num6 = Conversion.Val(txtMonyMnEC.Text);
					goto IL_0527;
					IL_0527:
					num2 = 75;
					if (num6 > 2.0)
					{
						goto IL_053d;
					}
					goto IL_0566;
					IL_053d:
					num2 = 76;
					ApplyUssdCodeEC_Mex(lblPort2, txtCashNextMasterEC.Text, num6, TempCheck, TempCheck);
					goto IL_0566;
					IL_0566:
					num2 = 77;
					Application.DoEvents();
					goto IL_0571;
					IL_0571:
					num2 = 79;
					Application.DoEvents();
					goto IL_057a;
					IL_057a:
					num2 = 80;
					if (chkCh3.Checked)
					{
						goto IL_058e;
					}
					goto IL_05ed;
					IL_058e:
					num2 = 81;
					num6 = Conversion.Val(txtMonyMnEC.Text);
					goto IL_05a3;
					IL_05a3:
					num2 = 82;
					if (num6 > 2.0)
					{
						goto IL_05b9;
					}
					goto IL_05e2;
					IL_05b9:
					num2 = 83;
					ApplyUssdCodeEC_Mex(lblPort3, txtCashNextMasterEC.Text, num6, TempCheck, TempCheck);
					goto IL_05e2;
					IL_05e2:
					num2 = 84;
					Application.DoEvents();
					goto IL_05ed;
					IL_05ed:
					num2 = 86;
					Application.DoEvents();
					goto IL_05f6;
					IL_05f6:
					num2 = 87;
					if (chkCh4.Checked)
					{
						goto IL_060a;
					}
					goto IL_0669;
					IL_060a:
					num2 = 88;
					num6 = Conversion.Val(txtMonyMnEC.Text);
					goto IL_061f;
					IL_061f:
					num2 = 89;
					if (num6 > 2.0)
					{
						goto IL_0635;
					}
					goto IL_065e;
					IL_0635:
					num2 = 90;
					ApplyUssdCodeEC_Mex(lblPort4, txtCashNextMasterEC.Text, num6, TempCheck, TempCheck);
					goto IL_065e;
					IL_065e:
					num2 = 91;
					Application.DoEvents();
					goto IL_0669;
					IL_0669:
					num2 = 93;
					Application.DoEvents();
					goto IL_0672;
					IL_0672:
					num2 = 94;
					if (chkCh5.Checked)
					{
						goto IL_0686;
					}
					goto IL_06e5;
					IL_0686:
					num2 = 95;
					num6 = Conversion.Val(txtMonyMnEC.Text);
					goto IL_069b;
					IL_069b:
					num2 = 96;
					if (num6 > 2.0)
					{
						goto IL_06b1;
					}
					goto IL_06da;
					IL_06b1:
					num2 = 97;
					ApplyUssdCodeEC_Mex(lblPort5, txtCashNextMasterEC.Text, num6, TempCheck, TempCheck);
					goto IL_06da;
					IL_06da:
					num2 = 98;
					Application.DoEvents();
					goto IL_06e5;
					IL_06e5:
					num2 = 100;
					Application.DoEvents();
					goto IL_06ee;
					IL_06ee:
					num2 = 101;
					if (chkCh6.Checked)
					{
						goto IL_0702;
					}
					goto IL_0763;
					IL_0702:
					num2 = 102;
					num6 = Conversion.Val(txtMonyMnEC.Text);
					goto IL_0717;
					IL_0717:
					num2 = 103;
					if (num6 > 2.0)
					{
						goto IL_072d;
					}
					goto IL_0756;
					IL_072d:
					num2 = 104;
					ApplyUssdCodeEC_Mex(lblPort6, txtCashNextMasterEC.Text, num6, TempCheck, TempCheck);
					goto IL_0756;
					end_IL_0001_2:
					break;
				}
				num2 = 111;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 2419;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void BtnGetBal2EC_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 3)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (txtPassEC.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد الكاش");
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "Get Balance";
		DisableCntl();
		ReSetUssdOrder();
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			lblBal1.Text = "#";
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			lblBal2.Text = "#";
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			lblBal3.Text = "#";
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			lblBal4.Text = "#";
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			lblBal5.Text = "#";
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			lblBal6.Text = "#";
		}
		Application.DoEvents();
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			GetBalEC(lblPort1);
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			GetBalEC(lblPort2);
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			GetBalEC(lblPort3);
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			GetBalEC(lblPort4);
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			GetBalEC(lblPort5);
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			GetBalEC(lblPort6);
		}
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			lblBal1.Text = GetBalECX(lblPort1);
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			lblBal2.Text = GetBalECX(lblPort2);
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			lblBal3.Text = GetBalECX(lblPort3);
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			lblBal4.Text = GetBalECX(lblPort4);
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			lblBal5.Text = GetBalECX(lblPort5);
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			lblBal6.Text = GetBalECX(lblPort6);
		}
		Application.DoEvents();
		btnUssdReset_Click(RuntimeHelpers.GetObjectValue(sender), e);
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void BtnAutoVCnormCon_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				Stopwatch stopwatch;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 2337:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0023;
						case 6:
						case 7:
							goto IL_003d;
						case 8:
							goto IL_0060;
						case 10:
						case 11:
							goto IL_0076;
						case 12:
							goto IL_009b;
						case 14:
						case 15:
							goto IL_00b2;
						case 16:
							goto IL_00e6;
						case 18:
						case 19:
							goto IL_00fd;
						case 20:
							goto IL_0111;
						case 21:
							goto IL_011b;
						case 22:
							goto IL_0124;
						case 24:
							goto IL_013d;
						case 25:
							goto IL_0151;
						case 26:
							goto IL_0165;
						case 27:
							goto IL_0179;
						case 28:
							goto IL_018d;
						case 29:
							goto IL_01a1;
						case 30:
							goto IL_01b5;
						case 31:
							goto IL_01c9;
						case 32:
							goto IL_01dd;
						case 33:
							goto IL_01f1;
						case 34:
							goto IL_0205;
						case 35:
							goto IL_0219;
						case 36:
							goto IL_022d;
						case 38:
							goto IL_0246;
						case 39:
							goto IL_0257;
						case 40:
							goto IL_0261;
						case 41:
							goto IL_026b;
						case 42:
							goto IL_0275;
						case 44:
							goto IL_028e;
						case 45:
							goto IL_02af;
						case 46:
							goto IL_02bf;
						case 47:
							goto IL_02d3;
						case 48:
							goto IL_02e7;
						case 49:
							goto IL_02f1;
						case 50:
						case 51:
							goto IL_02fc;
						case 52:
							goto IL_0306;
						case 53:
							goto IL_031a;
						case 54:
							goto IL_0320;
						case 55:
							goto IL_0340;
						case 56:
						case 58:
						case 59:
							goto IL_0363;
						case 61:
							goto IL_037c;
						case 57:
						case 62:
							goto IL_038b;
						case 63:
							goto IL_0394;
						case 65:
							goto IL_03ad;
						case 66:
							goto IL_03be;
						case 67:
							goto IL_03c7;
						case 68:
							goto IL_03d8;
						case 69:
							goto IL_03e1;
						case 71:
							goto IL_03fa;
						case 72:
							goto IL_040b;
						case 73:
							goto IL_0414;
						case 74:
							goto IL_043b;
						case 76:
							goto IL_044f;
						case 75:
						case 77:
						case 78:
							goto IL_0460;
						case 79:
							goto IL_0487;
						case 81:
							goto IL_049b;
						case 80:
						case 82:
						case 83:
							goto IL_04ac;
						case 84:
							goto IL_04d3;
						case 86:
							goto IL_04e7;
						case 85:
						case 87:
						case 88:
							goto IL_04f8;
						case 89:
							goto IL_051f;
						case 91:
							goto IL_0533;
						case 90:
						case 92:
						case 93:
							goto IL_0544;
						case 94:
							goto IL_056b;
						case 96:
							goto IL_057f;
						case 95:
						case 97:
						case 98:
							goto IL_0590;
						case 99:
							goto IL_05b7;
						case 101:
							goto IL_05cb;
						case 100:
						case 102:
						case 103:
							goto IL_05dc;
						case 105:
						case 106:
							goto IL_0642;
						case 107:
							goto IL_064b;
						case 109:
							goto IL_0664;
						case 110:
							goto IL_066d;
						case 111:
							goto IL_067e;
						case 112:
							goto IL_0687;
						case 37:
						case 43:
						case 60:
						case 104:
						case 114:
							goto IL_06a1;
						case 115:
							goto IL_06b2;
						case 116:
							goto IL_06bb;
						case 117:
							goto IL_06d5;
						case 118:
							goto IL_06e9;
						case 119:
							goto IL_06fd;
						case 120:
							goto IL_0711;
						case 121:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
						case 9:
						case 13:
						case 17:
						case 23:
						case 64:
						case 70:
						case 108:
						case 113:
						case 122:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_06e9:
					num2 = 118;
					lblProgress.BackColor = Color.LimeGreen;
					goto IL_06fd;
					IL_06fd:
					num2 = 119;
					lblProgress.Text = "OK";
					goto IL_0711;
					IL_06d5:
					num2 = 117;
					txtCashNextMasterCon.Text = "";
					goto IL_06e9;
					IL_0711:
					num2 = 120;
					EnableCntl();
					break;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					if (MysqlConn.MainProgLic < 6)
					{
						goto IL_0023;
					}
					goto IL_003d;
					IL_0023:
					num2 = 4;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_003d:
					num2 = 7;
					if (Conversion.Val(txtMonyMnCon.Text) < 5.0)
					{
						goto IL_0060;
					}
					goto IL_0076;
					IL_0060:
					num2 = 8;
					Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
					goto end_IL_0001_3;
					IL_0076:
					num2 = 11;
					if (txtCashNextMasterCon.Text.Trim().Length != 11)
					{
						goto IL_009b;
					}
					goto IL_00b2;
					IL_009b:
					num2 = 12;
					Interaction.MsgBox("حدد رقم كاش لسحب الرصيد الية - الاساسى التالى");
					goto end_IL_0001_3;
					IL_00b2:
					num2 = 15;
					if ((txtTransNum2Con.Text.Trim().Length != 11) & !chkChargeOnSame.Checked)
					{
						goto IL_00e6;
					}
					goto IL_00fd;
					IL_00e6:
					num2 = 16;
					Interaction.MsgBox("ادخل رقم الخط المراد تحويل الهدايا له");
					goto end_IL_0001_3;
					IL_00fd:
					num2 = 19;
					lblProgress.BackColor = Color.Red;
					goto IL_0111;
					IL_0111:
					num2 = 20;
					DisableCntl();
					goto IL_011b;
					IL_011b:
					num2 = 21;
					Application.DoEvents();
					goto IL_0124;
					IL_0124:
					num2 = 22;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_013d;
					IL_013d:
					num2 = 24;
					lblGifts01.Text = "0";
					goto IL_0151;
					IL_0151:
					num2 = 25;
					lblGifts02.Text = "0";
					goto IL_0165;
					IL_0165:
					num2 = 26;
					lblGifts03.Text = "0";
					goto IL_0179;
					IL_0179:
					num2 = 27;
					lblGifts04.Text = "0";
					goto IL_018d;
					IL_018d:
					num2 = 28;
					lblGifts05.Text = "0";
					goto IL_01a1;
					IL_01a1:
					num2 = 29;
					lblGifts06.Text = "0";
					goto IL_01b5;
					IL_01b5:
					num2 = 30;
					lblGiftV1.Text = "0";
					goto IL_01c9;
					IL_01c9:
					num2 = 31;
					lblGiftV2.Text = "0";
					goto IL_01dd;
					IL_01dd:
					num2 = 32;
					lblGiftV3.Text = "0";
					goto IL_01f1;
					IL_01f1:
					num2 = 33;
					lblGiftV4.Text = "0";
					goto IL_0205;
					IL_0205:
					num2 = 34;
					lblGiftV5.Text = "0";
					goto IL_0219;
					IL_0219:
					num2 = 35;
					lblGiftV6.Text = "0";
					goto IL_022d;
					IL_022d:
					num2 = 36;
					if (!chkStop.Checked)
					{
						goto IL_0246;
					}
					goto IL_06a1;
					IL_0246:
					num2 = 38;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_0257;
					IL_0257:
					num2 = 39;
					ClearCadsLocs();
					goto IL_0261;
					IL_0261:
					num2 = 40;
					ArrangVClinesCon();
					goto IL_026b;
					IL_026b:
					num2 = 41;
					SetTransChart();
					goto IL_0275;
					IL_0275:
					num2 = 42;
					if (!chkStop.Checked)
					{
						goto IL_028e;
					}
					goto IL_06a1;
					IL_028e:
					num2 = 44;
					if (lblNum1.Text.Trim().Length == 0)
					{
						goto IL_02af;
					}
					goto IL_02fc;
					IL_02af:
					num2 = 45;
					Interaction.MsgBox("لا توجد ارقام للتنفيذ");
					goto IL_02bf;
					IL_02bf:
					num2 = 46;
					lblProgress.BackColor = Color.LimeGreen;
					goto IL_02d3;
					IL_02d3:
					num2 = 47;
					lblProgress.Text = "OK";
					goto IL_02e7;
					IL_02e7:
					num2 = 48;
					EnableCntl();
					goto IL_02f1;
					IL_02f1:
					num2 = 49;
					Application.DoEvents();
					goto IL_02fc;
					IL_02fc:
					num2 = 51;
					ReSetUssdOrder();
					goto IL_0306;
					IL_0306:
					num2 = 52;
					lblProgress.Text = "تحويل فودافون كاش ";
					goto IL_031a;
					IL_031a:
					num2 = 53;
					num5 = 0;
					goto IL_0320;
					IL_0320:
					num2 = 54;
					if (Operators.CompareString(PortsArray[num5], "", TextCompare: false) != 0)
					{
						goto IL_0340;
					}
					goto IL_038b;
					IL_0340:
					num2 = 55;
					ApplyUssdCodeCon_Mex(PortsArray[num5], NumbersArray[num5]);
					goto IL_0363;
					IL_0363:
					num2 = 59;
					if (!chkStop.Checked)
					{
						goto IL_037c;
					}
					goto IL_06a1;
					IL_037c:
					num2 = 61;
					num5 = checked(num5 + 1);
					if (num5 <= 6)
					{
						goto IL_0320;
					}
					goto IL_038b;
					IL_038b:
					num2 = 62;
					Application.DoEvents();
					goto IL_0394;
					IL_0394:
					num2 = 63;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_03ad;
					IL_03ad:
					num2 = 65;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_03be;
					IL_03be:
					num2 = 66;
					Application.DoEvents();
					goto IL_03c7;
					IL_03c7:
					num2 = 67;
					btnRun02_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_03d8;
					IL_03d8:
					num2 = 68;
					Application.DoEvents();
					goto IL_03e1;
					IL_03e1:
					num2 = 69;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_03fa;
					IL_03fa:
					num2 = 71;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_040b;
					IL_040b:
					num2 = 72;
					Application.DoEvents();
					goto IL_0414;
					IL_0414:
					num2 = 73;
					if (Conversion.Val(lblGifts01.Text) >= 1.0)
					{
						goto IL_043b;
					}
					goto IL_044f;
					IL_043b:
					num2 = 74;
					chkCh1.Checked = true;
					goto IL_0460;
					IL_044f:
					num2 = 76;
					chkCh1.Checked = false;
					goto IL_0460;
					IL_0460:
					num2 = 78;
					if (Conversion.Val(lblGifts02.Text) >= 1.0)
					{
						goto IL_0487;
					}
					goto IL_049b;
					IL_0487:
					num2 = 79;
					chkCh2.Checked = true;
					goto IL_04ac;
					IL_049b:
					num2 = 81;
					chkCh2.Checked = false;
					goto IL_04ac;
					IL_04ac:
					num2 = 83;
					if (Conversion.Val(lblGifts03.Text) >= 1.0)
					{
						goto IL_04d3;
					}
					goto IL_04e7;
					IL_04d3:
					num2 = 84;
					chkCh3.Checked = true;
					goto IL_04f8;
					IL_04e7:
					num2 = 86;
					chkCh3.Checked = false;
					goto IL_04f8;
					IL_04f8:
					num2 = 88;
					if (Conversion.Val(lblGifts04.Text) >= 1.0)
					{
						goto IL_051f;
					}
					goto IL_0533;
					IL_051f:
					num2 = 89;
					chkCh4.Checked = true;
					goto IL_0544;
					IL_0533:
					num2 = 91;
					chkCh4.Checked = false;
					goto IL_0544;
					IL_0544:
					num2 = 93;
					if (Conversion.Val(lblGifts05.Text) >= 1.0)
					{
						goto IL_056b;
					}
					goto IL_057f;
					IL_056b:
					num2 = 94;
					chkCh5.Checked = true;
					goto IL_0590;
					IL_057f:
					num2 = 96;
					chkCh5.Checked = false;
					goto IL_0590;
					IL_0590:
					num2 = 98;
					if (Conversion.Val(lblGifts06.Text) >= 1.0)
					{
						goto IL_05b7;
					}
					goto IL_05cb;
					IL_05b7:
					num2 = 99;
					chkCh6.Checked = true;
					goto IL_05dc;
					IL_05cb:
					num2 = 101;
					chkCh6.Checked = false;
					goto IL_05dc;
					IL_05dc:
					num2 = 103;
					if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						goto IL_0642;
					}
					goto IL_06a1;
					IL_0642:
					num2 = 106;
					Application.DoEvents();
					goto IL_064b;
					IL_064b:
					num2 = 107;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_0664;
					IL_0664:
					num2 = 109;
					Application.DoEvents();
					goto IL_066d;
					IL_066d:
					num2 = 110;
					BtnTransGiftAuto_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_067e;
					IL_067e:
					num2 = 111;
					Application.DoEvents();
					goto IL_0687;
					IL_0687:
					num2 = 112;
					if (chkStop.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_06a1;
					IL_06a1:
					num2 = 114;
					btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_06b2;
					IL_06b2:
					num2 = 115;
					Application.DoEvents();
					goto IL_06bb;
					IL_06bb:
					num2 = 116;
					lblMainCon.Text = txtCashNextMasterCon.Text;
					goto IL_06d5;
					end_IL_0001_2:
					break;
				}
				num2 = 121;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 2337;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeCon_Mex(string Exxc, string UssdCommand)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Send " + Exxc;
						Application.DoEvents();
						string ussdCommandFull = "*9*7*" + UssdCommand + "*" + txtMonyMnCon.Text + "#";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(800);
						Application.DoEvents();
						int num3 = 0;
						while (true)
						{
							num3++;
							if (num3 >= 10)
							{
								break;
							}
							lblProgress.Text = "SPass " + Exxc + "(" + Conversions.ToString(num3) + ")";
							Application.DoEvents();
							string text = "#";
							string text2 = "#";
							string text3 = "#";
							string left = "#";
							int num4 = 0;
							string text4;
							while (true)
							{
								Thread.Sleep(800);
								text4 = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text4) >= 2))
								{
									txtInfo.Text = text4 + "\r\n" + txtInfo.Text;
								}
								if (Operators.CompareString(text4, "", TextCompare: false) == 0)
								{
									break;
								}
								text = "#";
								text2 = "#";
								text3 = "#";
								left = "#";
								if (text4.Contains("0627062F062E0644002006270644063106420645002006270644"))
								{
									goto IL_02b3;
								}
								if (text4.Contains("062A06450020062A062D0648064A06440020"))
								{
									goto IL_0331;
								}
								if (text4.Contains("+CUSD: "))
								{
									string text5 = text4;
									int num5 = text4.IndexOf("+CUSD: ");
									text5 = text4.Substring(num5 + 10, text4.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text5.IndexOf(",");
									string text6 = text5.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text6 = text6.Trim('"').Trim(',').Trim('"');
									string text7;
									if (Operators.CompareString(text6.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text6);
										text7 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text7 = encoding_mod.Decode7Bit(text6);
									}
									OutBoxDropCon(Exxc, text7);
									if (text7.Contains("تم تحويل"))
									{
										goto IL_04cf;
									}
								}
								if (text4.Contains("064406270020064A0648062C062F002006310635"))
								{
									goto IL_051b;
								}
								if (text4.Contains("+CUSD: 5") | text4.Contains("retry operation") | text4.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
								{
									goto IL_055d;
								}
								Application.DoEvents();
								num4++;
								if (num4 <= 25)
								{
									continue;
								}
								goto IL_05db;
							}
							if ((Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(text, "", TextCompare: false) == 0) & (Operators.CompareString(text2, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
							{
								ussdCommandFull = "*9*7*" + UssdCommand + "*" + txtMonyMnCon.Text + "#";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(2000);
								Application.DoEvents();
							}
							else
							{
								left = text3;
								text3 = text2;
								text2 = text;
								text = text4;
							}
							continue;
							IL_04cf:
							ussdCommandFull = "9";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							break;
							IL_051b:
							OutBoxDropCon(Exxc, "لا يوجد رصيد كافى للتحويل");
							Application.DoEvents();
							break;
							IL_055d:
							ussdCommandFull = "*9*7*" + UssdCommand + "*" + txtMonyMnCon.Text + "#";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1500);
							Application.DoEvents();
							continue;
							IL_05db:
							object obj = txtPass.Text ?? "";
							if (obj == null)
							{
								obj = "";
							}
							ussdCommandFull = (string)obj;
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							break;
							IL_0331:
							ussdCommandFull = "9";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							OutBoxDropCon(Exxc, "تم التحويل بنجاح");
							Application.DoEvents();
							break;
							IL_02b3:
							object obj2 = txtPass.Text ?? "";
							if (obj2 == null)
							{
								obj2 = "";
							}
							ussdCommandFull = (string)obj2;
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(2000);
							text = "#";
							text2 = "#";
							text3 = "#";
							left = "#";
							Application.DoEvents();
						}
						break;
					}
					case 1602:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj3) when (obj3 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj3);
				try0001_dispatch = 1602;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void BtnRunPower_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 619:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0019;
						case 5:
						case 6:
							goto IL_0033;
						case 7:
							goto IL_0053;
						case 9:
						case 10:
							goto IL_0069;
						case 11:
							goto IL_0090;
						case 13:
						case 14:
							goto IL_00ab;
						case 15:
							goto IL_00bf;
						case 16:
							goto IL_00d3;
						case 17:
							goto IL_00dd;
						case 18:
						case 26:
							goto IL_00f2;
						case 19:
							goto IL_0120;
						case 20:
							goto IL_012e;
						case 21:
							goto IL_013e;
						case 22:
							goto IL_014c;
						case 23:
							goto IL_0156;
						case 24:
							goto IL_015f;
						case 25:
							goto IL_018a;
						case 27:
						case 28:
							goto IL_01a8;
						case 29:
							goto IL_01b2;
						case 30:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 8:
						case 12:
						case 31:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_018a:
					num2 = 25;
					if (!chkStop.Checked)
					{
						goto IL_00f2;
					}
					goto IL_01a8;
					IL_01a8:
					num2 = 28;
					EnableCntl();
					goto IL_01b2;
					IL_015f:
					num2 = 24;
					if (Conversion.Val(txtLoopSVCP.Text) < Conversion.Val(txtLoopFVCP.Text))
					{
						goto IL_018a;
					}
					goto IL_01a8;
					IL_01b2:
					num2 = 29;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if (MysqlConn.MainProgLic < 6)
					{
						goto IL_0019;
					}
					goto IL_0033;
					IL_0019:
					num2 = 3;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0033:
					num2 = 6;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0053;
					}
					goto IL_0069;
					IL_0053:
					num2 = 7;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_0069:
					num2 = 10;
					if (Operators.CompareString(txtUssdP1.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_0090;
					}
					goto IL_00ab;
					IL_0090:
					num2 = 11;
					lblProgress.Text = "No Ussd Code";
					goto end_IL_0001_3;
					IL_00ab:
					num2 = 14;
					lblProgress.BackColor = Color.Red;
					goto IL_00bf;
					IL_00bf:
					num2 = 15;
					lblProgress.Text = "Run";
					goto IL_00d3;
					IL_00d3:
					num2 = 16;
					DisableCntl();
					goto IL_00dd;
					IL_00dd:
					num2 = 17;
					txtLoopSVCP.Text = "0";
					goto IL_00f2;
					IL_00f2:
					num2 = 18;
					txtLoopSVCP.Text = Conversions.ToString(Conversion.Val(txtLoopSVCP.Text) + 1.0);
					goto IL_0120;
					IL_0120:
					num2 = 19;
					Thread.Sleep(1000);
					goto IL_012e;
					IL_012e:
					num2 = 20;
					SetUssdOrder(txtUssdP1);
					goto IL_013e;
					IL_013e:
					num2 = 21;
					Thread.Sleep(1000);
					goto IL_014c;
					IL_014c:
					num2 = 22;
					ReturnRead();
					goto IL_0156;
					IL_0156:
					num2 = 23;
					Application.DoEvents();
					goto IL_015f;
					end_IL_0001_2:
					break;
				}
				num2 = 30;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 619;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void BtnNextItemsP_Click(object sender, EventArgs e)
	{
		fillBoxsWithCardsVCP1();
	}

	private void BtnAutoSendPower_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 6)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		Application.DoEvents();
		checked
		{
			if (!chkStop.Checked)
			{
				DisableCntl();
				lblProgress.BackColor = Color.Red;
				lblProgress.Text = "Run";
				Application.DoEvents();
				btnUssdReset_Click(RuntimeHelpers.GetObjectValue(sender), e);
				Application.DoEvents();
				int num = (int)Math.Round(Conversion.Val(txtQtyDoneP.Text));
				txtTempxxp.Text = "";
				while (num <= lstNumbersP.Items.Count - 1)
				{
					txtTempxxp.Text = Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject("*1*", lstNumbersP.Items[num]), "#"));
					Application.DoEvents();
					SetUssdOrder(txtTempxxp);
					Thread.Sleep(1000);
					ReturnRead();
					num++;
					txtQtyDoneP.Text = Conversions.ToString(num);
					Application.DoEvents();
				}
				EnableCntl();
				lblProgress.BackColor = Color.LimeGreen;
				lblProgress.Text = "OK";
			}
		}
	}

	private void SendPowerToNumber(string ExNumber)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = lblPort1.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Sending To " + ExNumber;
						Application.DoEvents();
						string ussdCommandFull = "*1*" + ExNumber + "#";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(800);
						Application.DoEvents();
						int num3 = 0;
						while (true)
						{
							num3++;
							if (num3 >= 10)
							{
								break;
							}
							Application.DoEvents();
							string text = "#";
							string text2 = "#";
							string text3 = "#";
							string left = "#";
							int num4 = 0;
							string text4;
							while (true)
							{
								Thread.Sleep(800);
								text4 = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text4) >= 2))
								{
									txtInfo.Text = text4 + "\r\n" + txtInfo.Text;
								}
								if (Operators.CompareString(text4, "", TextCompare: false) == 0)
								{
									break;
								}
								text = "#";
								text2 = "#";
								text3 = "#";
								left = "#";
								if (text4.Contains("062A06450020062A062D0648064A06440020"))
								{
									goto IL_0236;
								}
								if (text4.Contains("+CUSD: "))
								{
									string text5 = text4;
									int num5 = text4.IndexOf("+CUSD: ");
									text5 = text4.Substring(num5 + 10, text4.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text5.IndexOf(",");
									string text6 = text5.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text6 = text6.Trim('"').Trim(',').Trim('"');
									string text7;
									if (Operators.CompareString(text6.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text6);
										text7 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text7 = encoding_mod.Decode7Bit(text6);
									}
									OutBoxDropCon(lblPort1.Text, text7);
									if (text7.Contains("تم تحويل"))
									{
										goto IL_03ee;
									}
								}
								if (text4.Contains("+CUSD: 5") | text4.Contains("retry operation") | text4.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
								{
									goto IL_0452;
								}
								Application.DoEvents();
								num4++;
								if (num4 <= 25)
								{
									continue;
								}
								goto IL_04ab;
							}
							if ((Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(text, "", TextCompare: false) == 0) & (Operators.CompareString(text2, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
							{
								ussdCommandFull = "*1*" + ExNumber + "#";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(2000);
								Application.DoEvents();
							}
							else
							{
								left = text3;
								text3 = text2;
								text2 = text;
								text = text4;
							}
							continue;
							IL_04ab:
							Thread.Sleep(500);
							Application.DoEvents();
							break;
							IL_0236:
							ussdCommandFull = "9";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							OutBoxDropCon(lblPort1.Text, ExNumber + " OK");
							Application.DoEvents();
							break;
							IL_03ee:
							ussdCommandFull = "9";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							break;
							IL_0452:
							ussdCommandFull = "*1*" + ExNumber + "#";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(2000);
							Application.DoEvents();
						}
						break;
					}
					case 1240:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1240;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void Button2_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 190:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0041;
						case 5:
							goto IL_004a;
						case 6:
							goto IL_0059;
						case 7:
							goto IL_0062;
						case 8:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 9:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_004a:
					num2 = 5;
					SetUssdOrderByX(txtReplyPower);
					goto IL_0059;
					IL_0059:
					num2 = 6;
					EnableCntl();
					goto IL_0062;
					IL_0041:
					num2 = 4;
					DisableCntl();
					goto IL_004a;
					IL_0062:
					num2 = 7;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "Reply By  " + txtReplyPower.Text;
					goto IL_0041;
					end_IL_0001_2:
					break;
				}
				num2 = 8;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 190;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void BtnTransValP_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		Stopwatch stopwatch = default(Stopwatch);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 791:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0023;
						case 6:
						case 7:
							goto IL_003d;
						case 8:
							goto IL_005d;
						case 10:
						case 11:
							goto IL_0073;
						case 12:
							goto IL_0094;
						case 14:
						case 15:
							goto IL_00ab;
						case 16:
							goto IL_00cf;
						case 18:
						case 19:
							goto IL_00e6;
						case 20:
							goto IL_00fa;
						case 21:
							goto IL_010e;
						case 22:
							goto IL_0118;
						case 23:
							goto IL_012c;
						case 24:
						case 37:
							goto IL_0141;
						case 25:
							goto IL_016f;
						case 26:
							goto IL_017d;
						case 27:
							goto IL_0187;
						case 30:
							goto IL_0193;
						case 28:
						case 29:
						case 31:
							goto IL_019d;
						case 32:
							goto IL_01c2;
						case 33:
							goto IL_01cc;
						case 34:
							goto IL_01d6;
						case 35:
							goto IL_01df;
						case 36:
							goto IL_020a;
						case 38:
						case 39:
							goto IL_0228;
						case 40:
							goto IL_0232;
						case 41:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
						case 9:
						case 13:
						case 17:
						case 42:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0228:
					num2 = 39;
					EnableCntl();
					goto IL_0232;
					IL_0232:
					num2 = 40;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_020a:
					num2 = 36;
					if (!chkStop.Checked)
					{
						goto IL_0141;
					}
					goto IL_0228;
					IL_0193:
					num2 = 30;
					Application.DoEvents();
					goto IL_019d;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					if (MysqlConn.MainProgLic < 6)
					{
						goto IL_0023;
					}
					goto IL_003d;
					IL_0023:
					num2 = 4;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_003d:
					num2 = 7;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_005d;
					}
					goto IL_0073;
					IL_005d:
					num2 = 8;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_0073:
					num2 = 11;
					if (txtTransNumP.Text.Trim().Length == 0)
					{
						goto IL_0094;
					}
					goto IL_00ab;
					IL_0094:
					num2 = 12;
					Interaction.MsgBox("ادخل رقم الخط");
					goto end_IL_0001_3;
					IL_00ab:
					num2 = 15;
					if (Conversion.Val(txtTransMoneyP.Text) == 0.0)
					{
						goto IL_00cf;
					}
					goto IL_00e6;
					IL_00cf:
					num2 = 16;
					Interaction.MsgBox("ادخل المبلغ المراد تحويلة");
					goto end_IL_0001_3;
					IL_00e6:
					num2 = 19;
					lblProgress.BackColor = Color.Red;
					goto IL_00fa;
					IL_00fa:
					num2 = 20;
					lblProgress.Text = "تحويل الهدية رصيد";
					goto IL_010e;
					IL_010e:
					num2 = 21;
					DisableCntl();
					goto IL_0118;
					IL_0118:
					num2 = 22;
					txtTotalTransValP.Text = "0";
					goto IL_012c;
					IL_012c:
					num2 = 23;
					txtLoopSVCP.Text = "0";
					goto IL_0141;
					IL_0141:
					num2 = 24;
					txtLoopSVCP.Text = Conversions.ToString(Conversion.Val(txtLoopSVCP.Text) + 1.0);
					goto IL_016f;
					IL_016f:
					num2 = 25;
					Thread.Sleep(500);
					goto IL_017d;
					IL_017d:
					num2 = 26;
					stopwatch.Start();
					goto IL_0187;
					IL_0187:
					num2 = 27;
					SetUssdOrderVcashTraVPower();
					goto IL_019d;
					IL_019d:
					num2 = 29;
					if ((double)stopwatch.ElapsedMilliseconds <= Conversion.Val(txtwait.Text))
					{
						goto IL_0193;
					}
					goto IL_01c2;
					IL_01c2:
					num2 = 32;
					stopwatch.Stop();
					goto IL_01cc;
					IL_01cc:
					num2 = 33;
					ReturnReadGift();
					goto IL_01d6;
					IL_01d6:
					num2 = 34;
					Application.DoEvents();
					goto IL_01df;
					IL_01df:
					num2 = 35;
					if (Conversion.Val(txtLoopSVCP.Text) < Conversion.Val(txtLoopFVCP.Text))
					{
						goto IL_020a;
					}
					goto IL_0228;
					end_IL_0001_2:
					break;
				}
				num2 = 41;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 791;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void lblMain_DoubleClick(object sender, EventArgs e)
	{
		txtCashNextMaster.Text = lblMain.Text;
	}

	private void lblMain_TextChanged(object sender, EventArgs e)
	{
		lblMainEC.Text = lblMain.Text;
		lblMainCon.Text = lblMain.Text;
		lblMainPoints.Text = lblMain.Text;
	}

	private void BtnChangePass_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 6)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtOldPass.Text.Length != 6)
		{
			lblProgress.Text = "ادخل كلمة السر القديمة";
			return;
		}
		if (txtNewPass.Text.Length != 6)
		{
			lblProgress.Text = "ادخل كلمة السر الجديدة";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "تعديل كلمة السر";
		DisableCntl();
		ReSetUssdOrder();
		Application.DoEvents();
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			ChangeOldPass(lblPort1);
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			ChangeOldPass(lblPort2);
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			ChangeOldPass(lblPort3);
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			ChangeOldPass(lblPort4);
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			ChangeOldPass(lblPort5);
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			ChangeOldPass(lblPort6);
		}
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void ChangeOldPass(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						int num3 = 0;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Change Pass " + Exxc.Text;
						Application.DoEvents();
						int num4 = 0;
						string text = serialPort.ReadExisting();
						while (true)
						{
							num4++;
							if (num4 >= 15)
							{
								break;
							}
							string ussdCommandFull = "*9*2#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							Application.DoEvents();
							int num5 = 0;
							while (true)
							{
								Thread.Sleep(500);
								text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("0623062F062E06440020062706440631064206450020062706440633063106490020062706440642062F064A0645"))
								{
									OutBoxDrop(Exxc, "أدخل الرقم السرى القديم");
									ussdCommandFull = txtOldPass.Text.Trim();
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									Application.DoEvents();
									continue;
								}
								if (text.Contains("064506460020064106360644064300200627062F062E064400200627064406310642064500200627064406330631064A002006270644062C062F064A062F0020"))
								{
									OutBoxDrop(Exxc, "من فضلك ادخل الرقم السري الجديد مكون من 6 أرقام (غير متشابهين أو متتاليين)");
									ussdCommandFull = txtNewPass.Text.Trim();
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									Application.DoEvents();
									continue;
								}
								if (text.Contains("06280631062C062706210020062A06230643064A062F00200625062F062E0627064400200627064406310642064500200627064406330631064A002006270644062C062F064A062F"))
								{
									OutBoxDrop(Exxc, "رجاء تأكيد إدخال الرقم السري الجديد");
									ussdCommandFull = txtNewPass.Text.Trim();
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									Application.DoEvents();
									continue;
								}
								if (text.Contains("062A06450020062A063A064A064A063100200627064406310642064500200627064406330631064A002006280646062C0627062D003B00"))
								{
									OutBoxDrop(Exxc, "تم تغيير الرقم السري بنجاح");
									Application.DoEvents();
									break;
								}
								if (text.Contains("+CUSD: "))
								{
									string text2 = text;
									num5 = text.IndexOf("+CUSD: ");
									text2 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text2.IndexOf(",");
									string text3 = text2.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text3 = text3.Trim('"').Trim(',').Trim('"');
									string eEstr;
									if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text3);
										eEstr = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										eEstr = encoding_mod.Decode7Bit(text3);
									}
									OutBoxDrop(Exxc, eEstr);
								}
								if (text.Contains("retry operation") | text.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E"))
								{
									goto IL_03d1;
								}
								Application.DoEvents();
								num5++;
								if (num5 > 15)
								{
									break;
								}
							}
							break;
							IL_03d1:
							OutBoxDrop(Exxc, "retry operation");
							Application.DoEvents();
						}
						break;
					}
					case 1062:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1062;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ChangeOldPassNew(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						int num3 = 0;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "New Pass " + Exxc.Text;
						Application.DoEvents();
						int num4 = 0;
						string text = serialPort.ReadExisting();
						while (true)
						{
							num4++;
							if (num4 >= 15)
							{
								break;
							}
							string ussdCommandFull = "*9*5#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							Application.DoEvents();
							int num5 = 0;
							while (true)
							{
								Thread.Sleep(500);
								text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("064406270633062A062E062F06270645002006410648062F06270641064"))
								{
									OutBoxDrop(Exxc, "لاستخدام فودافون كاش انشئ رقم سري مكون من 6 أرقام غير متشابهين أو متتاليين");
									ussdCommandFull = txtPass.Text.Trim();
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									Application.DoEvents();
									continue;
								}
								if (text.Contains("06280631062C062706210020062506390627062F062900200625062F062E0627064400"))
								{
									OutBoxDrop(Exxc, "برجاء إعادة إدخال الرقم السري للتأكيد");
									ussdCommandFull = txtPass.Text.Trim();
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									Application.DoEvents();
									continue;
								}
								if (text.Contains("062A06450020062506460634062706210020062706440631064206450020062706440"))
								{
									OutBoxDrop(Exxc, "تم إنشاء الرقم السري الخاص بحسابك لو نسيت رقمك السري كلم #12*9*");
									Application.DoEvents();
									break;
								}
								if (text.Contains("+CUSD: "))
								{
									string text2 = text;
									num5 = text.IndexOf("+CUSD: ");
									text2 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text2.IndexOf(",");
									string text3 = text2.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text3 = text3.Trim('"').Trim(',').Trim('"');
									string eEstr;
									if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text3);
										eEstr = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										eEstr = encoding_mod.Decode7Bit(text3);
									}
									OutBoxDrop(Exxc, eEstr);
								}
								if (text.Contains("retry operation") | text.Contains("ERROR") | text.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E"))
								{
									goto IL_037b;
								}
								Application.DoEvents();
								num5++;
								if (num5 > 15)
								{
									break;
								}
							}
							break;
							IL_037b:
							OutBoxDrop(Exxc, "retry operation");
							Application.DoEvents();
						}
						break;
					}
					case 976:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 976;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void BtnRunPowe2_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 595:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0019;
						case 5:
						case 6:
							goto IL_0033;
						case 7:
							goto IL_0053;
						case 9:
						case 10:
							goto IL_0069;
						case 11:
							goto IL_0090;
						case 13:
						case 14:
							goto IL_00ab;
						case 15:
							goto IL_00bf;
						case 16:
							goto IL_00c9;
						case 17:
						case 25:
							goto IL_00de;
						case 18:
							goto IL_010c;
						case 19:
							goto IL_011a;
						case 20:
							goto IL_012a;
						case 21:
							goto IL_0138;
						case 22:
							goto IL_0142;
						case 23:
							goto IL_014b;
						case 24:
							goto IL_0176;
						case 26:
						case 27:
							goto IL_0194;
						case 28:
							goto IL_019e;
						case 29:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 8:
						case 12:
						case 30:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0176:
					num2 = 24;
					if (!chkStop.Checked)
					{
						goto IL_00de;
					}
					goto IL_0194;
					IL_0194:
					num2 = 27;
					EnableCntl();
					goto IL_019e;
					IL_014b:
					num2 = 23;
					if (Conversion.Val(txtLoopSVCP.Text) < Conversion.Val(txtLoopFVCP.Text))
					{
						goto IL_0176;
					}
					goto IL_0194;
					IL_019e:
					num2 = 28;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if (MysqlConn.MainProgLic < 6)
					{
						goto IL_0019;
					}
					goto IL_0033;
					IL_0019:
					num2 = 3;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0033:
					num2 = 6;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0053;
					}
					goto IL_0069;
					IL_0053:
					num2 = 7;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_0069:
					num2 = 10;
					if (Operators.CompareString(txtUssdP2.Text.Trim(), "", TextCompare: false) == 0)
					{
						goto IL_0090;
					}
					goto IL_00ab;
					IL_0090:
					num2 = 11;
					lblProgress.Text = "No Ussd Code";
					goto end_IL_0001_3;
					IL_00ab:
					num2 = 14;
					lblProgress.BackColor = Color.Red;
					goto IL_00bf;
					IL_00bf:
					num2 = 15;
					DisableCntl();
					goto IL_00c9;
					IL_00c9:
					num2 = 16;
					txtLoopSVCP.Text = "0";
					goto IL_00de;
					IL_00de:
					num2 = 17;
					txtLoopSVCP.Text = Conversions.ToString(Conversion.Val(txtLoopSVCP.Text) + 1.0);
					goto IL_010c;
					IL_010c:
					num2 = 18;
					Thread.Sleep(1000);
					goto IL_011a;
					IL_011a:
					num2 = 19;
					SetUssdOrder(txtUssdP2);
					goto IL_012a;
					IL_012a:
					num2 = 20;
					Thread.Sleep(1000);
					goto IL_0138;
					IL_0138:
					num2 = 21;
					ReturnRead();
					goto IL_0142;
					IL_0142:
					num2 = 22;
					Application.DoEvents();
					goto IL_014b;
					end_IL_0001_2:
					break;
				}
				num2 = 29;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 595;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVcashTraVPower()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		Stopwatch stopwatch = default(Stopwatch);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1141:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 5:
							goto IL_0079;
						case 6:
							goto IL_0082;
						case 7:
							goto IL_00b4;
						case 8:
							goto IL_00c3;
						case 9:
							goto IL_00f5;
						case 10:
							goto IL_0105;
						case 11:
							goto IL_0138;
						case 12:
							goto IL_0148;
						case 13:
							goto IL_017b;
						case 14:
							goto IL_018b;
						case 15:
							goto IL_01be;
						case 16:
							goto IL_01ce;
						case 17:
							goto IL_0201;
						case 20:
							goto IL_0213;
						case 18:
						case 19:
						case 21:
							goto IL_021d;
						case 22:
							goto IL_0237;
						case 23:
							goto IL_0241;
						case 24:
							goto IL_0274;
						case 25:
							goto IL_0284;
						case 26:
							goto IL_02b7;
						case 27:
							goto IL_02c7;
						case 28:
							goto IL_02fa;
						case 29:
							goto IL_030a;
						case 30:
							goto IL_033d;
						case 31:
							goto IL_034d;
						case 32:
							goto IL_0380;
						case 33:
							goto IL_0390;
						case 34:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 35:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0380:
					num2 = 32;
					SetUssdOrderVcashTraVXPPower(lblPort5);
					goto IL_0390;
					IL_0390:
					num2 = 33;
					if (!((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						goto end_IL_0001_3;
					}
					break;
					IL_034d:
					num2 = 31;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0380;
					}
					goto IL_0390;
					IL_0213:
					num2 = 20;
					Application.DoEvents();
					goto IL_021d;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
					{
						goto end_IL_0001_3;
					}
					goto IL_0079;
					IL_0079:
					num2 = 5;
					stopwatch.Start();
					goto IL_0082;
					IL_0082:
					num2 = 6;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_00b4;
					}
					goto IL_00c3;
					IL_00b4:
					num2 = 7;
					SetUssdOrderVcashTraVXPower(lblPort1);
					goto IL_00c3;
					IL_00c3:
					num2 = 8;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_00f5;
					}
					goto IL_0105;
					IL_00f5:
					num2 = 9;
					SetUssdOrderVcashTraVXPower(lblPort2);
					goto IL_0105;
					IL_0105:
					num2 = 10;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_0138;
					}
					goto IL_0148;
					IL_0138:
					num2 = 11;
					SetUssdOrderVcashTraVXPower(lblPort3);
					goto IL_0148;
					IL_0148:
					num2 = 12;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_017b;
					}
					goto IL_018b;
					IL_017b:
					num2 = 13;
					SetUssdOrderVcashTraVXPower(lblPort4);
					goto IL_018b;
					IL_018b:
					num2 = 14;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_01be;
					}
					goto IL_01ce;
					IL_01be:
					num2 = 15;
					SetUssdOrderVcashTraVXPower(lblPort5);
					goto IL_01ce;
					IL_01ce:
					num2 = 16;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_0201;
					}
					goto IL_021d;
					IL_0201:
					num2 = 17;
					SetUssdOrderVcashTraVXPower(lblPort6);
					goto IL_021d;
					IL_021d:
					num2 = 19;
					if (stopwatch.ElapsedMilliseconds <= 8000)
					{
						goto IL_0213;
					}
					goto IL_0237;
					IL_0237:
					num2 = 22;
					stopwatch.Stop();
					goto IL_0241;
					IL_0241:
					num2 = 23;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_0274;
					}
					goto IL_0284;
					IL_0274:
					num2 = 24;
					SetUssdOrderVcashTraVXPPower(lblPort1);
					goto IL_0284;
					IL_0284:
					num2 = 25;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_02b7;
					}
					goto IL_02c7;
					IL_02b7:
					num2 = 26;
					SetUssdOrderVcashTraVXPPower(lblPort2);
					goto IL_02c7;
					IL_02c7:
					num2 = 27;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_02fa;
					}
					goto IL_030a;
					IL_02fa:
					num2 = 28;
					SetUssdOrderVcashTraVXPPower(lblPort3);
					goto IL_030a;
					IL_030a:
					num2 = 29;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_033d;
					}
					goto IL_034d;
					IL_033d:
					num2 = 30;
					SetUssdOrderVcashTraVXPPower(lblPort4);
					goto IL_034d;
					end_IL_0001_2:
					break;
				}
				num2 = 34;
				SetUssdOrderVcashTraVXPPower(lblPort6);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1141;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVcashTraVXPower(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
					Application.DoEvents();
					string ussdCommandFull = "9";
					string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(1500);
					ussdCommandFull = "*7000*3*" + txtTransNumP.Text + "*" + txtTransMoneyP.Text + "#";
					commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(commandCode + "\r");
					Thread.Sleep(1000);
					Application.DoEvents();
					break;
				}
				case 277:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 277;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVcashTraVXPPower(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						int num3 = 0;
						while (true)
						{
							num3++;
							if (num3 >= 10)
							{
								break;
							}
							lblProgress.Text = "Read " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							Application.DoEvents();
							string text = "#";
							string text2 = "#";
							string text3 = "#";
							string left = "#";
							int num4 = 0;
							string ussdCommandFull;
							string commandCode;
							while (true)
							{
								Thread.Sleep(500);
								string text4 = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text4) >= 2))
								{
									txtInfo.Text = text4 + "\r\n" + txtInfo.Text;
								}
								if (Operators.CompareString(text4, "", TextCompare: false) == 0)
								{
									if ((Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(text, "", TextCompare: false) == 0) & (Operators.CompareString(text2, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
									{
										break;
									}
									left = text3;
									text3 = text2;
									text2 = text;
									text = text4;
								}
								else
								{
									text = "#";
									text2 = "#";
									text3 = "#";
									left = "#";
								}
								if (text4.Contains("+CUSD: "))
								{
									string text5 = text4;
									int num5 = text4.IndexOf("+CUSD: ");
									text5 = text4.Substring(num5 + 10, text4.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text5.IndexOf(",");
									string text6 = text5.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text6 = text6.Trim('"').Trim(',').Trim('"');
									string text7;
									if (Operators.CompareString(text6.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text6);
										text7 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text7 = encoding_mod.Decode7Bit(text6);
									}
									OutBoxDrop(Exxc, text7);
									if (text7.Contains("تم شحن"))
									{
										goto IL_0392;
									}
									if (text7.Contains("لا يمكن إتمام"))
									{
										goto IL_03e6;
									}
								}
								if (text4.Contains("0627062F062E0644002006270644063106420645002006270644"))
								{
									object obj = txtPass.Text ?? "";
									if (obj == null)
									{
										obj = "";
									}
									ussdCommandFull = (string)obj;
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
									text = "#";
									text2 = "#";
									text3 = "#";
									left = "#";
								}
								if (text4.Contains("062A06450020062A062D0648064A06440020"))
								{
									goto IL_0481;
								}
								if (text4.Contains("+CUSD: 5") | text4.Contains("retry operation") | text4.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
								{
									goto IL_04f0;
								}
								if (text4.Contains("0050006C006500610073006500200069006E007300650072007400200061002000760061006C0069006400200061006E0073007700650072002E002E000A06440627064A0648062C062F002006310635064A062F002006430627064106490020064A") | text4.Contains("064406270020064A0648062C062F002006310635064A062F00"))
								{
									goto IL_0580;
								}
								Application.DoEvents();
								num4++;
								if (num4 <= 15)
								{
									continue;
								}
								goto IL_05b3;
							}
							ussdCommandFull = "*7000*3*" + txtTransNumP.Text + "*" + txtTransMoneyP.Text + "#";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(2000);
							Application.DoEvents();
							continue;
							IL_04f0:
							ussdCommandFull = "*7000*3*" + txtTransNumP.Text + "*" + txtTransMoneyP.Text + "#";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(2000);
							Application.DoEvents();
							continue;
							IL_0580:
							DisablePortdonnt(Exxc);
							OutBoxDrop(Exxc, "لا يوجد رصيد كافى للتحويل");
							Application.DoEvents();
							break;
							IL_05b3:
							object obj2 = txtPass.Text ?? "";
							if (obj2 == null)
							{
								obj2 = "";
							}
							ussdCommandFull = (string)obj2;
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							Application.DoEvents();
							break;
							IL_0392:
							txtTotalTransValP.Text = Conversions.ToString(Conversion.Val(txtTotalTransValP.Text) + Conversion.Val(txtTransMoneyP.Text) * 0.7);
							break;
							IL_03e6:
							DisablePort(Exxc);
							break;
							IL_0481:
							ussdCommandFull = "9";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							OutBoxDrop(Exxc, "تم التحويل بنجاح");
							Application.DoEvents();
							break;
						}
						break;
					}
					case 1562:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj3) when (obj3 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj3);
				try0001_dispatch = 1562;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void lblPort1_DoubleClick(object sender, EventArgs e)
	{
		lblNum1.Text = "";
	}

	private void TransferAllVodaNormBal(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						int num3 = 0;
						do
						{
							num3++;
							string ussdCommandFull = "*868*2*" + txtTransNum2.Text + "*50#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							lblProgress.Text = "Read " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							Application.DoEvents();
							int num4 = 0;
							while (true)
							{
								Thread.Sleep(500);
								string text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("+CUSD: "))
								{
									string text2 = text;
									int num5 = text.IndexOf("+CUSD: ");
									text2 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text2.IndexOf(",");
									string text3 = text2.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text3 = text3.Trim('"').Trim(',').Trim('"');
									if (text3.Length > 3)
									{
										string text4;
										if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text3);
											text4 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text4 = encoding_mod.Decode7Bit(text3);
										}
										OutBoxDrop(Exxc, text4);
										if (text4.Contains("عفوا، لا"))
										{
											break;
										}
									}
								}
								if (text.Contains("0644062A06230643064A062F0020062A062D0648064A0644"))
								{
									ussdCommandFull = "1";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									DisablePort(Exxc);
									Application.DoEvents();
								}
								if (text.Contains("062A06450020062A062D0648064A064400200627064406310635064A062F002006280646062C0627062D"))
								{
									goto IL_0321;
								}
								if (text.Contains("0639064106480627060C0020064406270020064A0648062C062F00200644062F064A06"))
								{
									goto IL_0346;
								}
								Application.DoEvents();
								if (text.Contains("+CUSD: 5") | text.Contains("unknown") | text.Contains("retry operation") | text.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
								{
									goto IL_0395;
								}
								num4++;
								if (num4 <= 30)
								{
									continue;
								}
								goto IL_03c1;
							}
							DisablePort(Exxc);
							Application.DoEvents();
							break;
							IL_0395:
							Application.DoEvents();
							continue;
							IL_03c1:
							ussdCommandFull = "1";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							Application.DoEvents();
							break;
							IL_0321:
							DisablePort(Exxc);
							Application.DoEvents();
							break;
							IL_0346:
							DisablePort(Exxc);
							Application.DoEvents();
							break;
						}
						while (num3 <= 2);
						break;
					}
					case 1040:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1040;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void TransferAllVodaNormBal365(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						int num3 = 0;
						while (true)
						{
							num3++;
							string ussdCommandFull = ((!chkTransferAllNormalVoda365.Checked) ? ("*868*2*" + txtTransNum2365_n.Text + "*" + Conversions.ToString(Conversion.Val(txtVCForceMony365_n.Text)) + "#") : ("*868*2*" + txtTransNum2365_n.Text + "*50#"));
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							lblProgress.Text = "Read " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							Application.DoEvents();
							if (chkStop.Checked)
							{
								break;
							}
							int num4 = 0;
							while (true)
							{
								Thread.Sleep(500);
								string text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (chkStop.Checked)
								{
									break;
								}
								if (text.Contains("+CUSD: "))
								{
									string text2 = text;
									int num5 = text.IndexOf("+CUSD: ");
									text2 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text2.IndexOf(",");
									string text3 = text2.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text3 = text3.Trim('"').Trim(',').Trim('"');
									if (text3.Length > 3)
									{
										string text4;
										if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text3);
											text4 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text4 = encoding_mod.Decode7Bit(text3);
										}
										OutBoxDrop(Exxc, text4);
										if (text4.Contains("عفوا، لا") | text4.Contains("خدمة تحويل الرصيد موقوفة حاليا"))
										{
											goto IL_0348;
										}
										if (text4.Contains("الرقم المراد تحويل الرصيد اليه قد وصل للحد الاقصى"))
										{
											goto IL_039c;
										}
									}
								}
								if (text.Contains("0644062A06230643064A062F0020062A062D0648064A0644"))
								{
									ussdCommandFull = "1";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									DisablePort(Exxc);
									Application.DoEvents();
								}
								if (text.Contains("062A06450020062A062D0648064A064400200627064406310635064A062F002006280646062C0627062D"))
								{
									goto IL_041f;
								}
								if (text.Contains("0639064106480627060C0020064406270020064A0648062C062F00200644062F064A06"))
								{
									goto IL_0444;
								}
								Application.DoEvents();
								if (text.Contains("+CUSD: 5") | text.Contains("unknown") | text.Contains("retry operation") | text.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
								{
									goto IL_0493;
								}
								num4++;
								if (num4 <= 30)
								{
									continue;
								}
								goto IL_04bf;
							}
							break;
							IL_0493:
							Application.DoEvents();
							if (num3 <= 2)
							{
								continue;
							}
							goto end_IL_0001;
							IL_039c:
							DisablePort(Exxc);
							Application.DoEvents();
							chkStop.Checked = true;
							goto end_IL_0001;
							IL_04bf:
							ussdCommandFull = "1";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							Application.DoEvents();
							goto end_IL_0001;
							IL_041f:
							DisablePort(Exxc);
							Application.DoEvents();
							goto end_IL_0001;
							IL_0444:
							DisablePort(Exxc);
							Application.DoEvents();
							goto end_IL_0001;
							IL_0348:
							DisablePort(Exxc);
							if (Conversion.Val(txtLoopFSD365_2.Text) > 5.0)
							{
								chkStop.Checked = true;
							}
							Application.DoEvents();
							goto end_IL_0001;
						}
						goto end_IL_0001_2;
					}
					case 1294:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_3;
							}
							break;
						}
						end_IL_0001:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_3:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1294;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_2:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void BtnTransGiftAutoSpVal_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				Stopwatch stopwatch;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 2915:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0018;
						case 5:
							goto IL_0029;
						case 7:
						case 8:
							goto IL_0043;
						case 9:
							goto IL_0063;
						case 11:
						case 12:
							goto IL_007a;
						case 13:
							goto IL_009f;
						case 15:
						case 16:
							goto IL_00b6;
						case 17:
							goto IL_00da;
						case 19:
						case 20:
							goto IL_00f1;
						case 21:
							goto IL_0105;
						case 22:
							goto IL_0119;
						case 23:
							goto IL_0123;
						case 24:
							goto IL_012d;
						case 25:
							goto IL_0141;
						case 26:
							goto IL_0165;
						case 27:
						case 28:
							goto IL_017b;
						case 29:
							goto IL_018f;
						case 30:
							goto IL_01b3;
						case 31:
						case 32:
							goto IL_01c9;
						case 33:
							goto IL_01dd;
						case 34:
							goto IL_0201;
						case 35:
						case 36:
							goto IL_0217;
						case 37:
							goto IL_022b;
						case 38:
							goto IL_024f;
						case 39:
						case 40:
							goto IL_0265;
						case 41:
							goto IL_0279;
						case 42:
							goto IL_029d;
						case 43:
						case 44:
							goto IL_02b3;
						case 45:
							goto IL_02c7;
						case 46:
							goto IL_02eb;
						case 47:
						case 48:
							goto IL_0301;
						case 49:
						case 109:
							goto IL_030c;
						case 50:
							goto IL_0315;
						case 52:
							goto IL_037c;
						case 53:
							goto IL_03ce;
						case 54:
							goto IL_03dc;
						case 55:
							goto IL_03ec;
						case 56:
							goto IL_0408;
						case 57:
							goto IL_0418;
						case 58:
							goto IL_044b;
						case 59:
							goto IL_0462;
						case 60:
						case 61:
							goto IL_046a;
						case 62:
							goto IL_04bc;
						case 63:
							goto IL_04ca;
						case 64:
							goto IL_04da;
						case 65:
							goto IL_04f6;
						case 66:
							goto IL_0506;
						case 67:
							goto IL_0539;
						case 68:
							goto IL_0550;
						case 69:
						case 70:
							goto IL_0558;
						case 71:
							goto IL_05aa;
						case 72:
							goto IL_05b8;
						case 73:
							goto IL_05c8;
						case 74:
							goto IL_05e4;
						case 75:
							goto IL_05f4;
						case 76:
							goto IL_0627;
						case 77:
							goto IL_063e;
						case 78:
						case 79:
							goto IL_0646;
						case 80:
							goto IL_0698;
						case 81:
							goto IL_06a6;
						case 82:
							goto IL_06b6;
						case 83:
							goto IL_06d2;
						case 84:
							goto IL_06e2;
						case 85:
							goto IL_0715;
						case 86:
							goto IL_072c;
						case 87:
						case 88:
							goto IL_0734;
						case 89:
							goto IL_0786;
						case 90:
							goto IL_0794;
						case 91:
							goto IL_07a4;
						case 92:
							goto IL_07c0;
						case 93:
							goto IL_07d0;
						case 94:
							goto IL_0803;
						case 95:
							goto IL_081a;
						case 96:
						case 97:
							goto IL_0822;
						case 98:
							goto IL_0874;
						case 99:
							goto IL_0882;
						case 100:
							goto IL_0892;
						case 101:
							goto IL_08ae;
						case 102:
							goto IL_08be;
						case 103:
							goto IL_08f1;
						case 104:
							goto IL_0908;
						case 105:
						case 106:
							goto IL_0910;
						case 108:
							goto IL_0926;
						case 110:
							goto IL_093c;
						case 111:
							goto IL_0946;
						case 51:
						case 107:
						case 112:
							goto IL_0950;
						case 113:
							goto IL_095a;
						case 114:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 6:
						case 10:
						case 14:
						case 18:
						case 115:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0946:
					num2 = 111;
					Application.DoEvents();
					goto IL_0950;
					IL_0950:
					num2 = 112;
					EnableCntl();
					goto IL_095a;
					IL_093c:
					num2 = 110;
					ReturnReadGift();
					goto IL_0946;
					IL_095a:
					num2 = 113;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					num5 = 0;
					goto IL_0018;
					IL_0018:
					num2 = 4;
					if (MysqlConn.MainProgLic < 11)
					{
						goto IL_0029;
					}
					goto IL_0043;
					IL_0029:
					num2 = 5;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0043:
					num2 = 8;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0063;
					}
					goto IL_007a;
					IL_0063:
					num2 = 9;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_007a:
					num2 = 12;
					if (txtTransNum2.Text.Trim().Length != 11)
					{
						goto IL_009f;
					}
					goto IL_00b6;
					IL_009f:
					num2 = 13;
					Interaction.MsgBox("ادخل رقم الخط المراد التحويل  له");
					goto end_IL_0001_3;
					IL_00b6:
					num2 = 16;
					if (Conversion.Val(txtVCForceMony.Text) == 0.0)
					{
						goto IL_00da;
					}
					goto IL_00f1;
					IL_00da:
					num2 = 17;
					Interaction.MsgBox("حدد مبلغ الشحن");
					goto end_IL_0001_3;
					IL_00f1:
					num2 = 20;
					lblProgress.BackColor = Color.Red;
					goto IL_0105;
					IL_0105:
					num2 = 21;
					lblProgress.Text = "شحن المبلغ رصيد";
					goto IL_0119;
					IL_0119:
					num2 = 22;
					DisableCntl();
					goto IL_0123;
					IL_0123:
					num2 = 23;
					FreezAddGift = true;
					goto IL_012d;
					IL_012d:
					num2 = 24;
					if (chkCh1.Checked)
					{
						goto IL_0141;
					}
					goto IL_017b;
					IL_0141:
					num2 = 25;
					lblGiftV1.Text = Conversions.ToString(Conversion.Val(txtVCForceMony.Text));
					goto IL_0165;
					IL_0165:
					num2 = 26;
					lblGifts01.Text = "1";
					goto IL_017b;
					IL_017b:
					num2 = 28;
					if (chkCh2.Checked)
					{
						goto IL_018f;
					}
					goto IL_01c9;
					IL_018f:
					num2 = 29;
					lblGiftV2.Text = Conversions.ToString(Conversion.Val(txtVCForceMony.Text));
					goto IL_01b3;
					IL_01b3:
					num2 = 30;
					lblGifts02.Text = "1";
					goto IL_01c9;
					IL_01c9:
					num2 = 32;
					if (chkCh3.Checked)
					{
						goto IL_01dd;
					}
					goto IL_0217;
					IL_01dd:
					num2 = 33;
					lblGiftV3.Text = Conversions.ToString(Conversion.Val(txtVCForceMony.Text));
					goto IL_0201;
					IL_0201:
					num2 = 34;
					lblGifts03.Text = "1";
					goto IL_0217;
					IL_0217:
					num2 = 36;
					if (chkCh4.Checked)
					{
						goto IL_022b;
					}
					goto IL_0265;
					IL_022b:
					num2 = 37;
					lblGiftV4.Text = Conversions.ToString(Conversion.Val(txtVCForceMony.Text));
					goto IL_024f;
					IL_024f:
					num2 = 38;
					lblGifts04.Text = "1";
					goto IL_0265;
					IL_0265:
					num2 = 40;
					if (chkCh5.Checked)
					{
						goto IL_0279;
					}
					goto IL_02b3;
					IL_0279:
					num2 = 41;
					lblGiftV5.Text = Conversions.ToString(Conversion.Val(txtVCForceMony.Text));
					goto IL_029d;
					IL_029d:
					num2 = 42;
					lblGifts05.Text = "1";
					goto IL_02b3;
					IL_02b3:
					num2 = 44;
					if (chkCh6.Checked)
					{
						goto IL_02c7;
					}
					goto IL_0301;
					IL_02c7:
					num2 = 45;
					lblGiftV6.Text = Conversions.ToString(Conversion.Val(txtVCForceMony.Text));
					goto IL_02eb;
					IL_02eb:
					num2 = 46;
					lblGifts06.Text = "1";
					goto IL_0301;
					IL_0301:
					num2 = 48;
					FreezAddGift = false;
					goto IL_030c;
					IL_030c:
					num2 = 49;
					num5 = checked(num5 + 1);
					goto IL_0315;
					IL_0315:
					num2 = 50;
					if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						goto IL_037c;
					}
					goto IL_0950;
					IL_037c:
					num2 = 52;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked & (Conversion.Val(lblGiftV1.Text) > 0.0))
					{
						goto IL_03ce;
					}
					goto IL_046a;
					IL_03ce:
					num2 = 53;
					if (num5 == 4)
					{
						goto IL_03dc;
					}
					goto IL_03ec;
					IL_03dc:
					num2 = 54;
					ResetUssdCodeVC(lblPort1);
					goto IL_03ec;
					IL_03ec:
					num2 = 55;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_0408;
					}
					goto IL_0418;
					IL_0408:
					num2 = 56;
					ResetUssdCode(lblPort1);
					goto IL_0418;
					IL_0418:
					num2 = 57;
					SetUssdOrderVcashTraVXPVaryGift(lblPort1, checked((int)Math.Round(Conversion.Val(lblGiftV1.Text))), num5, txtTransNum2.Text);
					goto IL_044b;
					IL_044b:
					num2 = 58;
					if (!chkCh1.Checked)
					{
						goto IL_0462;
					}
					goto IL_046a;
					IL_0462:
					num2 = 59;
					num5 = 0;
					goto IL_046a;
					IL_046a:
					num2 = 61;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked & (Conversion.Val(lblGiftV2.Text) > 0.0))
					{
						goto IL_04bc;
					}
					goto IL_0558;
					IL_04bc:
					num2 = 62;
					if (num5 == 4)
					{
						goto IL_04ca;
					}
					goto IL_04da;
					IL_04ca:
					num2 = 63;
					ResetUssdCodeVC(lblPort2);
					goto IL_04da;
					IL_04da:
					num2 = 64;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_04f6;
					}
					goto IL_0506;
					IL_04f6:
					num2 = 65;
					ResetUssdCode(lblPort2);
					goto IL_0506;
					IL_0506:
					num2 = 66;
					SetUssdOrderVcashTraVXPVaryGift(lblPort2, checked((int)Math.Round(Conversion.Val(lblGiftV2.Text))), num5, txtTransNum2.Text);
					goto IL_0539;
					IL_0539:
					num2 = 67;
					if (!chkCh2.Checked)
					{
						goto IL_0550;
					}
					goto IL_0558;
					IL_0550:
					num2 = 68;
					num5 = 0;
					goto IL_0558;
					IL_0558:
					num2 = 70;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked & (Conversion.Val(lblGiftV3.Text) > 0.0))
					{
						goto IL_05aa;
					}
					goto IL_0646;
					IL_05aa:
					num2 = 71;
					if (num5 == 4)
					{
						goto IL_05b8;
					}
					goto IL_05c8;
					IL_05b8:
					num2 = 72;
					ResetUssdCodeVC(lblPort3);
					goto IL_05c8;
					IL_05c8:
					num2 = 73;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_05e4;
					}
					goto IL_05f4;
					IL_05e4:
					num2 = 74;
					ResetUssdCode(lblPort3);
					goto IL_05f4;
					IL_05f4:
					num2 = 75;
					SetUssdOrderVcashTraVXPVaryGift(lblPort3, checked((int)Math.Round(Conversion.Val(lblGiftV3.Text))), num5, txtTransNum2.Text);
					goto IL_0627;
					IL_0627:
					num2 = 76;
					if (!chkCh3.Checked)
					{
						goto IL_063e;
					}
					goto IL_0646;
					IL_063e:
					num2 = 77;
					num5 = 0;
					goto IL_0646;
					IL_0646:
					num2 = 79;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked & (Conversion.Val(lblGiftV4.Text) > 0.0))
					{
						goto IL_0698;
					}
					goto IL_0734;
					IL_0698:
					num2 = 80;
					if (num5 == 4)
					{
						goto IL_06a6;
					}
					goto IL_06b6;
					IL_06a6:
					num2 = 81;
					ResetUssdCodeVC(lblPort4);
					goto IL_06b6;
					IL_06b6:
					num2 = 82;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_06d2;
					}
					goto IL_06e2;
					IL_06d2:
					num2 = 83;
					ResetUssdCode(lblPort4);
					goto IL_06e2;
					IL_06e2:
					num2 = 84;
					SetUssdOrderVcashTraVXPVaryGift(lblPort4, checked((int)Math.Round(Conversion.Val(lblGiftV4.Text))), num5, txtTransNum2.Text);
					goto IL_0715;
					IL_0715:
					num2 = 85;
					if (!chkCh4.Checked)
					{
						goto IL_072c;
					}
					goto IL_0734;
					IL_072c:
					num2 = 86;
					num5 = 0;
					goto IL_0734;
					IL_0734:
					num2 = 88;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked & (Conversion.Val(lblGiftV5.Text) > 0.0))
					{
						goto IL_0786;
					}
					goto IL_0822;
					IL_0786:
					num2 = 89;
					if (num5 == 4)
					{
						goto IL_0794;
					}
					goto IL_07a4;
					IL_0794:
					num2 = 90;
					ResetUssdCodeVC(lblPort5);
					goto IL_07a4;
					IL_07a4:
					num2 = 91;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_07c0;
					}
					goto IL_07d0;
					IL_07c0:
					num2 = 92;
					ResetUssdCode(lblPort5);
					goto IL_07d0;
					IL_07d0:
					num2 = 93;
					SetUssdOrderVcashTraVXPVaryGift(lblPort5, checked((int)Math.Round(Conversion.Val(lblGiftV5.Text))), num5, txtTransNum2.Text);
					goto IL_0803;
					IL_0803:
					num2 = 94;
					if (!chkCh5.Checked)
					{
						goto IL_081a;
					}
					goto IL_0822;
					IL_081a:
					num2 = 95;
					num5 = 0;
					goto IL_0822;
					IL_0822:
					num2 = 97;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked & (Conversion.Val(lblGiftV6.Text) > 0.0))
					{
						goto IL_0874;
					}
					goto IL_0910;
					IL_0874:
					num2 = 98;
					if (num5 == 4)
					{
						goto IL_0882;
					}
					goto IL_0892;
					IL_0882:
					num2 = 99;
					ResetUssdCodeVC(lblPort6);
					goto IL_0892;
					IL_0892:
					num2 = 100;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_08ae;
					}
					goto IL_08be;
					IL_08ae:
					num2 = 101;
					ResetUssdCode(lblPort6);
					goto IL_08be;
					IL_08be:
					num2 = 102;
					SetUssdOrderVcashTraVXPVaryGift(lblPort6, checked((int)Math.Round(Conversion.Val(lblGiftV6.Text))), num5, txtTransNum2.Text);
					goto IL_08f1;
					IL_08f1:
					num2 = 103;
					if (!chkCh6.Checked)
					{
						goto IL_0908;
					}
					goto IL_0910;
					IL_0908:
					num2 = 104;
					num5 = 0;
					goto IL_0910;
					IL_0910:
					num2 = 106;
					if (!chkStop.Checked)
					{
						goto IL_0926;
					}
					goto IL_0950;
					IL_0926:
					num2 = 108;
					if (num5 <= 5)
					{
						goto IL_030c;
					}
					goto IL_093c;
					end_IL_0001_2:
					break;
				}
				num2 = 114;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 2915;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void BtnTransToNextMain_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1020:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_000f;
						case 4:
							goto IL_001f;
						case 6:
						case 7:
							goto IL_0039;
						case 8:
							goto IL_0059;
						case 10:
						case 11:
							goto IL_006f;
						case 12:
							goto IL_0093;
						case 14:
						case 15:
							goto IL_00aa;
						case 16:
							goto IL_00cf;
						case 18:
						case 19:
							goto IL_00e6;
						case 20:
							goto IL_010b;
						case 22:
						case 23:
							goto IL_0122;
						case 24:
							goto IL_0136;
						case 25:
							goto IL_0140;
						case 26:
							goto IL_014a;
						case 27:
							goto IL_0154;
						case 28:
							goto IL_0164;
						case 29:
							goto IL_0174;
						case 30:
							goto IL_0184;
						case 31:
							goto IL_0194;
						case 32:
							goto IL_01a4;
						case 33:
						case 47:
							goto IL_01b5;
						case 34:
							goto IL_01bc;
						case 36:
							goto IL_01d5;
						case 38:
							goto IL_023c;
						case 39:
							goto IL_0250;
						case 40:
							goto IL_0261;
						case 41:
							goto IL_026b;
						case 43:
							goto IL_0281;
						case 44:
							goto IL_0295;
						case 45:
							goto IL_02bc;
						case 46:
							goto IL_02c5;
						case 35:
						case 37:
						case 42:
						case 48:
							goto IL_02dc;
						case 49:
							goto IL_02e5;
						case 50:
							goto IL_02ef;
						case 51:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
						case 9:
						case 13:
						case 17:
						case 21:
						case 52:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_02dc:
					num2 = 48;
					Application.DoEvents();
					goto IL_02e5;
					IL_02e5:
					num2 = 49;
					EnableCntl();
					goto IL_02ef;
					IL_02c5:
					num2 = 46;
					if (num5 <= 25)
					{
						goto IL_01b5;
					}
					goto IL_02dc;
					IL_02ef:
					num2 = 50;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_000f;
					IL_000f:
					num2 = 3;
					if (MysqlConn.MainProgLic < 6)
					{
						goto IL_001f;
					}
					goto IL_0039;
					IL_001f:
					num2 = 4;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0039:
					num2 = 7;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0059;
					}
					goto IL_006f;
					IL_0059:
					num2 = 8;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_006f:
					num2 = 11;
					if (Conversion.Val(txtMonyMn.Text) < 5.0)
					{
						goto IL_0093;
					}
					goto IL_00aa;
					IL_0093:
					num2 = 12;
					Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
					goto end_IL_0001_3;
					IL_00aa:
					num2 = 15;
					if (lblMain.Text.Trim().Length != 11)
					{
						goto IL_00cf;
					}
					goto IL_00e6;
					IL_00cf:
					num2 = 16;
					Interaction.MsgBox("حدد الرقم الاساسى");
					goto end_IL_0001_3;
					IL_00e6:
					num2 = 19;
					if (txtCashNextMaster.Text.Trim().Length != 11)
					{
						goto IL_010b;
					}
					goto IL_0122;
					IL_010b:
					num2 = 20;
					Interaction.MsgBox("حدد الرقم الاساسى التالى");
					goto end_IL_0001_3;
					IL_0122:
					num2 = 23;
					lblProgress.BackColor = Color.Red;
					goto IL_0136;
					IL_0136:
					num2 = 24;
					DisableCntl();
					goto IL_0140;
					IL_0140:
					num2 = 25;
					ClearCadsLocs();
					goto IL_014a;
					IL_014a:
					num2 = 26;
					ArrangVClinesCon();
					goto IL_0154;
					IL_0154:
					num2 = 27;
					chkCh1.Checked = true;
					goto IL_0164;
					IL_0164:
					num2 = 28;
					chkCh2.Checked = false;
					goto IL_0174;
					IL_0174:
					num2 = 29;
					chkCh3.Checked = false;
					goto IL_0184;
					IL_0184:
					num2 = 30;
					chkCh4.Checked = false;
					goto IL_0194;
					IL_0194:
					num2 = 31;
					chkCh5.Checked = false;
					goto IL_01a4;
					IL_01a4:
					num2 = 32;
					chkCh6.Checked = false;
					goto IL_01b5;
					IL_01b5:
					num2 = 33;
					num5 = checked(num5 + 1);
					goto IL_01bc;
					IL_01bc:
					num2 = 34;
					if (!chkStop.Checked)
					{
						goto IL_01d5;
					}
					goto IL_02dc;
					IL_01d5:
					num2 = 36;
					if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						goto IL_023c;
					}
					goto IL_02dc;
					IL_023c:
					num2 = 38;
					if (chkimpsms.Checked)
					{
						goto IL_0250;
					}
					goto IL_0261;
					IL_0250:
					num2 = 39;
					btnClearSMS_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_0261;
					IL_0261:
					num2 = 40;
					ReSetUssdOrder();
					goto IL_026b;
					IL_026b:
					num2 = 41;
					if (!chkStop.Checked)
					{
						goto IL_0281;
					}
					goto IL_02dc;
					IL_0281:
					num2 = 43;
					lblProgress.Text = "تحويل فودافون كاش ";
					goto IL_0295;
					IL_0295:
					num2 = 44;
					ApplyUssdCodeVC_Mex(lblPort1, txtCashNextMaster.Text.Trim(), chkCh1, 0);
					goto IL_02bc;
					IL_02bc:
					num2 = 45;
					Application.DoEvents();
					goto IL_02c5;
					end_IL_0001_2:
					break;
				}
				num2 = 51;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1020;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void BtnAutoVC_Seres_Click(object sender, EventArgs e)
	{
		int num = 0;
		int num2 = 0;
		if (MysqlConn.MainProgLic < 6)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Conversion.Val(txtMonyMn.Text) < 5.0)
		{
			Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
			return;
		}
		if ((txtCashNextMaster.Text.Trim().Length != 11) & ckUseNextMain.Checked)
		{
			Interaction.MsgBox("حدد رقم كاش لسحب الرصيد علية - الاساسى التالى");
			return;
		}
		if ((txtTransNum2.Text.Trim().Length != 11) & !chkChargeOnSame.Checked)
		{
			Interaction.MsgBox("ادخل رقم الخط المراد تحويل الهدايا له");
			return;
		}
		if ((Operators.CompareString(lblMain.Text, lblNum1.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum2.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum3.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum4.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum5.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum6.Text, TextCompare: false) != 0))
		{
			Interaction.MsgBox("مشكلة بالاساسى");
			chkStop.Checked = true;
			return;
		}
		if (chkChargeOnSame.Checked)
		{
			int num3 = (int)Interaction.MsgBox("هل تريد شحن الهدايا على نفس خط الكاش", MsgBoxStyle.YesNo | MsgBoxStyle.Question);
			if (num3 == 7)
			{
				return;
			}
		}
		txtLoopS.Text = "0";
		do
		{
			txtLoopS.Text = Conversions.ToString(Conversion.Val(txtLoopS.Text) + 1.0);
			num = 0;
			Application.DoEvents();
			if (chkStop.Checked)
			{
				return;
			}
			if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) == 0)
			{
				chkCh1.Checked = false;
			}
			if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) == 0)
			{
				chkCh2.Checked = false;
			}
			if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) == 0)
			{
				chkCh3.Checked = false;
			}
			if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0)
			{
				chkCh4.Checked = false;
			}
			if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0)
			{
				chkCh5.Checked = false;
			}
			if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0)
			{
				chkCh6.Checked = false;
			}
			lblGifts01.Text = "0";
			lblGifts02.Text = "0";
			lblGifts03.Text = "0";
			lblGifts04.Text = "0";
			lblGifts05.Text = "0";
			lblGifts06.Text = "0";
			lblGiftV1.Text = "0";
			lblGiftV2.Text = "0";
			lblGiftV3.Text = "0";
			lblGiftV4.Text = "0";
			lblGiftV5.Text = "0";
			lblGiftV6.Text = "0";
			if (chkStop.Checked)
			{
				return;
			}
			ClearCadsLocs();
			Application.DoEvents();
			ArrangVClinesCon();
			Application.DoEvents();
			if (chkSqn.Checked)
			{
				ArrangVCsequnce();
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				return;
			}
			Application.DoEvents();
			btnDeSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
			chkCh1.Checked = true;
			if (ckTransP.Checked)
			{
				txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
				if (Conversion.Val(txtMonyMn.Text) < 5.0)
				{
					goto IL_1168;
				}
			}
			do
			{
				num = checked(num + 1);
				if (chkStop.Checked)
				{
					break;
				}
				lblProgress.BackColor = Color.Red;
				lblProgress.Text = "Transfer";
				if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
				{
					if (num == 4)
					{
						ResetUssdCodeVC(lblPort1);
					}
					if (num == 6 || num == 15)
					{
						ResetUssdCode(lblPort1);
					}
					ApplyUssdCodeVC_Mex(lblPort1, lblNum2.Text, chkCh2, 1);
					if (!chkCh1.Checked)
					{
						if (ckTransP.Checked)
						{
							txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
							if (Conversion.Val(txtMonyMn.Text) < 5.0)
							{
								break;
							}
						}
						num = 0;
					}
					Application.DoEvents();
				}
				Application.DoEvents();
				if (chkStop.Checked)
				{
					break;
				}
				if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
				{
					if (num == 4)
					{
						ResetUssdCodeVC(lblPort2);
					}
					if (num == 5 || num == 15)
					{
						ResetUssdCode(lblPort2);
					}
					ApplyUssdCodeVC_Mex(lblPort2, lblNum3.Text, chkCh3, 1);
					if (!chkCh2.Checked)
					{
						if (ckTransP.Checked)
						{
							txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
							if (Conversion.Val(txtMonyMn.Text) < 5.0)
							{
								break;
							}
						}
						num = 0;
					}
					Application.DoEvents();
				}
				Application.DoEvents();
				if (chkStop.Checked)
				{
					break;
				}
				if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
				{
					if (num == 4)
					{
						ResetUssdCodeVC(lblPort3);
					}
					if (num == 5 || num == 15)
					{
						ResetUssdCode(lblPort3);
					}
					ApplyUssdCodeVC_Mex(lblPort3, lblNum4.Text, chkCh4, 1);
					if (!chkCh3.Checked)
					{
						if (ckTransP.Checked)
						{
							txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
							if (Conversion.Val(txtMonyMn.Text) < 5.0)
							{
								break;
							}
						}
						num = 0;
					}
					Application.DoEvents();
				}
				if (chkStop.Checked)
				{
					break;
				}
				if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0) & chkCh3.Checked & ckUseNextMain.Checked)
				{
					if (num == 4)
					{
						ResetUssdCodeVC(lblPort3);
					}
					if (num == 5 || num == 15)
					{
						ResetUssdCode(lblPort3);
					}
					ApplyUssdCodeVC_Mex(lblPort3, txtCashNextMaster.Text, cknull, 1);
					if (!chkCh3.Checked)
					{
						if (ckTransP.Checked)
						{
							txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
							if (Conversion.Val(txtMonyMn.Text) < 5.0)
							{
								break;
							}
						}
						num = 0;
					}
					Application.DoEvents();
				}
				if ((!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) || chkStop.Checked)
				{
					break;
				}
				Application.DoEvents();
				if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
				{
					if (num == 4)
					{
						ResetUssdCodeVC(lblPort4);
					}
					if (num == 5 || num == 15)
					{
						ResetUssdCode(lblPort4);
					}
					ApplyUssdCodeVC_Mex(lblPort4, lblNum5.Text, chkCh5, 1);
					if (!chkCh4.Checked)
					{
						if (ckTransP.Checked)
						{
							txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
							if (Conversion.Val(txtMonyMn.Text) < 5.0)
							{
								break;
							}
						}
						num = 0;
					}
					Application.DoEvents();
				}
				if (chkStop.Checked)
				{
					break;
				}
				if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0) & chkCh4.Checked & ckUseNextMain.Checked)
				{
					if (num == 4)
					{
						ResetUssdCodeVC(lblPort4);
					}
					if (num == 5 || num == 15)
					{
						ResetUssdCode(lblPort4);
					}
					ApplyUssdCodeVC_Mex(lblPort4, txtCashNextMaster.Text, cknull, 1);
					if (!chkCh4.Checked)
					{
						if (ckTransP.Checked)
						{
							txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
							if (Conversion.Val(txtMonyMn.Text) < 5.0)
							{
								break;
							}
						}
						num = 0;
					}
					Application.DoEvents();
				}
				if ((!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) || chkStop.Checked)
				{
					break;
				}
				Application.DoEvents();
				if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
				{
					if (num == 4)
					{
						ResetUssdCodeVC(lblPort5);
					}
					if (num == 5 || num == 15)
					{
						ResetUssdCode(lblPort5);
					}
					ApplyUssdCodeVC_Mex(lblPort5, lblNum6.Text, chkCh6, 1);
					if (!chkCh5.Checked)
					{
						if (ckTransP.Checked)
						{
							txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
							if (Conversion.Val(txtMonyMn.Text) < 5.0)
							{
								break;
							}
						}
						num = 0;
					}
					Application.DoEvents();
				}
				if (chkStop.Checked)
				{
					break;
				}
				if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0) & chkCh5.Checked & ckUseNextMain.Checked)
				{
					if (num == 4)
					{
						ResetUssdCodeVC(lblPort5);
					}
					if (num == 8 || num == 12 || num == 15)
					{
						ResetUssdCode(lblPort5);
					}
					ApplyUssdCodeVC_Mex(lblPort5, txtCashNextMaster.Text, cknull, 1);
					if (!chkCh5.Checked)
					{
						if (ckTransP.Checked)
						{
							txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
							if (Conversion.Val(txtMonyMn.Text) < 5.0)
							{
								break;
							}
						}
						num = 0;
					}
					Application.DoEvents();
				}
				if (!((Operators.CompareString(txtCashNextMaster.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked & ckUseNextMain.Checked))
				{
					continue;
				}
				if (num == 4)
				{
					ResetUssdCodeVC(lblPort6);
				}
				if (num == 8 || num == 12 || num == 15)
				{
					ResetUssdCode(lblPort6);
				}
				ApplyUssdCodeVC_Mex(lblPort6, txtCashNextMaster.Text, cknull, 1);
				if (!chkCh6.Checked)
				{
					if (ckTransP.Checked)
					{
						txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
						if (Conversion.Val(txtMonyMn.Text) < 5.0)
						{
							break;
						}
					}
					num = 0;
				}
				Application.DoEvents();
			}
			while (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) && num <= 60);
			goto IL_1168;
			IL_1a53:
			if (txtRet01.Text.Contains("فلوس") && txtRet01.ForeColor == Color.Cyan)
			{
				txtRet01.ForeColor = Color.White;
			}
			if (txtRet02.Text.Contains("فلوس") && txtRet02.ForeColor == Color.Cyan)
			{
				txtRet02.ForeColor = Color.White;
			}
			if (txtRet03.Text.Contains("فلوس") && txtRet03.ForeColor == Color.Cyan)
			{
				txtRet03.ForeColor = Color.White;
			}
			if (txtRet04.Text.Contains("فلوس") && txtRet04.ForeColor == Color.Cyan)
			{
				txtRet04.ForeColor = Color.White;
			}
			if (txtRet05.Text.Contains("فلوس") && txtRet05.ForeColor == Color.Cyan)
			{
				txtRet05.ForeColor = Color.White;
			}
			if (txtRet06.Text.Contains("فلوس") && txtRet06.ForeColor == Color.Cyan)
			{
				txtRet06.ForeColor = Color.White;
			}
			Application.DoEvents();
			goto IL_1c0f;
			IL_1168:
			Application.DoEvents();
			btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
			Application.DoEvents();
			btnRun02_Click(RuntimeHelpers.GetObjectValue(sender), e);
			Application.DoEvents();
			if (chkStop.Checked)
			{
				return;
			}
			Application.DoEvents();
			if (chkUse365inprcss.Checked)
			{
				Application.DoEvents();
				if (Conversion.Val(lblGifts01.Text) >= 1.0)
				{
					chkCh1.Checked = true;
				}
				else
				{
					chkCh1.Checked = false;
				}
				if (Conversion.Val(lblGifts02.Text) >= 1.0)
				{
					chkCh2.Checked = true;
				}
				else
				{
					chkCh2.Checked = false;
				}
				if (Conversion.Val(lblGifts03.Text) >= 1.0)
				{
					chkCh3.Checked = true;
				}
				else
				{
					chkCh3.Checked = false;
				}
				if (Conversion.Val(lblGifts04.Text) >= 1.0)
				{
					chkCh4.Checked = true;
				}
				else
				{
					chkCh4.Checked = false;
				}
				if (Conversion.Val(lblGifts05.Text) >= 1.0)
				{
					chkCh5.Checked = true;
				}
				else
				{
					chkCh5.Checked = false;
				}
				if (Conversion.Val(lblGifts06.Text) >= 1.0)
				{
					chkCh6.Checked = true;
				}
				else
				{
					chkCh6.Checked = false;
				}
				Application.DoEvents();
				if (chkStop.Checked)
				{
					return;
				}
				SetUssdOrderVc365_WithGifts(txtTransNum2.Text, 0);
				Application.DoEvents();
				if (lblPort1.BackColor == Color.PaleGreen)
				{
					chkCh1.Checked = true;
				}
				else
				{
					chkCh1.Checked = false;
				}
				if (lblPort2.BackColor == Color.PaleGreen)
				{
					chkCh2.Checked = true;
				}
				else
				{
					chkCh2.Checked = false;
				}
				if (lblPort3.BackColor == Color.PaleGreen)
				{
					chkCh3.Checked = true;
				}
				else
				{
					chkCh3.Checked = false;
				}
				if (lblPort4.BackColor == Color.PaleGreen)
				{
					chkCh4.Checked = true;
				}
				else
				{
					chkCh4.Checked = false;
				}
				if (lblPort5.BackColor == Color.PaleGreen)
				{
					chkCh5.Checked = true;
				}
				else
				{
					chkCh5.Checked = false;
				}
				if (lblPort6.BackColor == Color.PaleGreen)
				{
					chkCh6.Checked = true;
				}
				else
				{
					chkCh6.Checked = false;
				}
				ApplyAllTransferToVC365_50(50);
			}
			if (lblPort1.BackColor == Color.PaleGreen)
			{
				lblPort1.BackColor = Color.Black;
			}
			if (lblPort2.BackColor == Color.PaleGreen)
			{
				lblPort2.BackColor = Color.Black;
			}
			if (lblPort3.BackColor == Color.PaleGreen)
			{
				lblPort3.BackColor = Color.Black;
			}
			if (lblPort4.BackColor == Color.PaleGreen)
			{
				lblPort4.BackColor = Color.Black;
			}
			if (lblPort5.BackColor == Color.PaleGreen)
			{
				lblPort5.BackColor = Color.Black;
			}
			if (lblPort6.BackColor == Color.PaleGreen)
			{
				lblPort6.BackColor = Color.Black;
			}
			if ((Conversion.Val(lblGifts01.Text) >= 1.0) & (lblPort1.BackColor == Color.Black))
			{
				chkCh1.Checked = true;
			}
			else
			{
				chkCh1.Checked = false;
			}
			if ((Conversion.Val(lblGifts02.Text) >= 1.0) & (lblPort2.BackColor == Color.Black))
			{
				chkCh2.Checked = true;
			}
			else
			{
				chkCh2.Checked = false;
			}
			if ((Conversion.Val(lblGifts03.Text) >= 1.0) & (lblPort3.BackColor == Color.Black))
			{
				chkCh3.Checked = true;
			}
			else
			{
				chkCh3.Checked = false;
			}
			if ((Conversion.Val(lblGifts04.Text) >= 1.0) & (lblPort4.BackColor == Color.Black))
			{
				chkCh4.Checked = true;
			}
			else
			{
				chkCh4.Checked = false;
			}
			if ((Conversion.Val(lblGifts05.Text) >= 1.0) & (lblPort5.BackColor == Color.Black))
			{
				chkCh5.Checked = true;
			}
			else
			{
				chkCh5.Checked = false;
			}
			if ((Conversion.Val(lblGifts06.Text) >= 1.0) & (lblPort6.BackColor == Color.Black))
			{
				chkCh6.Checked = true;
			}
			else
			{
				chkCh6.Checked = false;
			}
			Application.DoEvents();
			if (chkTransGift.Checked)
			{
				BtnTransGiftAuto_Click(RuntimeHelpers.GetObjectValue(sender), e);
			}
			else if (ckbtnTransGiftAutoSpValAll0.Checked)
			{
				btnTransGiftAutoSpValAll_Click(RuntimeHelpers.GetObjectValue(sender), e);
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				return;
			}
			if (chkTransferAllNormalVoda.Checked)
			{
				btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
				Application.DoEvents();
				BtnTransGiftAutoNorm_Click(RuntimeHelpers.GetObjectValue(sender), e);
				Application.DoEvents();
				if (chkStop.Checked)
				{
					return;
				}
			}
			if (ckUseNextMain.Checked)
			{
				lblMain.Text = txtCashNextMaster.Text;
				txtCashNextMaster.Text = "";
				if (chkAutoMain.Checked)
				{
					SelectnextMainAuto();
				}
				goto IL_1a53;
			}
			if (Operators.CompareString(lblNum6.Text, "", TextCompare: false) != 0)
			{
				lblMain.Text = lblNum6.Text;
			}
			else if (Operators.CompareString(lblNum5.Text, "", TextCompare: false) != 0)
			{
				lblMain.Text = lblNum5.Text;
			}
			else if (Operators.CompareString(lblNum4.Text, "", TextCompare: false) != 0)
			{
				lblMain.Text = lblNum4.Text;
			}
			else if (Operators.CompareString(lblNum3.Text, "", TextCompare: false) != 0)
			{
				lblMain.Text = lblNum3.Text;
			}
			else
			{
				if (Operators.CompareString(lblNum2.Text, "", TextCompare: false) == 0)
				{
					goto IL_1a53;
				}
				lblMain.Text = lblNum2.Text;
			}
			goto IL_1c0f;
			IL_1c0f:
			if (chbeep.Checked)
			{
				EEmosemove = false;
				while (!EEmosemove)
				{
					Interaction.Beep();
					Application.DoEvents();
				}
			}
			if (txtRet01.Text.Contains("فلوس علي المحفظة"))
			{
				txtRet01.ForeColor = Color.Red;
			}
			if (txtRet02.Text.Contains("فلوس علي المحفظة"))
			{
				txtRet02.ForeColor = Color.Red;
			}
			if (txtRet03.Text.Contains("فلوس علي المحفظة"))
			{
				txtRet03.ForeColor = Color.Red;
			}
			if (txtRet04.Text.Contains("فلوس علي المحفظة"))
			{
				txtRet04.ForeColor = Color.Red;
			}
			if (txtRet05.Text.Contains("فلوس علي المحفظة"))
			{
				txtRet05.ForeColor = Color.Red;
			}
			if (txtRet06.Text.Contains("فلوس علي المحفظة"))
			{
				txtRet06.ForeColor = Color.Red;
			}
			if (txtRet01.Text.Contains("جنيه فلوس على محفظتك 50"))
			{
				txtRet01.ForeColor = Color.Gold;
			}
			if (txtRet02.Text.Contains("جنيه فلوس على محفظتك 50"))
			{
				txtRet02.ForeColor = Color.Gold;
			}
			if (txtRet03.Text.Contains("جنيه فلوس على محفظتك 50"))
			{
				txtRet03.ForeColor = Color.Gold;
			}
			if (txtRet04.Text.Contains("جنيه فلوس على محفظتك 50"))
			{
				txtRet04.ForeColor = Color.Gold;
			}
			if (txtRet05.Text.Contains("جنيه فلوس على محفظتك 50"))
			{
				txtRet05.ForeColor = Color.Gold;
			}
			if (txtRet06.Text.Contains("جنيه فلوس على محفظتك 50"))
			{
				txtRet06.ForeColor = Color.Gold;
			}
			if (ckUseNextMain.Checked)
			{
				txtCashNextMaster.Focus();
			}
		}
		while (Conversion.Val(txtLoopS.Text) < Conversion.Val(txtLoopF.Text));
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void BtnTransGiftAutoNorm_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				Stopwatch stopwatch;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1125:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0018;
						case 5:
							goto IL_0028;
						case 7:
						case 8:
							goto IL_0042;
						case 9:
							goto IL_0062;
						case 11:
						case 12:
							goto IL_0079;
						case 13:
							goto IL_009e;
						case 15:
						case 16:
							goto IL_00b5;
						case 17:
							goto IL_00c9;
						case 18:
							goto IL_00d3;
						case 19:
						case 55:
							goto IL_00de;
						case 20:
							goto IL_00e8;
						case 21:
							goto IL_00fc;
						case 22:
							goto IL_0105;
						case 24:
							goto IL_011e;
						case 26:
							goto IL_0185;
						case 27:
							goto IL_018e;
						case 28:
							goto IL_01a2;
						case 29:
							goto IL_01b2;
						case 31:
							goto IL_01cb;
						case 32:
							goto IL_01d4;
						case 33:
							goto IL_01e8;
						case 34:
							goto IL_01f8;
						case 36:
							goto IL_0211;
						case 37:
							goto IL_021a;
						case 38:
							goto IL_022e;
						case 39:
							goto IL_023e;
						case 41:
							goto IL_0257;
						case 42:
							goto IL_0260;
						case 43:
							goto IL_0274;
						case 44:
							goto IL_0284;
						case 46:
							goto IL_029d;
						case 47:
							goto IL_02a6;
						case 48:
							goto IL_02ba;
						case 49:
							goto IL_02ca;
						case 51:
							goto IL_02e0;
						case 52:
							goto IL_02e9;
						case 53:
							goto IL_02fd;
						case 54:
							goto IL_030d;
						case 23:
						case 25:
						case 30:
						case 35:
						case 40:
						case 45:
						case 50:
						case 56:
							goto IL_0325;
						case 57:
							goto IL_032e;
						case 58:
							goto IL_0338;
						case 59:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 6:
						case 10:
						case 14:
						case 60:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0325:
					num2 = 56;
					Application.DoEvents();
					goto IL_032e;
					IL_032e:
					num2 = 57;
					EnableCntl();
					goto IL_0338;
					IL_030d:
					num2 = 54;
					if (num5 <= 25)
					{
						goto IL_00de;
					}
					goto IL_0325;
					IL_0338:
					num2 = 58;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					num5 = 0;
					goto IL_0018;
					IL_0018:
					num2 = 4;
					if (MysqlConn.MainProgLic < 6)
					{
						goto IL_0028;
					}
					goto IL_0042;
					IL_0028:
					num2 = 5;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0042:
					num2 = 8;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0062;
					}
					goto IL_0079;
					IL_0062:
					num2 = 9;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_0079:
					num2 = 12;
					if (txtTransNum2.Text.Trim().Length != 11)
					{
						goto IL_009e;
					}
					goto IL_00b5;
					IL_009e:
					num2 = 13;
					Interaction.MsgBox("حدد رقم لسحب الرصيد الية");
					goto end_IL_0001_3;
					IL_00b5:
					num2 = 16;
					lblProgress.BackColor = Color.Red;
					goto IL_00c9;
					IL_00c9:
					num2 = 17;
					DisableCntl();
					goto IL_00d3;
					IL_00d3:
					num2 = 18;
					ClearCadsLocs();
					goto IL_00de;
					IL_00de:
					num2 = 19;
					ReSetUssdOrder();
					goto IL_00e8;
					IL_00e8:
					num2 = 20;
					lblProgress.Text = "سحب رصيد فودافون عادى ";
					goto IL_00fc;
					IL_00fc:
					num2 = 21;
					num5 = checked(num5 + 1);
					goto IL_0105;
					IL_0105:
					num2 = 22;
					if (!chkStop.Checked)
					{
						goto IL_011e;
					}
					goto IL_0325;
					IL_011e:
					num2 = 24;
					if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						goto IL_0185;
					}
					goto IL_0325;
					IL_0185:
					num2 = 26;
					Application.DoEvents();
					goto IL_018e;
					IL_018e:
					num2 = 27;
					if (chkCh1.Checked)
					{
						goto IL_01a2;
					}
					goto IL_01b2;
					IL_01a2:
					num2 = 28;
					TransferAllVodaNormBal(lblPort1);
					goto IL_01b2;
					IL_01b2:
					num2 = 29;
					if (!chkStop.Checked)
					{
						goto IL_01cb;
					}
					goto IL_0325;
					IL_01cb:
					num2 = 31;
					Application.DoEvents();
					goto IL_01d4;
					IL_01d4:
					num2 = 32;
					if (chkCh2.Checked)
					{
						goto IL_01e8;
					}
					goto IL_01f8;
					IL_01e8:
					num2 = 33;
					TransferAllVodaNormBal(lblPort2);
					goto IL_01f8;
					IL_01f8:
					num2 = 34;
					if (!chkStop.Checked)
					{
						goto IL_0211;
					}
					goto IL_0325;
					IL_0211:
					num2 = 36;
					Application.DoEvents();
					goto IL_021a;
					IL_021a:
					num2 = 37;
					if (chkCh3.Checked)
					{
						goto IL_022e;
					}
					goto IL_023e;
					IL_022e:
					num2 = 38;
					TransferAllVodaNormBal(lblPort3);
					goto IL_023e;
					IL_023e:
					num2 = 39;
					if (!chkStop.Checked)
					{
						goto IL_0257;
					}
					goto IL_0325;
					IL_0257:
					num2 = 41;
					Application.DoEvents();
					goto IL_0260;
					IL_0260:
					num2 = 42;
					if (chkCh4.Checked)
					{
						goto IL_0274;
					}
					goto IL_0284;
					IL_0274:
					num2 = 43;
					TransferAllVodaNormBal(lblPort4);
					goto IL_0284;
					IL_0284:
					num2 = 44;
					if (!chkStop.Checked)
					{
						goto IL_029d;
					}
					goto IL_0325;
					IL_029d:
					num2 = 46;
					Application.DoEvents();
					goto IL_02a6;
					IL_02a6:
					num2 = 47;
					if (chkCh5.Checked)
					{
						goto IL_02ba;
					}
					goto IL_02ca;
					IL_02ba:
					num2 = 48;
					TransferAllVodaNormBal(lblPort5);
					goto IL_02ca;
					IL_02ca:
					num2 = 49;
					if (!chkStop.Checked)
					{
						goto IL_02e0;
					}
					goto IL_0325;
					IL_02e0:
					num2 = 51;
					Application.DoEvents();
					goto IL_02e9;
					IL_02e9:
					num2 = 52;
					if (chkCh6.Checked)
					{
						goto IL_02fd;
					}
					goto IL_030d;
					IL_02fd:
					num2 = 53;
					TransferAllVodaNormBal(lblPort6);
					goto IL_030d;
					end_IL_0001_2:
					break;
				}
				num2 = 59;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1125;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void BtnRefreshComs_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				bool flag2;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 945:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0014;
						case 4:
							goto IL_0023;
						case 5:
							goto IL_0036;
						case 6:
							goto IL_0049;
						case 7:
							goto IL_005c;
						case 8:
							goto IL_006f;
						case 9:
							goto IL_0082;
						case 10:
							goto IL_0096;
						case 11:
							goto IL_00aa;
						case 12:
							goto IL_00be;
						case 13:
							goto IL_00d2;
						case 14:
							goto IL_00e6;
						case 15:
							goto IL_00fa;
						case 16:
							goto IL_010e;
						case 17:
							goto IL_0122;
						case 18:
							goto IL_0136;
						case 19:
							goto IL_014a;
						case 20:
							goto IL_015e;
						case 21:
							goto IL_0172;
						case 22:
							goto IL_0186;
						case 23:
							goto IL_019a;
						case 24:
							goto IL_01ae;
						case 25:
							goto IL_01be;
						case 26:
							goto IL_01ce;
						case 27:
							goto IL_01de;
						case 28:
							goto IL_01ee;
						case 29:
							goto IL_01fe;
						case 30:
							goto IL_020e;
						case 31:
							goto IL_022b;
						case 32:
						case 33:
							goto IL_0258;
						case 34:
							goto IL_0261;
						case 35:
							goto IL_0272;
						case 36:
							goto IL_027b;
						case 37:
							goto IL_0281;
						case 39:
						{
							num2 = 39;
							bool flag = false;
							goto IL_02a2;
						}
						case 40:
							num2 = 40;
							TryToConnectfastE303();
							goto IL_02a2;
						case 38:
						case 41:
						case 42:
							goto IL_02a2;
						case 43:
							goto IL_02ac;
						case 44:
							goto IL_02c0;
						case 45:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 46:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_02a2:
					num2 = 42;
					EnableCntl();
					goto IL_02ac;
					IL_02ac:
					num2 = 43;
					lblProgress.Text = "OK";
					goto IL_02c0;
					IL_0281:
					num2 = 37;
					TryToConnectFast();
					goto IL_02a2;
					IL_02c0:
					num2 = 44;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					DisableCntl();
					goto IL_0014;
					IL_0014:
					num2 = 3;
					btnRefreshComs.Enabled = false;
					goto IL_0023;
					IL_0023:
					num2 = 4;
					lblProgress.BackColor = Color.Red;
					goto IL_0036;
					IL_0036:
					num2 = 5;
					lblProgress.Text = "جارى الحصول على المنافذ";
					goto IL_0049;
					IL_0049:
					num2 = 6;
					lblNum1.Text = "";
					goto IL_005c;
					IL_005c:
					num2 = 7;
					lblPort1.Text = "";
					goto IL_006f;
					IL_006f:
					num2 = 8;
					lblNum2.Text = "";
					goto IL_0082;
					IL_0082:
					num2 = 9;
					lblPort2.Text = "";
					goto IL_0096;
					IL_0096:
					num2 = 10;
					lblNum3.Text = "";
					goto IL_00aa;
					IL_00aa:
					num2 = 11;
					lblPort3.Text = "";
					goto IL_00be;
					IL_00be:
					num2 = 12;
					lblNum4.Text = "";
					goto IL_00d2;
					IL_00d2:
					num2 = 13;
					lblPort4.Text = "";
					goto IL_00e6;
					IL_00e6:
					num2 = 14;
					lblNum5.Text = "";
					goto IL_00fa;
					IL_00fa:
					num2 = 15;
					lblPort5.Text = "";
					goto IL_010e;
					IL_010e:
					num2 = 16;
					lblNum6.Text = "";
					goto IL_0122;
					IL_0122:
					num2 = 17;
					lblPort6.Text = "";
					goto IL_0136;
					IL_0136:
					num2 = 18;
					lblBal1.Text = "";
					goto IL_014a;
					IL_014a:
					num2 = 19;
					lblBal2.Text = "";
					goto IL_015e;
					IL_015e:
					num2 = 20;
					lblBal3.Text = "";
					goto IL_0172;
					IL_0172:
					num2 = 21;
					lblBal4.Text = "";
					goto IL_0186;
					IL_0186:
					num2 = 22;
					lblBal5.Text = "";
					goto IL_019a;
					IL_019a:
					num2 = 23;
					lblBal6.Text = "";
					goto IL_01ae;
					IL_01ae:
					num2 = 24;
					chkCh1.Checked = false;
					goto IL_01be;
					IL_01be:
					num2 = 25;
					chkCh2.Checked = false;
					goto IL_01ce;
					IL_01ce:
					num2 = 26;
					chkCh3.Checked = false;
					goto IL_01de;
					IL_01de:
					num2 = 27;
					chkCh4.Checked = false;
					goto IL_01ee;
					IL_01ee:
					num2 = 28;
					chkCh5.Checked = false;
					goto IL_01fe;
					IL_01fe:
					num2 = 29;
					chkCh6.Checked = false;
					goto IL_020e;
					IL_020e:
					num2 = 30;
					if (txtEproc.Text.Length <= 0)
					{
						goto IL_022b;
					}
					goto IL_0258;
					IL_022b:
					num2 = 31;
					txtEproc.Text = DateTime.Today.Date.ToString("ddMMyyyy");
					goto IL_0258;
					IL_0258:
					num2 = 33;
					Application.DoEvents();
					goto IL_0261;
					IL_0261:
					num2 = 34;
					btnClear_Click(RuntimeHelpers.GetObjectValue(sender), e);
					goto IL_0272;
					IL_0272:
					num2 = 35;
					Application.DoEvents();
					goto IL_027b;
					IL_027b:
					num2 = 36;
					flag2 = true;
					goto IL_0281;
					end_IL_0001_2:
					break;
				}
				num2 = 45;
				btnRefreshComs.Enabled = true;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 945;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void BtnGetSimsGifts_Click(object sender, EventArgs e)
	{
		DisableCntl();
		btnGetSimsGifts.Enabled = false;
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "اعادة تشغيل المودمات";
		txtRet01.Text = "";
		txtRet02.Text = "";
		txtRet03.Text = "";
		txtRet04.Text = "";
		txtRet05.Text = "";
		txtRet06.Text = "";
		lblGifts01.Text = "0";
		lblGifts02.Text = "0";
		lblGifts03.Text = "0";
		lblGifts04.Text = "0";
		lblGifts05.Text = "0";
		lblGifts06.Text = "0";
		txtInfo.Text = "";
		lblGiftV1.Text = "0";
		lblGiftV2.Text = "0";
		lblGiftV3.Text = "0";
		lblGiftV4.Text = "0";
		lblGiftV5.Text = "0";
		lblGiftV6.Text = "0";
		if (lblNum1.BackColor == Color.Green)
		{
			lblNum1.Text = "";
			lblBal1.Text = "";
			lblNum1.BackColor = Color.Black;
			lblNum1.ForeColor = lblPort1.ForeColor;
			lblGifttotal1.Text = "0";
			RestartModem(lblPort1.Text);
		}
		if (lblNum2.BackColor == Color.Green)
		{
			lblNum2.Text = "";
			lblBal2.Text = "";
			lblNum2.BackColor = Color.Black;
			lblNum2.ForeColor = lblPort2.ForeColor;
			lblGifttotal2.Text = "0";
			RestartModem(lblPort2.Text);
		}
		if (lblNum3.BackColor == Color.Green)
		{
			lblNum3.Text = "";
			lblBal3.Text = "";
			lblNum3.BackColor = Color.Black;
			lblNum3.ForeColor = lblPort3.ForeColor;
			lblGifttotal3.Text = "0";
			RestartModem(lblPort3.Text);
		}
		if (lblNum4.BackColor == Color.Green)
		{
			lblNum4.Text = "";
			lblBal4.Text = "";
			lblNum4.BackColor = Color.Black;
			lblNum4.ForeColor = lblPort4.ForeColor;
			lblGifttotal4.Text = "0";
			RestartModem(lblPort4.Text);
		}
		if (lblNum5.BackColor == Color.Green)
		{
			lblNum5.Text = "";
			lblBal5.Text = "";
			lblNum5.BackColor = Color.Black;
			lblNum5.ForeColor = lblPort5.ForeColor;
			lblGifttotal5.Text = "0";
			RestartModem(lblPort5.Text);
		}
		if (lblNum6.BackColor == Color.Green)
		{
			lblNum6.Text = "";
			lblBal6.Text = "";
			lblNum6.BackColor = Color.Black;
			lblNum6.ForeColor = lblPort6.ForeColor;
			lblGifttotal6.Text = "0";
			RestartModem(lblPort6.Text);
		}
		btnGetSimsGifts.Enabled = true;
		EnableCntl();
		lblProgress.Text = "OK";
		lblProgress.BackColor = Color.LimeGreen;
	}

	private void BtnGetInfo_Click(object sender, EventArgs e)
	{
		txtInfo.Text = "------------------------------\r\n" + txtInfo.Text;
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0)
		{
			GetGiftsForThisNumber(lblNum1.Text);
		}
		if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0)
		{
			GetGiftsForThisNumber(lblNum2.Text);
		}
		if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0)
		{
			GetGiftsForThisNumber(lblNum3.Text);
		}
		if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0)
		{
			GetGiftsForThisNumber(lblNum4.Text);
		}
		if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0)
		{
			GetGiftsForThisNumber(lblNum5.Text);
		}
		if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0)
		{
			GetGiftsForThisNumber(lblNum6.Text);
		}
	}

	private void BtnDlGifts_Click(object sender, EventArgs e)
	{
		string left = Interaction.InputBox("ادخل كلمة مرور الحذف");
		if (Operators.CompareString(left, "205205205", TextCompare: false) != 0)
		{
			txtInfo.Text = "\r\nلم يتم الحذف \r\n" + txtInfo.Text;
			return;
		}
		string commandString = "delete from numsgifts where xdate < #" + Conversions.ToString(BDatedel.Value.Date) + "# ";
		objData.DatabaseCommand(commandString);
		txtInfo.Text = "\r\nتم الخذف بنجاح \r\n" + txtInfo.Text;
	}

	private void BtnReplyBy6_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 190:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0041;
						case 5:
							goto IL_004a;
						case 6:
							goto IL_0059;
						case 7:
							goto IL_0062;
						case 8:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 9:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_004a:
					num2 = 5;
					SetUssdOrderByX(txtReplyBy6);
					goto IL_0059;
					IL_0059:
					num2 = 6;
					EnableCntl();
					goto IL_0062;
					IL_0041:
					num2 = 4;
					DisableCntl();
					goto IL_004a;
					IL_0062:
					num2 = 7;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "Reply By  " + txtReplyBy6.Text;
					goto IL_0041;
					end_IL_0001_2:
					break;
				}
				num2 = 8;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 190;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void BtnReplyBy7_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 190:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0041;
						case 5:
							goto IL_004a;
						case 6:
							goto IL_0059;
						case 7:
							goto IL_0062;
						case 8:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 9:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_004a:
					num2 = 5;
					SetUssdOrderByX(txtReplyBy7);
					goto IL_0059;
					IL_0059:
					num2 = 6;
					EnableCntl();
					goto IL_0062;
					IL_0041:
					num2 = 4;
					DisableCntl();
					goto IL_004a;
					IL_0062:
					num2 = 7;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "Reply By  " + txtReplyBy7.Text;
					goto IL_0041;
					end_IL_0001_2:
					break;
				}
				num2 = 8;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 190;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void BtnApply365_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 7)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "***365***";
		DisableCntl();
		Application.DoEvents();
		SetUssdOrderVc365(txtTransNum2365.Text, checked((int)Math.Round(Conversion.Val(txtMonyMn365.Text))));
		Application.DoEvents();
		if (lblPort1.BackColor == Color.PaleGreen)
		{
			chkCh1.Checked = true;
		}
		else
		{
			chkCh1.Checked = false;
		}
		if (lblPort2.BackColor == Color.PaleGreen)
		{
			chkCh2.Checked = true;
		}
		else
		{
			chkCh2.Checked = false;
		}
		if (lblPort3.BackColor == Color.PaleGreen)
		{
			chkCh3.Checked = true;
		}
		else
		{
			chkCh3.Checked = false;
		}
		if (lblPort4.BackColor == Color.PaleGreen)
		{
			chkCh4.Checked = true;
		}
		else
		{
			chkCh4.Checked = false;
		}
		if (lblPort5.BackColor == Color.PaleGreen)
		{
			chkCh5.Checked = true;
		}
		else
		{
			chkCh5.Checked = false;
		}
		if (lblPort6.BackColor == Color.PaleGreen)
		{
			chkCh6.Checked = true;
		}
		else
		{
			chkCh6.Checked = false;
		}
		if (!chkNoCharge50.Checked)
		{
			ApplyAllTransferToVC365_50(50);
		}
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
		Application.DoEvents();
		if (chbeep.Checked)
		{
			EEmosemove = false;
			while (!EEmosemove)
			{
				Interaction.Beep();
				Application.DoEvents();
			}
		}
	}

	private void BtnApply36590_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 609:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0019;
						case 5:
						case 6:
							goto IL_0033;
						case 7:
							goto IL_0053;
						case 9:
						case 10:
							goto IL_0069;
						case 11:
							goto IL_007d;
						case 12:
							goto IL_0087;
						case 13:
						case 26:
							goto IL_009c;
						case 14:
							goto IL_00ca;
						case 15:
							goto IL_00d8;
						case 16:
							goto IL_00e8;
						case 18:
							goto IL_0101;
						case 19:
							goto IL_010a;
						case 20:
							goto IL_012b;
						case 21:
							goto IL_0139;
						case 22:
						case 23:
							goto IL_014b;
						case 24:
							goto IL_0154;
						case 25:
							goto IL_017f;
						case 17:
						case 27:
						case 28:
							goto IL_019e;
						case 29:
							goto IL_01a8;
						case 30:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 8:
						case 31:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_017f:
					num2 = 25;
					if (!chkStop.Checked)
					{
						goto IL_009c;
					}
					goto IL_019e;
					IL_019e:
					num2 = 28;
					EnableCntl();
					goto IL_01a8;
					IL_0154:
					num2 = 24;
					if (Conversion.Val(txtLoopSSD365.Text) < Conversion.Val(txtLoopFSD365.Text))
					{
						goto IL_017f;
					}
					goto IL_019e;
					IL_01a8:
					num2 = 29;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if (MysqlConn.MainProgLic < 7)
					{
						goto IL_0019;
					}
					goto IL_0033;
					IL_0019:
					num2 = 3;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0033:
					num2 = 6;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0053;
					}
					goto IL_0069;
					IL_0053:
					num2 = 7;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_0069:
					num2 = 10;
					lblProgress.BackColor = Color.Red;
					goto IL_007d;
					IL_007d:
					num2 = 11;
					DisableCntl();
					goto IL_0087;
					IL_0087:
					num2 = 12;
					txtLoopSSD365.Text = "0";
					goto IL_009c;
					IL_009c:
					num2 = 13;
					txtLoopSSD365.Text = Conversions.ToString(Conversion.Val(txtLoopSSD365.Text) + 1.0);
					goto IL_00ca;
					IL_00ca:
					num2 = 14;
					Thread.Sleep(800);
					goto IL_00d8;
					IL_00d8:
					num2 = 15;
					SetUssdOrder(txtGetgft365);
					goto IL_00e8;
					IL_00e8:
					num2 = 16;
					if (!chkStop.Checked)
					{
						goto IL_0101;
					}
					goto IL_019e;
					IL_0101:
					num2 = 18;
					Application.DoEvents();
					goto IL_010a;
					IL_010a:
					num2 = 19;
					if (txtGetgft365_2.Text.Trim().Length > 0)
					{
						goto IL_012b;
					}
					goto IL_014b;
					IL_012b:
					num2 = 20;
					Thread.Sleep(1500);
					goto IL_0139;
					IL_0139:
					num2 = 21;
					SetUssdOrder(txtGetgft365_2);
					goto IL_014b;
					IL_014b:
					num2 = 23;
					Application.DoEvents();
					goto IL_0154;
					end_IL_0001_2:
					break;
				}
				num2 = 30;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 609;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void BtnTransGiftAutoSpVal365_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		int num6 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				Stopwatch stopwatch;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 3667:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0018;
						case 5:
							goto IL_0028;
						case 7:
						case 8:
							goto IL_0042;
						case 9:
							goto IL_0062;
						case 11:
						case 12:
							goto IL_0079;
						case 13:
							goto IL_009e;
						case 15:
						case 16:
							goto IL_00b5;
						case 17:
							goto IL_00d9;
						case 19:
						case 20:
							goto IL_00f0;
						case 21:
							goto IL_0117;
						case 22:
							goto IL_0167;
						case 24:
						case 25:
							goto IL_017c;
						case 26:
							goto IL_0190;
						case 27:
							goto IL_01a4;
						case 28:
							goto IL_01ae;
						case 29:
							goto IL_01b8;
						case 30:
							goto IL_01cc;
						case 31:
							goto IL_01f0;
						case 32:
						case 33:
							goto IL_0206;
						case 34:
							goto IL_021a;
						case 35:
							goto IL_023e;
						case 36:
						case 37:
							goto IL_0254;
						case 38:
							goto IL_0268;
						case 39:
							goto IL_028c;
						case 40:
						case 41:
							goto IL_02a2;
						case 42:
							goto IL_02b6;
						case 43:
							goto IL_02da;
						case 44:
						case 45:
							goto IL_02f0;
						case 46:
							goto IL_0304;
						case 47:
							goto IL_0328;
						case 48:
						case 49:
							goto IL_033e;
						case 50:
							goto IL_0352;
						case 51:
							goto IL_0376;
						case 52:
						case 53:
							goto IL_038c;
						case 54:
							goto IL_0396;
						case 55:
						case 140:
							goto IL_03ab;
						case 56:
							goto IL_03d9;
						case 57:
							goto IL_03e7;
						case 58:
							goto IL_03fe;
						case 59:
							goto IL_0429;
						case 60:
						case 61:
							goto IL_043b;
						case 62:
							goto IL_0466;
						case 63:
						case 64:
							goto IL_0478;
						case 65:
							goto IL_04a3;
						case 66:
						case 67:
							goto IL_04b5;
						case 68:
							goto IL_04e0;
						case 69:
						case 70:
							goto IL_04f2;
						case 71:
							goto IL_051d;
						case 72:
						case 73:
							goto IL_052f;
						case 74:
							goto IL_055a;
						case 75:
						case 76:
						case 77:
						case 135:
							goto IL_056f;
						case 78:
							goto IL_0578;
						case 79:
							goto IL_05ca;
						case 80:
							goto IL_05d8;
						case 81:
							goto IL_05e8;
						case 82:
							goto IL_0604;
						case 83:
							goto IL_0614;
						case 84:
							goto IL_0647;
						case 85:
							goto IL_065e;
						case 86:
						case 87:
							goto IL_0666;
						case 88:
							goto IL_06b8;
						case 89:
							goto IL_06c6;
						case 90:
							goto IL_06d6;
						case 91:
							goto IL_06f2;
						case 92:
							goto IL_0702;
						case 93:
							goto IL_0735;
						case 94:
							goto IL_074c;
						case 95:
						case 96:
							goto IL_0754;
						case 97:
							goto IL_07a6;
						case 98:
							goto IL_07b4;
						case 99:
							goto IL_07c4;
						case 100:
							goto IL_07e0;
						case 101:
							goto IL_07f0;
						case 102:
							goto IL_0823;
						case 103:
							goto IL_083a;
						case 104:
						case 105:
							goto IL_0842;
						case 106:
							goto IL_0894;
						case 107:
							goto IL_08a2;
						case 108:
							goto IL_08b2;
						case 109:
							goto IL_08ce;
						case 110:
							goto IL_08de;
						case 111:
							goto IL_0911;
						case 112:
							goto IL_0928;
						case 113:
						case 114:
							goto IL_0930;
						case 115:
							goto IL_0982;
						case 116:
							goto IL_0990;
						case 117:
							goto IL_09a0;
						case 118:
							goto IL_09bc;
						case 119:
							goto IL_09cc;
						case 120:
							goto IL_09ff;
						case 121:
							goto IL_0a16;
						case 122:
						case 123:
							goto IL_0a1e;
						case 124:
							goto IL_0a70;
						case 125:
							goto IL_0a7e;
						case 126:
							goto IL_0a8e;
						case 127:
							goto IL_0aaa;
						case 128:
							goto IL_0aba;
						case 129:
							goto IL_0af0;
						case 130:
							goto IL_0b0a;
						case 131:
						case 132:
							goto IL_0b15;
						case 134:
							goto IL_0b31;
						case 136:
							goto IL_0b4a;
						case 137:
							goto IL_0b57;
						case 138:
							goto IL_0b63;
						case 139:
							goto IL_0b9d;
						case 133:
						case 141:
						case 142:
							goto IL_0bbf;
						case 143:
							goto IL_0bcc;
						case 144:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 6:
						case 10:
						case 14:
						case 18:
						case 23:
						case 145:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0b9d:
					num2 = 139;
					if (!chkStop.Checked)
					{
						goto IL_03ab;
					}
					goto IL_0bbf;
					IL_0bbf:
					num2 = 142;
					EnableCntl();
					goto IL_0bcc;
					IL_0b63:
					num2 = 138;
					if ((Conversion.Val(txtLoopSSD365Gft.Text) < Conversion.Val(txtLoopFSD365Gft.Text)) & chkTransGiftAutoSpVal365.Checked)
					{
						goto IL_0b9d;
					}
					goto IL_0bbf;
					IL_0bcc:
					num2 = 143;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					num5 = 0;
					goto IL_0018;
					IL_0018:
					num2 = 4;
					if (MysqlConn.MainProgLic < 7)
					{
						goto IL_0028;
					}
					goto IL_0042;
					IL_0028:
					num2 = 5;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0042:
					num2 = 8;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0062;
					}
					goto IL_0079;
					IL_0062:
					num2 = 9;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_0079:
					num2 = 12;
					if (txtTransNum2365Gft.Text.Trim().Length != 11)
					{
						goto IL_009e;
					}
					goto IL_00b5;
					IL_009e:
					num2 = 13;
					Interaction.MsgBox("ادخل رقم الخط المراد التحويل  له");
					goto end_IL_0001_3;
					IL_00b5:
					num2 = 16;
					if (Conversion.Val(txtVCForceMony365.Text) == 0.0)
					{
						goto IL_00d9;
					}
					goto IL_00f0;
					IL_00d9:
					num2 = 17;
					Interaction.MsgBox("حدد مبلغ للتحويل");
					goto end_IL_0001_3;
					IL_00f0:
					num2 = 20;
					if (Conversion.Val(txtVCForceMony365.Text) >= 100.0)
					{
						goto IL_0117;
					}
					goto IL_017c;
					IL_0117:
					num2 = 21;
					num6 = (int)Interaction.MsgBox("المبلغ المطلوب تحويلة كبير هل انت متاكد من تحويل مبلغ \r\n" + txtVCForceMony365.Text + "\r\nTopUp على الخط \r\n" + txtTransNum2365.Text.Trim() + "\r\nمن جميع الخطوط المحددة", MsgBoxStyle.YesNo);
					goto IL_0167;
					IL_0167:
					num2 = 22;
					if (num6 == 7)
					{
						goto end_IL_0001_3;
					}
					goto IL_017c;
					IL_017c:
					num2 = 25;
					lblProgress.BackColor = Color.Red;
					goto IL_0190;
					IL_0190:
					num2 = 26;
					lblProgress.Text = "تحويل المبلغ رصيد";
					goto IL_01a4;
					IL_01a4:
					num2 = 27;
					DisableCntl();
					goto IL_01ae;
					IL_01ae:
					num2 = 28;
					FreezAddGift = true;
					goto IL_01b8;
					IL_01b8:
					num2 = 29;
					if (chkCh1.Checked)
					{
						goto IL_01cc;
					}
					goto IL_0206;
					IL_01cc:
					num2 = 30;
					lblGiftV1.Text = Conversions.ToString(Conversion.Val(txtVCForceMony365.Text));
					goto IL_01f0;
					IL_01f0:
					num2 = 31;
					lblGifts01.Text = "1";
					goto IL_0206;
					IL_0206:
					num2 = 33;
					if (chkCh2.Checked)
					{
						goto IL_021a;
					}
					goto IL_0254;
					IL_021a:
					num2 = 34;
					lblGiftV2.Text = Conversions.ToString(Conversion.Val(txtVCForceMony365.Text));
					goto IL_023e;
					IL_023e:
					num2 = 35;
					lblGifts02.Text = "1";
					goto IL_0254;
					IL_0254:
					num2 = 37;
					if (chkCh3.Checked)
					{
						goto IL_0268;
					}
					goto IL_02a2;
					IL_0268:
					num2 = 38;
					lblGiftV3.Text = Conversions.ToString(Conversion.Val(txtVCForceMony365.Text));
					goto IL_028c;
					IL_028c:
					num2 = 39;
					lblGifts03.Text = "1";
					goto IL_02a2;
					IL_02a2:
					num2 = 41;
					if (chkCh4.Checked)
					{
						goto IL_02b6;
					}
					goto IL_02f0;
					IL_02b6:
					num2 = 42;
					lblGiftV4.Text = Conversions.ToString(Conversion.Val(txtVCForceMony365.Text));
					goto IL_02da;
					IL_02da:
					num2 = 43;
					lblGifts04.Text = "1";
					goto IL_02f0;
					IL_02f0:
					num2 = 45;
					if (chkCh5.Checked)
					{
						goto IL_0304;
					}
					goto IL_033e;
					IL_0304:
					num2 = 46;
					lblGiftV5.Text = Conversions.ToString(Conversion.Val(txtVCForceMony365.Text));
					goto IL_0328;
					IL_0328:
					num2 = 47;
					lblGifts05.Text = "1";
					goto IL_033e;
					IL_033e:
					num2 = 49;
					if (chkCh6.Checked)
					{
						goto IL_0352;
					}
					goto IL_038c;
					IL_0352:
					num2 = 50;
					lblGiftV6.Text = Conversions.ToString(Conversion.Val(txtVCForceMony365.Text));
					goto IL_0376;
					IL_0376:
					num2 = 51;
					lblGifts06.Text = "1";
					goto IL_038c;
					IL_038c:
					num2 = 53;
					FreezAddGift = false;
					goto IL_0396;
					IL_0396:
					num2 = 54;
					txtLoopSSD365Gft.Text = "0";
					goto IL_03ab;
					IL_03ab:
					num2 = 55;
					txtLoopSSD365Gft.Text = Conversions.ToString(Conversion.Val(txtLoopSSD365Gft.Text) + 1.0);
					goto IL_03d9;
					IL_03d9:
					num2 = 56;
					Thread.Sleep(800);
					goto IL_03e7;
					IL_03e7:
					num2 = 57;
					if (chkTransGiftAutoSpVal365.Checked)
					{
						goto IL_03fe;
					}
					goto IL_056f;
					IL_03fe:
					num2 = 58;
					if (Conversion.Val(lblGiftV1.Text) == Conversion.Val(txtVCForceMony365.Text))
					{
						goto IL_0429;
					}
					goto IL_043b;
					IL_0429:
					num2 = 59;
					chkCh1.Checked = true;
					goto IL_043b;
					IL_043b:
					num2 = 61;
					if (Conversion.Val(lblGiftV2.Text) == Conversion.Val(txtVCForceMony365.Text))
					{
						goto IL_0466;
					}
					goto IL_0478;
					IL_0466:
					num2 = 62;
					chkCh2.Checked = true;
					goto IL_0478;
					IL_0478:
					num2 = 64;
					if (Conversion.Val(lblGiftV3.Text) == Conversion.Val(txtVCForceMony365.Text))
					{
						goto IL_04a3;
					}
					goto IL_04b5;
					IL_04a3:
					num2 = 65;
					chkCh3.Checked = true;
					goto IL_04b5;
					IL_04b5:
					num2 = 67;
					if (Conversion.Val(lblGiftV4.Text) == Conversion.Val(txtVCForceMony365.Text))
					{
						goto IL_04e0;
					}
					goto IL_04f2;
					IL_04e0:
					num2 = 68;
					chkCh4.Checked = true;
					goto IL_04f2;
					IL_04f2:
					num2 = 70;
					if (Conversion.Val(lblGiftV5.Text) == Conversion.Val(txtVCForceMony365.Text))
					{
						goto IL_051d;
					}
					goto IL_052f;
					IL_051d:
					num2 = 71;
					chkCh5.Checked = true;
					goto IL_052f;
					IL_052f:
					num2 = 73;
					if (Conversion.Val(lblGiftV6.Text) == Conversion.Val(txtVCForceMony365.Text))
					{
						goto IL_055a;
					}
					goto IL_056f;
					IL_055a:
					num2 = 74;
					chkCh6.Checked = true;
					goto IL_056f;
					IL_056f:
					num2 = 77;
					num5 = checked(num5 + 1);
					goto IL_0578;
					IL_0578:
					num2 = 78;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked & (Conversion.Val(lblGiftV1.Text) > 0.0))
					{
						goto IL_05ca;
					}
					goto IL_0666;
					IL_05ca:
					num2 = 79;
					if (num5 == 4)
					{
						goto IL_05d8;
					}
					goto IL_05e8;
					IL_05d8:
					num2 = 80;
					ResetUssdCodeVC(lblPort1);
					goto IL_05e8;
					IL_05e8:
					num2 = 81;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_0604;
					}
					goto IL_0614;
					IL_0604:
					num2 = 82;
					ResetUssdCode(lblPort1);
					goto IL_0614;
					IL_0614:
					num2 = 83;
					SetUssdOrderVcashTraVXPVaryGift(lblPort1, checked((int)Math.Round(Conversion.Val(lblGiftV1.Text))), num5, txtTransNum2365Gft.Text);
					goto IL_0647;
					IL_0647:
					num2 = 84;
					if (!chkCh1.Checked)
					{
						goto IL_065e;
					}
					goto IL_0666;
					IL_065e:
					num2 = 85;
					num5 = 0;
					goto IL_0666;
					IL_0666:
					num2 = 87;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked & (Conversion.Val(lblGiftV2.Text) > 0.0))
					{
						goto IL_06b8;
					}
					goto IL_0754;
					IL_06b8:
					num2 = 88;
					if (num5 == 4)
					{
						goto IL_06c6;
					}
					goto IL_06d6;
					IL_06c6:
					num2 = 89;
					ResetUssdCodeVC(lblPort2);
					goto IL_06d6;
					IL_06d6:
					num2 = 90;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_06f2;
					}
					goto IL_0702;
					IL_06f2:
					num2 = 91;
					ResetUssdCode(lblPort2);
					goto IL_0702;
					IL_0702:
					num2 = 92;
					SetUssdOrderVcashTraVXPVaryGift(lblPort2, checked((int)Math.Round(Conversion.Val(lblGiftV2.Text))), num5, txtTransNum2365Gft.Text);
					goto IL_0735;
					IL_0735:
					num2 = 93;
					if (!chkCh2.Checked)
					{
						goto IL_074c;
					}
					goto IL_0754;
					IL_074c:
					num2 = 94;
					num5 = 0;
					goto IL_0754;
					IL_0754:
					num2 = 96;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked & (Conversion.Val(lblGiftV3.Text) > 0.0))
					{
						goto IL_07a6;
					}
					goto IL_0842;
					IL_07a6:
					num2 = 97;
					if (num5 == 4)
					{
						goto IL_07b4;
					}
					goto IL_07c4;
					IL_07b4:
					num2 = 98;
					ResetUssdCodeVC(lblPort3);
					goto IL_07c4;
					IL_07c4:
					num2 = 99;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_07e0;
					}
					goto IL_07f0;
					IL_07e0:
					num2 = 100;
					ResetUssdCode(lblPort3);
					goto IL_07f0;
					IL_07f0:
					num2 = 101;
					SetUssdOrderVcashTraVXPVaryGift(lblPort3, checked((int)Math.Round(Conversion.Val(lblGiftV3.Text))), num5, txtTransNum2365Gft.Text);
					goto IL_0823;
					IL_0823:
					num2 = 102;
					if (!chkCh3.Checked)
					{
						goto IL_083a;
					}
					goto IL_0842;
					IL_083a:
					num2 = 103;
					num5 = 0;
					goto IL_0842;
					IL_0842:
					num2 = 105;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked & (Conversion.Val(lblGiftV4.Text) > 0.0))
					{
						goto IL_0894;
					}
					goto IL_0930;
					IL_0894:
					num2 = 106;
					if (num5 == 4)
					{
						goto IL_08a2;
					}
					goto IL_08b2;
					IL_08a2:
					num2 = 107;
					ResetUssdCodeVC(lblPort4);
					goto IL_08b2;
					IL_08b2:
					num2 = 108;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_08ce;
					}
					goto IL_08de;
					IL_08ce:
					num2 = 109;
					ResetUssdCode(lblPort4);
					goto IL_08de;
					IL_08de:
					num2 = 110;
					SetUssdOrderVcashTraVXPVaryGift(lblPort4, checked((int)Math.Round(Conversion.Val(lblGiftV4.Text))), num5, txtTransNum2365Gft.Text);
					goto IL_0911;
					IL_0911:
					num2 = 111;
					if (!chkCh4.Checked)
					{
						goto IL_0928;
					}
					goto IL_0930;
					IL_0928:
					num2 = 112;
					num5 = 0;
					goto IL_0930;
					IL_0930:
					num2 = 114;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked & (Conversion.Val(lblGiftV5.Text) > 0.0))
					{
						goto IL_0982;
					}
					goto IL_0a1e;
					IL_0982:
					num2 = 115;
					if (num5 == 4)
					{
						goto IL_0990;
					}
					goto IL_09a0;
					IL_0990:
					num2 = 116;
					ResetUssdCodeVC(lblPort5);
					goto IL_09a0;
					IL_09a0:
					num2 = 117;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_09bc;
					}
					goto IL_09cc;
					IL_09bc:
					num2 = 118;
					ResetUssdCode(lblPort5);
					goto IL_09cc;
					IL_09cc:
					num2 = 119;
					SetUssdOrderVcashTraVXPVaryGift(lblPort5, checked((int)Math.Round(Conversion.Val(lblGiftV5.Text))), num5, txtTransNum2365Gft.Text);
					goto IL_09ff;
					IL_09ff:
					num2 = 120;
					if (!chkCh5.Checked)
					{
						goto IL_0a16;
					}
					goto IL_0a1e;
					IL_0a16:
					num2 = 121;
					num5 = 0;
					goto IL_0a1e;
					IL_0a1e:
					num2 = 123;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked & (Conversion.Val(lblGiftV6.Text) > 0.0))
					{
						goto IL_0a70;
					}
					goto IL_0b15;
					IL_0a70:
					num2 = 124;
					if (num5 == 4)
					{
						goto IL_0a7e;
					}
					goto IL_0a8e;
					IL_0a7e:
					num2 = 125;
					ResetUssdCodeVC(lblPort6);
					goto IL_0a8e;
					IL_0a8e:
					num2 = 126;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_0aaa;
					}
					goto IL_0aba;
					IL_0aaa:
					num2 = 127;
					ResetUssdCode(lblPort6);
					goto IL_0aba;
					IL_0aba:
					num2 = 128;
					SetUssdOrderVcashTraVXPVaryGift(lblPort6, checked((int)Math.Round(Conversion.Val(lblGiftV6.Text))), num5, txtTransNum2365Gft.Text);
					goto IL_0af0;
					IL_0af0:
					num2 = 129;
					if (!chkCh6.Checked)
					{
						goto IL_0b0a;
					}
					goto IL_0b15;
					IL_0b0a:
					num2 = 130;
					num5 = 0;
					goto IL_0b15;
					IL_0b15:
					num2 = 132;
					if (!chkStop.Checked)
					{
						goto IL_0b31;
					}
					goto IL_0bbf;
					IL_0b31:
					num2 = 134;
					if (num5 <= 5)
					{
						goto IL_056f;
					}
					goto IL_0b4a;
					IL_0b4a:
					num2 = 136;
					ReturnReadGift();
					goto IL_0b57;
					IL_0b57:
					num2 = 137;
					Application.DoEvents();
					goto IL_0b63;
					end_IL_0001_2:
					break;
				}
				num2 = 144;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 3667;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void BtnChangePassNew_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 6)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtPass.Text.Length != 6)
		{
			lblProgress.Text = "ادخل كلمة السر";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "كلمة السر اول مره";
		DisableCntl();
		ReSetUssdOrder();
		Application.DoEvents();
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			ChangeOldPassNew(lblPort1);
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			ChangeOldPassNew(lblPort2);
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			ChangeOldPassNew(lblPort3);
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			ChangeOldPassNew(lblPort4);
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			ChangeOldPassNew(lblPort5);
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			ChangeOldPassNew(lblPort6);
		}
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void BtnAuto365_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 7)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (txtGetgft365.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("حدد كود الاستقبال");
			return;
		}
		if (txtTransNum2365Gft.Text.Trim().Length != 11)
		{
			Interaction.MsgBox("ادخل رقم الخط المراد تحويل الهدايا له");
			return;
		}
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh1.Checked = false;
		}
		if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh2.Checked = false;
		}
		if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh3.Checked = false;
		}
		if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh4.Checked = false;
		}
		if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh5.Checked = false;
		}
		if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh6.Checked = false;
		}
		if (chkStop.Checked)
		{
			return;
		}
		BtnApply36590_Click(RuntimeHelpers.GetObjectValue(sender), e);
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		if (Conversion.Val(txtVCForceMony365.Text) > 0.0)
		{
			BtnTransGiftAutoSpVal365_Click(RuntimeHelpers.GetObjectValue(sender), e);
		}
		Application.DoEvents();
		if (chbeep.Checked)
		{
			EEmosemove = false;
			while (!EEmosemove)
			{
				Interaction.Beep();
				Application.DoEvents();
			}
		}
	}

	private void BtnPrint_Click(object sender, EventArgs e)
	{
		int num = 0;
		string[] array = new string[7];
		int num2 = 0;
		checked
		{
			do
			{
				array[num2] = "0";
				num2++;
			}
			while (num2 <= 5);
			if (MysqlConn.MainProgLic < 7)
			{
				lblProgress.Text = "Inactive function";
				return;
			}
			if (chkCh1.Checked & (lblNum1.Text.Length == 11))
			{
				array[num] = lblNum1.Text;
				num++;
			}
			if (chkCh2.Checked & (lblNum2.Text.Length == 11))
			{
				array[num] = lblNum2.Text;
				num++;
			}
			if (chkCh3.Checked & (lblNum3.Text.Length == 11))
			{
				array[num] = lblNum3.Text;
				num++;
			}
			if (chkCh4.Checked & (lblNum4.Text.Length == 11))
			{
				array[num] = lblNum4.Text;
				num++;
			}
			if (chkCh5.Checked & (lblNum5.Text.Length == 11))
			{
				array[num] = lblNum5.Text;
				num++;
			}
			if (chkCh6.Checked & (lblNum6.Text.Length == 11))
			{
				array[num] = lblNum6.Text;
				num++;
			}
			if (num == 0)
			{
				return;
			}
			int num3 = num - 1;
			for (num2 = 0; num2 <= num3; num2 += 2)
			{
				if (ck2x1.Checked)
				{
					CreatPrintCodeDIVTSPLDLL(array[num2 + 1], array[num2]);
					continue;
				}
				CreatPrintCodeDIVTSPLDLL_2in1(array[num2]);
				CreatPrintCodeDIVTSPLDLL_2in1(array[num2 + 1]);
			}
			lblProgress.Text = "تم الطباعة ";
		}
	}

	private void BtnAutoVC_Hez_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 6)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Conversion.Val(txtMonyMn.Text) < 5.0)
		{
			Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
			return;
		}
		if (txtCashNextMaster.Text.Trim().Length != 11)
		{
			Interaction.MsgBox("حدد رقم كاش لسحب الرصيد علية - الاساسى التالى");
			return;
		}
		if ((txtTransNum2.Text.Trim().Length != 11) & !chkChargeOnSame.Checked)
		{
			Interaction.MsgBox("ادخل رقم الخط المراد تحويل الهدايا له");
			return;
		}
		if (chkChargeOnSame.Checked)
		{
			int num2 = (int)Interaction.MsgBox("هل تريد شحن الهدايا على نفس خط الكاش", MsgBoxStyle.YesNo | MsgBoxStyle.Question);
			if (num2 == 7)
			{
				return;
			}
		}
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh1.Checked = false;
		}
		if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh2.Checked = false;
		}
		if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh3.Checked = false;
		}
		if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh4.Checked = false;
		}
		if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh5.Checked = false;
		}
		if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh6.Checked = false;
		}
		lblGifts01.Text = "0";
		lblGifts02.Text = "0";
		lblGifts03.Text = "0";
		lblGifts04.Text = "0";
		lblGifts05.Text = "0";
		lblGifts06.Text = "0";
		lblGiftV1.Text = "0";
		lblGiftV2.Text = "0";
		lblGiftV3.Text = "0";
		lblGiftV4.Text = "0";
		lblGiftV5.Text = "0";
		lblGiftV6.Text = "0";
		TransPortNumber = 2;
		if (chkStop.Checked)
		{
			return;
		}
		ClearCadsLocs();
		ArrangVClinesCon();
		if (chkSqn.Checked)
		{
			ArrangVCsequnce();
		}
		btnDeSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		chkCh1.Checked = true;
		do
		{
			num = checked(num + 1);
			if (chkStop.Checked)
			{
				break;
			}
			lblProgress.Text = "تحويل فودافون كاش ";
			if (chkCh1.Checked)
			{
				if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked & (TransPortNumber == 2))
				{
					if (num == 4)
					{
						ResetUssdCodeVC(lblPort1);
					}
					if (num == 8 || num == 12 || num == 15)
					{
						ResetUssdCode(lblPort1);
					}
					ApplyUssdCodeVC_Mex(lblPort1, lblNum2.Text, chkCh2, 1);
					checked
					{
						if (chkCh2.Checked)
						{
							TransPortNumber++;
						}
					}
				}
				else if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked & (TransPortNumber == 3))
				{
					if (num == 4)
					{
						ResetUssdCodeVC(lblPort1);
					}
					if (num == 8 || num == 12 || num == 15)
					{
						ResetUssdCode(lblPort1);
					}
					ApplyUssdCodeVC_Mex(lblPort1, lblNum3.Text, chkCh3, 1);
					checked
					{
						if (chkCh3.Checked)
						{
							TransPortNumber++;
						}
					}
				}
				else if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked & (TransPortNumber == 4))
				{
					if (num == 4)
					{
						ResetUssdCodeVC(lblPort1);
					}
					if (num == 8 || num == 12 || num == 15)
					{
						ResetUssdCode(lblPort1);
					}
					ApplyUssdCodeVC_Mex(lblPort1, lblNum4.Text, chkCh4, 1);
					checked
					{
						if (chkCh4.Checked)
						{
							TransPortNumber++;
						}
					}
				}
				else if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked & (TransPortNumber == 5))
				{
					if (num == 4)
					{
						ResetUssdCodeVC(lblPort1);
					}
					if (num == 8 || num == 12 || num == 15)
					{
						ResetUssdCode(lblPort1);
					}
					ApplyUssdCodeVC_Mex(lblPort1, lblNum5.Text, chkCh5, 1);
					checked
					{
						if (chkCh5.Checked)
						{
							TransPortNumber++;
						}
					}
				}
				else if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked & (TransPortNumber == 6))
				{
					if (num == 4)
					{
						ResetUssdCodeVC(lblPort1);
					}
					if (num == 8 || num == 12 || num == 15)
					{
						ResetUssdCode(lblPort1);
					}
					ApplyUssdCodeVC_Mex(lblPort1, lblNum6.Text, chkCh6, 1);
					checked
					{
						if (chkCh6.Checked)
						{
							TransPortNumber++;
						}
						Application.DoEvents();
					}
				}
				else if (chkCh1.Checked & (TransPortNumber >= 3))
				{
					if (num == 4)
					{
						ResetUssdCodeVC(lblPort1);
					}
					if (num == 8 || num == 12 || num == 15)
					{
						ResetUssdCode(lblPort1);
					}
					ApplyUssdCodeVC_Mex(lblPort1, txtCashNextMaster.Text, cknull, 1);
					Application.DoEvents();
				}
				if (chkStop.Checked || (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
				{
					break;
				}
			}
			if (chkCh2.Checked)
			{
				if (num == 4)
				{
					ResetUssdCodeVC(lblPort2);
				}
				if (num == 8 || num == 12 || num == 15)
				{
					ResetUssdCode(lblPort2);
				}
				ApplyUssdCodeVC_Mex(lblPort2, lblNum1.Text, chkCh1, 1);
				Application.DoEvents();
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if (chkCh3.Checked)
			{
				if (num == 4)
				{
					ResetUssdCodeVC(lblPort3);
				}
				if (num == 8 || num == 12 || num == 15)
				{
					ResetUssdCode(lblPort3);
				}
				ApplyUssdCodeVC_Mex(lblPort3, lblNum1.Text, chkCh1, 1);
				Application.DoEvents();
			}
			if (chkStop.Checked || (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
			{
				break;
			}
			Application.DoEvents();
			if (chkCh4.Checked)
			{
				if (num == 4)
				{
					ResetUssdCodeVC(lblPort4);
				}
				if (num == 8 || num == 12 || num == 15)
				{
					ResetUssdCode(lblPort4);
				}
				ApplyUssdCodeVC_Mex(lblPort4, lblNum1.Text, chkCh1, 1);
				Application.DoEvents();
			}
			if ((!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) || chkStop.Checked)
			{
				break;
			}
			Application.DoEvents();
			if (chkCh5.Checked)
			{
				if (num == 4)
				{
					ResetUssdCodeVC(lblPort5);
				}
				if (num == 8 || num == 12 || num == 15)
				{
					ResetUssdCode(lblPort5);
				}
				ApplyUssdCodeVC_Mex(lblPort5, lblNum1.Text, chkCh1, 1);
				Application.DoEvents();
			}
			if (chkStop.Checked)
			{
				break;
			}
			if (chkCh6.Checked)
			{
				if (num == 4)
				{
					ResetUssdCodeVC(lblPort6);
				}
				if (num == 8 || num == 12 || num == 15)
				{
					ResetUssdCode(lblPort6);
				}
				ApplyUssdCodeVC_Mex(lblPort6, lblNum1.Text, chkCh1, 1);
				Application.DoEvents();
			}
			Application.DoEvents();
		}
		while (!chkStop.Checked && !(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) && num <= 25);
		Application.DoEvents();
		btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		Application.DoEvents();
		btnRun02_Click(RuntimeHelpers.GetObjectValue(sender), e);
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		Application.DoEvents();
		if (Conversion.Val(lblGifts01.Text) >= 1.0)
		{
			chkCh1.Checked = true;
		}
		else
		{
			chkCh1.Checked = false;
		}
		if (Conversion.Val(lblGifts02.Text) >= 1.0)
		{
			chkCh2.Checked = true;
		}
		else
		{
			chkCh2.Checked = false;
		}
		if (Conversion.Val(lblGifts03.Text) >= 1.0)
		{
			chkCh3.Checked = true;
		}
		else
		{
			chkCh3.Checked = false;
		}
		if (Conversion.Val(lblGifts04.Text) >= 1.0)
		{
			chkCh4.Checked = true;
		}
		else
		{
			chkCh4.Checked = false;
		}
		if (Conversion.Val(lblGifts05.Text) >= 1.0)
		{
			chkCh5.Checked = true;
		}
		else
		{
			chkCh5.Checked = false;
		}
		if (Conversion.Val(lblGifts06.Text) >= 1.0)
		{
			chkCh6.Checked = true;
		}
		else
		{
			chkCh6.Checked = false;
		}
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		Application.DoEvents();
		BtnTransGiftAuto_Click(RuntimeHelpers.GetObjectValue(sender), e);
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		if (chkTransferAllNormalVoda.Checked)
		{
			btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
			Application.DoEvents();
			BtnTransGiftAutoNorm_Click(RuntimeHelpers.GetObjectValue(sender), e);
			Application.DoEvents();
			if (chkStop.Checked)
			{
				return;
			}
		}
		lblMain.Text = txtCashNextMaster.Text;
		txtCashNextMaster.Text = "";
		Application.DoEvents();
		Application.DoEvents();
		if (chbeep.Checked)
		{
			EEmosemove = false;
			while (!EEmosemove)
			{
				Interaction.Beep();
				Application.DoEvents();
			}
		}
		txtCashNextMaster.Focus();
	}

	private void lblPort2_DoubleClick(object sender, EventArgs e)
	{
		lblNum2.Text = "";
	}

	private void lblPort3_DoubleClick(object sender, EventArgs e)
	{
		lblNum3.Text = "";
	}

	private void lblPort4_DoubleClick(object sender, EventArgs e)
	{
		lblNum4.Text = "";
	}

	private void lblPort5_DoubleClick(object sender, EventArgs e)
	{
		lblNum5.Text = "";
	}

	private void lblPort6_DoubleClick(object sender, EventArgs e)
	{
		lblNum6.Text = "";
	}

	private void btnPrinter_Click(object sender, EventArgs e)
	{
		PrintDialog printDialog = new PrintDialog();
		printDialog.PrinterSettings = new PrinterSettings();
		if (printDialog.ShowDialog() == DialogResult.OK)
		{
			cmbPrinter.Text = printDialog.PrinterSettings.PrinterName;
		}
	}

	private void lblGifttotal1_DoubleClick(object sender, EventArgs e)
	{
		RestartModem(lblPort1.Text);
	}

	private void BtnApply365Bakat_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 7)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "**365\\Baka**";
		DisableCntl();
		Application.DoEvents();
		SetUssdOrderVc365Baka();
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
		Application.DoEvents();
		if (chbeep.Checked)
		{
			EEmosemove = false;
			while (!EEmosemove)
			{
				Interaction.Beep();
				Application.DoEvents();
			}
		}
	}

	private void BtnTransGiftAutoNorm365_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		bool flag = default(bool);
		bool flag2 = default(bool);
		bool flag3 = default(bool);
		bool flag4 = default(bool);
		bool flag5 = default(bool);
		bool flag6 = default(bool);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				Stopwatch stopwatch;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1533:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0018;
						case 5:
							goto IL_0027;
						case 6:
							goto IL_0036;
						case 7:
							goto IL_0045;
						case 8:
							goto IL_0054;
						case 9:
							goto IL_0063;
						case 10:
							goto IL_0073;
						case 11:
							goto IL_0084;
						case 13:
						case 14:
							goto IL_009f;
						case 15:
							goto IL_00c0;
						case 17:
						case 18:
							goto IL_00d7;
						case 19:
							goto IL_00fc;
						case 21:
						case 22:
							goto IL_0113;
						case 23:
							goto IL_0127;
						case 24:
							goto IL_0131;
						case 25:
							goto IL_013b;
						case 26:
						case 73:
							goto IL_0150;
						case 27:
							goto IL_017e;
						case 28:
							goto IL_018f;
						case 29:
							goto IL_01a0;
						case 30:
							goto IL_01b1;
						case 31:
							goto IL_01c2;
						case 32:
							goto IL_01d3;
						case 33:
						case 69:
							goto IL_01e5;
						case 34:
							goto IL_01ef;
						case 35:
							goto IL_0203;
						case 36:
							goto IL_020c;
						case 38:
							goto IL_0225;
						case 40:
							goto IL_028c;
						case 41:
							goto IL_0295;
						case 42:
							goto IL_02a9;
						case 43:
							goto IL_02b9;
						case 45:
							goto IL_02d2;
						case 46:
							goto IL_02db;
						case 47:
							goto IL_02ef;
						case 48:
							goto IL_02ff;
						case 50:
							goto IL_0318;
						case 51:
							goto IL_0321;
						case 52:
							goto IL_0335;
						case 53:
							goto IL_0345;
						case 55:
							goto IL_035e;
						case 56:
							goto IL_0367;
						case 57:
							goto IL_037b;
						case 58:
							goto IL_038b;
						case 60:
							goto IL_03a4;
						case 61:
							goto IL_03ad;
						case 62:
							goto IL_03c1;
						case 63:
							goto IL_03d1;
						case 65:
							goto IL_03e7;
						case 66:
							goto IL_03f0;
						case 67:
							goto IL_0404;
						case 68:
							goto IL_0414;
						case 37:
						case 39:
						case 44:
						case 49:
						case 54:
						case 59:
						case 64:
						case 70:
							goto IL_042c;
						case 71:
							goto IL_0435;
						case 72:
							goto IL_0460;
						case 74:
						case 75:
							goto IL_047e;
						case 76:
							goto IL_0488;
						case 77:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 12:
						case 16:
						case 20:
						case 78:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0460:
					num2 = 72;
					if (!chkStop.Checked)
					{
						goto IL_0150;
					}
					goto IL_047e;
					IL_047e:
					num2 = 75;
					EnableCntl();
					goto IL_0488;
					IL_0435:
					num2 = 71;
					if (Conversion.Val(txtLoopSSD365_2.Text) < Conversion.Val(txtLoopFSD365_2.Text))
					{
						goto IL_0460;
					}
					goto IL_047e;
					IL_0488:
					num2 = 76;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					num5 = 0;
					goto IL_0018;
					IL_0018:
					num2 = 4;
					flag = chkCh1.Checked;
					goto IL_0027;
					IL_0027:
					num2 = 5;
					flag2 = chkCh2.Checked;
					goto IL_0036;
					IL_0036:
					num2 = 6;
					flag3 = chkCh3.Checked;
					goto IL_0045;
					IL_0045:
					num2 = 7;
					flag4 = chkCh4.Checked;
					goto IL_0054;
					IL_0054:
					num2 = 8;
					flag5 = chkCh5.Checked;
					goto IL_0063;
					IL_0063:
					num2 = 9;
					flag6 = chkCh6.Checked;
					goto IL_0073;
					IL_0073:
					num2 = 10;
					if (MysqlConn.MainProgLic < 7)
					{
						goto IL_0084;
					}
					goto IL_009f;
					IL_0084:
					num2 = 11;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_009f:
					num2 = 14;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_00c0;
					}
					goto IL_00d7;
					IL_00c0:
					num2 = 15;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_00d7:
					num2 = 18;
					if (txtTransNum2365_n.Text.Trim().Length != 11)
					{
						goto IL_00fc;
					}
					goto IL_0113;
					IL_00fc:
					num2 = 19;
					Interaction.MsgBox("حدد رقم لسحب الرصيد الية");
					goto end_IL_0001_3;
					IL_0113:
					num2 = 22;
					lblProgress.BackColor = Color.Red;
					goto IL_0127;
					IL_0127:
					num2 = 23;
					DisableCntl();
					goto IL_0131;
					IL_0131:
					num2 = 24;
					ClearCadsLocs();
					goto IL_013b;
					IL_013b:
					num2 = 25;
					txtLoopSSD365_2.Text = "0";
					goto IL_0150;
					IL_0150:
					num2 = 26;
					txtLoopSSD365_2.Text = Conversions.ToString(Conversion.Val(txtLoopSSD365_2.Text) + 1.0);
					goto IL_017e;
					IL_017e:
					num2 = 27;
					chkCh1.Checked = flag;
					goto IL_018f;
					IL_018f:
					num2 = 28;
					chkCh2.Checked = flag2;
					goto IL_01a0;
					IL_01a0:
					num2 = 29;
					chkCh3.Checked = flag3;
					goto IL_01b1;
					IL_01b1:
					num2 = 30;
					chkCh4.Checked = flag4;
					goto IL_01c2;
					IL_01c2:
					num2 = 31;
					chkCh5.Checked = flag5;
					goto IL_01d3;
					IL_01d3:
					num2 = 32;
					chkCh6.Checked = flag6;
					goto IL_01e5;
					IL_01e5:
					num2 = 33;
					ReSetUssdOrder();
					goto IL_01ef;
					IL_01ef:
					num2 = 34;
					lblProgress.Text = "سحب رصيد فودافون عادى ";
					goto IL_0203;
					IL_0203:
					num2 = 35;
					num5 = checked(num5 + 1);
					goto IL_020c;
					IL_020c:
					num2 = 36;
					if (!chkStop.Checked)
					{
						goto IL_0225;
					}
					goto IL_042c;
					IL_0225:
					num2 = 38;
					if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						goto IL_028c;
					}
					goto IL_042c;
					IL_028c:
					num2 = 40;
					Application.DoEvents();
					goto IL_0295;
					IL_0295:
					num2 = 41;
					if (chkCh1.Checked)
					{
						goto IL_02a9;
					}
					goto IL_02b9;
					IL_02a9:
					num2 = 42;
					TransferAllVodaNormBal365(lblPort1);
					goto IL_02b9;
					IL_02b9:
					num2 = 43;
					if (!chkStop.Checked)
					{
						goto IL_02d2;
					}
					goto IL_042c;
					IL_02d2:
					num2 = 45;
					Application.DoEvents();
					goto IL_02db;
					IL_02db:
					num2 = 46;
					if (chkCh2.Checked)
					{
						goto IL_02ef;
					}
					goto IL_02ff;
					IL_02ef:
					num2 = 47;
					TransferAllVodaNormBal365(lblPort2);
					goto IL_02ff;
					IL_02ff:
					num2 = 48;
					if (!chkStop.Checked)
					{
						goto IL_0318;
					}
					goto IL_042c;
					IL_0318:
					num2 = 50;
					Application.DoEvents();
					goto IL_0321;
					IL_0321:
					num2 = 51;
					if (chkCh3.Checked)
					{
						goto IL_0335;
					}
					goto IL_0345;
					IL_0335:
					num2 = 52;
					TransferAllVodaNormBal365(lblPort3);
					goto IL_0345;
					IL_0345:
					num2 = 53;
					if (!chkStop.Checked)
					{
						goto IL_035e;
					}
					goto IL_042c;
					IL_035e:
					num2 = 55;
					Application.DoEvents();
					goto IL_0367;
					IL_0367:
					num2 = 56;
					if (chkCh4.Checked)
					{
						goto IL_037b;
					}
					goto IL_038b;
					IL_037b:
					num2 = 57;
					TransferAllVodaNormBal365(lblPort4);
					goto IL_038b;
					IL_038b:
					num2 = 58;
					if (!chkStop.Checked)
					{
						goto IL_03a4;
					}
					goto IL_042c;
					IL_03a4:
					num2 = 60;
					Application.DoEvents();
					goto IL_03ad;
					IL_03ad:
					num2 = 61;
					if (chkCh5.Checked)
					{
						goto IL_03c1;
					}
					goto IL_03d1;
					IL_03c1:
					num2 = 62;
					TransferAllVodaNormBal365(lblPort5);
					goto IL_03d1;
					IL_03d1:
					num2 = 63;
					if (!chkStop.Checked)
					{
						goto IL_03e7;
					}
					goto IL_042c;
					IL_03e7:
					num2 = 65;
					Application.DoEvents();
					goto IL_03f0;
					IL_03f0:
					num2 = 66;
					if (chkCh6.Checked)
					{
						goto IL_0404;
					}
					goto IL_0414;
					IL_0404:
					num2 = 67;
					TransferAllVodaNormBal365(lblPort6);
					goto IL_0414;
					IL_0414:
					num2 = 68;
					if (num5 <= 35)
					{
						goto IL_01e5;
					}
					goto IL_042c;
					IL_042c:
					num2 = 70;
					Application.DoEvents();
					goto IL_0435;
					end_IL_0001_2:
					break;
				}
				num2 = 77;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1533;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void BtnApply36590_f_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 512:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0019;
						case 5:
						case 6:
							goto IL_0033;
						case 7:
							goto IL_0053;
						case 9:
						case 10:
							goto IL_0069;
						case 11:
							goto IL_007d;
						case 12:
							goto IL_0087;
						case 13:
						case 21:
							goto IL_009c;
						case 14:
							goto IL_00ca;
						case 15:
							goto IL_00d8;
						case 16:
							goto IL_00e8;
						case 18:
							goto IL_00fe;
						case 19:
							goto IL_0107;
						case 20:
							goto IL_0132;
						case 17:
						case 22:
						case 23:
							goto IL_0151;
						case 24:
							goto IL_015b;
						case 25:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 8:
						case 26:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0132:
					num2 = 20;
					if (!chkStop.Checked)
					{
						goto IL_009c;
					}
					goto IL_0151;
					IL_0151:
					num2 = 23;
					EnableCntl();
					goto IL_015b;
					IL_0107:
					num2 = 19;
					if (Conversion.Val(txtLoopSSD365_f.Text) < Conversion.Val(txtLoopFSD365_f.Text))
					{
						goto IL_0132;
					}
					goto IL_0151;
					IL_015b:
					num2 = 24;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					if (MysqlConn.MainProgLic < 7)
					{
						goto IL_0019;
					}
					goto IL_0033;
					IL_0019:
					num2 = 3;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0033:
					num2 = 6;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0053;
					}
					goto IL_0069;
					IL_0053:
					num2 = 7;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_0069:
					num2 = 10;
					lblProgress.BackColor = Color.Red;
					goto IL_007d;
					IL_007d:
					num2 = 11;
					DisableCntl();
					goto IL_0087;
					IL_0087:
					num2 = 12;
					txtLoopSSD365_f.Text = "0";
					goto IL_009c;
					IL_009c:
					num2 = 13;
					txtLoopSSD365_f.Text = Conversions.ToString(Conversion.Val(txtLoopSSD365_f.Text) + 1.0);
					goto IL_00ca;
					IL_00ca:
					num2 = 14;
					Thread.Sleep(800);
					goto IL_00d8;
					IL_00d8:
					num2 = 15;
					SetUssdOrder(txtGetgft365_f);
					goto IL_00e8;
					IL_00e8:
					num2 = 16;
					if (!chkStop.Checked)
					{
						goto IL_00fe;
					}
					goto IL_0151;
					IL_00fe:
					num2 = 18;
					Application.DoEvents();
					goto IL_0107;
					end_IL_0001_2:
					break;
				}
				num2 = 25;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 512;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void BtnDelTarfehy_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 187:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0031;
						case 5:
							goto IL_003a;
						case 6:
							goto IL_0049;
						case 7:
							goto IL_0051;
						case 8:
							goto IL_005a;
						case 9:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 10:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0049:
					num2 = 6;
					Application.DoEvents();
					goto IL_0051;
					IL_0051:
					num2 = 7;
					EnableCntl();
					goto IL_005a;
					IL_003a:
					num2 = 5;
					SetUssdOrderTarfehy(txtUssd);
					goto IL_0049;
					IL_005a:
					num2 = 8;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "الغاء الخدمات";
					goto IL_0031;
					IL_0031:
					num2 = 4;
					DisableCntl();
					goto IL_003a;
					end_IL_0001_2:
					break;
				}
				num2 = 9;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 187;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void lblGifttotal2_DoubleClick(object sender, EventArgs e)
	{
		RestartModem(lblPort2.Text);
	}

	private void lblGifttotal3_DoubleClick(object sender, EventArgs e)
	{
		RestartModem(lblPort3.Text);
	}

	private void BtnExchangeNN_Click(object sender, EventArgs e)
	{
		string text = lblMain.Text;
		lblMain.Text = txtCashNextMaster.Text;
		txtCashNextMaster.Text = text;
	}

	private void BtnChkNewSims_Click(object sender, EventArgs e)
	{
		string ussdCommand = "*9#";
		lblProgress.Text = "اختبار محفظة";
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			ReadUssdReturn(lblPort1, txtRet01, lblNum1);
		}
		if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			ApplyUssdCodesPC(lblPort1, ussdCommand, txtRet01, lblNum1);
		}
		if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			ApplyUssdCodesPC(lblPort2, ussdCommand, txtRet02, lblNum2);
		}
		if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			ApplyUssdCodesPC(lblPort3, ussdCommand, txtRet03, lblNum3);
		}
		if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			ApplyUssdCodesPC(lblPort4, ussdCommand, txtRet04, lblNum4);
		}
		if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			ApplyUssdCodesPC(lblPort5, ussdCommand, txtRet05, lblNum5);
		}
		if ((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			ApplyUssdCodesPC(lblPort6, ussdCommand, txtRet06, lblNum6);
		}
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void BtnInvertSelection_Click(object sender, EventArgs e)
	{
		if (lblNum1.Text.Length == 11)
		{
			chkCh1.Checked = !chkCh1.Checked;
		}
		else
		{
			chkCh1.Checked = false;
		}
		if (lblNum2.Text.Length == 11)
		{
			chkCh2.Checked = !chkCh2.Checked;
		}
		else
		{
			chkCh2.Checked = false;
		}
		if (lblNum3.Text.Length == 11)
		{
			chkCh3.Checked = !chkCh3.Checked;
		}
		else
		{
			chkCh3.Checked = false;
		}
		if (lblNum4.Text.Length == 11)
		{
			chkCh4.Checked = !chkCh4.Checked;
		}
		else
		{
			chkCh4.Checked = false;
		}
		if (lblNum5.Text.Length == 11)
		{
			chkCh5.Checked = !chkCh5.Checked;
		}
		else
		{
			chkCh5.Checked = false;
		}
		if (lblNum6.Text.Length == 11)
		{
			chkCh6.Checked = !chkCh6.Checked;
		}
		else
		{
			chkCh6.Checked = false;
		}
	}

	private void lblGifttotal4_DoubleClick(object sender, EventArgs e)
	{
		RestartModem(lblPort4.Text);
	}

	private void lbl05_Click(object sender, EventArgs e)
	{
		txtVCForceMony.Text = Conversions.ToString(NewLateBinding.LateGet(sender, null, "text", new object[0], null, null, null));
	}

	private void btnOnOut_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 2358:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001c;
						case 5:
						case 6:
							goto IL_0036;
						case 7:
							goto IL_0056;
						case 9:
						case 10:
							goto IL_006c;
						case 11:
							goto IL_0093;
						case 13:
						case 14:
							goto IL_00ab;
						case 15:
							goto IL_00bf;
						case 16:
							goto IL_00d3;
						case 17:
							goto IL_00e7;
						case 18:
							goto IL_00fb;
						case 19:
							goto IL_010f;
						case 20:
							goto IL_0123;
						case 21:
							goto IL_0137;
						case 22:
							goto IL_014b;
						case 23:
							goto IL_015f;
						case 24:
							goto IL_0173;
						case 25:
							goto IL_0187;
						case 26:
							goto IL_019b;
						case 27:
							goto IL_01af;
						case 28:
							goto IL_01c3;
						case 29:
							goto IL_01d7;
						case 30:
							goto IL_01eb;
						case 31:
							goto IL_01ff;
						case 32:
							goto IL_0213;
						case 33:
							goto IL_0227;
						case 34:
							goto IL_023b;
						case 35:
							goto IL_024f;
						case 36:
							goto IL_0263;
						case 37:
							goto IL_0277;
						case 38:
							goto IL_028b;
						case 39:
							goto IL_029f;
						case 40:
							goto IL_02b3;
						case 41:
							goto IL_02c7;
						case 42:
							goto IL_02db;
						case 43:
							goto IL_02ef;
						case 44:
							goto IL_0303;
						case 45:
							goto IL_0317;
						case 46:
							goto IL_032b;
						case 47:
							goto IL_033f;
						case 48:
							goto IL_0353;
						case 49:
							goto IL_0367;
						case 50:
							goto IL_037b;
						case 51:
							goto IL_038f;
						case 52:
							goto IL_03a3;
						case 53:
						case 70:
							goto IL_03ae;
						case 55:
							goto IL_0415;
						case 57:
							goto IL_042e;
						case 58:
							goto IL_0437;
						case 59:
							goto IL_046a;
						case 60:
							goto IL_047a;
						case 61:
							goto IL_04ad;
						case 62:
							goto IL_04bd;
						case 63:
							goto IL_04f0;
						case 64:
							goto IL_0500;
						case 65:
							goto IL_0533;
						case 66:
							goto IL_0543;
						case 67:
							goto IL_0576;
						case 68:
							goto IL_0586;
						case 69:
							goto IL_05b9;
						case 54:
						case 56:
						case 71:
							goto IL_05cf;
						case 72:
							goto IL_05ec;
						case 73:
							goto IL_0617;
						case 74:
							goto IL_0634;
						case 75:
							goto IL_065f;
						case 76:
							goto IL_067c;
						case 77:
							goto IL_06a7;
						case 78:
							goto IL_06c4;
						case 79:
							goto IL_06ef;
						case 80:
							goto IL_070c;
						case 81:
							goto IL_0737;
						case 82:
							goto IL_0754;
						case 83:
							goto IL_077f;
						case 84:
							goto IL_0793;
						case 85:
							goto IL_079d;
						case 86:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 8:
						case 12:
						case 87:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0576:
					num2 = 67;
					GEtONCode(lblPort5);
					goto IL_0586;
					IL_0586:
					num2 = 68;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						goto IL_03ae;
					}
					goto IL_05b9;
					IL_0543:
					num2 = 66;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0576;
					}
					goto IL_0586;
					IL_05b9:
					num2 = 69;
					GEtONCode(lblPort6);
					goto IL_03ae;
					IL_000b:
					num2 = 2;
					if (MysqlConn.MainProgLic < 50)
					{
						goto IL_001c;
					}
					goto IL_0036;
					IL_001c:
					num2 = 3;
					lblProgress.Text = "Error No 77";
					goto end_IL_0001_3;
					IL_0036:
					num2 = 6;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0056;
					}
					goto IL_006c;
					IL_0056:
					num2 = 7;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_006c:
					num2 = 10;
					if (Conversion.Val(txtOnValue.Text) <= 0.0)
					{
						goto IL_0093;
					}
					goto IL_00ab;
					IL_0093:
					num2 = 11;
					Interaction.MsgBox("Incorrect value", MsgBoxStyle.Critical);
					goto end_IL_0001_3;
					IL_00ab:
					num2 = 14;
					lblONnum1.Text = "#1";
					goto IL_00bf;
					IL_00bf:
					num2 = 15;
					lblONnum2.Text = "#2";
					goto IL_00d3;
					IL_00d3:
					num2 = 16;
					lblONnum3.Text = "#3";
					goto IL_00e7;
					IL_00e7:
					num2 = 17;
					lblONnum4.Text = "#4";
					goto IL_00fb;
					IL_00fb:
					num2 = 18;
					lblONnum5.Text = "#5";
					goto IL_010f;
					IL_010f:
					num2 = 19;
					lblONnum6.Text = "#6";
					goto IL_0123;
					IL_0123:
					num2 = 20;
					lblONmc1.Text = "#";
					goto IL_0137;
					IL_0137:
					num2 = 21;
					lblONmc2.Text = "#";
					goto IL_014b;
					IL_014b:
					num2 = 22;
					lblONmc3.Text = "#";
					goto IL_015f;
					IL_015f:
					num2 = 23;
					lblONmc4.Text = "#";
					goto IL_0173;
					IL_0173:
					num2 = 24;
					lblONmc5.Text = "#";
					goto IL_0187;
					IL_0187:
					num2 = 25;
					lblONmc6.Text = "#";
					goto IL_019b;
					IL_019b:
					num2 = 26;
					lblONv1.Text = "#";
					goto IL_01af;
					IL_01af:
					num2 = 27;
					lblONv2.Text = "#";
					goto IL_01c3;
					IL_01c3:
					num2 = 28;
					lblONv3.Text = "#";
					goto IL_01d7;
					IL_01d7:
					num2 = 29;
					lblONv4.Text = "#";
					goto IL_01eb;
					IL_01eb:
					num2 = 30;
					lblONv5.Text = "#";
					goto IL_01ff;
					IL_01ff:
					num2 = 31;
					lblONv6.Text = "#";
					goto IL_0213;
					IL_0213:
					num2 = 32;
					lblONed.Text = "#";
					goto IL_0227;
					IL_0227:
					num2 = 33;
					txtONorder1.Text = "";
					goto IL_023b;
					IL_023b:
					num2 = 34;
					txtONorder2.Text = "";
					goto IL_024f;
					IL_024f:
					num2 = 35;
					txtONorder3.Text = "";
					goto IL_0263;
					IL_0263:
					num2 = 36;
					txtONorder4.Text = "";
					goto IL_0277;
					IL_0277:
					num2 = 37;
					txtONorder5.Text = "";
					goto IL_028b;
					IL_028b:
					num2 = 38;
					txtONorder6.Text = "";
					goto IL_029f;
					IL_029f:
					num2 = 39;
					lblONmc1.ForeColor = Color.Black;
					goto IL_02b3;
					IL_02b3:
					num2 = 40;
					lblONmc2.ForeColor = Color.Black;
					goto IL_02c7;
					IL_02c7:
					num2 = 41;
					lblONmc3.ForeColor = Color.Black;
					goto IL_02db;
					IL_02db:
					num2 = 42;
					lblONmc4.ForeColor = Color.Black;
					goto IL_02ef;
					IL_02ef:
					num2 = 43;
					lblONmc5.ForeColor = Color.Black;
					goto IL_0303;
					IL_0303:
					num2 = 44;
					lblONmc6.ForeColor = Color.Black;
					goto IL_0317;
					IL_0317:
					num2 = 45;
					txtONorder1.BackColor = Color.White;
					goto IL_032b;
					IL_032b:
					num2 = 46;
					txtONorder2.BackColor = Color.White;
					goto IL_033f;
					IL_033f:
					num2 = 47;
					txtONorder3.BackColor = Color.White;
					goto IL_0353;
					IL_0353:
					num2 = 48;
					txtONorder4.BackColor = Color.White;
					goto IL_0367;
					IL_0367:
					num2 = 49;
					txtONorder5.BackColor = Color.White;
					goto IL_037b;
					IL_037b:
					num2 = 50;
					txtONorder6.BackColor = Color.White;
					goto IL_038f;
					IL_038f:
					num2 = 51;
					lblProgress.BackColor = Color.Red;
					goto IL_03a3;
					IL_03a3:
					num2 = 52;
					DisableCntl();
					goto IL_03ae;
					IL_03ae:
					num2 = 53;
					if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						goto IL_0415;
					}
					goto IL_05cf;
					IL_0415:
					num2 = 55;
					if (!chkStop.Checked)
					{
						goto IL_042e;
					}
					goto IL_05cf;
					IL_05cf:
					num2 = 71;
					if (lblONmc1.Text.Length == 16)
					{
						goto IL_05ec;
					}
					goto IL_0617;
					IL_05ec:
					num2 = 72;
					AddCardDataToDB(lblONnum1.Text, lblONmc1.Text, lblONv1.Text);
					goto IL_0617;
					IL_0617:
					num2 = 73;
					if (lblONmc2.Text.Length == 16)
					{
						goto IL_0634;
					}
					goto IL_065f;
					IL_0634:
					num2 = 74;
					AddCardDataToDB(lblONnum2.Text, lblONmc2.Text, lblONv2.Text);
					goto IL_065f;
					IL_065f:
					num2 = 75;
					if (lblONmc3.Text.Length == 16)
					{
						goto IL_067c;
					}
					goto IL_06a7;
					IL_067c:
					num2 = 76;
					AddCardDataToDB(lblONnum3.Text, lblONmc3.Text, lblONv3.Text);
					goto IL_06a7;
					IL_06a7:
					num2 = 77;
					if (lblONmc4.Text.Length == 16)
					{
						goto IL_06c4;
					}
					goto IL_06ef;
					IL_06c4:
					num2 = 78;
					AddCardDataToDB(lblONnum4.Text, lblONmc4.Text, lblONv4.Text);
					goto IL_06ef;
					IL_06ef:
					num2 = 79;
					if (lblONmc5.Text.Length == 16)
					{
						goto IL_070c;
					}
					goto IL_0737;
					IL_070c:
					num2 = 80;
					AddCardDataToDB(lblONnum5.Text, lblONmc5.Text, lblONv5.Text);
					goto IL_0737;
					IL_0737:
					num2 = 81;
					if (lblONmc6.Text.Length == 16)
					{
						goto IL_0754;
					}
					goto IL_077f;
					IL_0754:
					num2 = 82;
					AddCardDataToDB(lblONnum6.Text, lblONmc6.Text, lblONv6.Text);
					goto IL_077f;
					IL_077f:
					num2 = 83;
					lblProgress.Text = "Cards Saved";
					goto IL_0793;
					IL_0793:
					num2 = 84;
					EnableCntl();
					goto IL_079d;
					IL_079d:
					num2 = 85;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_042e:
					num2 = 57;
					Application.DoEvents();
					goto IL_0437;
					IL_0437:
					num2 = 58;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_046a;
					}
					goto IL_047a;
					IL_046a:
					num2 = 59;
					GEtONCode(lblPort1);
					goto IL_047a;
					IL_047a:
					num2 = 60;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_04ad;
					}
					goto IL_04bd;
					IL_04ad:
					num2 = 61;
					GEtONCode(lblPort2);
					goto IL_04bd;
					IL_04bd:
					num2 = 62;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_04f0;
					}
					goto IL_0500;
					IL_04f0:
					num2 = 63;
					GEtONCode(lblPort3);
					goto IL_0500;
					IL_0500:
					num2 = 64;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0533;
					}
					goto IL_0543;
					IL_0533:
					num2 = 65;
					GEtONCode(lblPort4);
					goto IL_0543;
					end_IL_0001_2:
					break;
				}
				num2 = 86;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 2358;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void lblONmc1_Click(object sender, EventArgs e)
	{
		Clipboard.Clear();
		Clipboard.SetText(Conversions.ToString(NewLateBinding.LateGet(sender, null, "text", new object[0], null, null, null)));
		NewLateBinding.LateSet(sender, null, "forecolor", new object[1] { Color.Red }, null, null);
	}

	private void lblGifttotal5_DoubleClick(object sender, EventArgs e)
	{
		RestartModem(lblPort5.Text);
	}

	private void lblGifttotal6_DoubleClick(object sender, EventArgs e)
	{
		RestartModem(lblPort6.Text);
	}

	private void EnableMouseMove(object sender, MouseEventArgs e)
	{
		EEmosemove = true;
	}

	private void ApplyUssdCodesPCTarfehy(Label Exxc, string UssdCommand, TextBox Eeret, Label Enumtxt)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						while (true)
						{
							string ussdCommandFull = UssdCommand;
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							int num3 = 1;
							while (true)
							{
								string text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("+CUSD: "))
								{
									int num4 = text.IndexOf("+CUSD: ");
									string text2 = text.Substring(num4 + 10, text.Length - num4 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim()
										.Trim(',');
									num4 = text2.IndexOf(",");
									string text3 = text2.Substring(0, num4).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text3);
										commandCode = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										commandCode = encoding_mod.Decode7Bit(text3);
									}
									Eeret.Text = commandCode + "\r\n" + Eeret.Text;
									if (Operators.CompareString(commandCode, "ليس لديك خدمات ترفيهية.\ufffd", TextCompare: false) == 0)
									{
										break;
									}
									if (text.Contains("062C0627063106490020062A06460641064A063000200637064406280643002006480633062A0635064406430020063106330627064406290020062806270644062A06230643064A062F"))
									{
										goto IL_0249;
									}
									if (!text.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
									{
										ussdCommandFull = "1";
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(1000);
										Application.DoEvents();
										continue;
									}
									goto IL_026f;
								}
								if (text.Contains("retry operation") | text.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E"))
								{
									goto IL_02d1;
								}
								if (num3 <= 8)
								{
									num3++;
									Thread.Sleep(500);
									Application.DoEvents();
									continue;
								}
								goto IL_031e;
							}
							DisablePort(Exxc);
							Application.DoEvents();
							break;
							IL_02d1:
							Eeret.Text = "retry operation\r\n" + Eeret.Text;
							Application.DoEvents();
							continue;
							IL_031e:
							Application.DoEvents();
							break;
							IL_0249:
							DisablePort(Exxc);
							Application.DoEvents();
							break;
							IL_026f:
							Application.DoEvents();
						}
						break;
					case 834:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001_2;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 834;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderTarfehy(TextBox UssdBox)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string ussdCommand = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 587:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0045;
						case 5:
							goto IL_0061;
						case 6:
							goto IL_0093;
						case 7:
							goto IL_00af;
						case 8:
							goto IL_00e1;
						case 9:
							goto IL_00fd;
						case 10:
							goto IL_0130;
						case 11:
							goto IL_014d;
						case 12:
							goto IL_0180;
						case 13:
							goto IL_019d;
						case 14:
							goto IL_01d0;
						case 15:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 16:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0180:
					num2 = 12;
					ApplyUssdCodesPCTarfehy(lblPort5, ussdCommand, txtRet05, lblNum5);
					goto IL_019d;
					IL_019d:
					num2 = 13;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						break;
					}
					goto IL_01d0;
					IL_014d:
					num2 = 11;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0180;
					}
					goto IL_019d;
					IL_01d0:
					num2 = 14;
					ApplyUssdCodesPCTarfehy(lblPort6, ussdCommand, txtRet06, lblNum6);
					break;
					IL_000b:
					num2 = 2;
					ussdCommand = "*010*010#";
					goto IL_0013;
					IL_0013:
					num2 = 3;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_0045;
					}
					goto IL_0061;
					IL_0045:
					num2 = 4;
					ApplyUssdCodesPCTarfehy(lblPort1, ussdCommand, txtRet01, lblNum1);
					goto IL_0061;
					IL_0061:
					num2 = 5;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_0093;
					}
					goto IL_00af;
					IL_0093:
					num2 = 6;
					ApplyUssdCodesPCTarfehy(lblPort2, ussdCommand, txtRet02, lblNum2);
					goto IL_00af;
					IL_00af:
					num2 = 7;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_00e1;
					}
					goto IL_00fd;
					IL_00e1:
					num2 = 8;
					ApplyUssdCodesPCTarfehy(lblPort3, ussdCommand, txtRet03, lblNum3);
					goto IL_00fd;
					IL_00fd:
					num2 = 9;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0130;
					}
					goto IL_014d;
					IL_0130:
					num2 = 10;
					ApplyUssdCodesPCTarfehy(lblPort4, ussdCommand, txtRet04, lblNum4);
					goto IL_014d;
					end_IL_0001_2:
					break;
				}
				num2 = 15;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 587;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void txtONorder1_KeyPress(object sender, KeyPressEventArgs e)
	{
		if (Strings.Asc(e.KeyChar) == 13)
		{
			UpdateCardData(lblONmc1.Text, txtONorder1.Text);
		}
	}

	private void btnPic_Click(object sender, EventArgs e)
	{
	}

	private void btnAutoGet_Click(object sender, EventArgs e)
	{
		checked
		{
			LastGenNumber = (int)Math.Round(Conversion.Val(encoding_mod.getdataFromReg("LastGenNumber")));
			if ((txtONorder1.Text.Length == 0) & (lblONmc1.Text.Length > 10))
			{
				txtONorder1.Text = Conversions.ToString(LastGenNumber + 1);
				UpdateCardData(lblONmc1.Text, txtONorder1.Text);
			}
			if ((txtONorder2.Text.Length == 0) & (lblONmc2.Text.Length > 10))
			{
				txtONorder2.Text = Conversions.ToString(LastGenNumber + 1);
				UpdateCardData(lblONmc2.Text, txtONorder2.Text);
			}
			if ((txtONorder3.Text.Length == 0) & (lblONmc3.Text.Length > 10))
			{
				txtONorder3.Text = Conversions.ToString(LastGenNumber + 1);
				UpdateCardData(lblONmc3.Text, txtONorder3.Text);
			}
			if ((txtONorder4.Text.Length == 0) & (lblONmc4.Text.Length > 10))
			{
				txtONorder4.Text = Conversions.ToString(LastGenNumber + 1);
				UpdateCardData(lblONmc4.Text, txtONorder4.Text);
			}
			if ((txtONorder5.Text.Length == 0) & (lblONmc5.Text.Length > 10))
			{
				txtONorder5.Text = Conversions.ToString(LastGenNumber + 1);
				UpdateCardData(lblONmc5.Text, txtONorder5.Text);
			}
			if ((txtONorder6.Text.Length == 0) & (lblONmc6.Text.Length > 10))
			{
				txtONorder6.Text = Conversions.ToString(LastGenNumber + 1);
				UpdateCardData(lblONmc6.Text, txtONorder6.Text);
			}
			encoding_mod.savedataToReg("LastGenNumber", LastGenNumber.ToString());
		}
	}

	private void txtONorder2_KeyPress(object sender, KeyPressEventArgs e)
	{
		if (Strings.Asc(e.KeyChar) == 13)
		{
			UpdateCardData(lblONmc2.Text, txtONorder2.Text);
		}
	}

	private void txtONorder3_KeyPress(object sender, KeyPressEventArgs e)
	{
		if (Strings.Asc(e.KeyChar) == 13)
		{
			UpdateCardData(lblONmc3.Text, txtONorder3.Text);
		}
	}

	[MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
	private void btnLockNo_Click(object sender, EventArgs e)
	{
		ProjectData.EndApp();
	}

	private void btnLockOK_Click(object sender, EventArgs e)
	{
		gboxLock.Visible = false;
	}

	private void txtONorder4_KeyPress(object sender, KeyPressEventArgs e)
	{
		if (Strings.Asc(e.KeyChar) == 13)
		{
			UpdateCardData(lblONmc4.Text, txtONorder4.Text);
		}
	}

	private void txtONorder5_KeyPress(object sender, KeyPressEventArgs e)
	{
		if (Strings.Asc(e.KeyChar) == 13)
		{
			UpdateCardData(lblONmc5.Text, txtONorder5.Text);
		}
	}

	private void txtONorder6_KeyPress(object sender, KeyPressEventArgs e)
	{
		if (Strings.Asc(e.KeyChar) == 13)
		{
			UpdateCardData(lblONmc6.Text, txtONorder6.Text);
		}
	}

	private void btnAutoVC_SeresWtop_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 6)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Conversion.Val(txtMonyMn.Text) < 5.0)
		{
			Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
			return;
		}
		if (txtCashNextMaster.Text.Trim().Length != 11)
		{
			Interaction.MsgBox("حدد رقم كاش لسحب الرصيد علية - الاساسى التالى");
			return;
		}
		if ((txtTransNum2.Text.Trim().Length != 11) & !chkChargeOnSame.Checked)
		{
			Interaction.MsgBox("ادخل رقم الخط المراد تحويل الهدايا له");
			return;
		}
		if ((Operators.CompareString(lblMain.Text, lblNum1.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum2.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum3.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum4.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum5.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum6.Text, TextCompare: false) != 0))
		{
			Interaction.MsgBox("مشكلة بالاساسى");
			chkStop.Checked = true;
			return;
		}
		if (chkChargeOnSame.Checked)
		{
			int num2 = (int)Interaction.MsgBox("هل تريد شحن الهدايا على نفس خط الكاش", MsgBoxStyle.YesNo | MsgBoxStyle.Question);
			if (num2 == 7)
			{
				return;
			}
		}
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh1.Checked = false;
		}
		if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh2.Checked = false;
		}
		if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh3.Checked = false;
		}
		if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh4.Checked = false;
		}
		if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh5.Checked = false;
		}
		if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh6.Checked = false;
		}
		lblGifts01.Text = "0";
		lblGifts02.Text = "0";
		lblGifts03.Text = "0";
		lblGifts04.Text = "0";
		lblGifts05.Text = "0";
		lblGifts06.Text = "0";
		lblGiftV1.Text = "0";
		lblGiftV2.Text = "0";
		lblGiftV3.Text = "0";
		lblGiftV4.Text = "0";
		lblGiftV5.Text = "0";
		lblGiftV6.Text = "0";
		if (chkStop.Checked)
		{
			return;
		}
		ClearCadsLocs();
		Application.DoEvents();
		ArrangVClinesCon();
		Application.DoEvents();
		if (chkSqn.Checked)
		{
			ArrangVCsequnce();
		}
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		Application.DoEvents();
		btnDeSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		chkCh1.Checked = true;
		if (ckTransP.Checked)
		{
			txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
			if (Conversion.Val(txtMonyMn.Text) < 5.0)
			{
				goto IL_13c5;
			}
		}
		do
		{
			num = checked(num + 1);
			if (chkStop.Checked)
			{
				break;
			}
			lblProgress.Text = "تحويل فودافون كاش ";
			if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
			{
				while (!(Conversion.Val(lblChargeDone1.Text) >= 3.0))
				{
					SetUssdOrderVcashTraVXPVaryGiftTosame(lblPort1, 10);
					Application.DoEvents();
					if (chkStop.Checked)
					{
						goto end_IL_0517;
					}
				}
				if (num == 4)
				{
					ResetUssdCodeVC(lblPort1);
				}
				if (num == 6 || num == 15)
				{
					ResetUssdCode(lblPort1);
				}
				ApplyUssdCodeVC_Mex(lblPort1, lblNum2.Text, chkCh2, 1);
				if (!chkCh1.Checked)
				{
					if (ckTransP.Checked)
					{
						txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
						if (Conversion.Val(txtMonyMn.Text) < 5.0)
						{
							break;
						}
					}
					num = 0;
				}
				Application.DoEvents();
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
			{
				while (!(Conversion.Val(lblChargeDone2.Text) >= 3.0))
				{
					SetUssdOrderVcashTraVXPVaryGiftTosame(lblPort2, 10);
					Application.DoEvents();
					if (chkStop.Checked)
					{
						goto end_IL_0517;
					}
				}
				if (num == 4)
				{
					ResetUssdCodeVC(lblPort2);
				}
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort2);
				}
				ApplyUssdCodeVC_Mex(lblPort2, lblNum3.Text, chkCh3, 1);
				if (!chkCh2.Checked)
				{
					if (ckTransP.Checked)
					{
						txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
						if (Conversion.Val(txtMonyMn.Text) < 5.0)
						{
							break;
						}
					}
					num = 0;
				}
				Application.DoEvents();
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
			{
				while (!(Conversion.Val(lblChargeDone3.Text) >= 3.0))
				{
					SetUssdOrderVcashTraVXPVaryGiftTosame(lblPort3, 10);
					Application.DoEvents();
					if (chkStop.Checked)
					{
						goto end_IL_0517;
					}
				}
				if (num == 4)
				{
					ResetUssdCodeVC(lblPort3);
				}
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort3);
				}
				ApplyUssdCodeVC_Mex(lblPort3, lblNum4.Text, chkCh4, 1);
				if (!chkCh3.Checked)
				{
					if (ckTransP.Checked)
					{
						txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
						if (Conversion.Val(txtMonyMn.Text) < 5.0)
						{
							break;
						}
					}
					num = 0;
				}
				Application.DoEvents();
			}
			if (chkStop.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0) & chkCh3.Checked)
			{
				while (!(Conversion.Val(lblChargeDone3.Text) >= 3.0))
				{
					SetUssdOrderVcashTraVXPVaryGiftTosame(lblPort3, 10);
					Application.DoEvents();
					if (chkStop.Checked)
					{
						goto end_IL_0517;
					}
				}
				if (num == 4)
				{
					ResetUssdCodeVC(lblPort3);
				}
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort3);
				}
				ApplyUssdCodeVC_Mex(lblPort3, txtCashNextMaster.Text, cknull, 1);
				if (!chkCh3.Checked)
				{
					if (ckTransP.Checked)
					{
						txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
						if (Conversion.Val(txtMonyMn.Text) < 5.0)
						{
							break;
						}
					}
					num = 0;
				}
				Application.DoEvents();
			}
			if ((!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) || chkStop.Checked)
			{
				break;
			}
			Application.DoEvents();
			if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
			{
				while (!(Conversion.Val(lblChargeDone4.Text) >= 3.0))
				{
					SetUssdOrderVcashTraVXPVaryGiftTosame(lblPort4, 10);
					Application.DoEvents();
					if (chkStop.Checked)
					{
						goto end_IL_0517;
					}
				}
				if (num == 4)
				{
					ResetUssdCodeVC(lblPort4);
				}
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort4);
				}
				ApplyUssdCodeVC_Mex(lblPort4, lblNum5.Text, chkCh5, 1);
				if (!chkCh4.Checked)
				{
					if (ckTransP.Checked)
					{
						txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
						if (Conversion.Val(txtMonyMn.Text) < 5.0)
						{
							break;
						}
					}
					num = 0;
				}
				Application.DoEvents();
			}
			if (chkStop.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0) & chkCh4.Checked)
			{
				while (!(Conversion.Val(lblChargeDone4.Text) >= 3.0))
				{
					SetUssdOrderVcashTraVXPVaryGiftTosame(lblPort4, 10);
					Application.DoEvents();
					if (chkStop.Checked)
					{
						goto end_IL_0517;
					}
				}
				if (num == 4)
				{
					ResetUssdCodeVC(lblPort4);
				}
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort4);
				}
				ApplyUssdCodeVC_Mex(lblPort4, txtCashNextMaster.Text, cknull, 1);
				if (!chkCh4.Checked)
				{
					if (ckTransP.Checked)
					{
						txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
						if (Conversion.Val(txtMonyMn.Text) < 5.0)
						{
							break;
						}
					}
					num = 0;
				}
				Application.DoEvents();
			}
			if ((!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) || chkStop.Checked)
			{
				break;
			}
			Application.DoEvents();
			if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
			{
				while (!(Conversion.Val(lblChargeDone5.Text) >= 3.0))
				{
					SetUssdOrderVcashTraVXPVaryGiftTosame(lblPort5, 10);
					Application.DoEvents();
					if (chkStop.Checked)
					{
						goto end_IL_0517;
					}
				}
				if (num == 4)
				{
					ResetUssdCodeVC(lblPort5);
				}
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort5);
				}
				ApplyUssdCodeVC_Mex(lblPort5, lblNum6.Text, chkCh6, 1);
				if (!chkCh5.Checked)
				{
					if (ckTransP.Checked)
					{
						txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
						if (Conversion.Val(txtMonyMn.Text) < 5.0)
						{
							break;
						}
					}
					num = 0;
				}
				Application.DoEvents();
			}
			if (chkStop.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0) & chkCh5.Checked)
			{
				while (!(Conversion.Val(lblChargeDone5.Text) >= 3.0))
				{
					SetUssdOrderVcashTraVXPVaryGiftTosame(lblPort5, 10);
					Application.DoEvents();
					if (chkStop.Checked)
					{
						goto end_IL_0517;
					}
				}
				if (num == 4)
				{
					ResetUssdCodeVC(lblPort5);
				}
				if (num == 8 || num == 12 || num == 15)
				{
					ResetUssdCode(lblPort5);
				}
				ApplyUssdCodeVC_Mex(lblPort5, txtCashNextMaster.Text, cknull, 1);
				if (!chkCh5.Checked)
				{
					if (ckTransP.Checked)
					{
						txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
						if (Conversion.Val(txtMonyMn.Text) < 5.0)
						{
							break;
						}
					}
					num = 0;
				}
				Application.DoEvents();
			}
			if (!((Operators.CompareString(txtCashNextMaster.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
			{
				continue;
			}
			while (!(Conversion.Val(lblChargeDone6.Text) >= 3.0))
			{
				SetUssdOrderVcashTraVXPVaryGiftTosame(lblPort6, 10);
				Application.DoEvents();
				ResetUssdCodeVC(lblPort6);
				if (chkStop.Checked)
				{
					goto end_IL_0517;
				}
			}
			if (num == 4)
			{
				ResetUssdCodeVC(lblPort6);
			}
			if (num == 8 || num == 12 || num == 15)
			{
				ResetUssdCode(lblPort6);
			}
			ApplyUssdCodeVC_Mex(lblPort6, txtCashNextMaster.Text, cknull, 1);
			if (!chkCh6.Checked)
			{
				if (ckTransP.Checked)
				{
					txtMonyMn.Text = Conversions.ToString(Conversion.Val(txtMonyMn.Text) - Conversion.Val(txtTransP.Text));
					if (Conversion.Val(txtMonyMn.Text) < 5.0)
					{
						break;
					}
				}
				num = 0;
			}
			Application.DoEvents();
			continue;
			end_IL_0517:
			break;
		}
		while (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) && num <= 60);
		goto IL_13c5;
		IL_13c5:
		Application.DoEvents();
		btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		Application.DoEvents();
		btnRun02_Click(RuntimeHelpers.GetObjectValue(sender), e);
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		Application.DoEvents();
		if (chkUse365inprcss.Checked)
		{
			Application.DoEvents();
			if (Conversion.Val(lblGifts01.Text) >= 1.0)
			{
				chkCh1.Checked = true;
			}
			else
			{
				chkCh1.Checked = false;
			}
			if (Conversion.Val(lblGifts02.Text) >= 1.0)
			{
				chkCh2.Checked = true;
			}
			else
			{
				chkCh2.Checked = false;
			}
			if (Conversion.Val(lblGifts03.Text) >= 1.0)
			{
				chkCh3.Checked = true;
			}
			else
			{
				chkCh3.Checked = false;
			}
			if (Conversion.Val(lblGifts04.Text) >= 1.0)
			{
				chkCh4.Checked = true;
			}
			else
			{
				chkCh4.Checked = false;
			}
			if (Conversion.Val(lblGifts05.Text) >= 1.0)
			{
				chkCh5.Checked = true;
			}
			else
			{
				chkCh5.Checked = false;
			}
			if (Conversion.Val(lblGifts06.Text) >= 1.0)
			{
				chkCh6.Checked = true;
			}
			else
			{
				chkCh6.Checked = false;
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				return;
			}
			SetUssdOrderVc365_WithGifts(txtTransNum2.Text, 0);
			Application.DoEvents();
			if (lblPort1.BackColor == Color.PaleGreen)
			{
				chkCh1.Checked = true;
			}
			else
			{
				chkCh1.Checked = false;
			}
			if (lblPort2.BackColor == Color.PaleGreen)
			{
				chkCh2.Checked = true;
			}
			else
			{
				chkCh2.Checked = false;
			}
			if (lblPort3.BackColor == Color.PaleGreen)
			{
				chkCh3.Checked = true;
			}
			else
			{
				chkCh3.Checked = false;
			}
			if (lblPort4.BackColor == Color.PaleGreen)
			{
				chkCh4.Checked = true;
			}
			else
			{
				chkCh4.Checked = false;
			}
			if (lblPort5.BackColor == Color.PaleGreen)
			{
				chkCh5.Checked = true;
			}
			else
			{
				chkCh5.Checked = false;
			}
			if (lblPort6.BackColor == Color.PaleGreen)
			{
				chkCh6.Checked = true;
			}
			else
			{
				chkCh6.Checked = false;
			}
			ApplyAllTransferToVC365_50(50);
		}
		if (lblPort1.BackColor == Color.PaleGreen)
		{
			lblPort1.BackColor = Color.Black;
		}
		if (lblPort2.BackColor == Color.PaleGreen)
		{
			lblPort2.BackColor = Color.Black;
		}
		if (lblPort3.BackColor == Color.PaleGreen)
		{
			lblPort3.BackColor = Color.Black;
		}
		if (lblPort4.BackColor == Color.PaleGreen)
		{
			lblPort4.BackColor = Color.Black;
		}
		if (lblPort5.BackColor == Color.PaleGreen)
		{
			lblPort5.BackColor = Color.Black;
		}
		if (lblPort6.BackColor == Color.PaleGreen)
		{
			lblPort6.BackColor = Color.Black;
		}
		if ((Conversion.Val(lblGifts01.Text) >= 1.0) & (lblPort1.BackColor == Color.Black))
		{
			chkCh1.Checked = true;
		}
		else
		{
			chkCh1.Checked = false;
		}
		if ((Conversion.Val(lblGifts02.Text) >= 1.0) & (lblPort2.BackColor == Color.Black))
		{
			chkCh2.Checked = true;
		}
		else
		{
			chkCh2.Checked = false;
		}
		if ((Conversion.Val(lblGifts03.Text) >= 1.0) & (lblPort3.BackColor == Color.Black))
		{
			chkCh3.Checked = true;
		}
		else
		{
			chkCh3.Checked = false;
		}
		if ((Conversion.Val(lblGifts04.Text) >= 1.0) & (lblPort4.BackColor == Color.Black))
		{
			chkCh4.Checked = true;
		}
		else
		{
			chkCh4.Checked = false;
		}
		if ((Conversion.Val(lblGifts05.Text) >= 1.0) & (lblPort5.BackColor == Color.Black))
		{
			chkCh5.Checked = true;
		}
		else
		{
			chkCh5.Checked = false;
		}
		if ((Conversion.Val(lblGifts06.Text) >= 1.0) & (lblPort6.BackColor == Color.Black))
		{
			chkCh6.Checked = true;
		}
		else
		{
			chkCh6.Checked = false;
		}
		Application.DoEvents();
		BtnTransGiftAuto_Click(RuntimeHelpers.GetObjectValue(sender), e);
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		if (chkTransferAllNormalVoda.Checked)
		{
			btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
			Application.DoEvents();
			BtnTransGiftAutoNorm_Click(RuntimeHelpers.GetObjectValue(sender), e);
			Application.DoEvents();
			if (chkStop.Checked)
			{
				return;
			}
		}
		lblMain.Text = txtCashNextMaster.Text;
		txtCashNextMaster.Text = "";
		if (chkAutoMain.Checked)
		{
			SelectnextMainAuto();
		}
		Application.DoEvents();
		if (chbeep.Checked)
		{
			EEmosemove = false;
			while (!EEmosemove)
			{
				Interaction.Beep();
				Application.DoEvents();
			}
		}
		txtCashNextMaster.Focus();
	}

	private void btnAutoVC_ChargePoints_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		bool flag = default(bool);
		bool flag2 = default(bool);
		bool flag3 = default(bool);
		bool flag4 = default(bool);
		bool flag5 = default(bool);
		bool flag6 = default(bool);
		bool flag7 = default(bool);
		bool flag8 = default(bool);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					Stopwatch stopwatch;
					switch (try0001_dispatch)
					{
					default:
						ProjectData.ClearProjectError();
						num3 = -2;
						goto IL_000b;
					case 2937:
						{
							num = num2;
							switch ((num3 <= -2) ? 1 : num3)
							{
							case 1:
								break;
							default:
								goto end_IL_0001;
							}
							int num4 = unchecked(num + 1);
							num = 0;
							switch (num4)
							{
							case 1:
								break;
							case 2:
								goto IL_000b;
							case 3:
								goto IL_0013;
							case 4:
								goto IL_0018;
							case 5:
								goto IL_0027;
							case 6:
								goto IL_0036;
							case 7:
								goto IL_0045;
							case 8:
								goto IL_0054;
							case 9:
								goto IL_0063;
							case 10:
								goto IL_0073;
							case 11:
								goto IL_0083;
							case 12:
								goto IL_0093;
							case 13:
								goto IL_00a5;
							case 15:
							case 16:
								goto IL_00c0;
							case 17:
								goto IL_00e1;
							case 19:
							case 20:
								goto IL_00f8;
							case 21:
								goto IL_011d;
							case 23:
							case 24:
								goto IL_0134;
							case 25:
								goto IL_0158;
							case 27:
							case 28:
								goto IL_016f;
							case 29:
								goto IL_0237;
							case 30:
								goto IL_0247;
							case 32:
							case 33:
								goto IL_025e;
							case 34:
								goto IL_0267;
							case 36:
								goto IL_0280;
							case 37:
								goto IL_0294;
							case 38:
								goto IL_029e;
							case 39:
								goto IL_02a8;
							case 40:
								goto IL_02b2;
							case 41:
							case 101:
								goto IL_02c7;
							case 42:
								goto IL_02f5;
							case 43:
								goto IL_0306;
							case 44:
								goto IL_0317;
							case 45:
								goto IL_0328;
							case 46:
								goto IL_0339;
							case 47:
								goto IL_034a;
							case 48:
								goto IL_035b;
							case 49:
								goto IL_036c;
							case 50:
							case 97:
								goto IL_037e;
							case 51:
								goto IL_0387;
							case 53:
								goto IL_03a0;
							case 54:
								goto IL_03b4;
							case 55:
								goto IL_03f3;
							case 56:
								goto IL_0432;
							case 57:
							case 58:
								goto IL_043d;
							case 59:
								goto IL_0446;
							case 61:
								goto IL_045f;
							case 62:
								goto IL_049e;
							case 63:
								goto IL_04dd;
							case 64:
							case 65:
								goto IL_04e8;
							case 66:
								goto IL_04f1;
							case 68:
								goto IL_050a;
							case 69:
								goto IL_0549;
							case 70:
								goto IL_0588;
							case 71:
							case 72:
								goto IL_0593;
							case 74:
								goto IL_05ac;
							case 75:
								goto IL_05b5;
							case 76:
								goto IL_05f4;
							case 77:
								goto IL_0633;
							case 78:
							case 79:
								goto IL_063e;
							case 81:
								goto IL_0657;
							case 82:
								goto IL_0660;
							case 83:
								goto IL_069f;
							case 84:
								goto IL_06de;
							case 85:
							case 86:
								goto IL_06e9;
							case 87:
								goto IL_0723;
							case 88:
								goto IL_0762;
							case 89:
							case 90:
								goto IL_076d;
							case 91:
								goto IL_07a7;
							case 92:
								goto IL_07e6;
							case 93:
							case 94:
								goto IL_07f1;
							case 96:
								goto IL_0864;
							case 95:
							case 98:
								goto IL_087c;
							case 99:
								goto IL_0885;
							case 100:
								goto IL_08b0;
							case 102:
							case 103:
								goto IL_08ce;
							case 104:
								goto IL_08eb;
							case 105:
								goto IL_091d;
							case 106:
								goto IL_093a;
							case 52:
							case 60:
							case 67:
							case 73:
							case 80:
							case 107:
								goto IL_096d;
							case 108:
								goto IL_0976;
							case 109:
								goto IL_0980;
							case 110:
								goto end_IL_0001_2;
							default:
								goto end_IL_0001;
							case 14:
							case 18:
							case 22:
							case 26:
							case 31:
							case 35:
							case 111:
								goto end_IL_0001_3;
							}
							goto default;
						}
						IL_096d:
						num2 = 107;
						Application.DoEvents();
						goto IL_0976;
						IL_0976:
						num2 = 108;
						EnableCntl();
						goto IL_0980;
						IL_093a:
						num2 = 106;
						lblNum8.Text = lblNum8.Text.Substring(1, lblNum8.Text.Length - 1);
						goto IL_096d;
						IL_0980:
						num2 = 109;
						lblProgress.BackColor = Color.LimeGreen;
						break;
						IL_000b:
						num2 = 2;
						stopwatch = new Stopwatch();
						goto IL_0013;
						IL_0013:
						num2 = 3;
						num5 = 0;
						goto IL_0018;
						IL_0018:
						num2 = 4;
						flag = chkCh1.Checked;
						goto IL_0027;
						IL_0027:
						num2 = 5;
						flag2 = chkCh2.Checked;
						goto IL_0036;
						IL_0036:
						num2 = 6;
						flag3 = chkCh3.Checked;
						goto IL_0045;
						IL_0045:
						num2 = 7;
						flag4 = chkCh4.Checked;
						goto IL_0054;
						IL_0054:
						num2 = 8;
						flag5 = chkCh5.Checked;
						goto IL_0063;
						IL_0063:
						num2 = 9;
						flag6 = chkCh6.Checked;
						goto IL_0073;
						IL_0073:
						num2 = 10;
						flag7 = chkCh7.Checked;
						goto IL_0083;
						IL_0083:
						num2 = 11;
						flag8 = chkCh8.Checked;
						goto IL_0093;
						IL_0093:
						num2 = 12;
						if (MysqlConn.MainProgLic < 11)
						{
							goto IL_00a5;
						}
						goto IL_00c0;
						IL_00a5:
						num2 = 13;
						lblProgress.Text = "Inactive function";
						goto end_IL_0001_3;
						IL_00c0:
						num2 = 16;
						if (lblPort1.Text.Trim().Length == 0)
						{
							goto IL_00e1;
						}
						goto IL_00f8;
						IL_00e1:
						num2 = 17;
						Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
						goto end_IL_0001_3;
						IL_00f8:
						num2 = 20;
						if (lblMainPoints.Text.Trim().Length != 11)
						{
							goto IL_011d;
						}
						goto IL_0134;
						IL_011d:
						num2 = 21;
						Interaction.MsgBox("ادخل رقم الخط المراد التحويل  منة");
						goto end_IL_0001_3;
						IL_0134:
						num2 = 24;
						if (Conversion.Val(txtPointsValue.Text) == 0.0)
						{
							goto IL_0158;
						}
						goto IL_016f;
						IL_0158:
						num2 = 25;
						Interaction.MsgBox("حدد مبلغ للشحن");
						goto end_IL_0001_3;
						IL_016f:
						num2 = 28;
						if ((Operators.CompareString(lblMain.Text, lblNum1.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum2.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum3.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum4.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum5.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMain.Text, lblNum6.Text, TextCompare: false) != 0))
						{
							goto IL_0237;
						}
						goto IL_025e;
						IL_0237:
						num2 = 29;
						Interaction.MsgBox("مشكلة بالاساسى");
						goto IL_0247;
						IL_0247:
						num2 = 30;
						chkStop.Checked = true;
						goto end_IL_0001_3;
						IL_025e:
						num2 = 33;
						Application.DoEvents();
						goto IL_0267;
						IL_0267:
						num2 = 34;
						if (chkStop.Checked)
						{
							goto end_IL_0001_3;
						}
						goto IL_0280;
						IL_0280:
						num2 = 36;
						lblProgress.BackColor = Color.Red;
						goto IL_0294;
						IL_0294:
						num2 = 37;
						DisableCntl();
						goto IL_029e;
						IL_029e:
						num2 = 38;
						ClearCadsLocs();
						goto IL_02a8;
						IL_02a8:
						num2 = 39;
						ArrangVClinesCon();
						goto IL_02b2;
						IL_02b2:
						num2 = 40;
						txtPointsS.Text = "0";
						goto IL_02c7;
						IL_02c7:
						num2 = 41;
						txtPointsS.Text = Conversions.ToString(Conversion.Val(txtPointsS.Text) + 1.0);
						goto IL_02f5;
						IL_02f5:
						num2 = 42;
						chkCh1.Checked = flag;
						goto IL_0306;
						IL_0306:
						num2 = 43;
						chkCh2.Checked = flag2;
						goto IL_0317;
						IL_0317:
						num2 = 44;
						chkCh3.Checked = flag3;
						goto IL_0328;
						IL_0328:
						num2 = 45;
						chkCh4.Checked = flag4;
						goto IL_0339;
						IL_0339:
						num2 = 46;
						chkCh5.Checked = flag5;
						goto IL_034a;
						IL_034a:
						num2 = 47;
						chkCh6.Checked = flag6;
						goto IL_035b;
						IL_035b:
						num2 = 48;
						chkCh7.Checked = flag7;
						goto IL_036c;
						IL_036c:
						num2 = 49;
						chkCh8.Checked = flag8;
						goto IL_037e;
						IL_037e:
						num2 = 50;
						num5++;
						goto IL_0387;
						IL_0387:
						num2 = 51;
						if (!chkStop.Checked)
						{
							goto IL_03a0;
						}
						goto IL_096d;
						IL_03a0:
						num2 = 53;
						lblProgress.Text = "رصيد كاش";
						goto IL_03b4;
						IL_03b4:
						num2 = 54;
						if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked & chkCh1.Checked)
						{
							goto IL_03f3;
						}
						goto IL_043d;
						IL_03f3:
						num2 = 55;
						SetUssdOrderVcashTraVXPVaryPoints(lblPort1, (int)Math.Round(Conversion.Val(txtPointsValue.Text)), num5, lblNum2.Text, chkCh2, txtRet02);
						goto IL_0432;
						IL_0432:
						num2 = 56;
						Application.DoEvents();
						goto IL_043d;
						IL_043d:
						num2 = 58;
						Application.DoEvents();
						goto IL_0446;
						IL_0446:
						num2 = 59;
						if (!chkStop.Checked)
						{
							goto IL_045f;
						}
						goto IL_096d;
						IL_045f:
						num2 = 61;
						if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked & chkCh1.Checked)
						{
							goto IL_049e;
						}
						goto IL_04e8;
						IL_049e:
						num2 = 62;
						SetUssdOrderVcashTraVXPVaryPoints(lblPort1, (int)Math.Round(Conversion.Val(txtPointsValue.Text)), num5, lblNum3.Text, chkCh3, txtRet03);
						goto IL_04dd;
						IL_04dd:
						num2 = 63;
						Application.DoEvents();
						goto IL_04e8;
						IL_04e8:
						num2 = 65;
						Application.DoEvents();
						goto IL_04f1;
						IL_04f1:
						num2 = 66;
						if (!chkStop.Checked)
						{
							goto IL_050a;
						}
						goto IL_096d;
						IL_050a:
						num2 = 68;
						if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked & chkCh1.Checked)
						{
							goto IL_0549;
						}
						goto IL_0593;
						IL_0549:
						num2 = 69;
						SetUssdOrderVcashTraVXPVaryPoints(lblPort1, (int)Math.Round(Conversion.Val(txtPointsValue.Text)), num5, lblNum4.Text, chkCh4, txtRet04);
						goto IL_0588;
						IL_0588:
						num2 = 70;
						Application.DoEvents();
						goto IL_0593;
						IL_0593:
						num2 = 72;
						if (!chkStop.Checked)
						{
							goto IL_05ac;
						}
						goto IL_096d;
						IL_05ac:
						num2 = 74;
						Application.DoEvents();
						goto IL_05b5;
						IL_05b5:
						num2 = 75;
						if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked & chkCh1.Checked)
						{
							goto IL_05f4;
						}
						goto IL_063e;
						IL_05f4:
						num2 = 76;
						SetUssdOrderVcashTraVXPVaryPoints(lblPort1, (int)Math.Round(Conversion.Val(txtPointsValue.Text)), num5, lblNum5.Text, chkCh5, txtRet05);
						goto IL_0633;
						IL_0633:
						num2 = 77;
						Application.DoEvents();
						goto IL_063e;
						IL_063e:
						num2 = 79;
						if (!chkStop.Checked)
						{
							goto IL_0657;
						}
						goto IL_096d;
						IL_0657:
						num2 = 81;
						Application.DoEvents();
						goto IL_0660;
						IL_0660:
						num2 = 82;
						if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked & chkCh1.Checked)
						{
							goto IL_069f;
						}
						goto IL_06e9;
						IL_069f:
						num2 = 83;
						SetUssdOrderVcashTraVXPVaryPoints(lblPort1, (int)Math.Round(Conversion.Val(txtPointsValue.Text)), num5, lblNum6.Text, chkCh6, txtRet06);
						goto IL_06de;
						IL_06de:
						num2 = 84;
						Application.DoEvents();
						goto IL_06e9;
						IL_06e9:
						num2 = 86;
						if ((lblNum7.Text.Trim().Length == 11) & chkCh7.Checked & chkCh1.Checked)
						{
							goto IL_0723;
						}
						goto IL_076d;
						IL_0723:
						num2 = 87;
						SetUssdOrderVcashTraVXPVaryPoints(lblPort1, (int)Math.Round(Conversion.Val(txtPointsValue.Text)), num5, lblNum7.Text, chkCh7, txtRet07);
						goto IL_0762;
						IL_0762:
						num2 = 88;
						Application.DoEvents();
						goto IL_076d;
						IL_076d:
						num2 = 90;
						if ((lblNum8.Text.Trim().Length == 11) & chkCh8.Checked & chkCh1.Checked)
						{
							goto IL_07a7;
						}
						goto IL_07f1;
						IL_07a7:
						num2 = 91;
						SetUssdOrderVcashTraVXPVaryPoints(lblPort1, (int)Math.Round(Conversion.Val(txtPointsValue.Text)), num5, lblNum8.Text, chkCh8, txtRet08);
						goto IL_07e6;
						IL_07e6:
						num2 = 92;
						Application.DoEvents();
						goto IL_07f1;
						IL_07f1:
						num2 = 94;
						if (!(!chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked & !chkCh7.Checked & !chkCh8.Checked))
						{
							goto IL_0864;
						}
						goto IL_087c;
						IL_0864:
						num2 = 96;
						if (num5 <= 25)
						{
							goto IL_037e;
						}
						goto IL_087c;
						IL_087c:
						num2 = 98;
						Application.DoEvents();
						goto IL_0885;
						IL_0885:
						num2 = 99;
						if (Conversion.Val(txtPointsS.Text) < Conversion.Val(txtPointsF.Text))
						{
							goto IL_08b0;
						}
						goto IL_08ce;
						IL_08b0:
						num2 = 100;
						if (!chkStop.Checked)
						{
							goto IL_02c7;
						}
						goto IL_08ce;
						IL_08ce:
						num2 = 103;
						if (lblNum7.Text.Length == 11)
						{
							goto IL_08eb;
						}
						goto IL_091d;
						IL_08eb:
						num2 = 104;
						lblNum7.Text = lblNum7.Text.Substring(1, lblNum7.Text.Length - 1);
						goto IL_091d;
						IL_091d:
						num2 = 105;
						if (lblNum8.Text.Length == 11)
						{
							goto IL_093a;
						}
						goto IL_096d;
						end_IL_0001_2:
						break;
					}
					num2 = 110;
					lblProgress.Text = "OK";
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 2937;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnOCTopup_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		int num6 = default(int);
		int num7 = default(int);
		bool flag = default(bool);
		bool flag2 = default(bool);
		bool flag3 = default(bool);
		bool flag4 = default(bool);
		bool flag5 = default(bool);
		bool flag6 = default(bool);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
						ProjectData.ClearProjectError();
						num3 = -2;
						goto IL_000b;
					case 5456:
						{
							num = num2;
							switch ((num3 <= -2) ? 1 : num3)
							{
							case 1:
								break;
							default:
								goto end_IL_0001;
							}
							int num4 = unchecked(num + 1);
							num = 0;
							switch (num4)
							{
							case 1:
								break;
							case 2:
								goto IL_000b;
							case 3:
								goto IL_000f;
							case 4:
								goto IL_0014;
							case 5:
								goto IL_0019;
							case 6:
								goto IL_002a;
							case 8:
							case 9:
								goto IL_0044;
							case 10:
								goto IL_0068;
							case 12:
							case 13:
								goto IL_007f;
							case 14:
								goto IL_00a0;
							case 16:
							case 17:
								goto IL_00b7;
							case 18:
								goto IL_00e8;
							case 20:
							case 21:
								goto IL_00ff;
							case 22:
								goto IL_0130;
							case 24:
							case 25:
								goto IL_0147;
							case 26:
								goto IL_0178;
							case 28:
							case 29:
								goto IL_018f;
							case 30:
								goto IL_01c0;
							case 32:
							case 33:
								goto IL_01d7;
							case 34:
								goto IL_0208;
							case 36:
							case 37:
								goto IL_021f;
							case 38:
								goto IL_0250;
							case 40:
							case 41:
								goto IL_0267;
							case 42:
								goto IL_0286;
							case 44:
							case 45:
								goto IL_029d;
							case 46:
								goto IL_02b1;
							case 47:
								goto IL_02c5;
							case 48:
								goto IL_02cf;
							case 49:
								goto IL_02d9;
							case 50:
								goto IL_02e9;
							case 51:
								goto IL_02f9;
							case 52:
								goto IL_0309;
							case 53:
								goto IL_0319;
							case 54:
								goto IL_0329;
							case 55:
								goto IL_0339;
							case 56:
								goto IL_034d;
							case 57:
								goto IL_0361;
							case 58:
								goto IL_0388;
							case 59:
								goto IL_039c;
							case 60:
								goto IL_03c0;
							case 61:
							case 62:
								goto IL_03d6;
							case 63:
								goto IL_03ea;
							case 64:
								goto IL_040e;
							case 65:
							case 66:
								goto IL_0424;
							case 67:
								goto IL_0438;
							case 68:
								goto IL_045c;
							case 69:
							case 70:
								goto IL_0472;
							case 71:
								goto IL_0486;
							case 72:
								goto IL_04aa;
							case 73:
							case 74:
								goto IL_04c0;
							case 75:
								goto IL_04d4;
							case 76:
								goto IL_04f8;
							case 77:
							case 78:
								goto IL_050e;
							case 79:
								goto IL_0522;
							case 80:
								goto IL_0546;
							case 81:
							case 82:
							case 83:
							case 223:
								goto IL_055f;
							case 84:
								goto IL_058d;
							case 85:
								goto IL_059e;
							case 86:
								goto IL_05af;
							case 87:
								goto IL_05c0;
							case 88:
								goto IL_05d1;
							case 89:
								goto IL_05e2;
							case 90:
							case 218:
								goto IL_05f4;
							case 91:
								goto IL_05fb;
							case 93:
								goto IL_0662;
							case 94:
								goto IL_0676;
							case 95:
								goto IL_06a7;
							case 96:
								goto IL_06b8;
							case 97:
								goto IL_06be;
							case 99:
								goto IL_06e1;
							case 98:
							case 100:
							case 101:
								goto IL_06fd;
							case 102:
								goto IL_0739;
							case 103:
								goto IL_074c;
							case 104:
								goto IL_075c;
							case 106:
								goto IL_077d;
							case 105:
							case 107:
							case 108:
								goto IL_078e;
							case 109:
								goto IL_07a2;
							case 110:
								goto IL_07d3;
							case 111:
								goto IL_07e4;
							case 112:
								goto IL_07ea;
							case 114:
								goto IL_080d;
							case 113:
							case 115:
							case 116:
								goto IL_0829;
							case 117:
								goto IL_0865;
							case 118:
								goto IL_0878;
							case 119:
								goto IL_0888;
							case 121:
								goto IL_08a9;
							case 120:
							case 122:
							case 123:
								goto IL_08ba;
							case 124:
								goto IL_08ce;
							case 125:
								goto IL_08ff;
							case 126:
								goto IL_0910;
							case 127:
								goto IL_0916;
							case 129:
								goto IL_0939;
							case 128:
							case 130:
							case 131:
								goto IL_0958;
							case 132:
								goto IL_0997;
							case 133:
								goto IL_09ad;
							case 134:
								goto IL_09c0;
							case 136:
								goto IL_09e4;
							case 135:
							case 137:
							case 138:
								goto IL_09f8;
							case 139:
								goto IL_0a0f;
							case 140:
								goto IL_0a43;
							case 141:
								goto IL_0a57;
							case 142:
								goto IL_0a60;
							case 144:
								goto IL_0a86;
							case 143:
							case 145:
							case 146:
								goto IL_0aa5;
							case 147:
								goto IL_0ae4;
							case 148:
								goto IL_0afa;
							case 149:
								goto IL_0b0d;
							case 151:
								goto IL_0b31;
							case 150:
							case 152:
							case 153:
								goto IL_0b45;
							case 154:
								goto IL_0b5c;
							case 155:
								goto IL_0b90;
							case 156:
								goto IL_0ba4;
							case 157:
								goto IL_0bad;
							case 159:
								goto IL_0bd3;
							case 158:
							case 160:
							case 161:
								goto IL_0bf2;
							case 162:
								goto IL_0c31;
							case 163:
								goto IL_0c47;
							case 164:
								goto IL_0c5a;
							case 166:
								goto IL_0c7e;
							case 165:
							case 167:
							case 168:
								goto IL_0c92;
							case 169:
								goto IL_0ca9;
							case 170:
								goto IL_0cdd;
							case 171:
								goto IL_0cf1;
							case 172:
								goto IL_0cfa;
							case 174:
								goto IL_0d20;
							case 173:
							case 175:
							case 176:
								goto IL_0d3f;
							case 177:
								goto IL_0d7e;
							case 178:
								goto IL_0d94;
							case 179:
								goto IL_0da7;
							case 181:
								goto IL_0dcb;
							case 180:
							case 182:
							case 183:
								goto IL_0ddf;
							case 185:
								goto IL_0dfb;
							case 186:
								goto IL_0e31;
							case 187:
								goto IL_0e51;
							case 188:
								goto IL_0e6b;
							case 189:
							case 190:
								goto IL_0e75;
							case 191:
								goto IL_0eab;
							case 192:
								goto IL_0ecb;
							case 193:
								goto IL_0ee5;
							case 194:
							case 195:
								goto IL_0eef;
							case 196:
								goto IL_0f25;
							case 197:
								goto IL_0f45;
							case 198:
								goto IL_0f5f;
							case 199:
							case 200:
								goto IL_0f69;
							case 201:
								goto IL_0f9f;
							case 202:
								goto IL_0fbf;
							case 203:
								goto IL_0fd9;
							case 204:
							case 205:
								goto IL_0fe3;
							case 206:
								goto IL_1019;
							case 207:
								goto IL_1039;
							case 208:
								goto IL_1053;
							case 209:
							case 210:
								goto IL_105d;
							case 211:
								goto IL_1093;
							case 212:
								goto IL_10b3;
							case 213:
								goto IL_10cd;
							case 214:
							case 215:
								goto IL_10d7;
							case 217:
								goto IL_10f0;
							case 219:
								goto IL_1108;
							case 92:
							case 184:
							case 216:
							case 220:
								goto IL_1115;
							case 221:
								goto IL_1121;
							case 222:
								goto IL_114f;
							case 224:
							case 225:
								goto IL_1170;
							case 226:
								goto IL_117d;
							case 227:
								goto end_IL_0001_2;
							default:
								goto end_IL_0001;
							case 7:
							case 11:
							case 15:
							case 19:
							case 23:
							case 27:
							case 31:
							case 35:
							case 39:
							case 43:
							case 228:
								goto end_IL_0001_3;
							}
							goto default;
						}
						IL_114f:
						num2 = 222;
						if (!chkStop.Checked)
						{
							goto IL_055f;
						}
						goto IL_1170;
						IL_1170:
						num2 = 225;
						EnableCntl();
						goto IL_117d;
						IL_1121:
						num2 = 221;
						if (Conversion.Val(txtLoopSSDOC.Text) < Conversion.Val(txtLoopFSDOC.Text))
						{
							goto IL_114f;
						}
						goto IL_1170;
						IL_117d:
						num2 = 226;
						lblProgress.BackColor = Color.LimeGreen;
						break;
						IL_000b:
						num2 = 2;
						num5 = 0;
						goto IL_000f;
						IL_000f:
						num2 = 3;
						num6 = 0;
						goto IL_0014;
						IL_0014:
						num2 = 4;
						num7 = 0;
						goto IL_0019;
						IL_0019:
						num2 = 5;
						if (MysqlConn.MainProgLic < 11)
						{
							goto IL_002a;
						}
						goto IL_0044;
						IL_002a:
						num2 = 6;
						lblProgress.Text = "Inactive function";
						goto end_IL_0001_3;
						IL_0044:
						num2 = 9;
						if (txtOCPass.Text.Trim().Length != 6)
						{
							goto IL_0068;
						}
						goto IL_007f;
						IL_0068:
						num2 = 10;
						Interaction.MsgBox("ادخل باسورد اورنج كاش");
						goto end_IL_0001_3;
						IL_007f:
						num2 = 13;
						if (lblPort1.Text.Trim().Length == 0)
						{
							goto IL_00a0;
						}
						goto IL_00b7;
						IL_00a0:
						num2 = 14;
						Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
						goto end_IL_0001_3;
						IL_00b7:
						num2 = 17;
						if (chkCh1.Checked & (txtOCchargeNum1.Text.Trim().Length != 11))
						{
							goto IL_00e8;
						}
						goto IL_00ff;
						IL_00e8:
						num2 = 18;
						Interaction.MsgBox("ادخل رقم الخط المراد الشحن له COM 1");
						goto end_IL_0001_3;
						IL_00ff:
						num2 = 21;
						if (chkCh2.Checked & (txtOCchargeNum2.Text.Trim().Length != 11))
						{
							goto IL_0130;
						}
						goto IL_0147;
						IL_0130:
						num2 = 22;
						Interaction.MsgBox("ادخل رقم الخط المراد الشحن له COM 2");
						goto end_IL_0001_3;
						IL_0147:
						num2 = 25;
						if (chkCh3.Checked & (txtOCchargeNum3.Text.Trim().Length != 11))
						{
							goto IL_0178;
						}
						goto IL_018f;
						IL_0178:
						num2 = 26;
						Interaction.MsgBox("ادخل رقم الخط المراد الشحن له COM 3");
						goto end_IL_0001_3;
						IL_018f:
						num2 = 29;
						if (chkCh4.Checked & (txtOCchargeNum4.Text.Trim().Length != 11))
						{
							goto IL_01c0;
						}
						goto IL_01d7;
						IL_01c0:
						num2 = 30;
						Interaction.MsgBox("ادخل رقم الخط المراد الشحن له COM 4");
						goto end_IL_0001_3;
						IL_01d7:
						num2 = 33;
						if (chkCh5.Checked & (txtOCchargeNum5.Text.Trim().Length != 11))
						{
							goto IL_0208;
						}
						goto IL_021f;
						IL_0208:
						num2 = 34;
						Interaction.MsgBox("ادخل رقم الخط المراد الشحن له COM 5");
						goto end_IL_0001_3;
						IL_021f:
						num2 = 37;
						if (chkCh6.Checked & (txtOCchargeNum6.Text.Trim().Length != 11))
						{
							goto IL_0250;
						}
						goto IL_0267;
						IL_0250:
						num2 = 38;
						Interaction.MsgBox("ادخل رقم الخط المراد الشحن له COM 6");
						goto end_IL_0001_3;
						IL_0267:
						num2 = 41;
						if (txtOCPass.Text.Length != 6)
						{
							goto IL_0286;
						}
						goto IL_029d;
						IL_0286:
						num2 = 42;
						Interaction.MsgBox("ادخل كلمة المرور لاورنج كاش");
						goto end_IL_0001_3;
						IL_029d:
						num2 = 45;
						lblProgress.BackColor = Color.Red;
						goto IL_02b1;
						IL_02b1:
						num2 = 46;
						lblProgress.Text = "شحن اورنج كاش";
						goto IL_02c5;
						IL_02c5:
						num2 = 47;
						DisableCntl();
						goto IL_02cf;
						IL_02cf:
						num2 = 48;
						ReSetUssdOrder();
						goto IL_02d9;
						IL_02d9:
						num2 = 49;
						flag = chkCh1.Checked;
						goto IL_02e9;
						IL_02e9:
						num2 = 50;
						flag2 = chkCh2.Checked;
						goto IL_02f9;
						IL_02f9:
						num2 = 51;
						flag3 = chkCh3.Checked;
						goto IL_0309;
						IL_0309:
						num2 = 52;
						flag4 = chkCh4.Checked;
						goto IL_0319;
						IL_0319:
						num2 = 53;
						flag5 = chkCh5.Checked;
						goto IL_0329;
						IL_0329:
						num2 = 54;
						flag6 = chkCh6.Checked;
						goto IL_0339;
						IL_0339:
						num2 = 55;
						lblProgress.BackColor = Color.Red;
						goto IL_034d;
						IL_034d:
						num2 = 56;
						txtLoopSSDOC.Text = "0";
						goto IL_0361;
						IL_0361:
						num2 = 57;
						if (Conversion.Val(txtOCTopValue.Text) > 0.0)
						{
							goto IL_0388;
						}
						goto IL_055f;
						IL_0388:
						num2 = 58;
						if (chkCh1.Checked)
						{
							goto IL_039c;
						}
						goto IL_03d6;
						IL_039c:
						num2 = 59;
						lblGiftV1.Text = Conversions.ToString(Conversion.Val(txtOCTopValue.Text));
						goto IL_03c0;
						IL_03c0:
						num2 = 60;
						lblGifts01.Text = "1";
						goto IL_03d6;
						IL_03d6:
						num2 = 62;
						if (chkCh2.Checked)
						{
							goto IL_03ea;
						}
						goto IL_0424;
						IL_03ea:
						num2 = 63;
						lblGiftV2.Text = Conversions.ToString(Conversion.Val(txtOCTopValue.Text));
						goto IL_040e;
						IL_040e:
						num2 = 64;
						lblGifts02.Text = "1";
						goto IL_0424;
						IL_0424:
						num2 = 66;
						if (chkCh3.Checked)
						{
							goto IL_0438;
						}
						goto IL_0472;
						IL_0438:
						num2 = 67;
						lblGiftV3.Text = Conversions.ToString(Conversion.Val(txtOCTopValue.Text));
						goto IL_045c;
						IL_045c:
						num2 = 68;
						lblGifts03.Text = "1";
						goto IL_0472;
						IL_0472:
						num2 = 70;
						if (chkCh4.Checked)
						{
							goto IL_0486;
						}
						goto IL_04c0;
						IL_0486:
						num2 = 71;
						lblGiftV4.Text = Conversions.ToString(Conversion.Val(txtOCTopValue.Text));
						goto IL_04aa;
						IL_04aa:
						num2 = 72;
						lblGifts04.Text = "1";
						goto IL_04c0;
						IL_04c0:
						num2 = 74;
						if (chkCh5.Checked)
						{
							goto IL_04d4;
						}
						goto IL_050e;
						IL_04d4:
						num2 = 75;
						lblGiftV5.Text = Conversions.ToString(Conversion.Val(txtOCTopValue.Text));
						goto IL_04f8;
						IL_04f8:
						num2 = 76;
						lblGifts05.Text = "1";
						goto IL_050e;
						IL_050e:
						num2 = 78;
						if (chkCh6.Checked)
						{
							goto IL_0522;
						}
						goto IL_055f;
						IL_0522:
						num2 = 79;
						lblGiftV6.Text = Conversions.ToString(Conversion.Val(txtOCTopValue.Text));
						goto IL_0546;
						IL_0546:
						num2 = 80;
						lblGifts06.Text = "1";
						goto IL_055f;
						IL_055f:
						num2 = 83;
						txtLoopSSDOC.Text = Conversions.ToString(Conversion.Val(txtLoopSSDOC.Text) + 1.0);
						goto IL_058d;
						IL_058d:
						num2 = 84;
						chkCh1.Checked = flag;
						goto IL_059e;
						IL_059e:
						num2 = 85;
						chkCh2.Checked = flag2;
						goto IL_05af;
						IL_05af:
						num2 = 86;
						chkCh3.Checked = flag3;
						goto IL_05c0;
						IL_05c0:
						num2 = 87;
						chkCh4.Checked = flag4;
						goto IL_05d1;
						IL_05d1:
						num2 = 88;
						chkCh5.Checked = flag5;
						goto IL_05e2;
						IL_05e2:
						num2 = 89;
						chkCh6.Checked = flag6;
						goto IL_05f4;
						IL_05f4:
						num2 = 90;
						num5++;
						goto IL_05fb;
						IL_05fb:
						num2 = 91;
						if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
						{
							goto IL_0662;
						}
						goto IL_1115;
						IL_0662:
						num2 = 93;
						if (ckOCBalWithBack.Checked)
						{
							goto IL_0676;
						}
						goto IL_06e1;
						IL_0676:
						num2 = 94;
						num7 = (int)Math.Round(Conversion.Fix(Conversion.Val(lblBal1.Text)) - Conversion.Val(txtOCTransferSub.Text));
						goto IL_06a7;
						IL_06a7:
						num2 = 95;
						if (num7 <= 0)
						{
							goto IL_06b8;
						}
						goto IL_06be;
						IL_06b8:
						num2 = 96;
						num7 = 0;
						goto IL_06be;
						IL_06be:
						num2 = 97;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV1.Text) + (double)num7);
						goto IL_06fd;
						IL_06e1:
						num2 = 99;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV1.Text));
						goto IL_06fd;
						IL_06fd:
						num2 = 101;
						if (unchecked(((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked) && num6 >= 2))
						{
							goto IL_0739;
						}
						goto IL_077d;
						IL_0739:
						num2 = 102;
						if (unchecked(num5 == 5 || num5 == 15))
						{
							goto IL_074c;
						}
						goto IL_075c;
						IL_074c:
						num2 = 103;
						ResetUssdCode(lblPort1);
						goto IL_075c;
						IL_075c:
						num2 = 104;
						SetUssdOrderVcashTraVXPVaryGiftOrangeCashSet(lblPort1, txtOCchargeNum1.Text, num6);
						goto IL_078e;
						IL_077d:
						num2 = 106;
						chkCh1.Checked = false;
						goto IL_078e;
						IL_078e:
						num2 = 108;
						if (ckOCBalWithBack.Checked)
						{
							goto IL_07a2;
						}
						goto IL_080d;
						IL_07a2:
						num2 = 109;
						num7 = (int)Math.Round(Conversion.Fix(Conversion.Val(lblBal2.Text)) - Conversion.Val(txtOCTransferSub.Text));
						goto IL_07d3;
						IL_07d3:
						num2 = 110;
						if (num7 <= 0)
						{
							goto IL_07e4;
						}
						goto IL_07ea;
						IL_07e4:
						num2 = 111;
						num7 = 0;
						goto IL_07ea;
						IL_07ea:
						num2 = 112;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV2.Text) + (double)num7);
						goto IL_0829;
						IL_080d:
						num2 = 114;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV2.Text));
						goto IL_0829;
						IL_0829:
						num2 = 116;
						if (unchecked(((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked) && num6 >= 2))
						{
							goto IL_0865;
						}
						goto IL_08a9;
						IL_0865:
						num2 = 117;
						if (unchecked(num5 == 5 || num5 == 15))
						{
							goto IL_0878;
						}
						goto IL_0888;
						IL_0878:
						num2 = 118;
						ResetUssdCode(lblPort2);
						goto IL_0888;
						IL_0888:
						num2 = 119;
						SetUssdOrderVcashTraVXPVaryGiftOrangeCashSet(lblPort2, txtOCchargeNum2.Text, num6);
						goto IL_08ba;
						IL_08a9:
						num2 = 121;
						chkCh2.Checked = false;
						goto IL_08ba;
						IL_08ba:
						num2 = 123;
						if (ckOCBalWithBack.Checked)
						{
							goto IL_08ce;
						}
						goto IL_0939;
						IL_08ce:
						num2 = 124;
						num7 = (int)Math.Round(Conversion.Fix(Conversion.Val(lblBal3.Text)) - Conversion.Val(txtOCTransferSub.Text));
						goto IL_08ff;
						IL_08ff:
						num2 = 125;
						if (num7 <= 0)
						{
							goto IL_0910;
						}
						goto IL_0916;
						IL_0910:
						num2 = 126;
						num7 = 0;
						goto IL_0916;
						IL_0916:
						num2 = 127;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV3.Text) + (double)num7);
						goto IL_0958;
						IL_0939:
						num2 = 129;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV3.Text));
						goto IL_0958;
						IL_0958:
						num2 = 131;
						if (unchecked(((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked) && num6 >= 2))
						{
							goto IL_0997;
						}
						goto IL_09e4;
						IL_0997:
						num2 = 132;
						if (unchecked(num5 == 5 || num5 == 15))
						{
							goto IL_09ad;
						}
						goto IL_09c0;
						IL_09ad:
						num2 = 133;
						ResetUssdCode(lblPort3);
						goto IL_09c0;
						IL_09c0:
						num2 = 134;
						SetUssdOrderVcashTraVXPVaryGiftOrangeCashSet(lblPort3, txtOCchargeNum3.Text, num6);
						goto IL_09f8;
						IL_09e4:
						num2 = 136;
						chkCh3.Checked = false;
						goto IL_09f8;
						IL_09f8:
						num2 = 138;
						if (ckOCBalWithBack.Checked)
						{
							goto IL_0a0f;
						}
						goto IL_0a86;
						IL_0a0f:
						num2 = 139;
						num7 = (int)Math.Round(Conversion.Fix(Conversion.Val(lblBal4.Text)) - Conversion.Val(txtOCTransferSub.Text));
						goto IL_0a43;
						IL_0a43:
						num2 = 140;
						if (num7 <= 0)
						{
							goto IL_0a57;
						}
						goto IL_0a60;
						IL_0a57:
						num2 = 141;
						num7 = 0;
						goto IL_0a60;
						IL_0a60:
						num2 = 142;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV4.Text) + (double)num7);
						goto IL_0aa5;
						IL_0a86:
						num2 = 144;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV4.Text));
						goto IL_0aa5;
						IL_0aa5:
						num2 = 146;
						if (unchecked(((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked) && num6 >= 2))
						{
							goto IL_0ae4;
						}
						goto IL_0b31;
						IL_0ae4:
						num2 = 147;
						if (unchecked(num5 == 5 || num5 == 15))
						{
							goto IL_0afa;
						}
						goto IL_0b0d;
						IL_0afa:
						num2 = 148;
						ResetUssdCode(lblPort4);
						goto IL_0b0d;
						IL_0b0d:
						num2 = 149;
						SetUssdOrderVcashTraVXPVaryGiftOrangeCashSet(lblPort4, txtOCchargeNum4.Text, num6);
						goto IL_0b45;
						IL_0b31:
						num2 = 151;
						chkCh4.Checked = false;
						goto IL_0b45;
						IL_0b45:
						num2 = 153;
						if (ckOCBalWithBack.Checked)
						{
							goto IL_0b5c;
						}
						goto IL_0bd3;
						IL_0b5c:
						num2 = 154;
						num7 = (int)Math.Round(Conversion.Fix(Conversion.Val(lblBal5.Text)) - Conversion.Val(txtOCTransferSub.Text));
						goto IL_0b90;
						IL_0b90:
						num2 = 155;
						if (num7 <= 0)
						{
							goto IL_0ba4;
						}
						goto IL_0bad;
						IL_0ba4:
						num2 = 156;
						num7 = 0;
						goto IL_0bad;
						IL_0bad:
						num2 = 157;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV5.Text) + (double)num7);
						goto IL_0bf2;
						IL_0bd3:
						num2 = 159;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV5.Text));
						goto IL_0bf2;
						IL_0bf2:
						num2 = 161;
						if (unchecked(((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked) && num6 >= 2))
						{
							goto IL_0c31;
						}
						goto IL_0c7e;
						IL_0c31:
						num2 = 162;
						if (unchecked(num5 == 5 || num5 == 15))
						{
							goto IL_0c47;
						}
						goto IL_0c5a;
						IL_0c47:
						num2 = 163;
						ResetUssdCode(lblPort5);
						goto IL_0c5a;
						IL_0c5a:
						num2 = 164;
						SetUssdOrderVcashTraVXPVaryGiftOrangeCashSet(lblPort5, txtOCchargeNum5.Text, num6);
						goto IL_0c92;
						IL_0c7e:
						num2 = 166;
						chkCh5.Checked = false;
						goto IL_0c92;
						IL_0c92:
						num2 = 168;
						if (ckOCBalWithBack.Checked)
						{
							goto IL_0ca9;
						}
						goto IL_0d20;
						IL_0ca9:
						num2 = 169;
						num7 = (int)Math.Round(Conversion.Fix(Conversion.Val(lblBal6.Text)) - Conversion.Val(txtOCTransferSub.Text));
						goto IL_0cdd;
						IL_0cdd:
						num2 = 170;
						if (num7 <= 0)
						{
							goto IL_0cf1;
						}
						goto IL_0cfa;
						IL_0cf1:
						num2 = 171;
						num7 = 0;
						goto IL_0cfa;
						IL_0cfa:
						num2 = 172;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV6.Text) + (double)num7);
						goto IL_0d3f;
						IL_0d20:
						num2 = 174;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV6.Text));
						goto IL_0d3f;
						IL_0d3f:
						num2 = 176;
						if (unchecked(((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked) && num6 >= 2))
						{
							goto IL_0d7e;
						}
						goto IL_0dcb;
						IL_0d7e:
						num2 = 177;
						if (unchecked(num5 == 5 || num5 == 15))
						{
							goto IL_0d94;
						}
						goto IL_0da7;
						IL_0d94:
						num2 = 178;
						ResetUssdCode(lblPort6);
						goto IL_0da7;
						IL_0da7:
						num2 = 179;
						SetUssdOrderVcashTraVXPVaryGiftOrangeCashSet(lblPort6, txtOCchargeNum6.Text, num6);
						goto IL_0ddf;
						IL_0dcb:
						num2 = 181;
						chkCh6.Checked = false;
						goto IL_0ddf;
						IL_0ddf:
						num2 = 183;
						if (!chkStop.Checked)
						{
							goto IL_0dfb;
						}
						goto IL_1115;
						IL_0dfb:
						num2 = 185;
						if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
						{
							goto IL_0e31;
						}
						goto IL_0e75;
						IL_0e31:
						num2 = 186;
						SetUssdOrderVcashTraVXPVaryGiftOrangeCash(lblPort1, txtOCchargeNum1.Text, num6);
						goto IL_0e51;
						IL_0e51:
						num2 = 187;
						if (!chkCh1.Checked)
						{
							goto IL_0e6b;
						}
						goto IL_0e75;
						IL_0e6b:
						num2 = 188;
						num5 = 0;
						goto IL_0e75;
						IL_0e75:
						num2 = 190;
						if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
						{
							goto IL_0eab;
						}
						goto IL_0eef;
						IL_0eab:
						num2 = 191;
						SetUssdOrderVcashTraVXPVaryGiftOrangeCash(lblPort2, txtOCchargeNum2.Text, num6);
						goto IL_0ecb;
						IL_0ecb:
						num2 = 192;
						if (!chkCh2.Checked)
						{
							goto IL_0ee5;
						}
						goto IL_0eef;
						IL_0ee5:
						num2 = 193;
						num5 = 0;
						goto IL_0eef;
						IL_0eef:
						num2 = 195;
						if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
						{
							goto IL_0f25;
						}
						goto IL_0f69;
						IL_0f25:
						num2 = 196;
						SetUssdOrderVcashTraVXPVaryGiftOrangeCash(lblPort3, txtOCchargeNum3.Text, num6);
						goto IL_0f45;
						IL_0f45:
						num2 = 197;
						if (!chkCh3.Checked)
						{
							goto IL_0f5f;
						}
						goto IL_0f69;
						IL_0f5f:
						num2 = 198;
						num5 = 0;
						goto IL_0f69;
						IL_0f69:
						num2 = 200;
						if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
						{
							goto IL_0f9f;
						}
						goto IL_0fe3;
						IL_0f9f:
						num2 = 201;
						SetUssdOrderVcashTraVXPVaryGiftOrangeCash(lblPort4, txtOCchargeNum4.Text, num6);
						goto IL_0fbf;
						IL_0fbf:
						num2 = 202;
						if (!chkCh4.Checked)
						{
							goto IL_0fd9;
						}
						goto IL_0fe3;
						IL_0fd9:
						num2 = 203;
						num5 = 0;
						goto IL_0fe3;
						IL_0fe3:
						num2 = 205;
						if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
						{
							goto IL_1019;
						}
						goto IL_105d;
						IL_1019:
						num2 = 206;
						SetUssdOrderVcashTraVXPVaryGiftOrangeCash(lblPort5, txtOCchargeNum5.Text, num6);
						goto IL_1039;
						IL_1039:
						num2 = 207;
						if (!chkCh5.Checked)
						{
							goto IL_1053;
						}
						goto IL_105d;
						IL_1053:
						num2 = 208;
						num5 = 0;
						goto IL_105d;
						IL_105d:
						num2 = 210;
						if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
						{
							goto IL_1093;
						}
						goto IL_10d7;
						IL_1093:
						num2 = 211;
						SetUssdOrderVcashTraVXPVaryGiftOrangeCash(lblPort6, txtOCchargeNum6.Text, num6);
						goto IL_10b3;
						IL_10b3:
						num2 = 212;
						if (!chkCh6.Checked)
						{
							goto IL_10cd;
						}
						goto IL_10d7;
						IL_10cd:
						num2 = 213;
						num5 = 0;
						goto IL_10d7;
						IL_10d7:
						num2 = 215;
						if (!chkStop.Checked)
						{
							goto IL_10f0;
						}
						goto IL_1115;
						IL_10f0:
						num2 = 217;
						if (num5 <= 6)
						{
							goto IL_05f4;
						}
						goto IL_1108;
						IL_1108:
						num2 = 219;
						Application.DoEvents();
						goto IL_1115;
						IL_1115:
						num2 = 220;
						Application.DoEvents();
						goto IL_1121;
						end_IL_0001_2:
						break;
					}
					num2 = 227;
					lblProgress.Text = "OK";
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 5456;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void txtQryOrder_KeyPress(object sender, KeyPressEventArgs e)
	{
		if (Strings.Asc(e.KeyChar) == 13)
		{
			GetCardData(txtQryOrder.Text);
		}
	}

	private void txtCashNextMaster_MouseDoubleClick(object sender, MouseEventArgs e)
	{
	}

	private void txtQryOrder_MouseDoubleClick(object sender, MouseEventArgs e)
	{
		if ((txtQryOrder.Text.Length >= 5) & (txtQryOrder.Text.Length < 8) & (lblONnumQ.Text.Length > 5))
		{
			UpdateCardData(lblONmcQ.Text, txtQryOrder.Text);
		}
	}

	private void lblOCvx_Click(object sender, EventArgs e)
	{
		txtOCTopValue.Text = Conversions.ToString(Conversion.Val(RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(sender, null, "text", new object[0], null, null, null))));
	}

	private void btnOCExchange_Click(object sender, EventArgs e)
	{
		string text = lblOCMain.Text;
		lblOCMain.Text = txtOCNextMain.Text;
		txtOCNextMain.Text = text;
	}

	private void VerifyNumber(object sender, KeyPressEventArgs e)
	{
		NewLateBinding.LateSet(sender, null, "BackColor", new object[1] { Color.White }, null, null);
		if ((Strings.Asc(e.KeyChar) == 13) & chkInDB.Checked)
		{
			if (Operators.ConditionalCompareObjectEqual(NewLateBinding.LateGet(NewLateBinding.LateGet(NewLateBinding.LateGet(sender, null, "Text", new object[0], null, null, null), null, "Trim", new object[0], null, null, null), null, "Length", new object[0], null, null, null), 11, TextCompare: false))
			{
				if (VerifyMasterNumber(Conversions.ToString(NewLateBinding.LateGet(NewLateBinding.LateGet(sender, null, "Text", new object[0], null, null, null), null, "Trim", new object[0], null, null, null))))
				{
					NewLateBinding.LateSet(sender, null, "BackColor", new object[1] { Color.LightGreen }, null, null);
					txtInfo.Text = "موجود";
				}
				else
				{
					NewLateBinding.LateSet(sender, null, "BackColor", new object[1] { Color.LightPink }, null, null);
					Interaction.MsgBox("هذا الرقم غير موجود بالنظام\r\nتاكد انه رقمك", MsgBoxStyle.Critical);
				}
			}
			else
			{
				Interaction.MsgBox("هذا الرقم غير صحيح", MsgBoxStyle.Critical);
			}
		}
		if (Strings.Asc(e.KeyChar) != 8 && ((Strings.Asc(e.KeyChar) < 48) | (Strings.Asc(e.KeyChar) > 57)))
		{
			e.KeyChar = '\0';
		}
	}

	private void txtTransNum2365_n_KeyPress(object sender, KeyPressEventArgs e)
	{
		VerifyNumber(RuntimeHelpers.GetObjectValue(sender), e);
	}

	private void btnPrintRest_Click(object sender, EventArgs e)
	{
		RestartModem(lblPort1.Text);
		checked
		{
			Thread.Sleep((int)Math.Round(Conversion.Val(txtPrintPd.Text)));
			txtInfo.Text = lblNum1.Text + " Restarted \r\n" + txtInfo.Text;
			RestartModem(lblPort2.Text);
			Thread.Sleep((int)Math.Round(Conversion.Val(txtPrintPd.Text)));
			txtInfo.Text = lblNum2.Text + " Restarted \r\n" + txtInfo.Text;
			RestartModem(lblPort3.Text);
			Thread.Sleep((int)Math.Round(Conversion.Val(txtPrintPd.Text)));
			txtInfo.Text = lblNum3.Text + " Restarted \r\n" + txtInfo.Text;
			RestartModem(lblPort4.Text);
			Thread.Sleep((int)Math.Round(Conversion.Val(txtPrintPd.Text)));
			txtInfo.Text = lblNum4.Text + " Restarted \r\n" + txtInfo.Text;
			RestartModem(lblPort5.Text);
			Thread.Sleep((int)Math.Round(Conversion.Val(txtPrintPd.Text)));
			txtInfo.Text = lblNum5.Text + " Restarted \r\n" + txtInfo.Text;
			RestartModem(lblPort6.Text);
			Thread.Sleep((int)Math.Round(Conversion.Val(txtPrintPd.Text)));
			txtInfo.Text = lblNum6.Text + " Restarted \r\n" + txtInfo.Text;
		}
	}

	private void SetUssdOrderVcashTraVXPVaryGiftOrangeCash(Label Exxc, string Etransnumberto, int EEvaltocharge)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						AutoRes = 0;
						int num3 = 0;
						while (true)
						{
							IL_0042:
							num3++;
							lblProgress.Text = "Read " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							Application.DoEvents();
							int num4 = 0;
							do
							{
								Thread.Sleep(1000);
								string text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("0627064406310635064A062F0020062706440645062A0627062D0020063A064A063100200643062706410020"))
								{
									OutBoxDrop(Exxc, "الرصيد المتاح غير كاف لإتمام المعاملة");
									Application.DoEvents();
									DisablePort(Exxc);
									break;
								}
								if (text.Contains("+CUSD: "))
								{
									string text2 = text;
									int num5 = text.IndexOf("+CUSD: ");
									text2 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text2.IndexOf(",");
									string text3 = text2.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text3 = text3.Trim('"').Trim(',').Trim('"');
									if (text3.Length > 3)
									{
										string text4;
										if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text3);
											text4 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text4 = encoding_mod.Decode7Bit(text3);
										}
										OutBoxDrop(Exxc, text4);
										if (text4.Contains("ou are not subscribed to Orange Cash Service."))
										{
											Application.DoEvents();
											DisablePort(Exxc);
											break;
										}
										if (text4.Contains("المتاح غير كاف لإتمام"))
										{
											Application.DoEvents();
											DisablePort(Exxc);
											break;
										}
										if (text4.Contains("number is suspended"))
										{
											Application.DoEvents();
											DisablePort(Exxc);
											break;
										}
										if (text4.Contains("The system is unavailable. Try again"))
										{
											Application.DoEvents();
											DisablePort(Exxc);
											break;
										}
										if (text4.Contains("تم شحن"))
										{
											string ussdCommandFull = "9";
											string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											AddToRemoteDB_TOPUP(GetNumberByPort(Exxc.Text), Etransnumberto, EEvaltocharge);
											DisablePort(Exxc);
											break;
										}
										if (text4.Contains("لرقم السري غير صحيح"))
										{
											Application.DoEvents();
											DisablePort(Exxc);
											break;
										}
										if (text4.Contains("ضمان تنفيذ طلبك بنجاح يمكنك اجراء عملية شحن اخرى بعد 5 دقائق"))
										{
											Application.DoEvents();
											DisablePort(Exxc);
											break;
										}
										if (text4.Contains("لا يكفي لشحن"))
										{
											Application.DoEvents();
											DisablePort(Exxc);
											break;
										}
										if (text4.Contains("لا يمكن"))
										{
											string ussdCommandFull = "9";
											string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											DisablePort(Exxc);
											break;
										}
										if (text4.Contains("ختيار خاطىء"))
										{
											string ussdCommandFull = "00";
											string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(800);
											DisablePort(Exxc);
											if (num3 <= 4)
											{
												goto IL_0042;
											}
										}
									}
								}
								if (text.Contains("unavailable") | text.Contains("+CUSD: 5") | text.Contains("ERROR") | text.Contains("unknown") | text.Contains("retry operation"))
								{
									Application.DoEvents();
									break;
								}
								Application.DoEvents();
								num4++;
							}
							while (num4 <= 25);
							break;
						}
						break;
					}
					case 1292:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1292;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVcashTraVXPVaryGiftOrangeCashSet(Label Exxc, string Etransnumberto, int EEvaltocharge)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					if (EEvaltocharge <= 0)
					{
						goto end_IL_0001;
					}
					AutoRes = 0;
					string text = serialPort.ReadExisting();
					string ussdCommandFull;
					string commandCode;
					if (text.Contains("+CUSD: "))
					{
						string text2 = text;
						int num3 = text.IndexOf("+CUSD: ");
						text2 = checked(text.Substring(num3 + 10, text.Length - num3 - 10)).Trim().Trim('o').Trim('\r')
							.Trim('\r')
							.Trim();
						num3 = text2.IndexOf(",");
						string text3 = text2.Substring(0, num3).Trim().Trim('"')
							.Trim(',')
							.Trim('"');
						text3 = text3.Trim('"').Trim(',').Trim('"');
						if (text3.Length <= 3)
						{
							break;
						}
						string text4;
						if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
						{
							byte[] bytes = encoding_mod.StrToByteArray(text3);
							text4 = Encoding.BigEndianUnicode.GetString(bytes);
						}
						else
						{
							text4 = encoding_mod.Decode7Bit(text3);
						}
						OutBoxDrop(Exxc, text4);
						if (text4.Contains("تم شحن"))
						{
							ussdCommandFull = "9";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							DisablePort(Exxc);
							AddToRemoteDB_TOPUP(GetNumberByPort(Exxc.Text), Etransnumberto, EEvaltocharge);
							break;
						}
						if (text4.Contains("المتاح غير كاف لإتمام"))
						{
							Application.DoEvents();
							DisablePort(Exxc);
							break;
						}
						if (text4.Contains("لرقم السري غير صحيح"))
						{
							Application.DoEvents();
							DisablePort(Exxc);
							break;
						}
						if (text4.Contains("ضمان تنفيذ طلبك بنجاح يمكنك اجراء عملية شحن اخرى بعد 5 دقائق"))
						{
							Application.DoEvents();
							DisablePort(Exxc);
							break;
						}
						if (text4.Contains("لا يكفي لشحن"))
						{
							Application.DoEvents();
							DisablePort(Exxc);
							break;
						}
						if (text4.Contains("لا يمكن"))
						{
							ussdCommandFull = "9";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							DisablePort(Exxc);
							break;
						}
						if (text4.Contains("ختيار خاطىء"))
						{
							ussdCommandFull = "00";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							DisablePort(Exxc);
							break;
						}
					}
					ussdCommandFull = "#7115*31*" + txtOCPass.Text + "*2*" + Etransnumberto + "*" + Conversions.ToString(EEvaltocharge) + "*1*1#";
					commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(commandCode + "\r");
					break;
				}
				case 958:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001_2;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				break;
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 958;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVcashTraVXPVaryGiftOrangeCash2(Label Exxc, string Etransnumberto, int EEvaltocharge)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						if (EEvaltocharge <= 0)
						{
							goto end_IL_0001;
						}
						AutoRes = 0;
						string text = serialPort.ReadExisting();
						string ussdCommandFull = "#7115*31*" + txtOCPass.Text + "*2*" + Etransnumberto + "*" + Conversions.ToString(EEvaltocharge) + "*1*1#";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(1000);
						Application.DoEvents();
						lblProgress.Text = "R " + Etransnumberto;
						Application.DoEvents();
						int num3 = 0;
						while (!chkStop.Checked)
						{
							Thread.Sleep(500);
							text = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
							{
								txtInfo.Text = text + "\r\n" + txtInfo.Text;
							}
							if (text.Contains("0627064406310635064A062F0020062706440645062A0627062D0020063A064A063100200643062706410020"))
							{
								DisablePortdonnt(Exxc);
								chkStop.Checked = true;
								OutBoxDrop(Exxc, "الرصيد المتاح غير كاف لإتمام المعاملة");
								Application.DoEvents();
								break;
							}
							if (text.Contains("+CUSD: "))
							{
								string text2 = text;
								int num4 = text.IndexOf("+CUSD: ");
								text2 = text.Substring(num4 + 10, text.Length - num4 - 10).Trim().Trim('o')
									.Trim('\r')
									.Trim('\r')
									.Trim();
								num4 = text2.IndexOf(",");
								string text3 = text2.Substring(0, num4).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								text3 = text3.Trim('"').Trim(',').Trim('"');
								if (text3.Length > 3)
								{
									string text4;
									if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text3);
										text4 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text4 = encoding_mod.Decode7Bit(text3);
									}
									OutBoxDrop(Exxc, text4);
									if (text4.Contains("تم شحن"))
									{
										ussdCommandFull = "9";
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										OCchargeprocessState = true;
										AddToRemoteDB_TOPUP(GetNumberByPort(Exxc.Text), Etransnumberto, EEvaltocharge);
										Thread.Sleep(500);
										break;
									}
									if (text4.Contains("لرقم السري غير صحيح"))
									{
										DisablePortdonnt(Exxc);
										chkStop.Checked = true;
										Application.DoEvents();
										break;
									}
									if (text4.Contains("ضمان تنفيذ طلبك بنجاح يمكنك اجراء عملية شحن اخرى بعد 5 دقائق"))
									{
										Application.DoEvents();
										break;
									}
									if (text4.Contains("لا يكفي لشحن"))
									{
										DisablePortdonnt(Exxc);
										Application.DoEvents();
										break;
									}
									if (text4.Contains("لا يمكن"))
									{
										ussdCommandFull = "9";
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(500);
										break;
									}
								}
							}
							if (text.Contains("+CUSD: 5") | text.Contains("ERROR") | text.Contains("unknown") | text.Contains("retry operation"))
							{
								Application.DoEvents();
								break;
							}
							Application.DoEvents();
							num3++;
							if (num3 > 50)
							{
								break;
							}
						}
						break;
					}
					case 1169:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001_2;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1169;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnOCGetBal_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtOCPass.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد اورنج كاش");
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "الاستعلام اورنج كاش";
		DisableCntl();
		ReSetUssdOrder();
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			lblBal1.Text = "#";
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			lblBal2.Text = "#";
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			lblBal3.Text = "#";
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			lblBal4.Text = "#";
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			lblBal5.Text = "#";
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			lblBal6.Text = "#";
		}
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			lblGiftV1.Text = "#";
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			lblGiftV2.Text = "#";
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			lblGiftV3.Text = "#";
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			lblGiftV4.Text = "#";
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			lblGiftV5.Text = "#";
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			lblGiftV6.Text = "#";
		}
		do
		{
			lblProgress.BackColor = Color.Red;
			num = checked(num + 1);
			Application.DoEvents();
			lblProgress.BackColor = Color.Red;
			if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
			{
				GetBalOrangeCash(lblPort1);
			}
			if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
			{
				GetBalOrangeCash(lblPort2);
			}
			if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
			{
				GetBalOrangeCash(lblPort3);
			}
			if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
			{
				GetBalOrangeCash(lblPort4);
			}
			if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
			{
				GetBalOrangeCash(lblPort5);
			}
			if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
			{
				GetBalOrangeCash(lblPort6);
			}
			if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
			{
				lblBal1.Text = GetBalOrangeCashX(lblPort1);
			}
			if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
			{
				lblBal2.Text = GetBalOrangeCashX(lblPort2);
			}
			if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
			{
				lblBal3.Text = GetBalOrangeCashX(lblPort3);
			}
			if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
			{
				lblBal4.Text = GetBalOrangeCashX(lblPort4);
			}
			if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
			{
				lblBal5.Text = GetBalOrangeCashX(lblPort5);
			}
			if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
			{
				lblBal6.Text = GetBalOrangeCashX(lblPort6);
			}
			if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
			{
				break;
			}
			Application.DoEvents();
			btnUssdReset_Click(RuntimeHelpers.GetObjectValue(sender), e);
			Application.DoEvents();
		}
		while (num <= 25);
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btnONGift_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 50)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "استقبال الهدية";
		DisableCntl();
		Application.DoEvents();
		SetUssdOrderVcGiftON();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void SetUssdOrderVcGiftON()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1457:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
						case 63:
							goto IL_0010;
						case 4:
							goto IL_0016;
						case 6:
							goto IL_007c;
						case 8:
							goto IL_0094;
						case 9:
							goto IL_00c6;
						case 10:
							goto IL_00df;
						case 11:
							goto IL_00ef;
						case 12:
							goto IL_0105;
						case 13:
							goto IL_011c;
						case 14:
						case 15:
							goto IL_0123;
						case 17:
							goto IL_013c;
						case 18:
							goto IL_016f;
						case 19:
							goto IL_0188;
						case 20:
							goto IL_0198;
						case 21:
							goto IL_01ae;
						case 22:
							goto IL_01c5;
						case 23:
						case 24:
							goto IL_01cc;
						case 26:
							goto IL_01e5;
						case 27:
							goto IL_0218;
						case 28:
							goto IL_0231;
						case 29:
							goto IL_0241;
						case 30:
							goto IL_0257;
						case 31:
							goto IL_026e;
						case 32:
						case 33:
							goto IL_0275;
						case 35:
							goto IL_028e;
						case 36:
							goto IL_02c1;
						case 37:
							goto IL_02da;
						case 38:
							goto IL_02ea;
						case 39:
							goto IL_0300;
						case 40:
							goto IL_0317;
						case 41:
						case 42:
							goto IL_031e;
						case 44:
							goto IL_0337;
						case 45:
							goto IL_036a;
						case 46:
							goto IL_0383;
						case 47:
							goto IL_0393;
						case 48:
							goto IL_03a9;
						case 49:
							goto IL_03c0;
						case 50:
						case 51:
							goto IL_03c7;
						case 53:
							goto IL_03e0;
						case 54:
							goto IL_0413;
						case 55:
							goto IL_042c;
						case 56:
							goto IL_043c;
						case 57:
							goto IL_0452;
						case 58:
							goto IL_0469;
						case 59:
						case 60:
							goto IL_0470;
						case 62:
							goto IL_0486;
						default:
							goto end_IL_0001;
						case 5:
						case 7:
						case 16:
						case 25:
						case 34:
						case 43:
						case 52:
						case 61:
						case 64:
							goto end_IL_0001_2;
						}
						goto default;
					}
					IL_0469:
					num2 = 58;
					num5 = 0;
					goto IL_0470;
					IL_0470:
					num2 = 60;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0486;
					IL_0452:
					num2 = 57;
					if (!chkCh6.Checked)
					{
						goto IL_0469;
					}
					goto IL_0470;
					IL_0486:
					num2 = 62;
					if (num5 <= 7)
					{
						goto IL_0010;
					}
					goto end_IL_0001_2;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_0010;
					IL_0010:
					num2 = 3;
					num5 = checked(num5 + 1);
					goto IL_0016;
					IL_0016:
					num2 = 4;
					if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_007c;
					IL_007c:
					num2 = 6;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0094;
					IL_0094:
					num2 = 8;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_00c6;
					}
					goto IL_0123;
					IL_00c6:
					num2 = 9;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_00df;
					}
					goto IL_00ef;
					IL_00df:
					num2 = 10;
					ResetUssdCode(lblPort1);
					goto IL_00ef;
					IL_00ef:
					num2 = 11;
					SetUssdOrderVcGiftXON(lblPort1, chkCh1);
					goto IL_0105;
					IL_0105:
					num2 = 12;
					if (!chkCh1.Checked)
					{
						goto IL_011c;
					}
					goto IL_0123;
					IL_011c:
					num2 = 13;
					num5 = 0;
					goto IL_0123;
					IL_0123:
					num2 = 15;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_013c;
					IL_013c:
					num2 = 17;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_016f;
					}
					goto IL_01cc;
					IL_016f:
					num2 = 18;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_0188;
					}
					goto IL_0198;
					IL_0188:
					num2 = 19;
					ResetUssdCode(lblPort2);
					goto IL_0198;
					IL_0198:
					num2 = 20;
					SetUssdOrderVcGiftXON(lblPort2, chkCh2);
					goto IL_01ae;
					IL_01ae:
					num2 = 21;
					if (!chkCh2.Checked)
					{
						goto IL_01c5;
					}
					goto IL_01cc;
					IL_01c5:
					num2 = 22;
					num5 = 0;
					goto IL_01cc;
					IL_01cc:
					num2 = 24;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_01e5;
					IL_01e5:
					num2 = 26;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_0218;
					}
					goto IL_0275;
					IL_0218:
					num2 = 27;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_0231;
					}
					goto IL_0241;
					IL_0231:
					num2 = 28;
					ResetUssdCode(lblPort3);
					goto IL_0241;
					IL_0241:
					num2 = 29;
					SetUssdOrderVcGiftXON(lblPort3, chkCh3);
					goto IL_0257;
					IL_0257:
					num2 = 30;
					if (!chkCh3.Checked)
					{
						goto IL_026e;
					}
					goto IL_0275;
					IL_026e:
					num2 = 31;
					num5 = 0;
					goto IL_0275;
					IL_0275:
					num2 = 33;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_028e;
					IL_028e:
					num2 = 35;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_02c1;
					}
					goto IL_031e;
					IL_02c1:
					num2 = 36;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_02da;
					}
					goto IL_02ea;
					IL_02da:
					num2 = 37;
					ResetUssdCode(lblPort4);
					goto IL_02ea;
					IL_02ea:
					num2 = 38;
					SetUssdOrderVcGiftXON(lblPort4, chkCh4);
					goto IL_0300;
					IL_0300:
					num2 = 39;
					if (!chkCh4.Checked)
					{
						goto IL_0317;
					}
					goto IL_031e;
					IL_0317:
					num2 = 40;
					num5 = 0;
					goto IL_031e;
					IL_031e:
					num2 = 42;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0337;
					IL_0337:
					num2 = 44;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_036a;
					}
					goto IL_03c7;
					IL_036a:
					num2 = 45;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_0383;
					}
					goto IL_0393;
					IL_0383:
					num2 = 46;
					ResetUssdCode(lblPort4);
					goto IL_0393;
					IL_0393:
					num2 = 47;
					SetUssdOrderVcGiftXON(lblPort5, chkCh5);
					goto IL_03a9;
					IL_03a9:
					num2 = 48;
					if (!chkCh5.Checked)
					{
						goto IL_03c0;
					}
					goto IL_03c7;
					IL_03c0:
					num2 = 49;
					num5 = 0;
					goto IL_03c7;
					IL_03c7:
					num2 = 51;
					if (chkStop.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_03e0;
					IL_03e0:
					num2 = 53;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_0413;
					}
					goto IL_0470;
					IL_0413:
					num2 = 54;
					if (num5 == 8 || num5 == 12 || num5 == 15)
					{
						goto IL_042c;
					}
					goto IL_043c;
					IL_042c:
					num2 = 55;
					ResetUssdCode(lblPort6);
					goto IL_043c;
					IL_043c:
					num2 = 56;
					SetUssdOrderVcGiftXON(lblPort6, chkCh6);
					goto IL_0452;
					end_IL_0001:
					break;
				}
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1457;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_2:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVcGiftXON(Label Exxc, CheckBox EErd)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						int num3 = 0;
						int num4 = 0;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						int num5 = 0;
						AutoRes = 0;
						string text = serialPort.ReadExisting();
						num5++;
						if (num5 >= 10)
						{
							break;
						}
						string ussdCommandFull = "*9*300#";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(500);
						Application.DoEvents();
						int num6 = 0;
						string text2 = "";
						int num7 = 100;
						num3 = 0;
						do
						{
							IL_00d6:
							lblProgress.Text = "GFT " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num5) + ")";
							Thread.Sleep(500);
							text = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
							{
								txtInfo.Text = text + "\r\n" + txtInfo.Text;
							}
							if (text.Contains("+CUSD: "))
							{
								string text3 = text;
								num6 = text.IndexOf("+CUSD: ");
								text3 = text.Substring(num6 + 10, text.Length - num6 - 10).Trim().Trim('o')
									.Trim('\r')
									.Trim('\r')
									.Trim();
								num6 = text3.IndexOf(",");
								string text4 = text3.Substring(0, num6).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								text4 = text4.Trim('"').Trim(',').Trim('"');
								if (text4.Length > 3)
								{
									string text5;
									if (Operators.CompareString(text4.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text4);
										text5 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text5 = encoding_mod.Decode7Bit(text4);
									}
									OutBoxDrop(Exxc, text5);
									Application.DoEvents();
									if (text5.Contains("Service"))
									{
										Application.DoEvents();
										break;
									}
									EErd.Checked = false;
									unchecked
									{
										if (text5.Substring(0, 30).Contains("فلوس") && num4 == 0)
										{
											ussdCommandFull = "1";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(1000);
											OutBoxDrop(Exxc, "تاكيد استقبال");
											Inc_Gift_CountON(Exxc, 50);
											break;
										}
										if (text5.Contains("فلوس") && num4 == 0)
										{
											ussdCommandFull = "2";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(1000);
											OutBoxDrop(Exxc, "تاكيد استقبال");
											Inc_Gift_CountON(Exxc, 50);
											break;
										}
										if (text5.Substring(0, 30).Contains("فلوس") && num4 == 1)
										{
											ussdCommandFull = "2";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(1000);
											OutBoxDrop(Exxc, "تاكيد استقبال");
											Inc_Gift_CountON(Exxc, 50);
											break;
										}
										if (text5.Contains("فلوس") && num4 == 1)
										{
											ussdCommandFull = "3";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(1000);
											OutBoxDrop(Exxc, "تاكيد استقبال");
											Inc_Gift_CountON(Exxc, 50);
											break;
										}
										if (text5.Substring(0, 30).Contains("فلوس") && num4 == 2)
										{
											ussdCommandFull = "4";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(1000);
											OutBoxDrop(Exxc, "تاكيد استقبال");
											Inc_Gift_CountON(Exxc, 50);
											break;
										}
										if (text5.Contains("فلوس") && num4 == 2)
										{
											ussdCommandFull = "5";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(1000);
											OutBoxDrop(Exxc, "تاكيد استقبال");
											Inc_Gift_CountON(Exxc, 50);
											break;
										}
										if (text5.Contains("فلوس") && num4 == 3)
										{
											ussdCommandFull = "5";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(1000);
											OutBoxDrop(Exxc, "تاكيد استقبال");
											Inc_Gift_CountON(Exxc, 50);
											break;
										}
									}
									if (text5.Contains("مزيد"))
									{
										ussdCommandFull = "0";
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(1000);
										num4++;
										goto IL_00d6;
									}
									break;
								}
							}
							else
							{
								if (text.Contains("0639064106480627064B0020064406270020064A0648062C062F00200647062F0627064A06270020064406470630"))
								{
									OutBoxDrop(Exxc, "عفوا\u064b لا يوجد هدايا لهذا الرقم");
									EErd.Checked = false;
									Application.DoEvents();
									break;
								}
								if (text.Contains("064706300647002006270644062E062F064506290020063A064A063100200645062A0627062D06290020064406460638062706450020062E0"))
								{
									EErd.Checked = false;
									Application.DoEvents();
									break;
								}
								if (text.Contains("retry operation") | text.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E") | text.Contains("063906410648062700200627064406310642064500200627064406300649002006270"))
								{
									Application.DoEvents();
									break;
								}
								if (text.Contains("CME ERROR: unknown") | text.Contains("CUSD: 5") | text.Contains("063906410648062700200627064406310642064500200627064406300649002006270"))
								{
									Application.DoEvents();
									break;
								}
							}
							Application.DoEvents();
							num6++;
						}
						while (num6 <= 20);
						break;
					}
					case 1819:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1819;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void Inc_Gift_CountON(Label eIndex, int Evalue)
	{
		if (Operators.CompareString(eIndex.Text, lblPort1.Text, TextCompare: false) == 0)
		{
			lblGifts01.Text = Conversions.ToString(Conversion.Val(lblGifts01.Text) + 1.0);
			lblGiftV1.Text = Conversions.ToString(Evalue);
		}
		if (Operators.CompareString(eIndex.Text, lblPort2.Text, TextCompare: false) == 0)
		{
			lblGifts02.Text = Conversions.ToString(Conversion.Val(lblGifts02.Text) + 1.0);
			lblGiftV2.Text = Conversions.ToString(Evalue);
		}
		if (Operators.CompareString(eIndex.Text, lblPort3.Text, TextCompare: false) == 0)
		{
			lblGifts03.Text = Conversions.ToString(Conversion.Val(lblGifts03.Text) + 1.0);
			lblGiftV3.Text = Conversions.ToString(Evalue);
		}
		if (Operators.CompareString(eIndex.Text, lblPort4.Text, TextCompare: false) == 0)
		{
			lblGifts04.Text = Conversions.ToString(Conversion.Val(lblGifts04.Text) + 1.0);
			lblGiftV4.Text = Conversions.ToString(Evalue);
		}
		if (Operators.CompareString(eIndex.Text, lblPort5.Text, TextCompare: false) == 0)
		{
			lblGifts05.Text = Conversions.ToString(Conversion.Val(lblGifts05.Text) + 1.0);
			lblGiftV5.Text = Conversions.ToString(Evalue);
		}
		if (Operators.CompareString(eIndex.Text, lblPort6.Text, TextCompare: false) == 0)
		{
			lblGifts06.Text = Conversions.ToString(Conversion.Val(lblGifts06.Text) + 1.0);
			lblGiftV6.Text = Conversions.ToString(Evalue);
		}
	}

	private void GetBalOrangeCash(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
					Application.DoEvents();
					Thread.Sleep(500);
					string text = "AT+CUSD=0";
					serialPort.WriteLine(text + "\r");
					Thread.Sleep(500);
					string ussdCommandFull = "#7115*81*" + txtOCPass.Text + "#";
					text = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(text + "\r");
					Thread.Sleep(250);
					Application.DoEvents();
					break;
				}
				case 242:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 242;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string GetBalOrangeCashX(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string text = default(string);
		string text6 = default(string);
		string text7 = default(string);
		string text8 = default(string);
		string left = default(string);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						text = "#";
						string text2 = "#";
						lblProgress.Text = "Read " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						while (true)
						{
							Application.DoEvents();
							double num3 = 0.0;
							string ussdCommandFull;
							string commandCode;
							while (!chkStop.Checked)
							{
								Thread.Sleep(500);
								string text3 = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text3) >= 2))
								{
									txtInfo.Text = text3 + "\r\n" + txtInfo.Text;
								}
								if (text3.Contains("+CUSD:"))
								{
									int num4 = text3.IndexOf("+CUSD:");
									text3 = text3.Substring(num4 + 9, text3.Length - num4 - 9).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num4 = text3.IndexOf(",");
									string text4 = text3.Substring(0, num4).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text4 = text4.Trim('"').Trim(',').Trim('"');
									if (text4.Length > 3)
									{
										string text5;
										if (Operators.CompareString(text4.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text4);
											text5 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text5 = encoding_mod.Decode7Bit(text4);
										}
										OutBoxDrop(Exxc, text5);
										if (text5.Contains("صيد حساب اورنچ  كاش"))
										{
											if (text5.Contains("جنيه"))
											{
												num4 = text5.IndexOf("كاش");
												int num5 = text5.IndexOf("جنيه");
												text2 = Conversions.ToString(Conversion.Val(text5.Substring(num4 + 3, num5 - num4 - 3).Trim('"')));
												ussdCommandFull = "#110#";
												commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
												serialPort.WriteLine(commandCode + "\r");
												Thread.Sleep(500);
												DisablePort(Exxc);
											}
											else
											{
												DisablePort(Exxc);
											}
										}
										else
										{
											if (text5.Contains("رصيد كاش باك") && text5.Contains("متاح"))
											{
												num4 = text5.IndexOf("باك");
												int num5 = text5.IndexOf("متاح");
												text2 = Conversions.ToString(Conversion.Val(text5.Substring(num4 + 3, num5 - num4 - 3).Trim('"')));
												SetGiftForOrange(Exxc, Conversions.ToInteger(text2));
											}
											if (text5.Contains("رصيد محفظتك"))
											{
												if (text5.Contains("جنيه"))
												{
													num4 = text5.IndexOf("محفظتك");
													int num5 = text5.IndexOf("جنيه");
													text2 = Conversions.ToString(Conversion.Val(text5.Substring(num4 + 6, num5 - num4 - 6).Trim('"')));
													ussdCommandFull = "#110#";
													commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
													serialPort.WriteLine(commandCode + "\r");
													Thread.Sleep(500);
													DisablePort(Exxc);
												}
												else
												{
													DisablePort(Exxc);
												}
											}
											else
											{
												if (text5.Contains("اختيار خاطىء"))
												{
													goto IL_0467;
												}
												if (text5.Contains("رحبا بك فى خدمة اورن"))
												{
													goto IL_04d9;
												}
												if (text5.Contains("the maximum allowed amount") | text5.Contains("لن يمكنك استخدام هذه الخدمة الان") | text5.Contains("number is suspended"))
												{
													DisablePort(Exxc);
													Application.DoEvents();
													break;
												}
												if (!(text5.Contains("لا يمكن إتمام العملية بسب") | text5.Contains("غير متاح حاليا") | text5.Contains("The system is unavailable")))
												{
													if (text5.Contains("رقم سري خاطئ") | text5.Contains("اختيار خاطىء") | text5.Contains("You are not subscribed to the Orange Cash service"))
													{
														DisablePort(Exxc);
														break;
													}
													if (text5.Contains("Main menu"))
													{
														DisablePort(Exxc);
														break;
													}
													goto IL_062b;
												}
												text2 = "E";
												DisablePort(Exxc);
											}
										}
										goto IL_07e8;
									}
								}
								goto IL_062b;
								IL_07e8:
								text = text2;
								break;
								IL_062b:
								if (Operators.CompareString(text3, "", TextCompare: false) == 0)
								{
									if ((Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(text6, "", TextCompare: false) == 0) & (Operators.CompareString(text7, "", TextCompare: false) == 0) & (Operators.CompareString(text8, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
									{
										ussdCommandFull = "#7115*81*" + txtOCPass.Text + "#";
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(2000);
										text6 = "#";
										text7 = "#";
										text8 = "#";
										left = "#";
										Application.DoEvents();
									}
									else
									{
										left = text8;
										text8 = text7;
										text7 = text6;
										text6 = text3;
									}
								}
								else
								{
									text6 = "#";
									text7 = "#";
									text8 = "#";
									left = "#";
								}
								if (text3.Contains("retry operation"))
								{
									ussdCommandFull = "#7115*81*" + txtOCPass.Text + "#";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(2000);
									text6 = "#";
									text7 = "#";
									text8 = "#";
									left = "#";
									Application.DoEvents();
								}
								if (chkStop.Checked)
								{
									break;
								}
								Application.DoEvents();
								num3 += 1.0;
								if (num3 <= 20.0)
								{
									continue;
								}
								goto IL_07e8;
							}
							break;
							IL_04d9:
							ussdCommandFull = "1";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							ussdCommandFull = "#7115*81*" + txtOCPass.Text + "#";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(250);
							continue;
							IL_0467:
							ussdCommandFull = "0";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							ussdCommandFull = "1";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(250);
						}
						break;
					}
					case 2062:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					result = text;
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 2062;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void btnOCfromMtoN_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1044:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_000f;
						case 4:
							goto IL_0020;
						case 6:
						case 7:
							goto IL_003a;
						case 8:
							goto IL_005d;
						case 10:
						case 11:
							goto IL_0073;
						case 12:
							goto IL_0094;
						case 14:
						case 15:
							goto IL_00ab;
						case 16:
							goto IL_00cf;
						case 18:
						case 19:
							goto IL_00e6;
						case 20:
							goto IL_010b;
						case 22:
						case 23:
							goto IL_0122;
						case 24:
							goto IL_0147;
						case 26:
						case 27:
							goto IL_015e;
						case 28:
							goto IL_0172;
						case 29:
							goto IL_017c;
						case 30:
							goto IL_0186;
						case 31:
							goto IL_0190;
						case 32:
							goto IL_01a0;
						case 33:
							goto IL_01b0;
						case 34:
							goto IL_01c0;
						case 35:
							goto IL_01d0;
						case 36:
							goto IL_01e0;
						case 37:
						case 47:
							goto IL_01f1;
						case 38:
							goto IL_0205;
						case 39:
							goto IL_020c;
						case 41:
							goto IL_0225;
						case 43:
							goto IL_0289;
						case 44:
							goto IL_029d;
						case 45:
							goto IL_02d4;
						case 46:
							goto IL_02dd;
						case 40:
						case 42:
						case 48:
							goto IL_02f4;
						case 49:
							goto IL_02fd;
						case 50:
							goto IL_0307;
						case 51:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
						case 9:
						case 13:
						case 17:
						case 21:
						case 25:
						case 52:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_02f4:
					num2 = 48;
					Application.DoEvents();
					goto IL_02fd;
					IL_02fd:
					num2 = 49;
					EnableCntl();
					goto IL_0307;
					IL_02dd:
					num2 = 46;
					if (num5 <= 25)
					{
						goto IL_01f1;
					}
					goto IL_02f4;
					IL_0307:
					num2 = 50;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_000f;
					IL_000f:
					num2 = 3;
					if (MysqlConn.MainProgLic < 11)
					{
						goto IL_0020;
					}
					goto IL_003a;
					IL_0020:
					num2 = 4;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_003a:
					num2 = 7;
					if (txtOCPass.Text.Trim().Length != 6)
					{
						goto IL_005d;
					}
					goto IL_0073;
					IL_005d:
					num2 = 8;
					Interaction.MsgBox("ادخل باسورد اورنج كاش");
					goto end_IL_0001_3;
					IL_0073:
					num2 = 11;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0094;
					}
					goto IL_00ab;
					IL_0094:
					num2 = 12;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_00ab:
					num2 = 15;
					if (Conversion.Val(txtOCValue.Text) < 5.0)
					{
						goto IL_00cf;
					}
					goto IL_00e6;
					IL_00cf:
					num2 = 16;
					Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
					goto end_IL_0001_3;
					IL_00e6:
					num2 = 19;
					if (lblOCMain.Text.Trim().Length != 11)
					{
						goto IL_010b;
					}
					goto IL_0122;
					IL_010b:
					num2 = 20;
					Interaction.MsgBox("حدد الرقم الاساسى");
					goto end_IL_0001_3;
					IL_0122:
					num2 = 23;
					if (txtOCNextMain.Text.Trim().Length != 11)
					{
						goto IL_0147;
					}
					goto IL_015e;
					IL_0147:
					num2 = 24;
					Interaction.MsgBox("حدد الرقم الاساسى التالى");
					goto end_IL_0001_3;
					IL_015e:
					num2 = 27;
					lblProgress.BackColor = Color.Red;
					goto IL_0172;
					IL_0172:
					num2 = 28;
					DisableCntl();
					goto IL_017c;
					IL_017c:
					num2 = 29;
					ClearCadsLocs();
					goto IL_0186;
					IL_0186:
					num2 = 30;
					ArrangVClinesCon();
					goto IL_0190;
					IL_0190:
					num2 = 31;
					chkCh1.Checked = true;
					goto IL_01a0;
					IL_01a0:
					num2 = 32;
					chkCh2.Checked = false;
					goto IL_01b0;
					IL_01b0:
					num2 = 33;
					chkCh3.Checked = false;
					goto IL_01c0;
					IL_01c0:
					num2 = 34;
					chkCh4.Checked = false;
					goto IL_01d0;
					IL_01d0:
					num2 = 35;
					chkCh5.Checked = false;
					goto IL_01e0;
					IL_01e0:
					num2 = 36;
					chkCh6.Checked = false;
					goto IL_01f1;
					IL_01f1:
					num2 = 37;
					lblProgress.BackColor = Color.Red;
					goto IL_0205;
					IL_0205:
					num2 = 38;
					num5 = checked(num5 + 1);
					goto IL_020c;
					IL_020c:
					num2 = 39;
					if (!chkStop.Checked)
					{
						goto IL_0225;
					}
					goto IL_02f4;
					IL_0225:
					num2 = 41;
					if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						goto IL_0289;
					}
					goto IL_02f4;
					IL_0289:
					num2 = 43;
					lblProgress.Text = "تحويل اورنج كاش ";
					goto IL_029d;
					IL_029d:
					num2 = 44;
					ApplyUssdCodeOC_Mex(lblPort1, txtOCNextMain.Text.Trim(), chkCh1, 0, Conversion.Val(txtOCValue.Text));
					goto IL_02d4;
					IL_02d4:
					num2 = 45;
					Application.DoEvents();
					goto IL_02dd;
					end_IL_0001_2:
					break;
				}
				num2 = 51;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1044;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeOC_Mex(Label Exxc, string UssdCommand, CheckBox ExxcArd, int EEFlage, double EEEvalue)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						string text = serialPort.ReadExisting();
						AutoRes = 0;
						int num3 = 0;
						if (EEEvalue < 1.0)
						{
							goto end_IL_0001;
						}
						while (true)
						{
							IL_00a4:
							num3++;
							string ussdCommandFull = "#7115*7*" + UssdCommand + "*" + Conversions.ToString(EEEvalue) + "*1*" + txtOCPass.Text + "#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							Application.DoEvents();
							lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							Application.DoEvents();
							int num4 = 0;
							while (!chkStop.Checked)
							{
								Thread.Sleep(500);
								text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("+CUSD: "))
								{
									string text2 = text;
									int num5 = text.IndexOf("+CUSD: ");
									text2 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text2.IndexOf(",");
									string text3 = text2.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text3 = text3.Trim('"').Trim(',').Trim('"');
									if (text3.Length > 3)
									{
										string text4;
										if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text3);
											text4 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text4 = encoding_mod.Decode7Bit(text3);
										}
										OutBoxDrop(Exxc, text4);
										if (text4.Contains("م تحويل"))
										{
											ussdCommandFull = "9";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											AddToRemoteDB_Transfer(GetNumberByPort(Exxc.Text), UssdCommand, EEEvalue);
											Thread.Sleep(1000);
											switch (EEFlage)
											{
											case 0:
												ExxcArd.Checked = false;
												break;
											case 1:
												ExxcArd.Checked = true;
												DisablePort(Exxc);
												break;
											}
											Application.DoEvents();
											break;
										}
										if (text4.Contains("رصيدك غير كاف اعمل"))
										{
											if (!ckOCSubAuto.Checked)
											{
												switch (EEFlage)
												{
												case 0:
													DisablePort(Exxc);
													break;
												case 1:
													ExxcArd.Checked = true;
													DisablePort(Exxc);
													break;
												}
												Application.DoEvents();
												break;
											}
											txtOCValue.Text = Conversions.ToString(Conversion.Val(txtOCValue.Text) - Conversion.Val(txtOCSub.Text) + Conversion.Val(txtOCAdd.Text));
											if (Conversion.Val(txtOCValue.Text) < 5.0)
											{
												chkStop.Checked = true;
											}
											Application.DoEvents();
											Thread.Sleep(1000);
											if (num3 <= 2)
											{
												goto IL_00a4;
											}
										}
										if (text4.Contains("رحبا بك فى خدمة اورن"))
										{
											ussdCommandFull = "1";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(500);
											if (num3 <= 2)
											{
												goto IL_00a4;
											}
										}
										if (text4.Contains("لا يمكن إتمام العملية") | text4.Contains("غير صحيح") | text4.Contains("You are not subscribed to the Orange Cash service"))
										{
											Application.DoEvents();
											break;
										}
										if (text4.Contains("the maximum allowed amount") | text4.Contains("لن يمكنك استخدام هذه الخدمة الان") | text4.Contains("number is suspended"))
										{
											DisablePort(Exxc);
											Application.DoEvents();
											break;
										}
										if (text4.Contains("General Error"))
										{
											DisablePort(Exxc);
											chkStop.Checked = true;
											Application.DoEvents();
											break;
										}
										if (text4.Contains("Receiver is not registered"))
										{
											DisablePort(Exxc);
											chkStop.Checked = true;
											Application.DoEvents();
											break;
										}
									}
								}
								if (text.Contains("+CME ERROR") | text.Contains("+CUSD: 5") | text.Contains("unknown") | text.Contains("retry operation"))
								{
									Application.DoEvents();
									break;
								}
								Application.DoEvents();
								if (chkStop.Checked)
								{
									break;
								}
								num4++;
								if (num4 > 10)
								{
									break;
								}
							}
							break;
						}
						break;
					}
					case 1682:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001_2;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1682;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnOCSeries_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtOCPass.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد اورنج كاش");
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Conversion.Val(txtOCValue.Text) < 5.0)
		{
			Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
			return;
		}
		if ((Operators.CompareString(lblOCMain.Text, lblNum1.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMain.Text, lblNum2.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMain.Text, lblNum3.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMain.Text, lblNum4.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMain.Text, lblNum5.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMain.Text, lblNum6.Text, TextCompare: false) != 0))
		{
			Interaction.MsgBox("مشكلة بالاساسى");
			chkStop.Checked = true;
			return;
		}
		lblProgress.Text = "تحويل اورنج كاش ";
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh1.Checked = false;
		}
		if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh2.Checked = false;
		}
		if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh3.Checked = false;
		}
		if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh4.Checked = false;
		}
		if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh5.Checked = false;
		}
		if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh6.Checked = false;
		}
		lblGifts01.Text = "0";
		lblGifts02.Text = "0";
		lblGifts03.Text = "0";
		lblGifts04.Text = "0";
		lblGifts05.Text = "0";
		lblGifts06.Text = "0";
		lblGiftV1.Text = "0";
		lblGiftV2.Text = "0";
		lblGiftV3.Text = "0";
		lblGiftV4.Text = "0";
		lblGiftV5.Text = "0";
		lblGiftV6.Text = "0";
		if (chkStop.Checked)
		{
			return;
		}
		txtLoopSSDOCPaySr.Text = "0";
		do
		{
			txtLoopSSDOCPaySr.Text = Conversions.ToString(Conversion.Val(txtLoopSSDOCPaySr.Text) + 1.0);
			chkCh1.Checked = true;
			lblProgress.BackColor = Color.Red;
			Application.DoEvents();
			ArrangOClines();
			Application.DoEvents();
			if (chkStop.Checked)
			{
				return;
			}
			Application.DoEvents();
			btnDeSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
			chkCh1.Checked = true;
			do
			{
				lblProgress.BackColor = Color.Red;
				num = checked(num + 1);
				if (chkStop.Checked)
				{
					break;
				}
				if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
				{
					ApplyUssdCodeOC_Mex(lblPort1, lblNum2.Text, chkCh2, 1, Conversion.Val(txtOCValue.Text));
					if (!chkCh1.Checked)
					{
						if (ckOCSub.Checked)
						{
							txtOCValue.Text = Conversions.ToString(Conversion.Val(txtOCValue.Text) - Conversion.Val(txtOCSub.Text) + Conversion.Val(txtOCAdd.Text));
							if (Conversion.Val(txtOCValue.Text) < 5.0)
							{
								break;
							}
						}
						num = 0;
					}
					Application.DoEvents();
				}
				Application.DoEvents();
				if (chkStop.Checked)
				{
					break;
				}
				if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
				{
					ApplyUssdCodeOC_Mex(lblPort2, lblNum3.Text, chkCh3, 1, Conversion.Val(txtOCValue.Text));
					if (!chkCh2.Checked)
					{
						if (ckOCSub.Checked)
						{
							txtOCValue.Text = Conversions.ToString(Conversion.Val(txtOCValue.Text) - Conversion.Val(txtOCSub.Text) + Conversion.Val(txtOCAdd.Text));
							if (Conversion.Val(txtOCValue.Text) < 5.0)
							{
								break;
							}
						}
						num = 0;
					}
					Application.DoEvents();
				}
				Application.DoEvents();
				if (chkStop.Checked)
				{
					break;
				}
				if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
				{
					ApplyUssdCodeOC_Mex(lblPort3, lblNum4.Text, chkCh4, 1, Conversion.Val(txtOCValue.Text));
					if (!chkCh3.Checked)
					{
						if (ckOCSub.Checked)
						{
							txtOCValue.Text = Conversions.ToString(Conversion.Val(txtOCValue.Text) - Conversion.Val(txtOCSub.Text) + Conversion.Val(txtOCAdd.Text));
							if (Conversion.Val(txtOCValue.Text) < 5.0)
							{
								break;
							}
						}
						num = 0;
					}
					Application.DoEvents();
				}
				if (chkStop.Checked)
				{
					break;
				}
				if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0) & chkCh3.Checked & (txtOCNextMain.Text.Length == 11))
				{
					ApplyUssdCodeOC_Mex(lblPort3, txtOCNextMain.Text, cknull, 1, Conversion.Val(txtOCValue.Text));
					if (!chkCh3.Checked)
					{
						if (ckOCSub.Checked)
						{
							txtOCValue.Text = Conversions.ToString(Conversion.Val(txtOCValue.Text) - Conversion.Val(txtOCSub.Text) + Conversion.Val(txtOCAdd.Text));
							if (Conversion.Val(txtOCValue.Text) < 5.0)
							{
								break;
							}
						}
						num = 0;
					}
					Application.DoEvents();
				}
				if ((!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) || chkStop.Checked)
				{
					break;
				}
				Application.DoEvents();
				if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
				{
					ApplyUssdCodeOC_Mex(lblPort4, lblNum5.Text, chkCh5, 1, Conversion.Val(txtOCValue.Text));
					if (!chkCh4.Checked)
					{
						if (ckOCSub.Checked)
						{
							txtOCValue.Text = Conversions.ToString(Conversion.Val(txtOCValue.Text) - Conversion.Val(txtOCSub.Text) + Conversion.Val(txtOCAdd.Text));
							if (Conversion.Val(txtOCValue.Text) < 5.0)
							{
								break;
							}
						}
						num = 0;
					}
					Application.DoEvents();
				}
				if (chkStop.Checked)
				{
					break;
				}
				if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0) & chkCh4.Checked & (txtOCNextMain.Text.Length == 11))
				{
					ApplyUssdCodeOC_Mex(lblPort4, txtOCNextMain.Text, cknull, 1, Conversion.Val(txtOCValue.Text));
					if (!chkCh4.Checked)
					{
						if (ckOCSub.Checked)
						{
							txtOCValue.Text = Conversions.ToString(Conversion.Val(txtOCValue.Text) - Conversion.Val(txtOCSub.Text) + Conversion.Val(txtOCAdd.Text));
							if (Conversion.Val(txtOCValue.Text) < 5.0)
							{
								break;
							}
						}
						num = 0;
					}
					Application.DoEvents();
				}
				if ((!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) || chkStop.Checked)
				{
					break;
				}
				Application.DoEvents();
				if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
				{
					ApplyUssdCodeOC_Mex(lblPort5, lblNum6.Text, chkCh6, 1, Conversion.Val(txtOCValue.Text));
					if (!chkCh5.Checked)
					{
						if (ckOCSub.Checked)
						{
							txtOCValue.Text = Conversions.ToString(Conversion.Val(txtOCValue.Text) - Conversion.Val(txtOCSub.Text) + Conversion.Val(txtOCAdd.Text));
							if (Conversion.Val(txtOCValue.Text) < 5.0)
							{
								break;
							}
						}
						num = 0;
					}
					Application.DoEvents();
				}
				if (chkStop.Checked)
				{
					break;
				}
				if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0) & chkCh5.Checked & (txtOCNextMain.Text.Length == 11))
				{
					ApplyUssdCodeOC_Mex(lblPort5, txtOCNextMain.Text, cknull, 1, Conversion.Val(txtOCValue.Text));
					if (!chkCh5.Checked)
					{
						if (ckOCSub.Checked)
						{
							txtOCValue.Text = Conversions.ToString(Conversion.Val(txtOCValue.Text) - Conversion.Val(txtOCSub.Text) + Conversion.Val(txtOCAdd.Text));
							if (Conversion.Val(txtOCValue.Text) < 5.0)
							{
								break;
							}
						}
						num = 0;
					}
					Application.DoEvents();
				}
				if (!((Operators.CompareString(txtOCNextMain.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked & (txtOCNextMain.Text.Length == 11)))
				{
					continue;
				}
				if (num == 8 || num == 12 || num == 15)
				{
					ResetUssdCode(lblPort6);
				}
				ApplyUssdCodeOC_Mex(lblPort6, txtOCNextMain.Text, cknull, 1, Conversion.Val(txtOCValue.Text));
				if (!chkCh6.Checked)
				{
					if (ckOCSub.Checked)
					{
						txtOCValue.Text = Conversions.ToString(Conversion.Val(txtOCValue.Text) - Conversion.Val(txtOCSub.Text) + Conversion.Val(txtOCAdd.Text));
						if (Conversion.Val(txtOCValue.Text) < 5.0)
						{
							break;
						}
					}
					num = 0;
				}
				Application.DoEvents();
			}
			while (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) && num <= 60);
			Application.DoEvents();
			btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
			if (txtOCNextMain.Text.Length == 11)
			{
				lblOCMain.Text = txtOCNextMain.Text;
				goto IL_1186;
			}
			if (Operators.CompareString(lblNum6.Text, "", TextCompare: false) != 0)
			{
				lblOCMain.Text = lblNum6.Text;
			}
			else if (Operators.CompareString(lblNum5.Text, "", TextCompare: false) != 0)
			{
				lblOCMain.Text = lblNum5.Text;
			}
			else if (Operators.CompareString(lblNum4.Text, "", TextCompare: false) != 0)
			{
				lblOCMain.Text = lblNum4.Text;
			}
			else if (Operators.CompareString(lblNum3.Text, "", TextCompare: false) != 0)
			{
				lblOCMain.Text = lblNum3.Text;
			}
			else
			{
				if (Operators.CompareString(lblNum2.Text, "", TextCompare: false) == 0)
				{
					goto IL_1186;
				}
				lblOCMain.Text = lblNum2.Text;
			}
			goto IL_118c;
			IL_1186:
			Application.DoEvents();
			goto IL_118c;
			IL_118c:
			Application.DoEvents();
		}
		while (Conversion.Val(txtLoopSSDOCPaySr.Text) < Conversion.Val(txtLoopFSDOCPAYSr.Text) && !chkStop.Checked);
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void ArrangOClines()
	{
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(1);
			if (reqFn <= 0)
			{
				goto IL_0167;
			}
			EXchanel(reqFn, 1);
		}
		if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(2);
			if (reqFn <= 0)
			{
				goto IL_0167;
			}
			EXchanel(reqFn, 2);
		}
		if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(3);
			if (reqFn <= 0)
			{
				goto IL_0167;
			}
			EXchanel(reqFn, 3);
		}
		if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(4);
			if (reqFn <= 0)
			{
				goto IL_0167;
			}
			EXchanel(reqFn, 4);
		}
		if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(5);
			if (reqFn > 0)
			{
				EXchanel(reqFn, 5);
			}
		}
		goto IL_0167;
		IL_0167:
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum1.Text, lblOCMain.Text, TextCompare: false) != 0)
		{
			if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum6.Text, lblOCMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 6);
			}
			if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum5.Text, lblOCMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 5);
			}
			if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum4.Text, lblOCMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 4);
			}
			if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum3.Text, lblOCMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 3);
			}
			if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum2.Text, lblOCMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 2);
			}
		}
	}

	private void ArrangOClinesMaster()
	{
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(1);
			if (reqFn <= 0)
			{
				goto IL_0167;
			}
			EXchanel(reqFn, 1);
		}
		if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(2);
			if (reqFn <= 0)
			{
				goto IL_0167;
			}
			EXchanel(reqFn, 2);
		}
		if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(3);
			if (reqFn <= 0)
			{
				goto IL_0167;
			}
			EXchanel(reqFn, 3);
		}
		if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(4);
			if (reqFn <= 0)
			{
				goto IL_0167;
			}
			EXchanel(reqFn, 4);
		}
		if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(5);
			if (reqFn > 0)
			{
				EXchanel(reqFn, 5);
			}
		}
		goto IL_0167;
		IL_0167:
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum1.Text, lblOCMMain.Text, TextCompare: false) != 0)
		{
			if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum6.Text, lblOCMMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 6);
			}
			if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum5.Text, lblOCMMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 5);
			}
			if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum4.Text, lblOCMMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 4);
			}
			if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum3.Text, lblOCMMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 3);
			}
			if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum2.Text, lblOCMMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 2);
			}
		}
	}

	private void ArrangTayerlines()
	{
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(1);
			if (reqFn <= 0)
			{
				goto IL_0167;
			}
			EXchanel(reqFn, 1);
		}
		if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(2);
			if (reqFn <= 0)
			{
				goto IL_0167;
			}
			EXchanel(reqFn, 2);
		}
		if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(3);
			if (reqFn <= 0)
			{
				goto IL_0167;
			}
			EXchanel(reqFn, 3);
		}
		if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(4);
			if (reqFn <= 0)
			{
				goto IL_0167;
			}
			EXchanel(reqFn, 4);
		}
		if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0)
		{
			int reqFn = GetReqFn(5);
			if (reqFn > 0)
			{
				EXchanel(reqFn, 5);
			}
		}
		goto IL_0167;
		IL_0167:
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum1.Text, lblTayerMain.Text, TextCompare: false) != 0)
		{
			if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum6.Text, lblTayerMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 6);
			}
			if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum5.Text, lblTayerMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 5);
			}
			if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum4.Text, lblTayerMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 4);
			}
			if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum3.Text, lblTayerMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 3);
			}
			if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0 && Operators.CompareString(lblNum2.Text, lblTayerMain.Text, TextCompare: false) == 0)
			{
				EXchanel(1, 2);
			}
		}
	}

	private void btnTayerEX_Click(object sender, EventArgs e)
	{
		string text = lblTayerMain.Text;
		lblTayerMain.Text = txtTayerNextMain.Text;
		txtTayerNextMain.Text = text;
	}

	private void btnTayerPullAllBals_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (txtTayerNextMain.Text.Trim().Length != 11)
		{
			Interaction.MsgBox("حدد رقم كاش لسحب الرصيد علية - الاساسى التالى");
			return;
		}
		if (txtTayerPass.Text.Trim().Length != 4)
		{
			Interaction.MsgBox("ادخل باسورد الطاير");
			txtTayerPass.Focus();
			return;
		}
		btnTayerGetBal_Click(RuntimeHelpers.GetObjectValue(sender), e);
		btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		do
		{
			num = checked(num + 1);
			if (chkStop.Checked)
			{
				break;
			}
			lblProgress.Text = "سحب طاير ";
			if (chkCh1.Checked & (Conversion.Val(lblBal1.Text) >= 1.0))
			{
				if (num == 6 || num == 15)
				{
					ResetUssdCode(lblPort1);
				}
				ApplyUssdCodeTayer_Mex(lblPort1, txtTayerNextMain.Text, chkCh2, 1, Conversion.Val(lblBal1.Text));
				Application.DoEvents();
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if (chkCh2.Checked & (Conversion.Val(lblBal2.Text) >= 1.0))
			{
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort2);
				}
				ApplyUssdCodeTayer_Mex(lblPort2, txtTayerNextMain.Text, chkCh3, 1, Conversion.Val(lblBal2.Text));
				Application.DoEvents();
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if (chkCh3.Checked & (Conversion.Val(lblBal3.Text) >= 1.0))
			{
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort3);
				}
				ApplyUssdCodeTayer_Mex(lblPort3, txtTayerNextMain.Text, chkCh4, 1, Conversion.Val(lblBal3.Text));
				Application.DoEvents();
			}
			if ((!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) || chkStop.Checked)
			{
				break;
			}
			Application.DoEvents();
			if (chkCh4.Checked & (Conversion.Val(lblBal4.Text) >= 1.0))
			{
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort4);
				}
				ApplyUssdCodeTayer_Mex(lblPort4, txtTayerNextMain.Text, chkCh5, 1, Conversion.Val(lblBal4.Text));
				Application.DoEvents();
			}
			if ((!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) || chkStop.Checked)
			{
				break;
			}
			Application.DoEvents();
			if (chkCh5.Checked & (Conversion.Val(lblBal5.Text) >= 1.0))
			{
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort5);
				}
				ApplyUssdCodeTayer_Mex(lblPort5, txtTayerNextMain.Text, chkCh6, 1, Conversion.Val(lblBal5.Text));
				Application.DoEvents();
			}
			if (chkCh6.Checked & (Conversion.Val(lblBal6.Text) >= 1.0))
			{
				if (num == 8 || num == 12 || num == 15)
				{
					ResetUssdCode(lblPort6);
				}
				ApplyUssdCodeTayer_Mex(lblPort6, txtTayerNextMain.Text, cknull, 1, Conversion.Val(lblBal6.Text));
				Application.DoEvents();
			}
		}
		while (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) && num <= 60);
		Application.DoEvents();
		if (chbeep.Checked)
		{
			EEmosemove = false;
			while (!EEmosemove)
			{
				Interaction.Beep();
				Application.DoEvents();
			}
		}
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btnTayerGetBal_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtTayerPass.Text.Trim().Length != 4)
		{
			Interaction.MsgBox("ادخل باسورد الطاير");
			txtTayerPass.Focus();
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "الاستعلام رصيد الطاير";
		DisableCntl();
		ReSetUssdOrder();
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			lblBal1.Text = "#";
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			lblBal2.Text = "#";
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			lblBal3.Text = "#";
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			lblBal4.Text = "#";
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			lblBal5.Text = "#";
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			lblBal6.Text = "#";
		}
		do
		{
			num = checked(num + 1);
			Application.DoEvents();
			if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
			{
				GetBalTayer(lblPort1);
			}
			if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
			{
				GetBalTayer(lblPort2);
			}
			if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
			{
				GetBalTayer(lblPort3);
			}
			if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
			{
				GetBalTayer(lblPort4);
			}
			if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
			{
				GetBalTayer(lblPort5);
			}
			if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
			{
				GetBalTayer(lblPort6);
			}
			if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
			{
				lblBal1.Text = GetBalTayerX(lblPort1);
			}
			if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
			{
				lblBal2.Text = GetBalTayerX(lblPort2);
			}
			if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
			{
				lblBal3.Text = GetBalTayerX(lblPort3);
			}
			if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
			{
				lblBal4.Text = GetBalTayerX(lblPort4);
			}
			if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
			{
				lblBal5.Text = GetBalTayerX(lblPort5);
			}
			if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
			{
				lblBal6.Text = GetBalTayerX(lblPort6);
			}
			if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
			{
				break;
			}
			Application.DoEvents();
			btnUssdReset_Click(RuntimeHelpers.GetObjectValue(sender), e);
			Application.DoEvents();
		}
		while (num <= 25);
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void GetBalTayer(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
					Application.DoEvents();
					Thread.Sleep(500);
					string text = "AT+CUSD=0";
					serialPort.WriteLine(text + "\r");
					Thread.Sleep(500);
					string ussdCommandFull = "*666*6*" + txtTayerPass.Text + "#";
					text = encoding_mod.GetCommandCode(ussdCommandFull);
					serialPort.WriteLine(text + "\r");
					Thread.Sleep(250);
					Application.DoEvents();
					break;
				}
				case 242:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 242;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string GetBalTayerX(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string text = default(string);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						text = "#";
						string text2 = "#";
						lblProgress.Text = "Read " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						string text3 = "#";
						string text4 = "#";
						string text5 = "#";
						string left = "#";
						Application.DoEvents();
						double num3 = 0.0;
						do
						{
							Thread.Sleep(500);
							string text6 = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text6) >= 2))
							{
								txtInfo.Text = text6 + "\r\n" + txtInfo.Text;
							}
							if (text6.Contains("+CUSD:"))
							{
								int num4 = text6.IndexOf("+CUSD:");
								text6 = text6.Substring(num4 + 9, text6.Length - num4 - 9).Trim().Trim('o')
									.Trim('\r')
									.Trim('\r')
									.Trim();
								num4 = text6.IndexOf(",");
								string text7 = text6.Substring(0, num4).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								text7 = text7.Trim('"').Trim(',').Trim('"');
								if (text7.Length > 3)
								{
									string text8;
									if (Operators.CompareString(text7.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text7);
										text8 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text8 = encoding_mod.Decode7Bit(text7);
									}
									OutBoxDrop(Exxc, text8);
									if (text8.Contains("he Balance Is") && text8.Contains("Balance Is"))
									{
										num4 = text8.IndexOf("Is");
										text2 = Conversions.ToString(Conversion.Val(text8.Substring(num4 + 3, text8.Length - (num4 + 3)).Trim('"')));
										DisablePort(Exxc);
										break;
									}
									if (text8.Contains("لا يوجد عمليات") | text8.Contains("User Authentication Failed") | text8.Contains("غير متاح حاليا") | text8.Contains("The system is unavailable"))
									{
										text2 = "E";
										DisablePort(Exxc);
										break;
									}
								}
							}
							if (Operators.CompareString(text6, "", TextCompare: false) == 0)
							{
								if ((Operators.CompareString(text6, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(text5, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
								{
									string ussdCommandFull = "*666*6*" + txtTayerPass.Text + "#";
									string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(2000);
									text3 = "#";
									text4 = "#";
									text5 = "#";
									left = "#";
									Application.DoEvents();
								}
								else
								{
									left = text5;
									text5 = text4;
									text4 = text3;
									text3 = text6;
								}
							}
							else
							{
								text3 = "#";
								text4 = "#";
								text5 = "#";
								left = "#";
							}
							if (text6.Contains("retry operation"))
							{
								string ussdCommandFull = "*666*6*" + txtTayerPass.Text + "#";
								string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(2000);
								text3 = "#";
								text4 = "#";
								text5 = "#";
								left = "#";
								Application.DoEvents();
							}
							Application.DoEvents();
							num3 += 1.0;
						}
						while (num3 <= 20.0);
						text = text2;
						break;
					}
					case 1268:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					result = text;
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1268;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void btnTayerfromMtoN_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1039:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_000f;
						case 4:
							goto IL_0020;
						case 6:
						case 7:
							goto IL_003a;
						case 8:
							goto IL_005d;
						case 9:
							goto IL_006c;
						case 11:
						case 12:
							goto IL_0082;
						case 13:
							goto IL_00a3;
						case 15:
						case 16:
							goto IL_00ba;
						case 17:
							goto IL_00de;
						case 19:
						case 20:
							goto IL_00f5;
						case 21:
							goto IL_011a;
						case 23:
						case 24:
							goto IL_0131;
						case 25:
							goto IL_0156;
						case 27:
						case 28:
							goto IL_016d;
						case 29:
							goto IL_0181;
						case 30:
							goto IL_018b;
						case 31:
							goto IL_0195;
						case 32:
							goto IL_019f;
						case 33:
							goto IL_01af;
						case 34:
							goto IL_01bf;
						case 35:
							goto IL_01cf;
						case 36:
							goto IL_01df;
						case 37:
							goto IL_01ef;
						case 38:
						case 47:
							goto IL_0200;
						case 39:
							goto IL_0207;
						case 41:
							goto IL_0220;
						case 43:
							goto IL_0284;
						case 44:
							goto IL_0298;
						case 45:
							goto IL_02cf;
						case 46:
							goto IL_02d8;
						case 40:
						case 42:
						case 48:
							goto IL_02ef;
						case 49:
							goto IL_02f8;
						case 50:
							goto IL_0302;
						case 51:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
						case 10:
						case 14:
						case 18:
						case 22:
						case 26:
						case 52:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_02ef:
					num2 = 48;
					Application.DoEvents();
					goto IL_02f8;
					IL_02f8:
					num2 = 49;
					EnableCntl();
					goto IL_0302;
					IL_02d8:
					num2 = 46;
					if (num5 <= 25)
					{
						goto IL_0200;
					}
					goto IL_02ef;
					IL_0302:
					num2 = 50;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_000f;
					IL_000f:
					num2 = 3;
					if (MysqlConn.MainProgLic < 11)
					{
						goto IL_0020;
					}
					goto IL_003a;
					IL_0020:
					num2 = 4;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_003a:
					num2 = 7;
					if (txtTayerPass.Text.Trim().Length != 4)
					{
						goto IL_005d;
					}
					goto IL_0082;
					IL_005d:
					num2 = 8;
					Interaction.MsgBox("ادخل باسورد الطاير");
					goto IL_006c;
					IL_006c:
					num2 = 9;
					txtTayerPass.Focus();
					goto end_IL_0001_3;
					IL_0082:
					num2 = 12;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_00a3;
					}
					goto IL_00ba;
					IL_00a3:
					num2 = 13;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_00ba:
					num2 = 16;
					if (Conversion.Val(txtTayerValue.Text) < 5.0)
					{
						goto IL_00de;
					}
					goto IL_00f5;
					IL_00de:
					num2 = 17;
					Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
					goto end_IL_0001_3;
					IL_00f5:
					num2 = 20;
					if (lblTayerMain.Text.Trim().Length != 11)
					{
						goto IL_011a;
					}
					goto IL_0131;
					IL_011a:
					num2 = 21;
					Interaction.MsgBox("حدد الرقم الاساسى");
					goto end_IL_0001_3;
					IL_0131:
					num2 = 24;
					if (txtTayerNextMain.Text.Trim().Length != 11)
					{
						goto IL_0156;
					}
					goto IL_016d;
					IL_0156:
					num2 = 25;
					Interaction.MsgBox("حدد الرقم الاساسى التالى");
					goto end_IL_0001_3;
					IL_016d:
					num2 = 28;
					lblProgress.BackColor = Color.Red;
					goto IL_0181;
					IL_0181:
					num2 = 29;
					DisableCntl();
					goto IL_018b;
					IL_018b:
					num2 = 30;
					ClearCadsLocs();
					goto IL_0195;
					IL_0195:
					num2 = 31;
					ArrangVClinesCon();
					goto IL_019f;
					IL_019f:
					num2 = 32;
					chkCh1.Checked = true;
					goto IL_01af;
					IL_01af:
					num2 = 33;
					chkCh2.Checked = false;
					goto IL_01bf;
					IL_01bf:
					num2 = 34;
					chkCh3.Checked = false;
					goto IL_01cf;
					IL_01cf:
					num2 = 35;
					chkCh4.Checked = false;
					goto IL_01df;
					IL_01df:
					num2 = 36;
					chkCh5.Checked = false;
					goto IL_01ef;
					IL_01ef:
					num2 = 37;
					chkCh6.Checked = false;
					goto IL_0200;
					IL_0200:
					num2 = 38;
					num5 = checked(num5 + 1);
					goto IL_0207;
					IL_0207:
					num2 = 39;
					if (!chkStop.Checked)
					{
						goto IL_0220;
					}
					goto IL_02ef;
					IL_0220:
					num2 = 41;
					if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						goto IL_0284;
					}
					goto IL_02ef;
					IL_0284:
					num2 = 43;
					lblProgress.Text = "تحويل طاير ";
					goto IL_0298;
					IL_0298:
					num2 = 44;
					ApplyUssdCodeTayer_Mex(lblPort1, txtTayerNextMain.Text.Trim(), chkCh1, 0, Conversion.Val(txtTayerValue.Text));
					goto IL_02cf;
					IL_02cf:
					num2 = 45;
					Application.DoEvents();
					goto IL_02d8;
					end_IL_0001_2:
					break;
				}
				num2 = 51;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1039;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeTayer_Mex(Label Exxc, string UssdCommand, CheckBox ExxcArd, int EEFlage, double VAlueToTransfer)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						if (VAlueToTransfer < 1.0)
						{
							OutBoxDrop(Exxc, "لا يمكن تحويل قيمة اقل من 1");
							Application.DoEvents();
							chkStop.Checked = true;
							break;
						}
						lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						string text = serialPort.ReadExisting();
						AutoRes = 0;
						int num3 = 0;
						while (true)
						{
							num3++;
							string ussdCommandFull = "*666*2*" + UssdCommand + "*" + Conversions.ToString(VAlueToTransfer) + "*" + txtTayerPass.Text.Trim() + "#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							Application.DoEvents();
							lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							while (true)
							{
								Application.DoEvents();
								string text2 = "#";
								string text3 = "#";
								string text4 = "#";
								string left = "#";
								int num4 = 0;
								while (true)
								{
									Thread.Sleep(500);
									text = serialPort.ReadExisting();
									if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
									{
										txtInfo.Text = text + "\r\n" + txtInfo.Text;
									}
									if (text.Contains("+CUSD: 1,"))
									{
										break;
									}
									if (text.Contains("+CUSD: "))
									{
										string text5 = text;
										int num5 = text.IndexOf("+CUSD: ");
										text5 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
											.Trim('\r')
											.Trim('\r')
											.Trim();
										num5 = text5.IndexOf(",");
										string text6 = text5.Substring(0, num5).Trim().Trim('"')
											.Trim(',')
											.Trim('"');
										text6 = text6.Trim('"').Trim(',').Trim('"');
										if (text6.Length <= 3)
										{
											goto IL_05ba;
										}
										string text7;
										if (Operators.CompareString(text6.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text6);
											text7 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text7 = encoding_mod.Decode7Bit(text6);
										}
										OutBoxDrop(Exxc, text7);
										if (text7.Contains("لا يمكن اتمام طلبكم"))
										{
											Application.DoEvents();
											chkStop.Checked = true;
											goto end_IL_0001_2;
										}
										if (text7.Contains("مت العملية بنجاح"))
										{
											switch (EEFlage)
											{
											case 0:
												ExxcArd.Checked = false;
												break;
											case 1:
												ExxcArd.Checked = true;
												DisablePort(Exxc);
												break;
											}
											Application.DoEvents();
											goto end_IL_0001_2;
										}
										if (text7.Contains("لا يوجد رصيد كافى لاجراء العملية"))
										{
											switch (EEFlage)
											{
											case 0:
												DisablePort(Exxc);
												break;
											case 1:
												ExxcArd.Checked = true;
												DisablePort(Exxc);
												break;
											}
											Application.DoEvents();
											goto end_IL_0001_2;
										}
										if (text7.Contains("لا يمكن إتمام العملية") | text7.Contains("غير صحيح"))
										{
											Application.DoEvents();
											goto end_IL_0001_2;
										}
										if (text7.Contains("the maximum allowed amount") | text7.Contains("لن يمكنك استخدام هذه الخدمة الان") | text7.Contains("number is suspended"))
										{
											DisablePort(Exxc);
											Application.DoEvents();
											goto end_IL_0001_2;
										}
									}
									if (Operators.CompareString(text, "", TextCompare: false) == 0)
									{
										if ((Operators.CompareString(text, "", TextCompare: false) == 0) & (Operators.CompareString(text2, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
										{
											goto end_IL_018e;
										}
										left = text4;
										text4 = text3;
										text3 = text2;
										text2 = text;
									}
									else
									{
										text2 = "#";
										text3 = "#";
										text4 = "#";
										left = "#";
									}
									goto IL_05ba;
									IL_05ba:
									if (text.Contains("+CME ERROR") | text.Contains("+CUSD: 5") | text.Contains("unknown") | text.Contains("retry operation"))
									{
										Application.DoEvents();
										goto end_IL_0001_2;
									}
									Application.DoEvents();
									if (chkStop.Checked)
									{
										goto end_IL_0001_2;
									}
									num4++;
									if (num4 > 10)
									{
										goto end_IL_0001_2;
									}
								}
								ussdCommandFull = UssdCommand;
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(1000);
								continue;
								end_IL_018e:
								break;
							}
							Application.DoEvents();
							if (num3 <= 2)
							{
								Thread.Sleep(1000);
								continue;
							}
							break;
						}
						break;
					}
					case 1597:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_3;
							}
							break;
						}
						end_IL_0001_2:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_3:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1597;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnTayerSeries_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtTayerPass.Text.Trim().Length != 4)
		{
			Interaction.MsgBox("ادخل باسورد الطاير");
			txtTayerPass.Focus();
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Conversion.Val(txtTayerValue.Text) < 5.0)
		{
			Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
			return;
		}
		if (txtTayerNextMain.Text.Trim().Length != 11)
		{
			Interaction.MsgBox("حدد رقم كاش لسحب الرصيد علية - الاساسى التالى");
			return;
		}
		if ((Operators.CompareString(lblTayerMain.Text, lblNum1.Text, TextCompare: false) != 0) & (Operators.CompareString(lblTayerMain.Text, lblNum2.Text, TextCompare: false) != 0) & (Operators.CompareString(lblTayerMain.Text, lblNum3.Text, TextCompare: false) != 0) & (Operators.CompareString(lblTayerMain.Text, lblNum4.Text, TextCompare: false) != 0) & (Operators.CompareString(lblTayerMain.Text, lblNum5.Text, TextCompare: false) != 0) & (Operators.CompareString(lblTayerMain.Text, lblNum6.Text, TextCompare: false) != 0))
		{
			Interaction.MsgBox("مشكلة بالاساسى");
			chkStop.Checked = true;
			return;
		}
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh1.Checked = false;
		}
		if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh2.Checked = false;
		}
		if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh3.Checked = false;
		}
		if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh4.Checked = false;
		}
		if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh5.Checked = false;
		}
		if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh6.Checked = false;
		}
		lblGifts01.Text = "0";
		lblGifts02.Text = "0";
		lblGifts03.Text = "0";
		lblGifts04.Text = "0";
		lblGifts05.Text = "0";
		lblGifts06.Text = "0";
		lblGiftV1.Text = "0";
		lblGiftV2.Text = "0";
		lblGiftV3.Text = "0";
		lblGiftV4.Text = "0";
		lblGiftV5.Text = "0";
		lblGiftV6.Text = "0";
		if (chkStop.Checked)
		{
			return;
		}
		ClearCadsLocs();
		Application.DoEvents();
		ArrangTayerlines();
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		Application.DoEvents();
		btnDeSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		chkCh1.Checked = true;
		if (ckTayerSub.Checked)
		{
			txtTayerValue.Text = Conversions.ToString(Conversion.Val(txtTayerValue.Text) - Conversion.Val(txtTayerSub.Text));
			if (Conversion.Val(txtTayerValue.Text) < 5.0)
			{
				goto IL_1044;
			}
		}
		do
		{
			num = checked(num + 1);
			if (chkStop.Checked)
			{
				break;
			}
			lblProgress.Text = "تحويل طاير ";
			if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
			{
				if (num == 6 || num == 15)
				{
					ResetUssdCode(lblPort1);
				}
				ApplyUssdCodeTayer_Mex(lblPort1, lblNum2.Text, chkCh2, 1, Conversion.Val(txtTayerValue.Text));
				if (!chkCh1.Checked)
				{
					if (ckTayerSub.Checked)
					{
						txtTayerValue.Text = Conversions.ToString(Conversion.Val(txtTayerValue.Text) - Conversion.Val(txtTayerSub.Text));
						if (Conversion.Val(txtTayerValue.Text) < 1.0)
						{
							break;
						}
					}
					num = 0;
				}
				Application.DoEvents();
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
			{
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort2);
				}
				ApplyUssdCodeTayer_Mex(lblPort2, lblNum3.Text, chkCh3, 1, Conversion.Val(txtTayerValue.Text));
				if (!chkCh2.Checked)
				{
					if (ckTayerSub.Checked)
					{
						txtTayerValue.Text = Conversions.ToString(Conversion.Val(txtTayerValue.Text) - Conversion.Val(txtTayerSub.Text));
						if (Conversion.Val(txtTayerValue.Text) < 1.0)
						{
							break;
						}
					}
					num = 0;
				}
				Application.DoEvents();
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
			{
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort3);
				}
				ApplyUssdCodeTayer_Mex(lblPort3, lblNum4.Text, chkCh4, 1, Conversion.Val(txtTayerValue.Text));
				if (!chkCh3.Checked)
				{
					if (ckTayerSub.Checked)
					{
						txtTayerValue.Text = Conversions.ToString(Conversion.Val(txtTayerValue.Text) - Conversion.Val(txtTayerSub.Text));
						if (Conversion.Val(txtTayerValue.Text) < 1.0)
						{
							break;
						}
					}
					num = 0;
				}
				Application.DoEvents();
			}
			if (chkStop.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0) & chkCh3.Checked)
			{
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort3);
				}
				ApplyUssdCodeTayer_Mex(lblPort3, txtTayerNextMain.Text, cknull, 1, Conversion.Val(txtTayerValue.Text));
				if (!chkCh3.Checked)
				{
					if (ckTayerSub.Checked)
					{
						txtTayerValue.Text = Conversions.ToString(Conversion.Val(txtTayerValue.Text) - Conversion.Val(txtTayerSub.Text));
						if (Conversion.Val(txtTayerValue.Text) < 1.0)
						{
							break;
						}
					}
					num = 0;
				}
				Application.DoEvents();
			}
			if ((!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) || chkStop.Checked)
			{
				break;
			}
			Application.DoEvents();
			if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
			{
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort4);
				}
				ApplyUssdCodeTayer_Mex(lblPort4, lblNum5.Text, chkCh5, 1, Conversion.Val(txtTayerValue.Text));
				if (!chkCh4.Checked)
				{
					if (ckTayerSub.Checked)
					{
						txtTayerValue.Text = Conversions.ToString(Conversion.Val(txtTayerValue.Text) - Conversion.Val(txtTayerSub.Text));
						if (Conversion.Val(txtTayerValue.Text) < 1.0)
						{
							break;
						}
					}
					num = 0;
				}
				Application.DoEvents();
			}
			if (chkStop.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0) & chkCh4.Checked)
			{
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort4);
				}
				ApplyUssdCodeTayer_Mex(lblPort4, txtTayerNextMain.Text, cknull, 1, Conversion.Val(txtTayerValue.Text));
				if (!chkCh4.Checked)
				{
					if (ckTayerSub.Checked)
					{
						txtTayerValue.Text = Conversions.ToString(Conversion.Val(txtTayerValue.Text) - Conversion.Val(txtTayerSub.Text));
						if (Conversion.Val(txtTayerValue.Text) < 1.0)
						{
							break;
						}
					}
					num = 0;
				}
				Application.DoEvents();
			}
			if ((!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) || chkStop.Checked)
			{
				break;
			}
			Application.DoEvents();
			if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
			{
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort5);
				}
				ApplyUssdCodeTayer_Mex(lblPort5, lblNum6.Text, chkCh6, 1, Conversion.Val(txtTayerValue.Text));
				if (!chkCh5.Checked)
				{
					if (ckTayerSub.Checked)
					{
						txtTayerValue.Text = Conversions.ToString(Conversion.Val(txtTayerValue.Text) - Conversion.Val(txtTayerSub.Text));
						if (Conversion.Val(txtTayerValue.Text) < 1.0)
						{
							break;
						}
					}
					num = 0;
				}
				Application.DoEvents();
			}
			if (chkStop.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0) & chkCh5.Checked)
			{
				if (num == 8 || num == 12 || num == 15)
				{
					ResetUssdCode(lblPort5);
				}
				ApplyUssdCodeTayer_Mex(lblPort5, txtTayerNextMain.Text, cknull, 1, Conversion.Val(txtTayerValue.Text));
				if (!chkCh5.Checked)
				{
					if (ckTayerSub.Checked)
					{
						txtTayerValue.Text = Conversions.ToString(Conversion.Val(txtTayerValue.Text) - Conversion.Val(txtTayerSub.Text));
						if (Conversion.Val(txtTayerValue.Text) < 1.0)
						{
							break;
						}
					}
					num = 0;
				}
				Application.DoEvents();
			}
			if (!((Operators.CompareString(txtTayerNextMain.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
			{
				continue;
			}
			if (num == 8 || num == 12 || num == 15)
			{
				ResetUssdCode(lblPort6);
			}
			ApplyUssdCodeTayer_Mex(lblPort6, txtTayerNextMain.Text, cknull, 1, Conversion.Val(txtTayerValue.Text));
			if (!chkCh6.Checked)
			{
				if (ckTayerSub.Checked)
				{
					txtTayerValue.Text = Conversions.ToString(Conversion.Val(txtTayerValue.Text) - Conversion.Val(txtTayerSub.Text));
					if (Conversion.Val(txtTayerValue.Text) < 1.0)
					{
						break;
					}
				}
				num = 0;
			}
			Application.DoEvents();
		}
		while (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) && num <= 60);
		goto IL_1044;
		IL_1044:
		Application.DoEvents();
		btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		lblTayerMain.Text = txtTayerNextMain.Text;
		txtTayerNextMain.Text = "";
		Application.DoEvents();
		if (chbeep.Checked)
		{
			EEmosemove = false;
			while (!EEmosemove)
			{
				Interaction.Beep();
				Application.DoEvents();
			}
		}
		txtTayerNextMain.Focus();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btnOCGetBal2_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtOCPass.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد اورنج كاش");
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if ((Operators.CompareString(lblOCMMain.Text, lblNum1.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum2.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum3.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum4.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum5.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum6.Text, TextCompare: false) != 0))
		{
			Interaction.MsgBox("مشكلة بالاساسى");
			chkStop.Checked = true;
			return;
		}
		ArrangOClinesMaster();
		Application.DoEvents();
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "الاستعلام اورنج كاش";
		DisableCntl();
		lblProgress.BackColor = Color.Red;
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			lblBal2.Text = "#";
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			lblBal3.Text = "#";
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			lblBal4.Text = "#";
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			lblBal5.Text = "#";
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			lblBal6.Text = "#";
		}
		do
		{
			num = checked(num + 1);
			Application.DoEvents();
			if (!chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
			{
				GetBalOrangeCash(lblPort2);
			}
			if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
			{
				GetBalOrangeCash(lblPort3);
			}
			if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
			{
				GetBalOrangeCash(lblPort4);
			}
			if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
			{
				GetBalOrangeCash(lblPort5);
			}
			if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
			{
				GetBalOrangeCash(lblPort6);
			}
			if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
			{
				lblBal2.Text = GetBalOrangeCashX(lblPort2);
			}
			if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
			{
				lblBal3.Text = GetBalOrangeCashX(lblPort3);
			}
			if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
			{
				lblBal4.Text = GetBalOrangeCashX(lblPort4);
			}
			if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
			{
				lblBal5.Text = GetBalOrangeCashX(lblPort5);
			}
			if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
			{
				lblBal6.Text = GetBalOrangeCashX(lblPort6);
			}
			if (!chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
			{
				break;
			}
			Application.DoEvents();
		}
		while (num <= 25);
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void ApplyUssdCodeOC_Mex_Master_Tayer(Label Exxc, string UssdCommand, int EEFlage, double EEEvalue)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						AutoRes = 0;
						int num3 = 0;
						if (EEEvalue < 1.0)
						{
							goto end_IL_0001;
						}
						do
						{
							IL_009c:
							num3++;
							lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							string ussdCommandFull = "#105*1*" + UssdCommand + "*" + Conversions.ToString(EEEvalue) + "*1*1*" + txtOTyrPass.Text + "#";
							Application.DoEvents();
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							while (true)
							{
								Application.DoEvents();
								int num4 = 0;
								while (true)
								{
									Thread.Sleep(1000);
									Application.DoEvents();
									if (chkStop.Checked)
									{
										break;
									}
									string text = serialPort.ReadExisting();
									if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
									{
										txtInfo.Text = text + "\r\n" + txtInfo.Text;
									}
									if (text.Contains("D9775D0E9297E3F5F29C0E4ACF41E272DA7D06C1E5EF71793E2F931B"))
									{
										OutBoxDrop(Exxc, "Your request is being processed");
										Application.DoEvents();
										break;
									}
									if (text.Contains("+CUSD: "))
									{
										string text2 = text;
										int num5 = text.IndexOf("+CUSD: ");
										text2 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
											.Trim('\r')
											.Trim('\r')
											.Trim();
										num5 = text2.IndexOf(",");
										string text3 = text2.Substring(0, num5).Trim().Trim('"')
											.Trim(',')
											.Trim('"');
										text3 = text3.Trim('"').Trim(',').Trim('"');
										if (text3.Length > 3)
										{
											string text4;
											if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
											{
												byte[] bytes = encoding_mod.StrToByteArray(text3);
												text4 = Encoding.BigEndianUnicode.GetString(bytes);
											}
											else
											{
												text4 = encoding_mod.Decode7Bit(text3);
											}
											OutBoxDrop(Exxc, text4);
											if (text4.Contains("سيتم شحن مبلغ"))
											{
												goto IL_0389;
											}
											if (text4.Contains(": للتأكيد"))
											{
												goto IL_03c9;
											}
											if (text4.Contains("Your request is") | text4.Contains("تم تنفي"))
											{
												Application.DoEvents();
												break;
											}
											if (text4.Contains("عفوا ، لا يمكن تحويل") | text4.Contains("لا يمكن تنفيذ طلبكم لعدم كفاية"))
											{
												Application.DoEvents();
												break;
											}
											if (text4.Contains("the maximum allowed amount") | text4.Contains("لن يمكنك استخدام هذه الخدمة الان") | text4.Contains("The number is suspended"))
											{
												chkStop.Checked = true;
												Application.DoEvents();
												break;
											}
											if (text4.Contains("Your session has timed out"))
											{
												goto end_IL_0166;
											}
										}
									}
									if (!(text.Contains("+CME ERROR") | text.Contains("+CUSD: 5") | text.Contains("unknown") | text.Contains("retry operation")))
									{
										Application.DoEvents();
										if (chkStop.Checked)
										{
											break;
										}
										num4++;
										if (num4 > 20)
										{
											break;
										}
										continue;
									}
									goto IL_04f9;
								}
								goto end_IL_0001_2;
								IL_03c9:
								ussdCommandFull = "1";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Application.DoEvents();
								continue;
								IL_0389:
								ussdCommandFull = "1";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Application.DoEvents();
								continue;
								end_IL_0166:
								break;
							}
							Application.DoEvents();
							if (num3 <= 5)
							{
								goto IL_009c;
							}
							break;
							IL_04f9:
							Application.DoEvents();
						}
						while (num3 <= 5);
						break;
					}
					case 1370:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_3;
							}
							break;
						}
						end_IL_0001_2:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_3:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1370;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnAddCodeToTayer_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtTayerPass.Text.Trim().Length != 4)
		{
			Interaction.MsgBox("ادخل باسورد الطاير");
			txtTayerPass.Focus();
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "Opt_in";
		DisableCntl();
		do
		{
			num = checked(num + 1);
			Application.DoEvents();
			if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
			{
				SetOpt_in(lblPort1, chkCh1);
			}
			if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
			{
				SetOpt_in(lblPort2, chkCh2);
			}
			if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
			{
				SetOpt_in(lblPort3, chkCh3);
			}
			if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
			{
				SetOpt_in(lblPort4, chkCh4);
			}
			if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
			{
				SetOpt_in(lblPort5, chkCh5);
			}
			if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
			{
				SetOpt_in(lblPort6, chkCh6);
			}
			if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
			{
				break;
			}
			Application.DoEvents();
		}
		while (num <= 5);
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void SetOpt_in(Label Exxc, CheckBox EErd)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					lblProgress.Text = "Opt_in " + Exxc.Text;
					Application.DoEvents();
					while (true)
					{
						IL_0059:
						string ussdCommandFull = "*066*7*" + txtCodeTayer.Text.Trim() + "*" + txtTayerPass.Text.Trim() + "#";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(500);
						Application.DoEvents();
						double num3 = 0.0;
						do
						{
							Thread.Sleep(500);
							string text = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
							{
								txtInfo.Text = text + "\r\n" + txtInfo.Text;
							}
							if (text.Contains("+CUSD:"))
							{
								int num4 = text.IndexOf("+CUSD:");
								string text2 = checked(text.Substring(num4 + 9, text.Length - num4 - 9)).Trim().Trim('o').Trim('\r')
									.Trim('\r')
									.Trim();
								num4 = text2.IndexOf(",");
								string text3 = text2.Substring(0, num4).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								text3 = text3.Trim('"').Trim(',').Trim('"');
								string text4;
								if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
								{
									byte[] bytes = encoding_mod.StrToByteArray(text3);
									text4 = Encoding.BigEndianUnicode.GetString(bytes);
								}
								else
								{
									text4 = encoding_mod.Decode7Bit(text3);
								}
								OutBoxDrop(Exxc, text4);
								if (text4.Contains("عفوا لم نتمكن من تنفيذ طلبك"))
								{
									EErd.Checked = false;
									Application.DoEvents();
									break;
								}
								if (text4.Contains("جاري تنفيذ طلبك و ستصلك رسالة بالتفاصيل"))
								{
									EErd.Checked = false;
									Application.DoEvents();
									break;
								}
								if (text4.Contains("برجاء المحاوله في وقت لاحق"))
								{
									EErd.Checked = false;
									Application.DoEvents();
									break;
								}
							}
							if (text.Contains("retry operation"))
							{
								goto IL_0059;
							}
							Application.DoEvents();
							num3 += 1.0;
						}
						while (num3 <= 20.0);
						break;
					}
					break;
				case 840:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 840;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnTayerKikOut_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtTayerPass.Text.Trim().Length != 4)
		{
			Interaction.MsgBox("ادخل باسورد الطاير");
			txtTayerPass.Focus();
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "Opt_out";
		DisableCntl();
		do
		{
			num = checked(num + 1);
			Application.DoEvents();
			if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
			{
				SetOpt_out(lblPort1, chkCh1);
			}
			if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
			{
				SetOpt_out(lblPort2, chkCh2);
			}
			if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
			{
				SetOpt_out(lblPort3, chkCh3);
			}
			if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
			{
				SetOpt_out(lblPort4, chkCh4);
			}
			if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
			{
				SetOpt_out(lblPort5, chkCh5);
			}
			if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
			{
				SetOpt_out(lblPort6, chkCh6);
			}
			if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
			{
				break;
			}
			Application.DoEvents();
		}
		while (num <= 5);
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void SetOpt_out(Label Exxc, CheckBox EErd)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					lblProgress.Text = "Opt_out " + Exxc.Text;
					Application.DoEvents();
					while (true)
					{
						IL_0059:
						string ussdCommandFull = "*066*71*" + txtTayerPass.Text.Trim() + "#";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(500);
						Application.DoEvents();
						double num3 = 0.0;
						do
						{
							Thread.Sleep(500);
							string text = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
							{
								txtInfo.Text = text + "\r\n" + txtInfo.Text;
							}
							if (text.Contains("+CUSD:"))
							{
								int num4 = text.IndexOf("+CUSD:");
								string text2 = checked(text.Substring(num4 + 9, text.Length - num4 - 9)).Trim().Trim('o').Trim('\r')
									.Trim('\r')
									.Trim();
								num4 = text2.IndexOf(",");
								string text3 = text2.Substring(0, num4).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								text3 = text3.Trim('"').Trim(',').Trim('"');
								string text4;
								if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
								{
									byte[] bytes = encoding_mod.StrToByteArray(text3);
									text4 = Encoding.BigEndianUnicode.GetString(bytes);
								}
								else
								{
									text4 = encoding_mod.Decode7Bit(text3);
								}
								OutBoxDrop(Exxc, text4);
								if (text4.Contains("عفوا لم نتمكن من تنفيذ طلبك"))
								{
									EErd.Checked = false;
									Application.DoEvents();
									break;
								}
								if (text4.Contains("برجاء المحاوله في وقت لاحق"))
								{
									EErd.Checked = false;
									Application.DoEvents();
									break;
								}
								if (text4.Contains("Error from Application"))
								{
									EErd.Checked = false;
									Application.DoEvents();
									break;
								}
								if (text4.Contains("تم"))
								{
									EErd.Checked = false;
									Application.DoEvents();
									break;
								}
							}
							if (text.Contains("retry operation"))
							{
								goto IL_0059;
							}
							Application.DoEvents();
							num3 += 1.0;
						}
						while (num3 <= 20.0);
						break;
					}
					break;
				case 836:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 836;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnOCEditPass_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtOCOldPass.Text.Length != 6)
		{
			lblProgress.Text = "ادخل كلمة السر القديمة";
			return;
		}
		if (txtOCNewPass.Text.Length != 6)
		{
			lblProgress.Text = "ادخل كلمة السر الجديدة";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "تعديل كلمة السر";
		DisableCntl();
		ReSetUssdOrder();
		Application.DoEvents();
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			ChangeOCOldPass(lblPort1, chkCh1);
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			ChangeOCOldPass(lblPort2, chkCh2);
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			ChangeOCOldPass(lblPort3, chkCh3);
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			ChangeOCOldPass(lblPort4, chkCh4);
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			ChangeOCOldPass(lblPort5, chkCh5);
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			ChangeOCOldPass(lblPort6, chkCh6);
		}
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void ChangeOCOldPass(Label Exxc, CheckBox echc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						int num3 = 0;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Change Pass " + Exxc.Text;
						Application.DoEvents();
						int num4 = 0;
						string text = serialPort.ReadExisting();
						while (true)
						{
							num4++;
							if (num4 >= 15)
							{
								break;
							}
							string ussdCommandFull = "#7115#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							Application.DoEvents();
							int num5 = 0;
							while (true)
							{
								Thread.Sleep(500);
								text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("0031003A0020062E062F06450627062A0020064506270644064A0629000A0032003A0020062E062F0645"))
								{
									ussdCommandFull = "3233";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(500);
									Application.DoEvents();
									continue;
								}
								if (text.Contains("+CUSD: "))
								{
									string text2 = text;
									num5 = text.IndexOf("+CUSD: ");
									text2 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text2.IndexOf(",");
									string text3 = text2.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text3 = text3.Trim('"').Trim(',').Trim('"');
									string text4;
									if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text3);
										text4 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text4 = encoding_mod.Decode7Bit(text3);
									}
									OutBoxDrop(Exxc, text4);
									if (text4.Contains("رقم سري خاطئ"))
									{
										echc.Checked = false;
										Application.DoEvents();
										break;
									}
									if (text4.Contains("مرحبا بك فى خدمة اورن"))
									{
										goto IL_02e4;
									}
									if (text4.Contains(" ارقم السري الحالي"))
									{
										ussdCommandFull = txtOCOldPass.Text.Trim();
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(500);
										Application.DoEvents();
										continue;
									}
									if (text4.Contains("خل الرقم السري الجديد"))
									{
										ussdCommandFull = txtOCNewPass.Text.Trim();
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(500);
										Application.DoEvents();
										continue;
									}
									if (text4.Contains("اعد ادخال الرقم السري الجديد"))
									{
										ussdCommandFull = txtOCNewPass.Text.Trim();
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(500);
										Application.DoEvents();
										continue;
									}
									if (text4.Contains("تم تغيير الرقم السري بنج"))
									{
										echc.Checked = false;
										Application.DoEvents();
										break;
									}
								}
								if (!(text.Contains("retry operation") | text.Contains("D3B2DC9E1E9741E939C8FDA683C2F6709A1D16B3CB2E")))
								{
									Application.DoEvents();
									num5++;
									if (num5 > 15)
									{
										break;
									}
									continue;
								}
								goto IL_0461;
							}
							break;
							IL_02e4:
							ussdCommandFull = "1";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							Application.DoEvents();
							continue;
							IL_0461:
							OutBoxDrop(Exxc, "retry operation");
							Application.DoEvents();
						}
						break;
					}
					case 1206:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1206;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnTransGiftAutoSpValAll_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				Stopwatch stopwatch;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1402:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0018;
						case 5:
							goto IL_0029;
						case 7:
						case 8:
							goto IL_0043;
						case 9:
							goto IL_0063;
						case 11:
						case 12:
							goto IL_007a;
						case 13:
							goto IL_009f;
						case 15:
						case 16:
							goto IL_00b6;
						case 17:
							goto IL_00ca;
						case 18:
							goto IL_00de;
						case 19:
						case 56:
							goto IL_00e9;
						case 20:
							goto IL_00fd;
						case 21:
							goto IL_0106;
						case 23:
							goto IL_016d;
						case 24:
							goto IL_01a0;
						case 25:
							goto IL_01bb;
						case 26:
							goto IL_01d2;
						case 27:
						case 28:
							goto IL_01da;
						case 29:
							goto IL_020d;
						case 30:
							goto IL_0228;
						case 31:
							goto IL_023f;
						case 32:
						case 33:
							goto IL_0247;
						case 34:
							goto IL_027a;
						case 35:
							goto IL_0295;
						case 36:
							goto IL_02ac;
						case 37:
						case 38:
							goto IL_02b4;
						case 39:
							goto IL_02e7;
						case 40:
							goto IL_0302;
						case 41:
							goto IL_0319;
						case 42:
						case 43:
							goto IL_0321;
						case 44:
							goto IL_0354;
						case 45:
							goto IL_036f;
						case 46:
							goto IL_0386;
						case 47:
						case 48:
							goto IL_038e;
						case 49:
							goto IL_03c1;
						case 50:
							goto IL_03dc;
						case 51:
							goto IL_03f3;
						case 52:
						case 53:
							goto IL_03fb;
						case 55:
							goto IL_0411;
						case 57:
							goto IL_0427;
						case 58:
							goto IL_0431;
						case 22:
						case 54:
						case 59:
							goto IL_043b;
						case 60:
							goto IL_0445;
						case 61:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 6:
						case 10:
						case 14:
						case 62:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0431:
					num2 = 58;
					Application.DoEvents();
					goto IL_043b;
					IL_043b:
					num2 = 59;
					EnableCntl();
					goto IL_0445;
					IL_0427:
					num2 = 57;
					ReturnReadGift();
					goto IL_0431;
					IL_0445:
					num2 = 60;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					num5 = 0;
					goto IL_0018;
					IL_0018:
					num2 = 4;
					if (MysqlConn.MainProgLic < 11)
					{
						goto IL_0029;
					}
					goto IL_0043;
					IL_0029:
					num2 = 5;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0043:
					num2 = 8;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0063;
					}
					goto IL_007a;
					IL_0063:
					num2 = 9;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_007a:
					num2 = 12;
					if (txtTransNum2.Text.Trim().Length != 11)
					{
						goto IL_009f;
					}
					goto IL_00b6;
					IL_009f:
					num2 = 13;
					Interaction.MsgBox("ادخل رقم الخط المراد التحويل  له");
					goto end_IL_0001_3;
					IL_00b6:
					num2 = 16;
					lblProgress.BackColor = Color.Red;
					goto IL_00ca;
					IL_00ca:
					num2 = 17;
					lblProgress.Text = "شحن كامل الكاش";
					goto IL_00de;
					IL_00de:
					num2 = 18;
					DisableCntl();
					goto IL_00e9;
					IL_00e9:
					num2 = 19;
					lblProgress.BackColor = Color.Red;
					goto IL_00fd;
					IL_00fd:
					num2 = 20;
					num5 = checked(num5 + 1);
					goto IL_0106;
					IL_0106:
					num2 = 21;
					if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						goto IL_016d;
					}
					goto IL_043b;
					IL_016d:
					num2 = 23;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_01a0;
					}
					goto IL_01da;
					IL_01a0:
					num2 = 24;
					SetUssdOrderVcashTraVXPVaryGiftAll(lblPort1, txtTransNum2.Text);
					goto IL_01bb;
					IL_01bb:
					num2 = 25;
					if (!chkCh1.Checked)
					{
						goto IL_01d2;
					}
					goto IL_01da;
					IL_01d2:
					num2 = 26;
					num5 = 0;
					goto IL_01da;
					IL_01da:
					num2 = 28;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_020d;
					}
					goto IL_0247;
					IL_020d:
					num2 = 29;
					SetUssdOrderVcashTraVXPVaryGiftAll(lblPort2, txtTransNum2.Text);
					goto IL_0228;
					IL_0228:
					num2 = 30;
					if (!chkCh2.Checked)
					{
						goto IL_023f;
					}
					goto IL_0247;
					IL_023f:
					num2 = 31;
					num5 = 0;
					goto IL_0247;
					IL_0247:
					num2 = 33;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_027a;
					}
					goto IL_02b4;
					IL_027a:
					num2 = 34;
					SetUssdOrderVcashTraVXPVaryGiftAll(lblPort3, txtTransNum2.Text);
					goto IL_0295;
					IL_0295:
					num2 = 35;
					if (!chkCh3.Checked)
					{
						goto IL_02ac;
					}
					goto IL_02b4;
					IL_02ac:
					num2 = 36;
					num5 = 0;
					goto IL_02b4;
					IL_02b4:
					num2 = 38;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_02e7;
					}
					goto IL_0321;
					IL_02e7:
					num2 = 39;
					SetUssdOrderVcashTraVXPVaryGiftAll(lblPort4, txtTransNum2.Text);
					goto IL_0302;
					IL_0302:
					num2 = 40;
					if (!chkCh4.Checked)
					{
						goto IL_0319;
					}
					goto IL_0321;
					IL_0319:
					num2 = 41;
					num5 = 0;
					goto IL_0321;
					IL_0321:
					num2 = 43;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0354;
					}
					goto IL_038e;
					IL_0354:
					num2 = 44;
					SetUssdOrderVcashTraVXPVaryGiftAll(lblPort5, txtTransNum2.Text);
					goto IL_036f;
					IL_036f:
					num2 = 45;
					if (!chkCh5.Checked)
					{
						goto IL_0386;
					}
					goto IL_038e;
					IL_0386:
					num2 = 46;
					num5 = 0;
					goto IL_038e;
					IL_038e:
					num2 = 48;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_03c1;
					}
					goto IL_03fb;
					IL_03c1:
					num2 = 49;
					SetUssdOrderVcashTraVXPVaryGiftAll(lblPort6, txtTransNum2.Text);
					goto IL_03dc;
					IL_03dc:
					num2 = 50;
					if (!chkCh6.Checked)
					{
						goto IL_03f3;
					}
					goto IL_03fb;
					IL_03f3:
					num2 = 51;
					num5 = 0;
					goto IL_03fb;
					IL_03fb:
					num2 = 53;
					if (!chkStop.Checked)
					{
						goto IL_0411;
					}
					goto IL_043b;
					IL_0411:
					num2 = 55;
					if (num5 <= 5)
					{
						goto IL_00e9;
					}
					goto IL_0427;
					end_IL_0001_2:
					break;
				}
				num2 = 61;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1402;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnSADwn_Click(object sender, EventArgs e)
	{
		chkCh1.Checked = false;
		chkCh2.Checked = false;
		chkCh3.Checked = false;
		if (lblNum4.Text.Length == 11)
		{
			chkCh4.Checked = true;
		}
		else
		{
			chkCh4.Checked = false;
		}
		if (lblNum5.Text.Length == 11)
		{
			chkCh5.Checked = true;
		}
		else
		{
			chkCh5.Checked = false;
		}
		if (lblNum6.Text.Length == 11)
		{
			chkCh6.Checked = true;
		}
		else
		{
			chkCh6.Checked = false;
		}
	}

	private void btnUp_Click(object sender, EventArgs e)
	{
		chkCh4.Checked = false;
		chkCh5.Checked = false;
		chkCh6.Checked = false;
		if (lblNum1.Text.Length == 11)
		{
			chkCh1.Checked = true;
		}
		else
		{
			chkCh1.Checked = false;
		}
		if (lblNum2.Text.Length == 11)
		{
			chkCh2.Checked = true;
		}
		else
		{
			chkCh2.Checked = false;
		}
		if (lblNum3.Text.Length == 11)
		{
			chkCh3.Checked = true;
		}
		else
		{
			chkCh3.Checked = false;
		}
	}

	private void btnRun02NmDwl_Click(object sender, EventArgs e)
	{
		btnRun02_Click(RuntimeHelpers.GetObjectValue(sender), e);
		BtnTransGiftAuto_Click(RuntimeHelpers.GetObjectValue(sender), e);
	}

	private void btnOCTransferAll_Click(object sender, EventArgs e)
	{
		int num = 0;
		int num2 = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (txtOCTransferAll.Text.Trim().Length != 11)
		{
			Interaction.MsgBox("حدد رقم كاش لسحب الرصيد علية ");
			return;
		}
		if (txtOCPass.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد اورنج كاش");
			return;
		}
		lblProgress.Text = "سحب اورنج كاش ";
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		ReSetUssdOrder();
		do
		{
			lblProgress.BackColor = Color.Red;
			num = checked(num + 1);
			if (chkStop.Checked || (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
			{
				break;
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if (chkCh1.Checked & (Conversion.Val(lblBal1.Text) >= 10.0) & (Operators.CompareString(lblNum1.Text, txtOCTransferAll.Text, TextCompare: false) != 0))
			{
				num2 = checked(num2 + 1);
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort1);
				}
				ApplyUssdCodeOC_Mex_pull(lblPort1, txtOCTransferAll.Text, Conversion.Val(lblBal1.Text) - Conversion.Val(txtOCTransferSub.Text));
				Application.DoEvents();
			}
			if (chkCh2.Checked & (Conversion.Val(lblBal2.Text) >= 10.0) & (Operators.CompareString(lblNum2.Text, txtOCTransferAll.Text, TextCompare: false) != 0))
			{
				num2 = checked(num2 + 1);
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort2);
				}
				ApplyUssdCodeOC_Mex_pull(lblPort2, txtOCTransferAll.Text, Conversion.Val(lblBal2.Text) - Conversion.Val(txtOCTransferSub.Text));
				Application.DoEvents();
			}
			if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
			{
				break;
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if (chkCh3.Checked & (Conversion.Val(lblBal3.Text) >= 10.0) & (Operators.CompareString(lblNum3.Text, txtOCTransferAll.Text, TextCompare: false) != 0))
			{
				num2 = checked(num2 + 1);
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort3);
				}
				ApplyUssdCodeOC_Mex_pull(lblPort3, txtOCTransferAll.Text, Conversion.Val(lblBal3.Text) - Conversion.Val(txtOCTransferSub.Text));
				Application.DoEvents();
			}
			if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
			{
				break;
			}
			if (num2 >= 3)
			{
				num2 = 0;
				double num3 = Conversion.Val(txtOCtopupDelayCash.Text);
				for (double num4 = 1.0; num4 <= num3; num4 += 1.0)
				{
					Thread.Sleep(250);
					Application.DoEvents();
					Thread.Sleep(250);
					Application.DoEvents();
					Thread.Sleep(250);
					Application.DoEvents();
					Thread.Sleep(250);
					Application.DoEvents();
				}
			}
			if (chkStop.Checked)
			{
				break;
			}
			Application.DoEvents();
			if (chkCh4.Checked & (Conversion.Val(lblBal4.Text) >= 10.0) & (Operators.CompareString(lblNum4.Text, txtOCTransferAll.Text, TextCompare: false) != 0))
			{
				num2 = checked(num2 + 1);
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort4);
				}
				ApplyUssdCodeOC_Mex_pull(lblPort4, txtOCTransferAll.Text, Conversion.Val(lblBal4.Text) - Conversion.Val(txtOCTransferSub.Text));
				Application.DoEvents();
			}
			if ((!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) || chkStop.Checked)
			{
				break;
			}
			if (num2 >= 3)
			{
				num2 = 0;
				double num5 = Conversion.Val(txtOCtopupDelayCash.Text);
				for (double num6 = 1.0; num6 <= num5; num6 += 1.0)
				{
					Thread.Sleep(250);
					Application.DoEvents();
					Thread.Sleep(250);
					Application.DoEvents();
					Thread.Sleep(250);
					Application.DoEvents();
					Thread.Sleep(250);
					Application.DoEvents();
				}
			}
			Application.DoEvents();
			if (chkCh5.Checked & (Conversion.Val(lblBal5.Text) >= 10.0) & (Operators.CompareString(lblNum5.Text, txtOCTransferAll.Text, TextCompare: false) != 0))
			{
				num2 = checked(num2 + 1);
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort5);
				}
				ApplyUssdCodeOC_Mex_pull(lblPort5, txtOCTransferAll.Text, Conversion.Val(lblBal5.Text) - Conversion.Val(txtOCTransferSub.Text));
				Application.DoEvents();
			}
			if (num2 >= 3)
			{
				num2 = 0;
				double num7 = Conversion.Val(txtOCtopupDelayCash.Text);
				for (double num8 = 1.0; num8 <= num7; num8 += 1.0)
				{
					Thread.Sleep(250);
					Application.DoEvents();
					Thread.Sleep(250);
					Application.DoEvents();
					Thread.Sleep(250);
					Application.DoEvents();
					Thread.Sleep(250);
					Application.DoEvents();
				}
			}
			if (chkCh6.Checked & (Conversion.Val(lblBal6.Text) >= 10.0) & (Operators.CompareString(lblNum6.Text, txtOCTransferAll.Text, TextCompare: false) != 0))
			{
				num2 = checked(num2 + 1);
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort6);
				}
				ApplyUssdCodeOC_Mex_pull(lblPort6, txtOCTransferAll.Text, Conversion.Val(lblBal6.Text) - Conversion.Val(txtOCTransferSub.Text));
				Application.DoEvents();
			}
		}
		while (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) && num <= 60);
		Application.DoEvents();
		if (chbeep.Checked)
		{
			EEmosemove = false;
			while (!EEmosemove)
			{
				Interaction.Beep();
				Application.DoEvents();
			}
		}
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btnMacro_Click(object sender, EventArgs e)
	{
		int num = 1;
		ReSetUssdOrder();
		num = 1;
		do
		{
			if (Conversion.Val(txtMacro1.Text) == (double)num)
			{
				btnRunUssd_Click(RuntimeHelpers.GetObjectValue(sender), e);
			}
			else if (Conversion.Val(txtMacro2.Text) == (double)num)
			{
				btnRunUssd2_Click(RuntimeHelpers.GetObjectValue(sender), e);
			}
			else if (Conversion.Val(txtMacro3.Text) == (double)num)
			{
				btnRunUssd4_Click(RuntimeHelpers.GetObjectValue(sender), e);
			}
			else if (Conversion.Val(txtMacro4.Text) == (double)num)
			{
				btnRunUssd9_Click(RuntimeHelpers.GetObjectValue(sender), e);
			}
			else if (Conversion.Val(txtMacro5.Text) == (double)num)
			{
				btnRunUssd10_Click(RuntimeHelpers.GetObjectValue(sender), e);
			}
			else if (Conversion.Val(txtMacro6.Text) == (double)num)
			{
				btnRunUssd5_Click(RuntimeHelpers.GetObjectValue(sender), e);
			}
			else if (Conversion.Val(txtMacro7.Text) == (double)num)
			{
				btnRunUssd6_Click(RuntimeHelpers.GetObjectValue(sender), e);
			}
			else if (Conversion.Val(txtMacro8.Text) == (double)num)
			{
				btnRunUssd7_Click(RuntimeHelpers.GetObjectValue(sender), e);
			}
			else if (Conversion.Val(txtMacro9.Text) == (double)num)
			{
				btnReplyBy0_Click(RuntimeHelpers.GetObjectValue(sender), e);
			}
			else if (Conversion.Val(txtMacro10.Text) == (double)num)
			{
				btnReplyBy_Click(RuntimeHelpers.GetObjectValue(sender), e);
			}
			else if (Conversion.Val(txtMacro11.Text) == (double)num)
			{
				btnReplyBy2_Click(RuntimeHelpers.GetObjectValue(sender), e);
			}
			else if (Conversion.Val(txtMacro12.Text) == (double)num)
			{
				btnReplyBy3_Click(RuntimeHelpers.GetObjectValue(sender), e);
			}
			else if (Conversion.Val(txtMacro13.Text) == (double)num)
			{
				btnReplyBy4_Click(RuntimeHelpers.GetObjectValue(sender), e);
			}
			else if (Conversion.Val(txtMacro14.Text) == (double)num)
			{
				btnReplyBy5_Click(RuntimeHelpers.GetObjectValue(sender), e);
			}
			else if (Conversion.Val(txtMacro15.Text) == (double)num)
			{
				BtnReplyBy6_Click(RuntimeHelpers.GetObjectValue(sender), e);
			}
			else if (Conversion.Val(txtMacro16.Text) == (double)num)
			{
				BtnReplyBy7_Click(RuntimeHelpers.GetObjectValue(sender), e);
			}
			num = checked(num + 1);
		}
		while (num <= 16);
	}

	private void btnOCMGetBal_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtOCPassMaster.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد اورنج ماستر");
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if ((Operators.CompareString(lblOCMMain.Text, lblNum1.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum2.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum3.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum4.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum5.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum6.Text, TextCompare: false) != 0))
		{
			Interaction.MsgBox("مشكلة بالماستر");
			chkStop.Checked = true;
			return;
		}
		ArrangOClinesMaster();
		Application.DoEvents();
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "الاستعلام اورنج ماستر";
		DisableCntl();
		do
		{
			lblProgress.BackColor = Color.Red;
			num = checked(num + 1);
			Application.DoEvents();
			if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
			{
				lblBal1.Text = GetBalOrangeCashXMaster(lblPort1);
			}
			if (!chkCh1.Checked)
			{
				break;
			}
			Application.DoEvents();
		}
		while (num <= 25);
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private string GetBalOrangeCashXMaster(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string text = default(string);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						text = "#";
						string text2 = "#";
						lblProgress.Text = "Read " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						string text3 = "#";
						string text4 = "#";
						string text5 = "#";
						string left = "#";
						string ussdCommandFull = "#114*3*" + txtOCPassMaster.Text + "*1#";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(250);
						Application.DoEvents();
						Application.DoEvents();
						double num3 = 0.0;
						while (true)
						{
							Thread.Sleep(500);
							string text6 = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text6) >= 2))
							{
								txtInfo.Text = text6 + "\r\n" + txtInfo.Text;
							}
							if (text6.Contains("+CUSD:"))
							{
								int num4 = text6.IndexOf("+CUSD:");
								text6 = text6.Substring(num4 + 9, text6.Length - num4 - 9).Trim().Trim('o')
									.Trim('\r')
									.Trim('\r')
									.Trim();
								num4 = text6.IndexOf(",");
								string text7 = text6.Substring(0, num4).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								text7 = text7.Trim('"').Trim(',').Trim('"');
								if (text7.Length > 3)
								{
									string text8;
									if (Operators.CompareString(text7.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text7);
										text8 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text8 = encoding_mod.Decode7Bit(text7);
									}
									OutBoxDrop(Exxc, text8);
									if (text8.Contains("رصيد حسابك"))
									{
										if (text8.Contains("جنيه"))
										{
											num4 = text8.IndexOf("حسابك");
											int num5 = text8.IndexOf("جنيه");
											text2 = Conversions.ToString(Conversion.Val(text8.Substring(num4 + 5, num5 - num4 - 5).Trim('"')));
											ussdCommandFull = "#110#";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(500);
											DisablePort(Exxc);
										}
										else
										{
											DisablePort(Exxc);
										}
									}
									else if (text8.Contains("لا يمكن إتمام العملية بسب") | text8.Contains("غير متاح حاليا") | text8.Contains("The system is unavailable"))
									{
										text2 = "E";
										DisablePort(Exxc);
									}
									else
									{
										if (!(text8.Contains("رقم سري خاطئ") | text8.Contains("You are not subscribed to the Orange Cash service")))
										{
											if (text8.Contains("the maximum allowed amount") | text8.Contains("لن يمكنك استخدام هذه الخدمة الان") | text8.Contains("number is suspended"))
											{
												DisablePort(Exxc);
												Application.DoEvents();
												break;
											}
											goto IL_041b;
										}
										text2 = "E";
										DisablePort(Exxc);
									}
									goto IL_05c5;
								}
							}
							goto IL_041b;
							IL_05c5:
							text = text2;
							break;
							IL_041b:
							if (Operators.CompareString(text6, "", TextCompare: false) == 0)
							{
								if ((Operators.CompareString(text6, "", TextCompare: false) == 0) & (Operators.CompareString(text3, "", TextCompare: false) == 0) & (Operators.CompareString(text4, "", TextCompare: false) == 0) & (Operators.CompareString(text5, "", TextCompare: false) == 0) & (Operators.CompareString(left, "", TextCompare: false) == 0))
								{
									ussdCommandFull = "#114*3*" + txtOCPassMaster.Text + "*1#";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(2000);
									text3 = "#";
									text4 = "#";
									text5 = "#";
									left = "#";
									Application.DoEvents();
								}
								else
								{
									left = text5;
									text5 = text4;
									text4 = text3;
									text3 = text6;
								}
							}
							else
							{
								text3 = "#";
								text4 = "#";
								text5 = "#";
								left = "#";
							}
							if (text6.Contains("retry operation"))
							{
								ussdCommandFull = "#114*3*" + txtOCPassMaster.Text + "*1#";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(2000);
								text3 = "#";
								text4 = "#";
								text5 = "#";
								left = "#";
								Application.DoEvents();
							}
							Application.DoEvents();
							num3 += 1.0;
							if (num3 <= 20.0)
							{
								continue;
							}
							goto IL_05c5;
						}
						break;
					}
					case 1515:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					result = text;
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1515;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void btnOCMSeries_Click(object sender, EventArgs e)
	{
		int num = 1;
		int num2 = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtOCPassMaster.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد اورنج ماستر");
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Conversion.Val(txtOCMValue.Text) < 5.0)
		{
			Interaction.MsgBox("حدد مبلغ للايداع من فضلك");
			return;
		}
		if ((Operators.CompareString(lblOCMMain.Text, lblNum1.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum2.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum3.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum4.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum5.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum6.Text, TextCompare: false) != 0))
		{
			Interaction.MsgBox("مشكلة بالاساسى");
			return;
		}
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		lblProgress.Text = "Orange Input ";
		Application.DoEvents();
		ArrangOClinesMaster();
		checked
		{
			while ((double)num <= Conversion.Val(txtOCMCount.Text))
			{
				num++;
				lblProgress.BackColor = Color.Red;
				Application.DoEvents();
				int num3 = lstOCNumbers.Items.Count - 1;
				for (int i = 0; i <= num3; i++)
				{
					if (chkStop.Checked)
					{
						goto end_IL_030b;
					}
					CheckBox eckToDis = chkCh1;
					ApplyUssdCodeOC_Mex_Master2(lblPort1, Conversions.ToString(lstOCNumbers.Items[i]), 1, Conversion.Val(txtOCMValue.Text), eckToDis);
					lblOCDone.Text = Conversions.ToString(i + 1);
					int num4 = (int)Math.Round(Conversion.Val(txtOCtopupDelayM2.Text));
					for (int j = 1; j <= num4; j++)
					{
						Thread.Sleep(250);
						Application.DoEvents();
						Thread.Sleep(250);
						Application.DoEvents();
						Thread.Sleep(250);
						Application.DoEvents();
						Thread.Sleep(250);
						Application.DoEvents();
					}
				}
				continue;
				end_IL_030b:
				break;
			}
			EnableCntl();
			lblProgress.BackColor = Color.LimeGreen;
			lblProgress.Text = "OK";
		}
	}

	private void ApplyUssdCodeOC_Mex_Master2(Label Exxc, string UssdCommand, int EEFlage, double EEEvalue, CheckBox EckToDis)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						Application.DoEvents();
						AutoRes = 0;
						int num3 = 0;
						if (EEEvalue < 1.0)
						{
							goto end_IL_0001;
						}
						while (true)
						{
							num3++;
							lblProgress.Text = "In " + Exxc.Text + "(" + Conversions.ToString(num3) + ")" + UssdCommand;
							Application.DoEvents();
							string ussdCommandFull = "#114*1*" + txtOCPassMaster.Text + "*1*" + UssdCommand + "*" + Conversions.ToString(EEEvalue) + "*1*1*1#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							Application.DoEvents();
							Thread.Sleep(500);
							Application.DoEvents();
							Thread.Sleep(500);
							Application.DoEvents();
							Application.DoEvents();
							int num4 = 0;
							while (true)
							{
								Thread.Sleep(500);
								string text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								Application.DoEvents();
								if (chkStop.Checked)
								{
									break;
								}
								if (text.Contains("+CUSD: "))
								{
									string text2 = text;
									int num5 = text.IndexOf("+CUSD: ");
									text2 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text2.IndexOf(",");
									string text3 = text2.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text3 = text3.Trim('"').Trim(',').Trim('"');
									if (text3.Length <= 3)
									{
										goto IL_04ce;
									}
									string text4;
									if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text3);
										text4 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text4 = encoding_mod.Decode7Bit(text3);
									}
									OutBoxDrop(Exxc, text4);
									if (text4.Contains("عملية الايداع بدأت"))
									{
										Application.DoEvents();
										break;
									}
									if (text4.Contains("لا يمكن إتمام العملية") | text4.Contains("غير صحيح"))
									{
										Application.DoEvents();
										break;
									}
									if (text4.Contains("Wrong entr") | text4.Contains("طأ في الرقم السري") | text4.Contains("رصيدك الحالى لا يسمح باتمام العملية") | text4.Contains("the maximum allowed amount") | text4.Contains("You are not subscribed to the Orange Cash service") | text4.Contains("لن يمكنك استخدام هذه الخدمة الان") | text4.Contains("The number is suspended"))
									{
										chkStop.Checked = true;
										Application.DoEvents();
										break;
									}
									if (text4.Contains("Your session has timed out"))
									{
										goto IL_041f;
									}
								}
								if (text.Contains("0031003A0020062E062F06450627062A0020064506270644064A0629000A0032003A0020062E062F06450627062A002006270648"))
								{
									Application.DoEvents();
									break;
								}
								if (text.Contains("0644064500200646062A06440642064900200627062E062A064A06270631064300200641064A0020062706440645062F062900200627064406450"))
								{
									goto IL_047c;
								}
								if (text.Contains("0053007500630063006500730073"))
								{
									OutBoxDrop(Exxc, "OK " + UssdCommand);
									EckToDis.Checked = false;
									Application.DoEvents();
									break;
								}
								goto IL_04ce;
								IL_04ce:
								if (!(text.Contains("+CME ERROR") | text.Contains("+CUSD: 5") | text.Contains("unknown") | text.Contains("retry operation")))
								{
									Application.DoEvents();
									if (chkStop.Checked)
									{
										break;
									}
									num4++;
									if (num4 > 35)
									{
										break;
									}
									continue;
								}
								goto IL_0504;
							}
							break;
							IL_047c:
							Application.DoEvents();
							OutBoxDrop(Exxc, "Restart operation");
							continue;
							IL_041f:
							Application.DoEvents();
							if (num3 <= 5)
							{
								OutBoxDrop(Exxc, "Restart operation");
								continue;
							}
							break;
							IL_0504:
							Application.DoEvents();
							if (num3 <= 5)
							{
								OutBoxDrop(Exxc, "Restart operation");
								continue;
							}
							break;
						}
						break;
					}
					case 1394:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001_2;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1394;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeOC_Mex_Master(Label Exxc, string UssdCommand, int EEFlage, double EEEvalue)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						AutoRes = 0;
						int num3 = 0;
						if (EEEvalue < 1.0)
						{
							goto end_IL_0001;
						}
						while (true)
						{
							num3++;
							string ussdCommandFull = "#114#1#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							Thread.Sleep(500);
							Application.DoEvents();
							Thread.Sleep(500);
							Application.DoEvents();
							while (true)
							{
								Application.DoEvents();
								int num4 = 0;
								while (true)
								{
									Application.DoEvents();
									if (chkStop.Checked)
									{
										break;
									}
									Thread.Sleep(500);
									string text = serialPort.ReadExisting();
									if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
									{
										txtInfo.Text = text + "\r\n" + txtInfo.Text;
									}
									if (text.Contains("+CUSD: "))
									{
										string text2 = text;
										int num5 = text.IndexOf("+CUSD: ");
										text2 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
											.Trim('\r')
											.Trim('\r')
											.Trim();
										num5 = text2.IndexOf(",");
										string text3 = text2.Substring(0, num5).Trim().Trim('"')
											.Trim(',')
											.Trim('"');
										text3 = text3.Trim('"').Trim(',').Trim('"');
										if (text3.Length <= 3)
										{
											goto IL_06dd;
										}
										string text4;
										if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text3);
											text4 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text4 = encoding_mod.Decode7Bit(text3);
										}
										OutBoxDrop(Exxc, text4);
										if (text4.Contains("دخل الرقم السري"))
										{
											goto IL_0328;
										}
										if (text4.Contains("1: إيداع"))
										{
											goto IL_038b;
										}
										if (text4.Contains("دخل رقم العميل"))
										{
											goto IL_03d6;
										}
										if (text4.Contains("دخل المبلغ من"))
										{
											goto IL_042f;
										}
										if (text4.Contains("ستقوم بإيداع مبل"))
										{
											goto IL_048e;
										}
										if (text4.Contains("عملية الايداع بدأت بنجاح"))
										{
											goto IL_04d9;
										}
										if (text4.Contains("منه تأكيد العملية لإت"))
										{
											goto IL_0524;
										}
										if (text4.Contains("Success"))
										{
											OutBoxDrop(Exxc, "OK " + UssdCommand);
											Application.DoEvents();
											break;
										}
										if (text4.Contains("لا يمكن إتمام العملية") | text4.Contains("غير صحيح"))
										{
											Application.DoEvents();
											break;
										}
										if (text4.Contains("طأ في الرقم السري") | text4.Contains("رصيدك الحالى لا يسمح باتمام العملية") | text4.Contains("the maximum allowed amount") | text4.Contains("You are not subscribed to the Orange Cash service") | text4.Contains("لن يمكنك استخدام هذه الخدمة الان") | text4.Contains("The number is suspended"))
										{
											chkStop.Checked = true;
											Application.DoEvents();
											break;
										}
										if (text4.Contains("Your session has timed out"))
										{
											goto end_IL_012f;
										}
									}
									if (text.Contains("0031003A0020062E062F06450627062A0020064506270644064A0629000A0032003A0020062E062F06450627062A002006270648"))
									{
										Application.DoEvents();
										break;
									}
									if (text.Contains("0644064500200646062A06440642064900200627062E062A064A06270631064300200641064A0020062706440645062F062900200627064406450"))
									{
										goto IL_0694;
									}
									if (text.Contains("0053007500630063006500730073"))
									{
										OutBoxDrop(Exxc, "OK " + UssdCommand);
										Application.DoEvents();
										break;
									}
									goto IL_06dd;
									IL_06dd:
									if (!(text.Contains("+CME ERROR") | text.Contains("+CUSD: 5") | text.Contains("unknown") | text.Contains("retry operation")))
									{
										Application.DoEvents();
										if (chkStop.Checked)
										{
											break;
										}
										num4++;
										if (num4 > 20)
										{
											break;
										}
										continue;
									}
									goto IL_0713;
								}
								goto end_IL_0001_2;
								IL_03d6:
								object obj = UssdCommand ?? "";
								if (obj == null)
								{
									obj = "";
								}
								ussdCommandFull = (string)obj;
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(500);
								Application.DoEvents();
								continue;
								IL_0328:
								object obj2 = txtOCPassMaster.Text ?? "";
								if (obj2 == null)
								{
									obj2 = "";
								}
								ussdCommandFull = (string)obj2;
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(500);
								Application.DoEvents();
								continue;
								IL_048e:
								ussdCommandFull = "1";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(500);
								Application.DoEvents();
								continue;
								IL_042f:
								object obj3 = Conversions.ToString(EEEvalue) ?? "";
								if (obj3 == null)
								{
									obj3 = "";
								}
								ussdCommandFull = (string)obj3;
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(500);
								Application.DoEvents();
								continue;
								IL_0524:
								ussdCommandFull = "1";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(500);
								Application.DoEvents();
								continue;
								IL_04d9:
								ussdCommandFull = "1";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(500);
								Application.DoEvents();
								continue;
								IL_038b:
								ussdCommandFull = "1";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(500);
								Application.DoEvents();
								continue;
								end_IL_012f:
								break;
							}
							Application.DoEvents();
							if (num3 <= 5)
							{
								OutBoxDrop(Exxc, "Restart operation");
								continue;
							}
							break;
							IL_0713:
							Application.DoEvents();
							if (num3 <= 5)
							{
								OutBoxDrop(Exxc, "Restart operation");
								continue;
							}
							break;
							IL_0694:
							Application.DoEvents();
							OutBoxDrop(Exxc, "Restart operation");
						}
						break;
					}
					case 1921:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_3;
							}
							break;
						}
						end_IL_0001_2:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_3:;
			}
			catch (object obj4) when (obj4 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj4);
				try0001_dispatch = 1921;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeOC_Mex_Master_input(Label Exxc, string UssdCommand, int EEFlage, double EEEvalue)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						AutoRes = 0;
						int num3 = 0;
						if (EEEvalue < 1.0)
						{
							goto end_IL_0001;
						}
						while (true)
						{
							num3++;
							lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							string ussdCommandFull = "#114*1#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							Application.DoEvents();
							Thread.Sleep(500);
							Application.DoEvents();
							while (true)
							{
								Application.DoEvents();
								int num4 = 0;
								while (true)
								{
									Application.DoEvents();
									if (chkStop.Checked)
									{
										break;
									}
									Thread.Sleep(500);
									string text = serialPort.ReadExisting();
									if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
									{
										txtInfo.Text = text + "\r\n" + txtInfo.Text;
									}
									if (text.Contains("+CUSD: "))
									{
										string text2 = text;
										int num5 = text.IndexOf("+CUSD: ");
										text2 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
											.Trim('\r')
											.Trim('\r')
											.Trim();
										num5 = text2.IndexOf(",");
										string text3 = text2.Substring(0, num5).Trim().Trim('"')
											.Trim(',')
											.Trim('"');
										text3 = text3.Trim('"').Trim(',').Trim('"');
										if (text3.Length <= 3)
										{
											goto IL_05da;
										}
										string text4;
										if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text3);
											text4 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text4 = encoding_mod.Decode7Bit(text3);
										}
										OutBoxDrop(Exxc, text4);
										if (text4.Contains("دخل الرقم الس"))
										{
											goto IL_0328;
										}
										if (text4.Contains("2: سحب"))
										{
											goto IL_038b;
										}
										if (text4.Contains("دخل رقم العميل"))
										{
											goto IL_03d6;
										}
										if (text4.Contains("دخل المبلغ من"))
										{
											goto IL_042f;
										}
										if (text4.Contains("ستقوم بسحب مبلغ"))
										{
											goto IL_048e;
										}
										if (text4.Contains("عملية السحب بدأت"))
										{
											Application.DoEvents();
											break;
										}
										if (text4.Contains("لا يمكن إتمام العملية") | text4.Contains("غير صحيح"))
										{
											Application.DoEvents();
											break;
										}
										if (text4.Contains("صيد العميل غير كافية لتنفي") | text4.Contains("the maximum allowed amount") | text4.Contains("You are not subscribed to the Orange Cash service") | text4.Contains("لن يمكنك استخدام هذه الخدمة الان") | text4.Contains("The number is suspended"))
										{
											chkStop.Checked = true;
											Application.DoEvents();
											break;
										}
										if (text4.Contains("Your session has timed out"))
										{
											goto end_IL_012f;
										}
									}
									if (text.Contains("0644064500200646062A06440642064900200627062E062A064A06270631064300200641064A0020062706440645062F062900200627064406450"))
									{
										goto IL_05c1;
									}
									goto IL_05da;
									IL_05da:
									if (!(text.Contains("+CME ERROR") | text.Contains("+CUSD: 5") | text.Contains("unknown") | text.Contains("retry operation")))
									{
										Application.DoEvents();
										if (chkStop.Checked)
										{
											break;
										}
										num4++;
										if (num4 > 20)
										{
											break;
										}
										continue;
									}
									goto IL_0610;
								}
								goto end_IL_0001_2;
								IL_042f:
								object obj = Conversions.ToString(EEEvalue) ?? "";
								if (obj == null)
								{
									obj = "";
								}
								ussdCommandFull = (string)obj;
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(500);
								Application.DoEvents();
								continue;
								IL_0328:
								object obj2 = txtOCPassMaster.Text ?? "";
								if (obj2 == null)
								{
									obj2 = "";
								}
								ussdCommandFull = (string)obj2;
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(500);
								Application.DoEvents();
								continue;
								IL_03d6:
								object obj3 = UssdCommand ?? "";
								if (obj3 == null)
								{
									obj3 = "";
								}
								ussdCommandFull = (string)obj3;
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(500);
								Application.DoEvents();
								continue;
								IL_038b:
								ussdCommandFull = "2";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(1000);
								Application.DoEvents();
								continue;
								IL_048e:
								ussdCommandFull = "1";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(1000);
								Application.DoEvents();
								continue;
								end_IL_012f:
								break;
							}
							Application.DoEvents();
							if (num3 <= 5)
							{
								OutBoxDrop(Exxc, "Restart operation");
								continue;
							}
							break;
							IL_0610:
							Application.DoEvents();
							if (num3 <= 5)
							{
								OutBoxDrop(Exxc, "Restart operation");
								continue;
							}
							break;
							IL_05c1:
							Application.DoEvents();
							OutBoxDrop(Exxc, "Restart operation");
						}
						break;
					}
					case 1662:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_3;
							}
							break;
						}
						end_IL_0001_2:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_3:;
			}
			catch (object obj4) when (obj4 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj4);
				try0001_dispatch = 1662;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeOC_Mex_Accept(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						bool flag = false;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						AutoRes = 0;
						int num3 = 0;
						while (true)
						{
							num3++;
							lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							string ussdCommandFull = "#7115#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Application.DoEvents();
							while (true)
							{
								Application.DoEvents();
								int num4 = 0;
								while (true)
								{
									Thread.Sleep(500);
									string text = serialPort.ReadExisting();
									if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
									{
										txtInfo.Text = text + "\r\n" + txtInfo.Text;
									}
									if (text.Contains("+CUSD: "))
									{
										string text2 = text;
										int num5 = text.IndexOf("+CUSD: ");
										text2 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
											.Trim('\r')
											.Trim('\r')
											.Trim();
										num5 = text2.IndexOf(",");
										string text3 = text2.Substring(0, num5).Trim().Trim('"')
											.Trim(',')
											.Trim('"');
										text3 = text3.Trim('"').Trim(',').Trim('"');
										if (text3.Length <= 3)
										{
											goto IL_05df;
										}
										string text4;
										if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text3);
											text4 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text4 = encoding_mod.Decode7Bit(text3);
										}
										OutBoxDrop(Exxc, text4);
										if (text4.Contains("لم نتلقى اختيارك في المدة المحددة"))
										{
											Application.DoEvents();
											OutBoxDrop(Exxc, "Restart operation");
											if (num3 <= 1)
											{
												break;
											}
										}
										if (text4.Contains("الرقم السري"))
										{
											goto IL_0315;
										}
										if (text4.Contains("لديك عملية ايداع"))
										{
											goto IL_037b;
										}
										if (text4.Contains("اموال مجهولة"))
										{
											goto IL_03c9;
										}
										if (text4.Contains("اللغة العربي"))
										{
											goto IL_0414;
										}
										if (unchecked(text4.Contains("تم الايداع بنجاح") && flag))
										{
											DisablePort(Exxc);
											Application.DoEvents();
											goto end_IL_0001_2;
										}
										if (text4.Contains("Orange Money balance is not sufficient to perform"))
										{
											chkStop.Checked = true;
											Application.DoEvents();
											goto end_IL_0001_2;
										}
										if (text4.Contains("لا يمكن إتمام العملية") | text4.Contains("غير صحيح") | text4.Contains("The system is unavailable"))
										{
											Application.DoEvents();
											goto end_IL_0001_2;
										}
										if (text4.Contains("the maximum allowed amount") | text4.Contains("You are not subscribed to the Orange Cash service") | text4.Contains("لن يمكنك استخدام هذه الخدمة الان") | text4.Contains("number is suspended"))
										{
											DisablePort(Exxc);
											Application.DoEvents();
											goto end_IL_0001_2;
										}
										if (text4.Contains("Your session has timed out"))
										{
											Application.DoEvents();
											if (num3 > 5)
											{
												goto end_IL_0001_2;
											}
											OutBoxDrop(Exxc, "Restart Time");
											if (num3 <= 1)
											{
												break;
											}
										}
									}
									if (text.Contains("0031003A0020062E062F06450627062A0020064506270644064A0629000A0032003A0020062E062F06450627062A002006270648"))
									{
										OutBoxDrop(Exxc, "No Request");
										Application.DoEvents();
										goto end_IL_0001_2;
									}
									if (text.Contains("0644064500200646062A06440642064900200627062E062A064A06270631064300200641064A0020062706440645062F062900200627064406450"))
									{
										OutBoxDrop(Exxc, "Restart 00");
										Application.DoEvents();
										if (num3 <= 1)
										{
											break;
										}
									}
									goto IL_05df;
									IL_05df:
									if (text.Contains("+CME ERROR") | text.Contains("+CUSD: 5") | text.Contains("unknown") | text.Contains("retry operation"))
									{
										if (num3 <= 1)
										{
											break;
										}
										goto end_IL_0001_2;
									}
									Application.DoEvents();
									if (chkStop.Checked)
									{
										goto end_IL_0001_2;
									}
									num4++;
									if (num4 > 10)
									{
										goto end_IL_0001_2;
									}
								}
								break;
								IL_0414:
								ussdCommandFull = "1";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								flag = true;
								Thread.Sleep(1000);
								Application.DoEvents();
								continue;
								IL_0315:
								object obj = txtOCPass.Text ?? "";
								if (obj == null)
								{
									obj = "";
								}
								ussdCommandFull = (string)obj;
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(1000);
								flag = true;
								Application.DoEvents();
								continue;
								IL_037b:
								ussdCommandFull = "1";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								flag = true;
								Thread.Sleep(1000);
								Application.DoEvents();
								continue;
								IL_03c9:
								ussdCommandFull = "1";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(1000);
								Application.DoEvents();
							}
						}
					}
					case 1648:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_3;
							}
							break;
						}
						end_IL_0001_2:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_3:;
			}
			catch (object obj2) when (obj2 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj2);
				try0001_dispatch = 1648;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodeOC_Mex_Accept_input(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						bool flag = false;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						AutoRes = 0;
						int num3 = 0;
						while (true)
						{
							num3++;
							lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							string ussdCommandFull = "#7115#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Application.DoEvents();
							while (true)
							{
								Application.DoEvents();
								int num4 = 0;
								while (true)
								{
									Thread.Sleep(500);
									string text = serialPort.ReadExisting();
									if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
									{
										txtInfo.Text = text + "\r\n" + txtInfo.Text;
									}
									if (text.Contains("+CUSD: "))
									{
										string text2 = text;
										int num5 = text.IndexOf("+CUSD: ");
										text2 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
											.Trim('\r')
											.Trim('\r')
											.Trim();
										num5 = text2.IndexOf(",");
										string text3 = text2.Substring(0, num5).Trim().Trim('"')
											.Trim(',')
											.Trim('"');
										text3 = text3.Trim('"').Trim(',').Trim('"');
										if (text3.Length <= 3)
										{
											goto IL_0546;
										}
										string text4;
										if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text3);
											text4 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text4 = encoding_mod.Decode7Bit(text3);
										}
										OutBoxDrop(Exxc, text4);
										if (text4.Contains("لم نتلقى اختيارك في المدة المحددة"))
										{
											Application.DoEvents();
											OutBoxDrop(Exxc, "Restart operation");
											if (num3 <= 2)
											{
												break;
											}
										}
										if (text4.Contains("سري لتأكيد العم"))
										{
											goto IL_0315;
										}
										if (text4.Contains("لديك عملية سحب"))
										{
											goto IL_037b;
										}
										if (unchecked(text4.Contains("لرقم السري صحيح") && flag))
										{
											DisablePort(Exxc);
											Application.DoEvents();
											goto end_IL_0001_2;
										}
										if (text4.Contains("Orange Money balance is not sufficient to perform"))
										{
											chkStop.Checked = true;
											Application.DoEvents();
											goto end_IL_0001_2;
										}
										if (text4.Contains("لا يمكن إتمام العملية") | text4.Contains("غير صحيح") | text4.Contains("The system is unavailable"))
										{
											Application.DoEvents();
											goto end_IL_0001_2;
										}
										if (text4.Contains("the maximum allowed amount") | text4.Contains("You are not subscribed to the Orange Cash service") | text4.Contains("لن يمكنك استخدام هذه الخدمة الان") | text4.Contains("number is suspended"))
										{
											DisablePort(Exxc);
											Application.DoEvents();
											goto end_IL_0001_2;
										}
										if (text4.Contains("Your session has timed out"))
										{
											Application.DoEvents();
											if (num3 > 5)
											{
												goto end_IL_0001_2;
											}
											OutBoxDrop(Exxc, "Restart Time");
											if (num3 <= 5)
											{
												break;
											}
										}
									}
									if (text.Contains("0031003A0020062E062F06450627062A0020064506270644064A0629000A0032003A0020062E062F06450627062A002006270648"))
									{
										OutBoxDrop(Exxc, "No Request");
										Application.DoEvents();
										goto end_IL_0001_2;
									}
									if (text.Contains("0644064500200646062A06440642064900200627062E062A064A06270631064300200641064A0020062706440645062F062900200627064406450"))
									{
										OutBoxDrop(Exxc, "Restart 00");
										Application.DoEvents();
										if (num3 <= 5)
										{
											break;
										}
									}
									goto IL_0546;
									IL_0546:
									if (text.Contains("+CME ERROR") | text.Contains("+CUSD: 5") | text.Contains("unknown") | text.Contains("retry operation"))
									{
										if (num3 <= 5)
										{
											break;
										}
										goto end_IL_0001_2;
									}
									Application.DoEvents();
									if (chkStop.Checked)
									{
										goto end_IL_0001_2;
									}
									num4++;
									if (num4 > 10)
									{
										goto end_IL_0001_2;
									}
								}
								break;
								IL_037b:
								ussdCommandFull = "1";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								flag = true;
								Thread.Sleep(1000);
								Application.DoEvents();
								continue;
								IL_0315:
								object obj = txtOCPass.Text ?? "";
								if (obj == null)
								{
									obj = "";
								}
								ussdCommandFull = (string)obj;
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(1000);
								flag = true;
								Application.DoEvents();
							}
						}
					}
					case 1495:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_3;
							}
							break;
						}
						end_IL_0001_2:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_3:;
			}
			catch (object obj2) when (obj2 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj2);
				try0001_dispatch = 1495;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnOCGiftsCheckConf_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 328:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0031;
						case 5:
							goto IL_003a;
						case 6:
							goto IL_004d;
						case 7:
							goto IL_0060;
						case 8:
							goto IL_0073;
						case 9:
							goto IL_0086;
						case 10:
							goto IL_009a;
						case 11:
							goto IL_00ae;
						case 12:
							goto IL_00b8;
						case 13:
							goto IL_00c1;
						case 14:
							goto IL_00cb;
						case 15:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 16:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_00b8:
					num2 = 12;
					Application.DoEvents();
					goto IL_00c1;
					IL_00c1:
					num2 = 13;
					EnableCntl();
					goto IL_00cb;
					IL_00ae:
					num2 = 11;
					SetUssdOrderOCGIFTSConf();
					goto IL_00b8;
					IL_00cb:
					num2 = 14;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_001e:
					num2 = 3;
					lblProgress.Text = "check";
					goto IL_0031;
					IL_0031:
					num2 = 4;
					DisableCntl();
					goto IL_003a;
					IL_003a:
					num2 = 5;
					lblGifttotal1.Text = "";
					goto IL_004d;
					IL_004d:
					num2 = 6;
					lblGifttotal2.Text = "";
					goto IL_0060;
					IL_0060:
					num2 = 7;
					lblGifttotal3.Text = "";
					goto IL_0073;
					IL_0073:
					num2 = 8;
					lblGifttotal4.Text = "";
					goto IL_0086;
					IL_0086:
					num2 = 9;
					lblGifttotal5.Text = "";
					goto IL_009a;
					IL_009a:
					num2 = 10;
					lblGifttotal6.Text = "";
					goto IL_00ae;
					end_IL_0001_2:
					break;
				}
				num2 = 15;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 328;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderOCGIFTSConf()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 725:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
						case 21:
							goto IL_0010;
						case 4:
							goto IL_0016;
						case 6:
							goto IL_007c;
						case 7:
							goto IL_00ae;
						case 8:
							goto IL_00c3;
						case 9:
							goto IL_00f5;
						case 10:
							goto IL_010b;
						case 11:
							goto IL_013e;
						case 12:
							goto IL_0154;
						case 13:
							goto IL_0187;
						case 14:
							goto IL_019d;
						case 15:
							goto IL_01d0;
						case 16:
							goto IL_01e6;
						case 17:
							goto IL_0219;
						case 18:
							goto IL_022f;
						case 20:
							goto IL_0245;
						case 5:
						case 19:
						case 22:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 23:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0219:
					num2 = 17;
					ApplyUssdOCGIFTSConf(lblPort6, lblGifttotal6);
					goto IL_022f;
					IL_022f:
					num2 = 18;
					if (chkStop.Checked)
					{
						break;
					}
					goto IL_0245;
					IL_01e6:
					num2 = 16;
					if ((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_0219;
					}
					goto IL_022f;
					IL_0245:
					num2 = 20;
					if (num5 > 6)
					{
						break;
					}
					goto IL_0010;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_0010;
					IL_0010:
					num2 = 3;
					num5 = checked(num5 + 1);
					goto IL_0016;
					IL_0016:
					num2 = 4;
					if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
					{
						break;
					}
					goto IL_007c;
					IL_007c:
					num2 = 6;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_00ae;
					}
					goto IL_00c3;
					IL_00ae:
					num2 = 7;
					ApplyUssdOCGIFTSConf(lblPort1, lblGifttotal1);
					goto IL_00c3;
					IL_00c3:
					num2 = 8;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_00f5;
					}
					goto IL_010b;
					IL_00f5:
					num2 = 9;
					ApplyUssdOCGIFTSConf(lblPort2, lblGifttotal2);
					goto IL_010b;
					IL_010b:
					num2 = 10;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_013e;
					}
					goto IL_0154;
					IL_013e:
					num2 = 11;
					ApplyUssdOCGIFTSConf(lblPort3, lblGifttotal3);
					goto IL_0154;
					IL_0154:
					num2 = 12;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0187;
					}
					goto IL_019d;
					IL_0187:
					num2 = 13;
					ApplyUssdOCGIFTSConf(lblPort4, lblGifttotal4);
					goto IL_019d;
					IL_019d:
					num2 = 14;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_01d0;
					}
					goto IL_01e6;
					IL_01d0:
					num2 = 15;
					ApplyUssdOCGIFTSConf(lblPort5, lblGifttotal5);
					goto IL_01e6;
					end_IL_0001_2:
					break;
				}
				num2 = 22;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 725;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string ApplyUssdOCGIFTSConf(Label Exxc, Label EEgifttotal)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num3 = default(int);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						num3 = 0;
						string text = serialPort.ReadExisting();
						EEgifttotal.Text = "";
						while (true)
						{
							Thread.Sleep(1000);
							string ussdCommandFull = "#365#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							while (true)
							{
								double num4 = 0.0;
								while (true)
								{
									Application.DoEvents();
									Thread.Sleep(700);
									text = serialPort.ReadExisting();
									if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
									{
										txtInfo.Text = text + "\r\n" + txtInfo.Text;
									}
									if (text.Contains("+CUSD:"))
									{
										int num5 = ((!text.Contains("+CUSD: 0")) ? text.IndexOf("+CUSD: 1") : text.IndexOf("+CUSD: 0"));
										string text2 = text.Substring(num5 + 9, text.Length - num5 - 9).Trim().Trim('o')
											.Trim('\r')
											.Trim('\r')
											.Trim();
										num5 = text2.IndexOf(",");
										string text3 = text2.Substring(0, num5).Trim().Trim('"')
											.Trim(',')
											.Trim('"');
										text3 = text3.Trim('"').Trim(',').Trim('"');
										string text4;
										if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text3);
											text4 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text4 = encoding_mod.Decode7Bit(text3);
										}
										OutBoxDrop(Exxc, text4);
										if (text4.Contains("عروض اورنج كاش"))
										{
											break;
										}
										if (text4.Contains("حول من علي المحفظة  ب100 جنية واكسب 5 جنية كاش باك"))
										{
											goto end_IL_0088;
										}
										if (text4.Contains("ودع ب100 جنية واكسب 10 جنية كاش باك"))
										{
											goto IL_0329;
										}
										if (text4.Contains("حول من علي المحفظة ب1000 جنية واكسب 10 جنية كاش باك"))
										{
											goto IL_038f;
										}
										if (text4.Contains("2:التالى"))
										{
											goto IL_03f5;
										}
										if (text4.Contains("3:التالى"))
										{
											goto IL_043a;
										}
										if (text4.Contains("4:التالى"))
										{
											goto IL_047f;
										}
										if (text4.Contains("5:التالى"))
										{
											goto IL_04c4;
										}
										if (text4.Contains("2:التالى"))
										{
											goto IL_0509;
										}
										if (text4.Contains("القائمة الرئيسية"))
										{
											ussdCommandFull = "00";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(500);
											DisablePort(Exxc);
											Application.DoEvents();
											goto end_IL_0001;
										}
										if (text4.Contains("ا يوجد عروض متاحه في الوقت الح"))
										{
											DisablePort(Exxc);
											Application.DoEvents();
											goto end_IL_0001;
										}
										if (text4.Contains("مبروك! كسبت ") & text4.Contains("وميجا انترنت"))
										{
											DisablePort(Exxc);
											Application.DoEvents();
											goto end_IL_0001;
										}
										if (text4.Contains("ودع  ب150 جنية واكسب 250 وحدة هدية"))
										{
											DisablePort(Exxc);
											Application.DoEvents();
											goto end_IL_0001;
										}
										if (text4.Contains("عفوا\u0651 لا يمكننا استكمال طلبك الأن, برجاء المحاولة مرة") | text4.Contains("م نتلقى اختيارك في المدة المحددة"))
										{
											Application.DoEvents();
											goto end_IL_0001;
										}
										Application.DoEvents();
									}
									if (!(text.Contains("unknown") | text.Contains("+CUSD: 2") | text.Contains("retry operation")) || num3 > 4)
									{
										Application.DoEvents();
										num4 += 1.0;
										if (!(num4 <= 30.0))
										{
											goto end_IL_0001;
										}
										continue;
									}
									goto IL_0678;
								}
								ussdCommandFull = "5";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(500);
								continue;
								IL_04c4:
								ussdCommandFull = "5";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(500);
								continue;
								IL_0509:
								ussdCommandFull = "2";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(500);
								continue;
								IL_03f5:
								ussdCommandFull = "2";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(500);
								continue;
								IL_043a:
								ussdCommandFull = "3";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(500);
								continue;
								IL_047f:
								ussdCommandFull = "4";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(500);
								continue;
								end_IL_0088:
								break;
							}
							EEgifttotal.Text = Conversions.ToString(Conversion.Val(EEgifttotal.Text) + 5.0);
							ussdCommandFull = "1";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							continue;
							IL_038f:
							EEgifttotal.Text = Conversions.ToString(Conversion.Val(EEgifttotal.Text) + 10.0);
							ussdCommandFull = "2";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
							continue;
							IL_0678:
							num3++;
							continue;
							IL_0329:
							EEgifttotal.Text = Conversions.ToString(Conversion.Val(EEgifttotal.Text) + 10.0);
							ussdCommandFull = "1";
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(500);
						}
					}
					case 1745:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_2;
							}
							break;
						}
						end_IL_0001:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					result = Conversions.ToString(num3);
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1745;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void btnCC_Click(object sender, EventArgs e)
	{
		string text = "";
		if (lblNum1.Text.Length == 11)
		{
			text = lblNum1.Text + "\r\n" + text;
		}
		if (lblNum2.Text.Length == 11)
		{
			text = lblNum2.Text + "\r\n" + text;
		}
		if (lblNum3.Text.Length == 11)
		{
			text = lblNum3.Text + "\r\n" + text;
		}
		if (lblNum4.Text.Length == 11)
		{
			text = lblNum4.Text + "\r\n" + text;
		}
		if (lblNum5.Text.Length == 11)
		{
			text = lblNum5.Text + "\r\n" + text;
		}
		if (lblNum6.Text.Length == 11)
		{
			text = lblNum6.Text + "\r\n" + text;
		}
		txtInfo.Text = "OK in Clipboard";
		Clipboard.SetText(text);
	}

	private void lblOCvsub_Click(object sender, EventArgs e)
	{
		if (Conversion.Val(txtOCTopValue.Text) >= 5.0)
		{
			txtOCTopValue.Text = Conversions.ToString(Conversion.Val(txtOCTopValue.Text) - 5.0);
		}
	}

	private void lblOCvPlus_Click(object sender, EventArgs e)
	{
		txtOCTopValue.Text = Conversions.ToString(Conversion.Val(txtOCTopValue.Text) + 5.0);
	}

	private void btnOCTransferSame_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (chkCh1.Checked & (txtOCchargeNum1.Text.Trim().Length != 11))
		{
			Interaction.MsgBox("حدد رقم كاش لسحب الرصيد علية - COM 2");
			return;
		}
		if (chkCh2.Checked & (txtOCchargeNum2.Text.Trim().Length != 11))
		{
			Interaction.MsgBox("حدد رقم كاش لسحب الرصيد علية - COM 2");
			return;
		}
		if (chkCh3.Checked & (txtOCchargeNum3.Text.Trim().Length != 11))
		{
			Interaction.MsgBox("حدد رقم كاش لسحب الرصيد علية - COM 3");
			return;
		}
		if (chkCh4.Checked & (txtOCchargeNum4.Text.Trim().Length != 11))
		{
			Interaction.MsgBox("حدد رقم كاش لسحب الرصيد علية - COM 4");
			return;
		}
		if (chkCh5.Checked & (txtOCchargeNum5.Text.Trim().Length != 11))
		{
			Interaction.MsgBox("حدد رقم كاش لسحب الرصيد علية - COM 5");
			return;
		}
		if (chkCh6.Checked & (txtOCchargeNum6.Text.Trim().Length != 11))
		{
			Interaction.MsgBox("حدد رقم كاش لسحب الرصيد علية - COM 6");
			return;
		}
		if (Conversion.Val(txtOCValueSame.Text) < 5.0)
		{
			Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
			return;
		}
		if (txtOCPass.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد اورنج كاش");
			return;
		}
		ReSetUssdOrder();
		do
		{
			lblProgress.BackColor = Color.Red;
			num = checked(num + 1);
			if (chkStop.Checked)
			{
				break;
			}
			lblProgress.Text = "سحب اورنج كاش ";
			if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
			{
				break;
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if (chkCh1.Checked & (Conversion.Val(lblBal1.Text) >= 5.0))
			{
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort1);
				}
				ApplyUssdCodeOC_Mex_pull(lblPort1, txtOCchargeNum1.Text, Conversion.Val(txtOCValueSame.Text));
				Application.DoEvents();
			}
			if (chkCh2.Checked & (Conversion.Val(lblBal2.Text) >= 5.0))
			{
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort2);
				}
				ApplyUssdCodeOC_Mex_pull(lblPort2, txtOCchargeNum2.Text, Conversion.Val(txtOCValueSame.Text));
				Application.DoEvents();
			}
			if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
			{
				break;
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if (chkCh3.Checked & (Conversion.Val(lblBal3.Text) >= 5.0))
			{
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort3);
				}
				ApplyUssdCodeOC_Mex_pull(lblPort3, txtOCchargeNum3.Text, Conversion.Val(txtOCValueSame.Text));
				Application.DoEvents();
			}
			if ((!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) || chkStop.Checked)
			{
				break;
			}
			Application.DoEvents();
			if (chkCh4.Checked & (Conversion.Val(lblBal4.Text) >= 5.0))
			{
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort4);
				}
				ApplyUssdCodeOC_Mex_pull(lblPort4, txtOCchargeNum4.Text, Conversion.Val(txtOCValueSame.Text));
				Application.DoEvents();
			}
			if ((!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) || chkStop.Checked)
			{
				break;
			}
			Application.DoEvents();
			if (chkCh5.Checked & (Conversion.Val(lblBal5.Text) >= 5.0))
			{
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort5);
				}
				ApplyUssdCodeOC_Mex_pull(lblPort5, txtOCchargeNum5.Text, Conversion.Val(txtOCValueSame.Text));
				Application.DoEvents();
			}
			if (chkCh6.Checked & (Conversion.Val(lblBal6.Text) >= 5.0))
			{
				if (num == 5 || num == 15)
				{
					ResetUssdCode(lblPort6);
				}
				ApplyUssdCodeOC_Mex_pull(lblPort6, txtOCchargeNum6.Text, Conversion.Val(txtOCValueSame.Text));
				Application.DoEvents();
			}
		}
		while (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) && num <= 60);
		Application.DoEvents();
		if (chbeep.Checked)
		{
			EEmosemove = false;
			while (!EEmosemove)
			{
				Interaction.Beep();
				Application.DoEvents();
			}
		}
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btnOCSeriesMT_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtOCPass.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد اورنج كاش");
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Conversion.Val(txtOCValue.Text) < 5.0)
		{
			Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
			return;
		}
		if ((txtOCNextMain.Text.Trim().Length != 11) & ckUseNextMain.Checked)
		{
			Interaction.MsgBox("حدد رقم كاش لسحب الرصيد علية - الاساسى التالى");
			return;
		}
		if ((Operators.CompareString(lblOCMain.Text, lblNum1.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMain.Text, lblNum2.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMain.Text, lblNum3.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMain.Text, lblNum4.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMain.Text, lblNum5.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMain.Text, lblNum6.Text, TextCompare: false) != 0))
		{
			Interaction.MsgBox("مشكلة بالاساسى");
			chkStop.Checked = true;
			return;
		}
		string text = lblOCMain.Text;
		checked
		{
			int num = (int)Math.Round(Conversion.Val(txtOCValueMT1.Text));
			if (num >= 5)
			{
				txtOCValue.Text = Conversions.ToString(num);
				btnOCSeries_Click(RuntimeHelpers.GetObjectValue(sender), e);
				lblOCMain.Text = text;
				Application.DoEvents();
				if (chkStop.Checked)
				{
					return;
				}
			}
			num = (int)Math.Round(Conversion.Val(txtOCValueMT2.Text));
			if (num >= 5)
			{
				txtOCValue.Text = Conversions.ToString(num);
				btnOCSeries_Click(RuntimeHelpers.GetObjectValue(sender), e);
				lblOCMain.Text = text;
				Application.DoEvents();
				if (chkStop.Checked)
				{
					return;
				}
			}
			num = (int)Math.Round(Conversion.Val(txtOCValueMT3.Text));
			if (num >= 5)
			{
				txtOCValue.Text = Conversions.ToString(num);
				btnOCSeries_Click(RuntimeHelpers.GetObjectValue(sender), e);
				lblOCMain.Text = text;
				Application.DoEvents();
				if (chkStop.Checked)
				{
					return;
				}
			}
			num = (int)Math.Round(Conversion.Val(txtOCValueMT4.Text));
			if (num >= 5)
			{
				txtOCValue.Text = Conversions.ToString(num);
				btnOCSeries_Click(RuntimeHelpers.GetObjectValue(sender), e);
				lblOCMain.Text = text;
				Application.DoEvents();
				if (chkStop.Checked)
				{
					return;
				}
			}
			num = (int)Math.Round(Conversion.Val(txtOCValueMT5.Text));
			if (num >= 5)
			{
				txtOCValue.Text = Conversions.ToString(num);
				btnOCSeries_Click(RuntimeHelpers.GetObjectValue(sender), e);
				lblOCMain.Text = text;
				Application.DoEvents();
				if (!chkStop.Checked)
				{
				}
			}
		}
	}

	private void ApplyUssdCodeOC_Mex_pull(Label Exxc, string UssdCommand, double EEEvalue)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						string text = serialPort.ReadExisting();
						AutoRes = 0;
						EEEvalue = Conversion.Int(EEEvalue);
						int num3 = 0;
						int num4 = 1;
						if (EEEvalue < 1.0)
						{
							goto end_IL_0001;
						}
						do
						{
							IL_00ae:
							num3++;
							string ussdCommandFull = "#7115*7*" + UssdCommand + "*" + Conversions.ToString(EEEvalue) + "*1*" + txtOCPass.Text + "#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
							Application.DoEvents();
							string text2 = "#";
							string text3 = "#";
							string text4 = "#";
							string text5 = "#";
							int num5 = 0;
							while (true)
							{
								Thread.Sleep(1000);
								text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("+CUSD: "))
								{
									string text6 = text;
									int num6 = text.IndexOf("+CUSD: ");
									text6 = text.Substring(num6 + 10, text.Length - num6 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num6 = text6.IndexOf(",");
									string text7 = text6.Substring(0, num6).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text7 = text7.Trim('"').Trim(',').Trim('"');
									if (text7.Length > 3)
									{
										string text8;
										if (Operators.CompareString(text7.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text7);
											text8 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text8 = encoding_mod.Decode7Bit(text7);
										}
										OutBoxDrop(Exxc, text8);
										if (text8.Contains("رقم سري خاطئ"))
										{
											DisablePort(Exxc);
											break;
										}
										if (text8.Contains("User can not transfer from his wallet"))
										{
											DisablePort(Exxc);
											break;
										}
										if (text8.Contains("رصيدك غير كاف اعمل"))
										{
											DisablePort(Exxc);
											AddToRemoteDB_Transfer(GetNumberByPort(Exxc.Text), UssdCommand, EEEvalue);
											Application.DoEvents();
											break;
										}
										if (text8.Contains("م تحويل"))
										{
											ussdCommandFull = "9";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(1000);
											DisablePort(Exxc);
											AddToRemoteDB_Transfer(GetNumberByPort(Exxc.Text), UssdCommand, EEEvalue);
											Application.DoEvents();
											break;
										}
										if (text8.Contains("the maximum allowed amount") | text8.Contains("لن يمكنك استخدام هذه الخدمة الان") | text8.Contains("number is suspended"))
										{
											DisablePort(Exxc);
											Application.DoEvents();
											break;
										}
										if (text8.Contains("لا يمكن إتمام العملية") | text8.Contains("غير صحيح") | text8.Contains("You are not subscribed to the Orange Cash service"))
										{
											Application.DoEvents();
											break;
										}
										if (text8.Contains("Your session has timed out"))
										{
											goto IL_04c5;
										}
									}
								}
								if (!(text.Contains("+CME ERROR") | text.Contains("+CUSD: 5") | text.Contains("unknown") | text.Contains("retry operation")))
								{
									Application.DoEvents();
									if (chkStop.Checked)
									{
										break;
									}
									num5++;
									if (num5 > 12)
									{
										break;
									}
									continue;
								}
								goto IL_051a;
							}
							break;
							IL_051a:
							if (num3 <= 5)
							{
								goto IL_00ae;
							}
							break;
							IL_04c5:
							Application.DoEvents();
						}
						while (num3 <= 5);
						break;
					}
					case 1397:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001_2;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1397;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void txtRet02_TextChanged(object sender, EventArgs e)
	{
	}

	private void btnOCFromMasterToAll_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtOCPass.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد اورنج كاش");
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Conversion.Val(txtOCValue.Text) < 5.0)
		{
			Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
			return;
		}
		if ((Operators.CompareString(lblOCMain.Text, lblNum1.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMain.Text, lblNum2.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMain.Text, lblNum3.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMain.Text, lblNum4.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMain.Text, lblNum5.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMain.Text, lblNum6.Text, TextCompare: false) != 0))
		{
			Interaction.MsgBox("مشكلة بالاساسى");
			chkStop.Checked = true;
			return;
		}
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh1.Checked = false;
		}
		if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh2.Checked = false;
		}
		if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh3.Checked = false;
		}
		if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh4.Checked = false;
		}
		if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh5.Checked = false;
		}
		if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh6.Checked = false;
		}
		lblGifts01.Text = "0";
		lblGifts02.Text = "0";
		lblGifts03.Text = "0";
		lblGifts04.Text = "0";
		lblGifts05.Text = "0";
		lblGifts06.Text = "0";
		lblGiftV1.Text = "0";
		lblGiftV2.Text = "0";
		lblGiftV3.Text = "0";
		lblGiftV4.Text = "0";
		lblGiftV5.Text = "0";
		lblGiftV6.Text = "0";
		if (chkStop.Checked)
		{
			return;
		}
		ArrangOClines();
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		Application.DoEvents();
		do
		{
			num = checked(num + 1);
			if (chkStop.Checked)
			{
				break;
			}
			lblProgress.Text = "تحويل اورنج كاش ";
			if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
			{
				ApplyUssdCodeOC_Mex(lblPort1, lblNum2.Text, chkCh2, 1, Conversion.Val(txtOCValue.Text));
				Application.DoEvents();
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
			{
				ApplyUssdCodeOC_Mex(lblPort1, lblNum3.Text, chkCh3, 1, Conversion.Val(txtOCValue.Text));
				Application.DoEvents();
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
			{
				ApplyUssdCodeOC_Mex(lblPort1, lblNum4.Text, chkCh4, 1, Conversion.Val(txtOCValue.Text));
				Application.DoEvents();
			}
			if (chkStop.Checked)
			{
				break;
			}
			Application.DoEvents();
			if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
			{
				ApplyUssdCodeOC_Mex(lblPort1, lblNum5.Text, chkCh5, 1, Conversion.Val(txtOCValue.Text));
				Application.DoEvents();
			}
			if (chkStop.Checked)
			{
				break;
			}
			Application.DoEvents();
			if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
			{
				ApplyUssdCodeOC_Mex(lblPort1, lblNum6.Text, chkCh6, 1, Conversion.Val(txtOCValue.Text));
				Application.DoEvents();
			}
		}
		while (!chkStop.Checked && !(!chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) && num <= 60);
		Application.DoEvents();
		if (chbeep.Checked)
		{
			EEmosemove = false;
			while (!EEmosemove)
			{
				Interaction.Beep();
				Application.DoEvents();
			}
		}
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void txtOCNumber_TextChanged(object sender, EventArgs e)
	{
	}

	private void SetGiftForOrange(Label eIndex, int EEval)
	{
		if (Operators.CompareString(eIndex.Text, lblPort1.Text, TextCompare: false) == 0)
		{
			lblGiftV1.Text = Conversions.ToString(EEval);
		}
		if (Operators.CompareString(eIndex.Text, lblPort2.Text, TextCompare: false) == 0)
		{
			lblGiftV2.Text = Conversions.ToString(EEval);
		}
		if (Operators.CompareString(eIndex.Text, lblPort3.Text, TextCompare: false) == 0)
		{
			lblGiftV3.Text = Conversions.ToString(EEval);
		}
		if (Operators.CompareString(eIndex.Text, lblPort4.Text, TextCompare: false) == 0)
		{
			lblGiftV4.Text = Conversions.ToString(EEval);
		}
		if (Operators.CompareString(eIndex.Text, lblPort5.Text, TextCompare: false) == 0)
		{
			lblGiftV5.Text = Conversions.ToString(EEval);
		}
		if (Operators.CompareString(eIndex.Text, lblPort6.Text, TextCompare: false) == 0)
		{
			lblGiftV6.Text = Conversions.ToString(EEval);
		}
	}

	private void btnOCGiftsCheck_Click(object sender, EventArgs e)
	{
		bool flag = chkCh1.Checked;
		bool flag2 = chkCh2.Checked;
		bool flag3 = chkCh3.Checked;
		bool flag4 = chkCh4.Checked;
		bool flag5 = chkCh5.Checked;
		bool flag6 = chkCh6.Checked;
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "Check Offers";
		DisableCntl();
		ApplyUssdCodeTOport("#012*5#");
		Application.DoEvents();
		chkCh1.Checked = flag;
		chkCh2.Checked = flag2;
		chkCh3.Checked = flag3;
		chkCh4.Checked = flag4;
		chkCh5.Checked = flag5;
		chkCh6.Checked = flag6;
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void SetUssdOrderOCGIFTS()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 725:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
						case 21:
							goto IL_0010;
						case 4:
							goto IL_0016;
						case 6:
							goto IL_007c;
						case 7:
							goto IL_00ae;
						case 8:
							goto IL_00c3;
						case 9:
							goto IL_00f5;
						case 10:
							goto IL_010b;
						case 11:
							goto IL_013e;
						case 12:
							goto IL_0154;
						case 13:
							goto IL_0187;
						case 14:
							goto IL_019d;
						case 15:
							goto IL_01d0;
						case 16:
							goto IL_01e6;
						case 17:
							goto IL_0219;
						case 18:
							goto IL_022f;
						case 20:
							goto IL_0245;
						case 5:
						case 19:
						case 22:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 23:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0219:
					num2 = 17;
					ApplyUssdOCGIFTS(lblPort6, lblGifttotal6);
					goto IL_022f;
					IL_022f:
					num2 = 18;
					if (chkStop.Checked)
					{
						break;
					}
					goto IL_0245;
					IL_01e6:
					num2 = 16;
					if ((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_0219;
					}
					goto IL_022f;
					IL_0245:
					num2 = 20;
					if (num5 > 0)
					{
						break;
					}
					goto IL_0010;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_0010;
					IL_0010:
					num2 = 3;
					num5 = checked(num5 + 1);
					goto IL_0016;
					IL_0016:
					num2 = 4;
					if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
					{
						break;
					}
					goto IL_007c;
					IL_007c:
					num2 = 6;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_00ae;
					}
					goto IL_00c3;
					IL_00ae:
					num2 = 7;
					ApplyUssdOCGIFTS(lblPort1, lblGifttotal1);
					goto IL_00c3;
					IL_00c3:
					num2 = 8;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_00f5;
					}
					goto IL_010b;
					IL_00f5:
					num2 = 9;
					ApplyUssdOCGIFTS(lblPort2, lblGifttotal2);
					goto IL_010b;
					IL_010b:
					num2 = 10;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_013e;
					}
					goto IL_0154;
					IL_013e:
					num2 = 11;
					ApplyUssdOCGIFTS(lblPort3, lblGifttotal3);
					goto IL_0154;
					IL_0154:
					num2 = 12;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0187;
					}
					goto IL_019d;
					IL_0187:
					num2 = 13;
					ApplyUssdOCGIFTS(lblPort4, lblGifttotal4);
					goto IL_019d;
					IL_019d:
					num2 = 14;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_01d0;
					}
					goto IL_01e6;
					IL_01d0:
					num2 = 15;
					ApplyUssdOCGIFTS(lblPort5, lblGifttotal5);
					goto IL_01e6;
					end_IL_0001_2:
					break;
				}
				num2 = 22;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 725;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnDelOnePre_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 145:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0024;
						case 4:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
						case 6:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					if (lstOCNumbers.SelectedItems.Count <= 0)
					{
						goto end_IL_0001_3;
					}
					goto IL_0024;
					IL_0024:
					num2 = 3;
					lstOCNumbers.Items.RemoveAt(lstOCNumbers.SelectedIndex);
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 4;
				lblCountPre.Text = Conversions.ToString(lstOCNumbers.Items.Count);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 145;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnOCMSerieAccept_Click(object sender, EventArgs e)
	{
		int num = 100;
		int num2 = 0;
		int num3 = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtOCPass.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد اورنج كاش");
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Operators.CompareString(lblOCMMain.Text, lblNum1.Text, TextCompare: false) == 0)
		{
			chkCh1.Checked = false;
		}
		if (chkStop.Checked)
		{
			return;
		}
		btnUssdReset_Click(RuntimeHelpers.GetObjectValue(sender), e);
		lblProgress.BackColor = Color.Red;
		bool flag = chkCh1.Checked;
		bool flag2 = chkCh2.Checked;
		bool flag3 = chkCh3.Checked;
		bool flag4 = chkCh4.Checked;
		bool flag5 = chkCh5.Checked;
		bool flag6 = chkCh6.Checked;
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		lblProgress.Text = "Orange Input ";
		checked
		{
			while (true)
			{
				chkCh1.Checked = flag;
				chkCh2.Checked = flag2;
				chkCh3.Checked = flag3;
				chkCh4.Checked = flag4;
				chkCh5.Checked = flag5;
				chkCh6.Checked = flag6;
				Application.DoEvents();
				while (true)
				{
					num2++;
					lblProgress.BackColor = Color.Red;
					if (!chkStop.Checked)
					{
						if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
						{
							if (chkCh1.Checked)
							{
								Thread.Sleep(num);
								ApplyUssdCodeOC_Mex_Accept(lblPort1);
								Application.DoEvents();
							}
							if (chkCh2.Checked)
							{
								Thread.Sleep(num);
								ApplyUssdCodeOC_Mex_Accept(lblPort2);
								Application.DoEvents();
							}
							if (chkCh3.Checked)
							{
								Thread.Sleep(num);
								ApplyUssdCodeOC_Mex_Accept(lblPort3);
								Application.DoEvents();
							}
							if (chkCh4.Checked)
							{
								Thread.Sleep(num);
								ApplyUssdCodeOC_Mex_Accept(lblPort4);
								Application.DoEvents();
							}
							if (chkCh5.Checked)
							{
								Thread.Sleep(num);
								ApplyUssdCodeOC_Mex_Accept(lblPort5);
								Application.DoEvents();
							}
							if (chkCh6.Checked)
							{
								Thread.Sleep(num);
								ApplyUssdCodeOC_Mex_Accept(lblPort6);
								Application.DoEvents();
							}
							Application.DoEvents();
							if (chkStop.Checked)
							{
								goto IL_0590;
							}
							if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
							{
								int num4 = (int)Math.Round(Conversion.Val(txtOCtopupDelayM2.Text));
								for (int i = 1; i <= num4; i++)
								{
									Thread.Sleep(250);
									Application.DoEvents();
									Thread.Sleep(250);
									Application.DoEvents();
									Thread.Sleep(250);
									Application.DoEvents();
									Thread.Sleep(250);
									Application.DoEvents();
								}
								if (num2 < 1)
								{
									continue;
								}
							}
							flag2 = ((flag2 & !txtRet02.Text.Contains("تم الايداع بنجاح")) ? true : false);
							flag3 = ((flag3 & !txtRet03.Text.Contains("تم الايداع بنجاح")) ? true : false);
							flag4 = ((flag4 & !txtRet04.Text.Contains("تم الايداع بنجاح")) ? true : false);
							flag5 = ((flag5 & !txtRet05.Text.Contains("تم الايداع بنجاح")) ? true : false);
							flag6 = ((flag6 & !txtRet06.Text.Contains("تم الايداع بنجاح")) ? true : false);
							if (num < 1000 && !unchecked(!flag2 && !flag3 && !flag4 && !flag5 && !flag6))
							{
								break;
							}
						}
						Application.DoEvents();
					}
					goto IL_0590;
					IL_0590:
					EnableCntl();
					lblProgress.BackColor = Color.LimeGreen;
					lblProgress.Text = "OK";
					return;
				}
				num += 500;
			}
		}
	}

	private void btnTayerCharge_Click(object sender, EventArgs e)
	{
		int num = 0;
		int num2 = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtOTyrPass.Text.Trim().Length != 4)
		{
			Interaction.MsgBox("ادخل باسورد اورنج هوا");
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Conversion.Val(txtTopUpOrangeValue.Text) <= 1.0)
		{
			Interaction.MsgBox("حدد مبلغ للشحن من فضلك");
			return;
		}
		if (lblNum1.Text.Length != 11)
		{
			Interaction.MsgBox("مشكلة بخط الهوا");
			chkStop.Checked = true;
			return;
		}
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		lblProgress.Text = "TopUp Orange Hwa ";
		Application.DoEvents();
		checked
		{
			int num3 = lstOCNumbers.Items.Count - 1;
			for (int i = 0; i <= num3; i++)
			{
				if (chkStop.Checked)
				{
					break;
				}
				ApplyUssdCodeOC_OrangeHawa(lblPort1, Conversions.ToString(lstOCNumbers.Items[i]), 1, Conversion.Val(txtTopUpOrangeValue.Text));
				lblOCDone.Text = Conversions.ToString(i + 1);
				Thread.Sleep(250);
				Application.DoEvents();
				Thread.Sleep(250);
				Application.DoEvents();
				Thread.Sleep(250);
				Application.DoEvents();
				Thread.Sleep(250);
			}
			EnableCntl();
			lblProgress.BackColor = Color.LimeGreen;
			lblProgress.Text = "OK";
		}
	}

	private void ApplyUssdCodeOC_OrangeHawa(Label Exxc, string UssdCommand, int EEFlage, double EEEvalue)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					if (Exxc.ForeColor == Color.White)
					{
						goto end_IL_0001;
					}
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					Application.DoEvents();
					if (UssdCommand.Trim().Length != 11)
					{
						lblProgress.Text = "Error in number  ";
						txtRet01.Text = "Error " + UssdCommand + "\r\n" + txtRet01.Text;
						break;
					}
					int num3 = 0;
					while (true)
					{
						IL_00b1:
						string text = serialPort.ReadExisting();
						Thread.Sleep(500);
						string text2 = "#106*1*" + UssdCommand + "*" + EEEvalue + "*1*1*" + txtOTyrPass.Text + "#";
						string text3 = "AT+CUSD=1,\"" + text2 + "\",15";
						serialPort.WriteLine(text3 + "\r");
						Thread.Sleep(500);
						int num4 = 0;
						while (true)
						{
							Application.DoEvents();
							num3 = checked(num3 + 1);
							Thread.Sleep(250);
							text = serialPort.ReadExisting();
							if (Information.IsNothing(text) && num3 < 10)
							{
								continue;
							}
							if (Information.IsNothing(text) && num3 >= 10)
							{
								break;
							}
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
							{
								txtInfo.Text = text + "\r\n" + txtInfo.Text;
							}
							Application.DoEvents();
							checked
							{
								if (text.Contains("+CUSD: "))
								{
									string text4 = text;
									int num5 = text.IndexOf("+CUSD: ");
									text4 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text4.IndexOf(",");
									string text5 = text4.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text5 = text5.Trim('"').Trim(',').Trim('"');
									if (text5.Length > 3)
									{
										string text6;
										if (Operators.CompareString(text5.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text5);
											text6 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text6 = encoding_mod.Decode7Bit(text5);
										}
										lblProgress.Text = text6;
										txtRet01.Text = text6 + "\r\n" + txtRet01.Text;
										Application.DoEvents();
										if (text6.Contains("طلبك تحت التنفيذ"))
										{
											txtRet01.Text = UssdCommand + " Done \r\n" + txtRet01.Text;
											txtRet01.Text = "********************************\r\n" + txtRet01.Text;
											break;
										}
										if (text6.Contains("our request is currently in progress"))
										{
											txtRet01.Text = UssdCommand + " Done \r\n" + txtRet01.Text;
											txtRet01.Text = "********************************\r\n" + txtRet01.Text;
											break;
										}
										if (text6.Contains("لم نتلقى اختيارك في المدة المحددة"))
										{
											goto IL_00b1;
										}
									}
								}
								num4++;
								if (num4 > 30)
								{
									break;
								}
							}
						}
						break;
					}
					break;
				}
				case 1131:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001_2;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				break;
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1131;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnOCMSeriesInput_Click(object sender, EventArgs e)
	{
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtOCPassMaster.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد اورنج ماستر");
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if ((Operators.CompareString(lblOCMMain.Text, lblNum1.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum2.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum3.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum4.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum5.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum6.Text, TextCompare: false) != 0))
		{
			Interaction.MsgBox("مشكلة بالاساسى");
			chkStop.Checked = true;
			return;
		}
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		lblProgress.Text = "Orange Input ";
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		ArrangOClinesMaster();
		Application.DoEvents();
		checked
		{
			if (chkCh2.Checked & ((Conversion.Val(lblBal2.Text) >= 100.0) | (Conversion.Val(txtOCInput.Text) >= 10.0)))
			{
				string ussdCommand = lblNum2.Text;
				int num;
				if (Conversion.Val(txtOCInput.Text) >= 10.0)
				{
					num = (int)Math.Round(Conversion.Val(txtOCInput.Text));
				}
				else
				{
					int num2 = (int)Conversion.Int(Conversion.Val(lblBal2.Text) * 0.01);
					if (num2 < 3)
					{
						num2 = 3;
					}
					num = (int)Math.Round(Conversion.Val(lblBal2.Text) - (double)num2 - 2.0);
				}
				lblProgress.BackColor = Color.Red;
				ApplyUssdCodeOC_Mex_Master_input(lblPort1, ussdCommand, 1, num);
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
			}
			if (chkCh3.Checked & ((Conversion.Val(lblBal3.Text) >= 100.0) | (Conversion.Val(txtOCInput.Text) >= 10.0)))
			{
				string ussdCommand = lblNum3.Text;
				int num;
				if (Conversion.Val(txtOCInput.Text) >= 10.0)
				{
					num = (int)Math.Round(Conversion.Val(txtOCInput.Text));
				}
				else
				{
					int num2 = (int)Conversion.Int(Conversion.Val(lblBal3.Text) * 0.01);
					if (num2 < 3)
					{
						num2 = 3;
					}
					num = (int)Math.Round(Conversion.Val(lblBal3.Text) - (double)num2 - 1.0);
				}
				ApplyUssdCodeOC_Mex_Master_input(lblPort1, ussdCommand, 1, num);
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
			}
			if (chkCh4.Checked & ((Conversion.Val(lblBal4.Text) >= 100.0) | (Conversion.Val(txtOCInput.Text) >= 10.0)))
			{
				string ussdCommand = lblNum4.Text;
				int num;
				if (Conversion.Val(txtOCInput.Text) >= 10.0)
				{
					num = (int)Math.Round(Conversion.Val(txtOCInput.Text));
				}
				else
				{
					int num2 = (int)Conversion.Int(Conversion.Val(lblBal4.Text) * 0.01);
					if (num2 < 3)
					{
						num2 = 3;
					}
					num = (int)Math.Round(Conversion.Val(lblBal4.Text) - (double)num2 - 1.0);
				}
				ApplyUssdCodeOC_Mex_Master_input(lblPort1, ussdCommand, 1, num);
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
			}
			if (chkCh5.Checked & ((Conversion.Val(lblBal5.Text) >= 100.0) | (Conversion.Val(txtOCInput.Text) >= 10.0)))
			{
				string ussdCommand = lblNum5.Text;
				int num;
				if (Conversion.Val(txtOCInput.Text) >= 10.0)
				{
					num = (int)Math.Round(Conversion.Val(txtOCInput.Text));
				}
				else
				{
					int num2 = (int)Conversion.Int(Conversion.Val(lblBal5.Text) * 0.01);
					if (num2 < 3)
					{
						num2 = 3;
					}
					num = (int)Math.Round(Conversion.Val(lblBal5.Text) - (double)num2 - 1.0);
				}
				ApplyUssdCodeOC_Mex_Master_input(lblPort1, ussdCommand, 1, num);
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
			}
			if (chkCh6.Checked & ((Conversion.Val(lblBal6.Text) >= 100.0) | (Conversion.Val(txtOCInput.Text) >= 10.0)))
			{
				string ussdCommand = lblNum2.Text;
				int num;
				if (Conversion.Val(txtOCInput.Text) >= 10.0)
				{
					num = (int)Math.Round(Conversion.Val(txtOCInput.Text));
				}
				else
				{
					int num2 = (int)Conversion.Int(Conversion.Val(lblBal6.Text) * 0.01);
					if (num2 < 3)
					{
						num2 = 3;
					}
					num = (int)Math.Round(Conversion.Val(lblBal6.Text) - (double)num2 - 1.0);
				}
				ApplyUssdCodeOC_Mex_Master_input(lblPort1, ussdCommand, 1, num);
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
				Thread.Sleep(500);
				Application.DoEvents();
			}
			EnableCntl();
			lblProgress.BackColor = Color.LimeGreen;
			lblProgress.Text = "OK";
		}
	}

	private void btnOCMSerieAcceptInput_Click(object sender, EventArgs e)
	{
		int num = 100;
		int num2 = 0;
		int num3 = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtOCPass.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد اورنج كاش");
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		lblProgress.Text = "Orange Input ";
		if (chkStop.Checked)
		{
			return;
		}
		btnUssdReset_Click(RuntimeHelpers.GetObjectValue(sender), e);
		bool flag = chkCh1.Checked;
		bool flag2 = chkCh2.Checked;
		bool flag3 = chkCh3.Checked;
		bool flag4 = chkCh4.Checked;
		bool flag5 = chkCh5.Checked;
		bool flag6 = chkCh6.Checked;
		while (true)
		{
			chkCh1.Checked = flag;
			chkCh2.Checked = flag2;
			chkCh3.Checked = flag3;
			chkCh4.Checked = flag4;
			chkCh5.Checked = flag5;
			chkCh6.Checked = flag6;
			Application.DoEvents();
			while (true)
			{
				num2 = checked(num2 + 1);
				lblProgress.BackColor = Color.Red;
				if (!chkStop.Checked)
				{
					if (!(!chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						if (chkCh2.Checked)
						{
							Thread.Sleep(num);
							ApplyUssdCodeOC_Mex_Accept_input(lblPort2);
							Application.DoEvents();
						}
						if (chkCh3.Checked)
						{
							Thread.Sleep(num);
							ApplyUssdCodeOC_Mex_Accept_input(lblPort3);
							Application.DoEvents();
						}
						if (chkCh4.Checked)
						{
							Thread.Sleep(num);
							ApplyUssdCodeOC_Mex_Accept_input(lblPort4);
							Application.DoEvents();
						}
						if (chkCh5.Checked)
						{
							Thread.Sleep(num);
							ApplyUssdCodeOC_Mex_Accept_input(lblPort5);
							Application.DoEvents();
						}
						if (chkCh6.Checked)
						{
							Thread.Sleep(num);
							ApplyUssdCodeOC_Mex_Accept_input(lblPort6);
							Application.DoEvents();
						}
						Application.DoEvents();
						if (chkStop.Checked)
						{
							goto IL_0493;
						}
						if (!(!chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) && num2 < 1)
						{
							continue;
						}
						flag2 = ((flag2 & !txtRet02.Text.Contains("الرقم السري صحيح")) ? true : false);
						flag3 = ((flag3 & !txtRet03.Text.Contains("الرقم السري صحيح")) ? true : false);
						flag4 = ((flag4 & !txtRet04.Text.Contains("الرقم السري صحيح")) ? true : false);
						flag5 = ((flag5 & !txtRet05.Text.Contains("الرقم السري صحيح")) ? true : false);
						flag6 = ((flag6 & !txtRet06.Text.Contains("الرقم السري صحيح")) ? true : false);
						if (num < 1000 && !(!flag2 && !flag3 && !flag4 && !flag5 && !flag6))
						{
							break;
						}
					}
					Application.DoEvents();
				}
				goto IL_0493;
				IL_0493:
				EnableCntl();
				lblProgress.BackColor = Color.LimeGreen;
				lblProgress.Text = "OK";
				return;
			}
			num = checked(num + 500);
		}
	}

	private void btnVV_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 345:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0033;
						case 4:
							goto IL_005b;
						case 5:
							goto IL_0083;
						case 6:
							goto IL_00ab;
						case 7:
							goto IL_00d3;
						case 8:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 9:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0083:
					num2 = 5;
					MainTC.TabPages.Remove(MainTC.TabPages["tabOCMaster"]);
					goto IL_00ab;
					IL_00ab:
					num2 = 6;
					MainTC.TabPages.Remove(MainTC.TabPages["tabOCSetup"]);
					goto IL_00d3;
					IL_005b:
					num2 = 4;
					MainTC.TabPages.Remove(MainTC.TabPages["tabOCGifts"]);
					goto IL_0083;
					IL_00d3:
					num2 = 7;
					MainTC.TabPages.Remove(MainTC.TabPages["tabOrngInv"]);
					break;
					IL_000b:
					num2 = 2;
					MainTC.TabPages.Remove(MainTC.TabPages["tabOcash"]);
					goto IL_0033;
					IL_0033:
					num2 = 3;
					MainTC.TabPages.Remove(MainTC.TabPages["tabOCCon"]);
					goto IL_005b;
					end_IL_0001_2:
					break;
				}
				num2 = 8;
				MainTC.TabPages.Remove(MainTC.TabPages["tabEzoo"]);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 345;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void BtnOO_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 933:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0033;
						case 4:
							goto IL_005b;
						case 5:
							goto IL_0083;
						case 6:
							goto IL_00ab;
						case 7:
							goto IL_00d3;
						case 8:
							goto IL_00fb;
						case 9:
							goto IL_0123;
						case 10:
							goto IL_014c;
						case 11:
							goto IL_0175;
						case 12:
							goto IL_019e;
						case 13:
							goto IL_01c7;
						case 14:
							goto IL_01f0;
						case 15:
							goto IL_0219;
						case 16:
							goto IL_0242;
						case 17:
							goto IL_026b;
						case 18:
							goto IL_0294;
						case 19:
							goto IL_02bd;
						case 20:
							goto IL_02e6;
						case 21:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 22:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0294:
					num2 = 18;
					MainTC.TabPages.Remove(MainTC.TabPages["TabPage9"]);
					goto IL_02bd;
					IL_02bd:
					num2 = 19;
					MainTC.TabPages.Remove(MainTC.TabPages["TabPage10"]);
					goto IL_02e6;
					IL_026b:
					num2 = 17;
					MainTC.TabPages.Remove(MainTC.TabPages["TabPage8"]);
					goto IL_0294;
					IL_02e6:
					num2 = 20;
					MainTC.TabPages.Remove(MainTC.TabPages["tabEzoo"]);
					break;
					IL_000b:
					num2 = 2;
					MainTC.TabPages.Remove(MainTC.TabPages["VodaCashPAnel"]);
					goto IL_0033;
					IL_0033:
					num2 = 3;
					MainTC.TabPages.Remove(MainTC.TabPages["tabvc2"]);
					goto IL_005b;
					IL_005b:
					num2 = 4;
					MainTC.TabPages.Remove(MainTC.TabPages["tabpoints"]);
					goto IL_0083;
					IL_0083:
					num2 = 5;
					MainTC.TabPages.Remove(MainTC.TabPages["tabON"]);
					goto IL_00ab;
					IL_00ab:
					num2 = 6;
					MainTC.TabPages.Remove(MainTC.TabPages["tab365_2"]);
					goto IL_00d3;
					IL_00d3:
					num2 = 7;
					MainTC.TabPages.Remove(MainTC.TabPages["TabPage4"]);
					goto IL_00fb;
					IL_00fb:
					num2 = 8;
					MainTC.TabPages.Remove(MainTC.TabPages["TabPage12"]);
					goto IL_0123;
					IL_0123:
					num2 = 9;
					MainTC.TabPages.Remove(MainTC.TabPages["TabPage5"]);
					goto IL_014c;
					IL_014c:
					num2 = 10;
					MainTC.TabPages.Remove(MainTC.TabPages["TabPage14"]);
					goto IL_0175;
					IL_0175:
					num2 = 11;
					MainTC.TabPages.Remove(MainTC.TabPages["TabPage13"]);
					goto IL_019e;
					IL_019e:
					num2 = 12;
					MainTC.TabPages.Remove(MainTC.TabPages["TabPage6"]);
					goto IL_01c7;
					IL_01c7:
					num2 = 13;
					MainTC.TabPages.Remove(MainTC.TabPages["tab365"]);
					goto IL_01f0;
					IL_01f0:
					num2 = 14;
					MainTC.TabPages.Remove(MainTC.TabPages["TabPage7"]);
					goto IL_0219;
					IL_0219:
					num2 = 15;
					MainTC.TabPages.Remove(MainTC.TabPages["TabPage2"]);
					goto IL_0242;
					IL_0242:
					num2 = 16;
					MainTC.TabPages.Remove(MainTC.TabPages["TabPage3"]);
					goto IL_026b;
					end_IL_0001_2:
					break;
				}
				num2 = 21;
				MainTC.TabPages.Remove(MainTC.TabPages["tabTayer"]);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 933;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void lblOCMain_Click(object sender, EventArgs e)
	{
		txtOCNextMain.Text = lblOCMain.Text;
	}

	private void btnClearOC_Click_1(object sender, EventArgs e)
	{
		lstOCNumbers.Items.Clear();
	}

	private void txtOCchargeNum1_TextChanged(object sender, EventArgs e)
	{
	}

	private string ApplyUssdOCGIFTS(Label Exxc, Label EEgifttotal)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num3 = default(int);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						num3 = 0;
						string text = serialPort.ReadExisting();
						EEgifttotal.Text = "";
						while (true)
						{
							Thread.Sleep(1000);
							string ussdCommandFull = "#177#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							double num4 = 0.0;
							while (true)
							{
								Application.DoEvents();
								Thread.Sleep(700);
								text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("+CUSD:"))
								{
									int num5 = ((!text.Contains("+CUSD: 0")) ? text.IndexOf("+CUSD: 1") : text.IndexOf("+CUSD: 0"));
									string text2 = text.Substring(num5 + 9, text.Length - num5 - 9).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text2.IndexOf(",");
									string text3 = text2.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text3 = text3.Trim('"').Trim(',').Trim('"');
									string eEstr;
									if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text3);
										eEstr = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										eEstr = encoding_mod.Decode7Bit(text3);
									}
									OutBoxDrop(Exxc, eEstr);
									break;
								}
								if (!(text.Contains("unknown") | text.Contains("+CUSD: 2") | text.Contains("retry operation")) || num3 > 4)
								{
									Application.DoEvents();
									num4 += 1.0;
									if (!(num4 <= 30.0))
									{
										break;
									}
									continue;
								}
								goto IL_02a9;
							}
							break;
							IL_02a9:
							num3++;
						}
						break;
					}
					case 770:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					result = Conversions.ToString(num3);
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 770;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void btnOCTopUpMulti_Click(object sender, EventArgs e)
	{
		int num = 0;
		int num2 = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtOCPassMaster.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد اورنج ماستر");
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Conversion.Val(txtTopUpOrangeValue.Text) < 5.0)
		{
			Interaction.MsgBox("حدد مبلغ للشحن من فضلك");
			return;
		}
		if ((Operators.CompareString(lblOCMMain.Text, lblNum1.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum2.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum3.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum4.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum5.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum6.Text, TextCompare: false) != 0))
		{
			Interaction.MsgBox("مشكلة بخط الكاش");
			chkStop.Checked = true;
			return;
		}
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		Application.DoEvents();
		ArrangOClinesMaster();
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		lblProgress.Text = "TopUp ";
		txtRet02.Text = "";
		Application.DoEvents();
		checked
		{
			int num3 = lstOCNumbers.Items.Count - 1;
			for (int i = 0; i <= num3; i++)
			{
				lblProgress.BackColor = Color.Red;
				if (chkStop.Checked)
				{
					break;
				}
				OCchargeprocessState = false;
				SetUssdOrderVcashTraVXPVaryGiftOrangeCash2(lblPort1, Conversions.ToString(lstOCNumbers.Items[i]), (int)Math.Round(Conversion.Val(txtTopUpOrangeValue.Text)));
				if (!OCchargeprocessState)
				{
					txtRet02.Text = Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(lstOCNumbers.Items[i], "\r\n"), txtRet02.Text));
					Application.DoEvents();
				}
				lblOCDone.Text = Conversions.ToString(i + 1);
				int num4 = (int)Math.Round(Conversion.Val(txtOCtopupDelayM.Text));
				for (int j = 1; j <= num4; j++)
				{
					Thread.Sleep(250);
					Application.DoEvents();
					Thread.Sleep(250);
					Application.DoEvents();
					Thread.Sleep(250);
					Application.DoEvents();
					Thread.Sleep(250);
					Application.DoEvents();
				}
			}
			EnableCntl();
			lblProgress.BackColor = Color.LimeGreen;
			lblProgress.Text = "OK";
		}
	}

	private void btnAddNumbersToOC_Click(object sender, EventArgs e)
	{
		MyProject.Forms.frmAddVCNums.Show();
	}

	private void btnTrans100_Click(object sender, EventArgs e)
	{
		ArrangOClines();
		Application.DoEvents();
		lblProgress.BackColor = Color.Red;
		chkCh1.Checked = false;
		if (chkStop.Checked)
		{
			return;
		}
		btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		lblProgress.BackColor = Color.Red;
		txtLoopFSDOCPAYSr.Text = "1";
		ckOCSub.Checked = true;
		txtOCSub.Text = "1";
		if (chkStop.Checked)
		{
			return;
		}
		btnOCSeries_Click(RuntimeHelpers.GetObjectValue(sender), e);
		if (chkStop.Checked)
		{
			return;
		}
		btnOCSeries_Click(RuntimeHelpers.GetObjectValue(sender), e);
		txtOCTransferAll.Text = lblNum1.Text;
		btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		btnOCGetBal_Click(RuntimeHelpers.GetObjectValue(sender), e);
		if (!chkStop.Checked)
		{
			btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
			txtOCTransferSub.Text = "2";
			btnOCTransferAll_Click(RuntimeHelpers.GetObjectValue(sender), e);
			lblOCMain.Text = txtOCTransferAll.Text;
			if (!chkStop.Checked)
			{
				lblProgress.Text = "DONE";
				lblProgress.BackColor = Color.LimeGreen;
			}
		}
	}

	private void btnTrans1000_Click(object sender, EventArgs e)
	{
		lblProgress.BackColor = Color.Red;
		checked
		{
			int num = (int)Math.Round(Conversion.Val(txtDelayToGet58.Text));
			for (int i = 1; i <= num; i++)
			{
				lblProgress.Text = "Waiting .";
				Application.DoEvents();
				Thread.Sleep(250);
				lblProgress.Text = "Waiting ..";
				Application.DoEvents();
				Thread.Sleep(250);
				lblProgress.Text = "Waiting ...";
				Application.DoEvents();
				Thread.Sleep(250);
				lblProgress.Text = "Waiting ....";
				Application.DoEvents();
				Thread.Sleep(250);
				Application.DoEvents();
			}
			btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
			btnOCApply58_Click(RuntimeHelpers.GetObjectValue(sender), e);
			if (!chkStop.Checked)
			{
				btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
			}
			lblProgress.Text = "DONE";
		}
	}

	private void btnTranstop_Click(object sender, EventArgs e)
	{
		lblProgress.BackColor = Color.Red;
		btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		btnOCGetBal_Click(RuntimeHelpers.GetObjectValue(sender), e);
		lblProgress.BackColor = Color.Red;
		btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		ckOCBalWithBack.Checked = false;
		txtOCTopValue.Text = "0";
		if (!chkStop.Checked)
		{
			btnOCTopup_Click(RuntimeHelpers.GetObjectValue(sender), e);
			btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		}
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "DONE";
	}

	private void ckbtnOCMAuto_CheckedChanged(object sender, EventArgs e)
	{
		setcheckSatus();
	}

	private void setcheckSatus()
	{
		lblLastCheck.Text = "";
		if (ckbtnOCGiftsCheck.Checked)
		{
			lblLastCheck.Text = "check offer OC\r\n" + lblLastCheck.Text;
		}
		if (ckbtnOCGiftsCheckConf.Checked)
		{
			lblLastCheck.Text = "Confirm offer OC\r\n" + lblLastCheck.Text;
		}
		if (ckbtnOCApply58.Checked)
		{
			lblLastCheck.Text = "58 offer OC\r\n" + lblLastCheck.Text;
		}
		if (ckbtnOCMSeries.Checked)
		{
			lblLastCheck.Text = "ايداع\r\n" + lblLastCheck.Text;
		}
		if (ckbtnOCMSerieAccept.Checked)
		{
			lblLastCheck.Text = "تاكيد ايداع\r\n" + lblLastCheck.Text;
		}
		if (ckOCEditPass.Checked)
		{
			lblLastCheck.Text = "change Password OC\r\n" + lblLastCheck.Text;
		}
		if (ckbtnOCSeries.Checked)
		{
			lblLastCheck.Text = "تحويل متتالىOC\r\n" + lblLastCheck.Text;
		}
		if (ckbtnOCTransferAll.Checked)
		{
			lblLastCheck.Text = " OCتحويل كل الكاش\r\n" + lblLastCheck.Text;
		}
		if (ckbtnOCGetBal.Checked)
		{
			lblLastCheck.Text = "اورنج رصيد\r\n" + lblLastCheck.Text;
		}
		if (ckbtnOCTopup.Checked)
		{
			lblLastCheck.Text = "TopUp\r\n" + lblLastCheck.Text;
		}
		if (ckbtnTrans100.Checked)
		{
			lblLastCheck.Text = "Trans100\r\n" + lblLastCheck.Text;
		}
		if (ckbtnTrans1000.Checked)
		{
			lblLastCheck.Text = "Trans1000\r\n" + lblLastCheck.Text;
		}
		if (ckbtnTranstop.Checked)
		{
			lblLastCheck.Text = "TopAll offer\r\n" + lblLastCheck.Text;
		}
		if (ckbtnGetNormalBal.Checked)
		{
			lblLastCheck.Text = "رصيد عادى\r\n" + lblLastCheck.Text;
		}
		if (ckbtnMacro.Checked)
		{
			lblLastCheck.Text = "Normal Ussd\r\n" + lblLastCheck.Text;
		}
		if (ckbtnOCMAuto.Checked)
		{
			lblLastCheck.Text = "Auto Input\r\n" + lblLastCheck.Text;
		}
		if (chAutoGooo.Checked)
		{
			lblLastCheck.Text = "فودافون متتالى\r\n" + lblLastCheck.Text;
		}
		if (chAutoGooo2.Checked)
		{
			lblLastCheck.Text = "فودافون رصيد\r\n" + lblLastCheck.Text;
		}
		if (chkAutoTransferCash.Checked)
		{
			lblLastCheck.Text = "تحويل كامل مبلغ الكاش\r\n" + lblLastCheck.Text;
		}
		if (chkAutoTransferNrm.Checked)
		{
			lblLastCheck.Text = "تحويل كامل الرصيد العادى\r\n" + lblLastCheck.Text;
		}
		if (ckbtnVodaAuto365.Checked)
		{
			lblLastCheck.Text = "تشغيل تلقائى كامل voda\r\n" + lblLastCheck.Text;
		}
		if (ckbtnVodaCashFreeTransfer.Checked)
		{
			lblLastCheck.Text = "فودا للتحويل مجانى\r\n" + lblLastCheck.Text;
		}
		if (ckbtnOCFreeTransfer.Checked)
		{
			lblLastCheck.Text = "اورنج للتحويل مجانى\r\n" + lblLastCheck.Text;
		}
	}

	private void btnGetNormalBal_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 142:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_001e;
						case 4:
							goto IL_0031;
						case 5:
							goto IL_003a;
						case 6:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 7:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_001e:
					num2 = 3;
					lblProgress.Text = "check";
					goto IL_0031;
					IL_0031:
					num2 = 4;
					SetUssdGetOrangeNormalBal();
					goto IL_003a;
					IL_000b:
					num2 = 2;
					lblProgress.BackColor = Color.Red;
					goto IL_001e;
					IL_003a:
					num2 = 5;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 6;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 142;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdGetOrangeNormalBal()
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 725:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
						case 21:
							goto IL_0010;
						case 4:
							goto IL_0016;
						case 6:
							goto IL_007c;
						case 7:
							goto IL_00ae;
						case 8:
							goto IL_00c3;
						case 9:
							goto IL_00f5;
						case 10:
							goto IL_010b;
						case 11:
							goto IL_013e;
						case 12:
							goto IL_0154;
						case 13:
							goto IL_0187;
						case 14:
							goto IL_019d;
						case 15:
							goto IL_01d0;
						case 16:
							goto IL_01e6;
						case 17:
							goto IL_0219;
						case 18:
							goto IL_022f;
						case 20:
							goto IL_0245;
						case 5:
						case 19:
						case 22:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 23:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0219:
					num2 = 17;
					SetUssdGetOrangeNormalBalXX(lblPort6, lblGifttotal6);
					goto IL_022f;
					IL_022f:
					num2 = 18;
					if (chkStop.Checked)
					{
						break;
					}
					goto IL_0245;
					IL_01e6:
					num2 = 16;
					if ((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_0219;
					}
					goto IL_022f;
					IL_0245:
					num2 = 20;
					if (num5 > 6)
					{
						break;
					}
					goto IL_0010;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_0010;
					IL_0010:
					num2 = 3;
					num5 = checked(num5 + 1);
					goto IL_0016;
					IL_0016:
					num2 = 4;
					if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
					{
						break;
					}
					goto IL_007c;
					IL_007c:
					num2 = 6;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_00ae;
					}
					goto IL_00c3;
					IL_00ae:
					num2 = 7;
					SetUssdGetOrangeNormalBalXX(lblPort1, lblGifttotal1);
					goto IL_00c3;
					IL_00c3:
					num2 = 8;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_00f5;
					}
					goto IL_010b;
					IL_00f5:
					num2 = 9;
					SetUssdGetOrangeNormalBalXX(lblPort2, lblGifttotal2);
					goto IL_010b;
					IL_010b:
					num2 = 10;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_013e;
					}
					goto IL_0154;
					IL_013e:
					num2 = 11;
					SetUssdGetOrangeNormalBalXX(lblPort3, lblGifttotal3);
					goto IL_0154;
					IL_0154:
					num2 = 12;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0187;
					}
					goto IL_019d;
					IL_0187:
					num2 = 13;
					SetUssdGetOrangeNormalBalXX(lblPort4, lblGifttotal4);
					goto IL_019d;
					IL_019d:
					num2 = 14;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_01d0;
					}
					goto IL_01e6;
					IL_01d0:
					num2 = 15;
					SetUssdGetOrangeNormalBalXX(lblPort5, lblGifttotal5);
					goto IL_01e6;
					end_IL_0001_2:
					break;
				}
				num2 = 22;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 725;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string SetUssdGetOrangeNormalBalXX(Label Exxc, Label EEgifttotal)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num3 = default(int);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						num3 = 0;
						string text = serialPort.ReadExisting();
						EEgifttotal.Text = "";
						while (true)
						{
							Thread.Sleep(1000);
							string ussdCommandFull = "#100#";
							string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							while (true)
							{
								double num4 = 0.0;
								while (true)
								{
									Application.DoEvents();
									Thread.Sleep(700);
									text = serialPort.ReadExisting();
									if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
									{
										txtInfo.Text = text + "\r\n" + txtInfo.Text;
									}
									if (text.Contains("+CUSD:"))
									{
										int num5 = ((!text.Contains("+CUSD: 0")) ? text.IndexOf("+CUSD: 1") : text.IndexOf("+CUSD: 0"));
										string text2 = text.Substring(num5 + 9, text.Length - num5 - 9).Trim().Trim('o')
											.Trim('\r')
											.Trim('\r')
											.Trim();
										num5 = text2.IndexOf(",");
										string text3 = text2.Substring(0, num5).Trim().Trim('"')
											.Trim(',')
											.Trim('"');
										text3 = text3.Trim('"').Trim(',').Trim('"');
										string text4;
										if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text3);
											text4 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text4 = encoding_mod.Decode7Bit(text3);
										}
										OutBoxDrop(Exxc, text4);
										if (text4.Contains("معلومات عن الرص") | text4.Contains("لاستعلام عن الرصي") | text4.Contains("تعلام عن رصيدك سيتم خصم 4"))
										{
											break;
										}
										if (text4.Contains("رصيدك") | text4.Contains("عفوا\u0651 لا يمكننا استكمال "))
										{
											DisablePort(Exxc);
											Application.DoEvents();
											goto end_IL_0001;
										}
										Application.DoEvents();
									}
									if ((text.Contains("unknown") | text.Contains("+CUSD: 2") | text.Contains("retry operation")) && num3 <= 4)
									{
										goto end_IL_0088;
									}
									Application.DoEvents();
									num4 += 1.0;
									if (!(num4 <= 30.0))
									{
										goto end_IL_0001;
									}
								}
								ussdCommandFull = "1";
								commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
								serialPort.WriteLine(commandCode + "\r");
								Thread.Sleep(500);
								continue;
								end_IL_0088:
								break;
							}
							num3++;
						}
					}
					case 918:
						{
							num = -1;
							switch (num2)
							{
							case 2:
								break;
							default:
								goto end_IL_0001_2;
							}
							break;
						}
						end_IL_0001:
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					result = Conversions.ToString(num3);
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 918;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void btnTal2aTransferFromOrange_Click(object sender, EventArgs e)
	{
		if (Conversion.Val(txtTl2aOrangeValue.Text) < 1.0)
		{
			Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
			return;
		}
		if ((Operators.CompareString(lblNum1.Text.Trim().Substring(0, 3), "011", TextCompare: false) == 0) & (Operators.CompareString(lblNum2.Text.Trim().Substring(0, 3), "010", TextCompare: false) == 0))
		{
			if (txtPassEC.Text.Trim().Length != 6)
			{
				Interaction.MsgBox("ادخل باسورد الكاش");
				return;
			}
			btnTal2aTransferFromOrange.Enabled = false;
			ApplyUssdCodeEC_Mex(lblPort1, lblNum2.Text, Conversion.Val(txtTl2aOrangeValue.Text), TempCheck, TempCheck);
			Application.DoEvents();
		}
		btnTal2aTransferFromOrange.Enabled = true;
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btnTal2aGetBal_Click(object sender, EventArgs e)
	{
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		ArrangTal2a();
		if (Operators.CompareString(lblNum1.Text.Trim().Substring(0, 3), "011", TextCompare: false) == 0)
		{
			if (txtPassEC.Text.Trim().Length != 6)
			{
				Interaction.MsgBox("ادخل باسورد الكاش");
				return;
			}
			btnTal2aGetBal.Enabled = false;
			GetBalEC(lblPort1);
			Thread.Sleep(1000);
			lblBal1.Text = GetBalECX(lblPort1);
			Application.DoEvents();
		}
		if (!chkStop.Checked && Operators.CompareString(lblNum2.Text.Trim().Substring(0, 3), "010", TextCompare: false) == 0)
		{
			btnTal2aGetBal.Enabled = false;
			GetBalVC(lblPort2);
			lblBal1.Text = GetBalVCX(lblPort2);
			Application.DoEvents();
		}
		btnTal2aGetBal.Enabled = true;
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btnTal2aTransferVoda_Click(object sender, EventArgs e)
	{
		if (Conversion.Val(txtTl2aVodaValue.Text) < 5.0)
		{
			Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
			return;
		}
		if (txtTl2aToVodaNumber.Text.Length != 11)
		{
			Interaction.MsgBox("حدد رقم المرسل الية");
			return;
		}
		ArrangTal2a();
		ResetUssdCodeVC(lblPort2);
		ResetUssdCode(lblPort2);
		if (Operators.CompareString(lblNum2.Text.Trim().Substring(0, 3), "010", TextCompare: false) == 0)
		{
			btnTal2aTransferVoda.Enabled = false;
			ApplyUssdCodeVC_Tal2a(lblPort2, txtTl2aToVodaNumber.Text.Trim(), chkCh2, 0);
			Application.DoEvents();
		}
		btnTal2aTransferVoda.Enabled = true;
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void ApplyUssdCodeVC_Tal2a(Label Exxc, string UssdCommand, CheckBox ExxcArd, int EEFlage)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text);
						Application.DoEvents();
						string text = serialPort.ReadExisting();
						AutoRes = 0;
						int num3 = 0;
						num3++;
						string ussdCommandFull = "*9*7*" + UssdCommand + "*" + txtTl2aVodaValue.Text + "#";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(1000);
						Application.DoEvents();
						lblProgress.Text = "Send " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num3) + ")";
						while (true)
						{
							Application.DoEvents();
							int num4 = 0;
							while (true)
							{
								Thread.Sleep(800);
								text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("+CUSD: "))
								{
									string text2 = text;
									int num5 = text.IndexOf("+CUSD: ");
									text2 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num5 = text2.IndexOf(",");
									string text3 = text2.Substring(0, num5).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text3 = text3.Trim('"').Trim(',').Trim('"');
									if (text3.Length > 3)
									{
										string text4;
										if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
										{
											byte[] bytes = encoding_mod.StrToByteArray(text3);
											text4 = Encoding.BigEndianUnicode.GetString(bytes);
										}
										else
										{
											text4 = encoding_mod.Decode7Bit(text3);
										}
										OutBoxDrop(Exxc, text4);
										if (text4.Contains("تم تحويل"))
										{
											ussdCommandFull = "9";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(1000);
											switch (EEFlage)
											{
											case 0:
												ExxcArd.Checked = false;
												break;
											case 1:
												ExxcArd.Checked = true;
												DisablePort(Exxc);
												break;
											}
											Application.DoEvents();
											break;
										}
										if (text4.Contains("قد تم تجاوز الحد الأقصى للمعاملات"))
										{
											Application.DoEvents();
											chkStop.Checked = true;
											break;
										}
										if (text4.Contains("لا يوجد رصيد كاف في حسابك. يمكنك تحويل"))
										{
											ussdCommandFull = "1";
											commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
											serialPort.WriteLine(commandCode + "\r");
											Thread.Sleep(800);
											Application.DoEvents();
											break;
										}
										if (text4.Contains("لاستخدام فودافون كاش انشئ رقم سري") | text4.Contains("بعد خصم 15.0 ج رسوم"))
										{
											Application.DoEvents();
											chkStop.Checked = true;
											break;
										}
										if (text4.Contains("لا يمكن إتمام العملية") | text4.Contains("غير صحيح"))
										{
											Application.DoEvents();
											break;
										}
									}
								}
								if (text.Contains("062A06450020062A062D0648064A06440020"))
								{
									ussdCommandFull = "9";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									Thread.Sleep(1000);
									OutBoxDrop(Exxc, "تم التحويل بنجاح");
									switch (EEFlage)
									{
									case 0:
										ExxcArd.Checked = false;
										break;
									case 1:
										ExxcArd.Checked = true;
										DisablePort(Exxc);
										break;
									}
									Application.DoEvents();
									break;
								}
								if (text.Contains("064406270020064A0648062C062F002006310635"))
								{
									switch (EEFlage)
									{
									case 0:
										DisablePort(Exxc);
										break;
									case 1:
										ExxcArd.Checked = true;
										DisablePort(Exxc);
										break;
									}
									OutBoxDrop(Exxc, "لا يوجد رصيد كافى للتحويل");
									Application.DoEvents();
									break;
								}
								if (!text.Contains("0623062F062E06440020062706440631064206450020062706"))
								{
									if (text.Contains("+CUSD: 5") | text.Contains("unknown") | text.Contains("00530065007200760069006300650020006900730020006E006F00740020006100760061006900") | text.Contains("retry operation") | text.Contains("0053006500720076006900630065002000690073002000630075007200720065006E0074006C007900200075006E0061007600610069006C00610062006C0065"))
									{
										Application.DoEvents();
										break;
									}
									Application.DoEvents();
									if (chkStop.Checked)
									{
										break;
									}
									num4++;
									if (num4 > 10)
									{
										object obj = txtPass.Text ?? "";
										if (obj == null)
										{
											obj = "";
										}
										ussdCommandFull = (string)obj;
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(1000);
										break;
									}
									continue;
								}
								goto IL_0558;
							}
							break;
							IL_0558:
							object obj2 = txtPass.Text ?? "";
							if (obj2 == null)
							{
								obj2 = "";
							}
							ussdCommandFull = (string)obj2;
							commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(2000);
							Application.DoEvents();
						}
						break;
					}
					case 1660:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001_2;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj3) when (obj3 is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj3);
				try0001_dispatch = 1660;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnVodaAuto365_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		int num6 = default(int);
		int num7 = default(int);
		int num8 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
						ProjectData.ClearProjectError();
						num3 = -2;
						goto IL_000b;
					case 5000:
						{
							num = num2;
							switch ((num3 <= -2) ? 1 : num3)
							{
							case 1:
								break;
							default:
								goto end_IL_0001;
							}
							int num4 = unchecked(num + 1);
							num = 0;
							switch (num4)
							{
							case 1:
								break;
							case 2:
								goto IL_000b;
							case 3:
								goto IL_0010;
							case 4:
								goto IL_0015;
							case 5:
								goto IL_0031;
							case 6:
								goto IL_0039;
							case 7:
								goto IL_0055;
							case 8:
								goto IL_005d;
							case 9:
								goto IL_0079;
							case 10:
								goto IL_0082;
							case 11:
								goto IL_009f;
							case 12:
								goto IL_00a8;
							case 13:
								goto IL_00c5;
							case 14:
								goto IL_00ce;
							case 15:
								goto IL_00eb;
							case 16:
								goto IL_00f4;
							case 17:
							case 51:
								goto IL_00fe;
							case 18:
								goto IL_0112;
							case 19:
								goto IL_0126;
							case 20:
								goto IL_012f;
							case 21:
								goto IL_0140;
							case 23:
								goto IL_0159;
							case 24:
								goto IL_0162;
							case 25:
								goto IL_0173;
							case 26:
								goto IL_017c;
							case 27:
								goto IL_018d;
							case 28:
								goto IL_0192;
							case 29:
								goto IL_01ae;
							case 30:
								goto IL_01cc;
							case 31:
								goto IL_01d3;
							case 32:
								goto IL_01ef;
							case 33:
								goto IL_020d;
							case 34:
								goto IL_0214;
							case 35:
								goto IL_0230;
							case 36:
								goto IL_024e;
							case 37:
								goto IL_0255;
							case 38:
								goto IL_0271;
							case 39:
								goto IL_028f;
							case 40:
								goto IL_0296;
							case 41:
								goto IL_02b2;
							case 42:
								goto IL_02d0;
							case 43:
								goto IL_02d7;
							case 44:
								goto IL_02f3;
							case 45:
								goto IL_0311;
							case 46:
								goto IL_0318;
							case 48:
								goto IL_0331;
							case 50:
								goto IL_0344;
							case 49:
							case 52:
							case 201:
								goto IL_0359;
							case 53:
								goto IL_035f;
							case 54:
								goto IL_0373;
							case 55:
								goto IL_0387;
							case 56:
								goto IL_03a6;
							case 58:
							case 59:
								goto IL_03ee;
							case 60:
								goto IL_042f;
							case 61:
								goto IL_0435;
							case 62:
								goto IL_0456;
							case 63:
								goto IL_0470;
							case 64:
								goto IL_0481;
							case 65:
								goto IL_049b;
							case 67:
								goto IL_04b5;
							case 68:
								goto IL_04d6;
							case 69:
								goto IL_04f0;
							case 70:
								goto IL_0501;
							case 71:
								goto IL_051b;
							case 73:
								goto IL_0535;
							case 74:
								goto IL_0556;
							case 75:
								goto IL_0570;
							case 76:
								goto IL_0581;
							case 77:
								goto IL_059b;
							case 79:
								goto IL_05b5;
							case 80:
								goto IL_05d6;
							case 81:
								goto IL_05f0;
							case 82:
								goto IL_0601;
							case 83:
								goto IL_061b;
							case 85:
								goto IL_0635;
							case 86:
								goto IL_0656;
							case 87:
								goto IL_0670;
							case 88:
								goto IL_0681;
							case 89:
								goto IL_069b;
							case 66:
							case 72:
							case 78:
							case 84:
							case 90:
							case 92:
							case 93:
							case 94:
							case 95:
								goto IL_06bd;
							case 96:
								goto IL_06dc;
							case 98:
							case 99:
								goto IL_0724;
							case 100:
								goto IL_0765;
							case 101:
								goto IL_076b;
							case 102:
								goto IL_078c;
							case 103:
								goto IL_07a6;
							case 104:
								goto IL_07b7;
							case 105:
								goto IL_07d1;
							case 107:
								goto IL_07eb;
							case 108:
								goto IL_080c;
							case 109:
								goto IL_0826;
							case 110:
								goto IL_0837;
							case 111:
								goto IL_0851;
							case 113:
								goto IL_086b;
							case 114:
								goto IL_088c;
							case 115:
								goto IL_08a6;
							case 116:
								goto IL_08b7;
							case 117:
								goto IL_08d1;
							case 119:
								goto IL_08eb;
							case 120:
								goto IL_090c;
							case 121:
								goto IL_0926;
							case 122:
								goto IL_0937;
							case 123:
								goto IL_0951;
							case 106:
							case 112:
							case 118:
							case 124:
							case 126:
							case 127:
							case 128:
							case 129:
								goto IL_0973;
							case 130:
								goto IL_0995;
							case 132:
							case 133:
								goto IL_09e0;
							case 134:
								goto IL_0a24;
							case 135:
								goto IL_0a2d;
							case 136:
								goto IL_0a51;
							case 137:
								goto IL_0a6e;
							case 138:
								goto IL_0a82;
							case 139:
								goto IL_0a9f;
							case 141:
								goto IL_0abc;
							case 142:
								goto IL_0ae0;
							case 143:
								goto IL_0afd;
							case 144:
								goto IL_0b11;
							case 145:
								goto IL_0b2e;
							case 147:
								goto IL_0b4b;
							case 148:
								goto IL_0b6f;
							case 149:
								goto IL_0b8c;
							case 150:
								goto IL_0ba0;
							case 151:
								goto IL_0bbd;
							case 140:
							case 146:
							case 152:
							case 154:
							case 155:
							case 156:
							case 157:
								goto IL_0be2;
							case 158:
								goto IL_0c04;
							case 160:
							case 161:
								goto IL_0c4f;
							case 162:
								goto IL_0c93;
							case 163:
								goto IL_0c9c;
							case 164:
								goto IL_0cc0;
							case 165:
								goto IL_0cdd;
							case 166:
								goto IL_0cf1;
							case 167:
								goto IL_0d0e;
							case 169:
								goto IL_0d2b;
							case 170:
								goto IL_0d4f;
							case 171:
								goto IL_0d6c;
							case 172:
								goto IL_0d80;
							case 173:
								goto IL_0d9d;
							case 168:
							case 174:
							case 176:
							case 177:
							case 178:
							case 179:
								goto IL_0dc2;
							case 180:
								goto IL_0de4;
							case 182:
							case 183:
								goto IL_0e2f;
							case 184:
								goto IL_0e73;
							case 185:
								goto IL_0e7c;
							case 186:
								goto IL_0ea0;
							case 187:
								goto IL_0ebd;
							case 188:
								goto IL_0ed1;
							case 189:
								goto IL_0eee;
							case 190:
							case 192:
							case 193:
							case 194:
							case 195:
								goto IL_0f13;
							case 196:
								goto IL_0f32;
							case 198:
							case 199:
							case 200:
								goto IL_0f7c;
							case 57:
							case 91:
							case 97:
							case 125:
							case 131:
							case 153:
							case 159:
							case 175:
							case 181:
							case 191:
							case 197:
							case 202:
								goto IL_0f93;
							case 203:
								goto IL_0fa7;
							case 205:
								goto IL_0fc0;
							case 206:
								goto IL_0fcc;
							case 207:
								goto IL_0fe0;
							case 208:
								goto IL_1007;
							case 209:
								goto end_IL_0001_2;
							default:
								goto end_IL_0001;
							case 22:
							case 47:
							case 204:
							case 210:
								goto end_IL_0001_3;
							}
							goto default;
						}
						IL_0fcc:
						num2 = 206;
						btnGetBal_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_0fe0;
						IL_0fe0:
						num2 = 207;
						lblProgress.Text = "DONE - Next Main " + lblMain.Text;
						goto IL_1007;
						IL_0fc0:
						num2 = 205;
						Application.DoEvents();
						goto IL_0fcc;
						IL_1007:
						num2 = 208;
						EnableCntl();
						break;
						IL_000b:
						num2 = 2;
						num5 = 0;
						goto IL_0010;
						IL_0010:
						num2 = 3;
						num6 = 0;
						goto IL_0015;
						IL_0015:
						num2 = 4;
						if (lblNum1.Text.Length == 11)
						{
							goto IL_0031;
						}
						goto IL_0039;
						IL_0031:
						num2 = 5;
						num6++;
						goto IL_0039;
						IL_0039:
						num2 = 6;
						if (lblNum2.Text.Length == 11)
						{
							goto IL_0055;
						}
						goto IL_005d;
						IL_0055:
						num2 = 7;
						num6++;
						goto IL_005d;
						IL_005d:
						num2 = 8;
						if (lblNum3.Text.Length == 11)
						{
							goto IL_0079;
						}
						goto IL_0082;
						IL_0079:
						num2 = 9;
						num6++;
						goto IL_0082;
						IL_0082:
						num2 = 10;
						if (lblNum4.Text.Length == 11)
						{
							goto IL_009f;
						}
						goto IL_00a8;
						IL_009f:
						num2 = 11;
						num6++;
						goto IL_00a8;
						IL_00a8:
						num2 = 12;
						if (lblNum5.Text.Length == 11)
						{
							goto IL_00c5;
						}
						goto IL_00ce;
						IL_00c5:
						num2 = 13;
						num6++;
						goto IL_00ce;
						IL_00ce:
						num2 = 14;
						if (lblNum6.Text.Length == 11)
						{
							goto IL_00eb;
						}
						goto IL_00f4;
						IL_00eb:
						num2 = 15;
						num6++;
						goto IL_00f4;
						IL_00f4:
						num2 = 16;
						num6 -= 2;
						goto IL_00fe;
						IL_00fe:
						num2 = 17;
						lblProgress.BackColor = Color.Red;
						goto IL_0112;
						IL_0112:
						num2 = 18;
						lblProgress.Text = "Transfer";
						goto IL_0126;
						IL_0126:
						num2 = 19;
						num5++;
						goto IL_012f;
						IL_012f:
						num2 = 20;
						btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_0140;
						IL_0140:
						num2 = 21;
						if (chkStop.Checked)
						{
							goto end_IL_0001_3;
						}
						goto IL_0159;
						IL_0159:
						num2 = 23;
						Application.DoEvents();
						goto IL_0162;
						IL_0162:
						num2 = 24;
						btnUssdReset_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_0173;
						IL_0173:
						num2 = 25;
						Application.DoEvents();
						goto IL_017c;
						IL_017c:
						num2 = 26;
						BtnAutoVC_Seres_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_018d;
						IL_018d:
						num2 = 27;
						num7 = 0;
						goto IL_0192;
						IL_0192:
						num2 = 28;
						if (txtRet01.Text.Length > 1)
						{
							goto IL_01ae;
						}
						goto IL_01d3;
						IL_01ae:
						num2 = 29;
						if (txtRet01.Text.Contains("تم شحن رصيد"))
						{
							goto IL_01cc;
						}
						goto IL_01d3;
						IL_01cc:
						num2 = 30;
						num7++;
						goto IL_01d3;
						IL_01d3:
						num2 = 31;
						if (txtRet02.Text.Length > 1)
						{
							goto IL_01ef;
						}
						goto IL_0214;
						IL_01ef:
						num2 = 32;
						if (txtRet02.Text.Contains("تم شحن رصيد"))
						{
							goto IL_020d;
						}
						goto IL_0214;
						IL_020d:
						num2 = 33;
						num7++;
						goto IL_0214;
						IL_0214:
						num2 = 34;
						if (txtRet03.Text.Length > 1)
						{
							goto IL_0230;
						}
						goto IL_0255;
						IL_0230:
						num2 = 35;
						if (txtRet03.Text.Contains("تم شحن رصيد"))
						{
							goto IL_024e;
						}
						goto IL_0255;
						IL_024e:
						num2 = 36;
						num7++;
						goto IL_0255;
						IL_0255:
						num2 = 37;
						if (txtRet04.Text.Length > 1)
						{
							goto IL_0271;
						}
						goto IL_0296;
						IL_0271:
						num2 = 38;
						if (txtRet04.Text.Contains("تم شحن رصيد"))
						{
							goto IL_028f;
						}
						goto IL_0296;
						IL_028f:
						num2 = 39;
						num7++;
						goto IL_0296;
						IL_0296:
						num2 = 40;
						if (txtRet05.Text.Length > 1)
						{
							goto IL_02b2;
						}
						goto IL_02d7;
						IL_02b2:
						num2 = 41;
						if (txtRet05.Text.Contains("تم شحن رصيد"))
						{
							goto IL_02d0;
						}
						goto IL_02d7;
						IL_02d0:
						num2 = 42;
						num7++;
						goto IL_02d7;
						IL_02d7:
						num2 = 43;
						if (txtRet06.Text.Length > 1)
						{
							goto IL_02f3;
						}
						goto IL_0318;
						IL_02f3:
						num2 = 44;
						if (txtRet06.Text.Contains("تم شحن رصيد"))
						{
							goto IL_0311;
						}
						goto IL_0318;
						IL_0311:
						num2 = 45;
						num7++;
						goto IL_0318;
						IL_0318:
						num2 = 46;
						if (chkStop.Checked)
						{
							goto end_IL_0001_3;
						}
						goto IL_0331;
						IL_0331:
						num2 = 48;
						if (num7 < num6)
						{
							goto IL_0344;
						}
						goto IL_0359;
						IL_0344:
						num2 = 50;
						if (num5 < num6)
						{
							goto IL_00fe;
						}
						goto IL_0359;
						IL_0359:
						num2 = 52;
						num8 = 0;
						goto IL_035f;
						IL_035f:
						num2 = 53;
						lblProgress.BackColor = Color.Red;
						goto IL_0373;
						IL_0373:
						num2 = 54;
						lblProgress.Text = "Transfer";
						goto IL_0387;
						IL_0387:
						num2 = 55;
						if (txtRet06.Text.Length > 0)
						{
							goto IL_03a6;
						}
						goto IL_06bd;
						IL_03a6:
						num2 = 56;
						if (!(!txtRet06.Text.Contains("تم شحن رصيد") & (Operators.CompareString(lblNum6.Text, lblMain.Text, TextCompare: false) == 0)))
						{
							goto IL_03ee;
						}
						goto IL_0f93;
						IL_03ee:
						num2 = 59;
						if (txtRet06.Text.Contains("تم شحن رصيد") & (Operators.CompareString(lblNum6.Text, lblMain.Text, TextCompare: false) == 0))
						{
							goto IL_042f;
						}
						goto IL_06bd;
						IL_042f:
						num2 = 60;
						num8 = 1;
						goto IL_0435;
						IL_0435:
						num2 = 61;
						if (!txtRet01.Text.Contains("تم شحن رصيد"))
						{
							goto IL_0456;
						}
						goto IL_04b5;
						IL_0456:
						num2 = 62;
						txtCashNextMaster.Text = lblNum1.Text;
						goto IL_0470;
						IL_0470:
						num2 = 63;
						BtnTransToNextMain_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_0481;
						IL_0481:
						num2 = 64;
						lblMain.Text = lblNum1.Text;
						goto IL_049b;
						IL_049b:
						num2 = 65;
						txtCashNextMaster.Text = "";
						goto IL_06bd;
						IL_04b5:
						num2 = 67;
						if (!txtRet02.Text.Contains("تم شحن رصيد"))
						{
							goto IL_04d6;
						}
						goto IL_0535;
						IL_04d6:
						num2 = 68;
						txtCashNextMaster.Text = lblNum2.Text;
						goto IL_04f0;
						IL_04f0:
						num2 = 69;
						BtnTransToNextMain_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_0501;
						IL_0501:
						num2 = 70;
						lblMain.Text = lblNum2.Text;
						goto IL_051b;
						IL_051b:
						num2 = 71;
						txtCashNextMaster.Text = "";
						goto IL_06bd;
						IL_0535:
						num2 = 73;
						if (!txtRet03.Text.Contains("تم شحن رصيد"))
						{
							goto IL_0556;
						}
						goto IL_05b5;
						IL_0556:
						num2 = 74;
						txtCashNextMaster.Text = lblNum3.Text;
						goto IL_0570;
						IL_0570:
						num2 = 75;
						BtnTransToNextMain_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_0581;
						IL_0581:
						num2 = 76;
						lblMain.Text = lblNum3.Text;
						goto IL_059b;
						IL_059b:
						num2 = 77;
						txtCashNextMaster.Text = "";
						goto IL_06bd;
						IL_05b5:
						num2 = 79;
						if (!txtRet04.Text.Contains("تم شحن رصيد"))
						{
							goto IL_05d6;
						}
						goto IL_0635;
						IL_05d6:
						num2 = 80;
						txtCashNextMaster.Text = lblNum4.Text;
						goto IL_05f0;
						IL_05f0:
						num2 = 81;
						BtnTransToNextMain_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_0601;
						IL_0601:
						num2 = 82;
						lblMain.Text = lblNum4.Text;
						goto IL_061b;
						IL_061b:
						num2 = 83;
						txtCashNextMaster.Text = "";
						goto IL_06bd;
						IL_0635:
						num2 = 85;
						if (!txtRet05.Text.Contains("تم شحن رصيد"))
						{
							goto IL_0656;
						}
						goto IL_0f93;
						IL_0656:
						num2 = 86;
						txtCashNextMaster.Text = lblNum5.Text;
						goto IL_0670;
						IL_0670:
						num2 = 87;
						BtnTransToNextMain_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_0681;
						IL_0681:
						num2 = 88;
						lblMain.Text = lblNum5.Text;
						goto IL_069b;
						IL_069b:
						num2 = 89;
						txtCashNextMaster.Text = "";
						goto IL_06bd;
						IL_06bd:
						num2 = 95;
						if (txtRet05.Text.Length > 0)
						{
							goto IL_06dc;
						}
						goto IL_0973;
						IL_06dc:
						num2 = 96;
						if (!(!txtRet05.Text.Contains("تم شحن رصيد") & (Operators.CompareString(lblNum5.Text, lblMain.Text, TextCompare: false) == 0)))
						{
							goto IL_0724;
						}
						goto IL_0f93;
						IL_0724:
						num2 = 99;
						if (txtRet05.Text.Contains("تم شحن رصيد") & (Operators.CompareString(lblNum5.Text, lblMain.Text, TextCompare: false) == 0))
						{
							goto IL_0765;
						}
						goto IL_0973;
						IL_0765:
						num2 = 100;
						num8 = 1;
						goto IL_076b;
						IL_076b:
						num2 = 101;
						if (!txtRet01.Text.Contains("تم شحن رصيد"))
						{
							goto IL_078c;
						}
						goto IL_07eb;
						IL_078c:
						num2 = 102;
						txtCashNextMaster.Text = lblNum1.Text;
						goto IL_07a6;
						IL_07a6:
						num2 = 103;
						BtnTransToNextMain_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_07b7;
						IL_07b7:
						num2 = 104;
						lblMain.Text = lblNum1.Text;
						goto IL_07d1;
						IL_07d1:
						num2 = 105;
						txtCashNextMaster.Text = "";
						goto IL_0973;
						IL_07eb:
						num2 = 107;
						if (!txtRet02.Text.Contains("تم شحن رصيد"))
						{
							goto IL_080c;
						}
						goto IL_086b;
						IL_080c:
						num2 = 108;
						txtCashNextMaster.Text = lblNum2.Text;
						goto IL_0826;
						IL_0826:
						num2 = 109;
						BtnTransToNextMain_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_0837;
						IL_0837:
						num2 = 110;
						lblMain.Text = lblNum2.Text;
						goto IL_0851;
						IL_0851:
						num2 = 111;
						txtCashNextMaster.Text = "";
						goto IL_0973;
						IL_086b:
						num2 = 113;
						if (!txtRet03.Text.Contains("تم شحن رصيد"))
						{
							goto IL_088c;
						}
						goto IL_08eb;
						IL_088c:
						num2 = 114;
						txtCashNextMaster.Text = lblNum3.Text;
						goto IL_08a6;
						IL_08a6:
						num2 = 115;
						BtnTransToNextMain_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_08b7;
						IL_08b7:
						num2 = 116;
						lblMain.Text = lblNum3.Text;
						goto IL_08d1;
						IL_08d1:
						num2 = 117;
						txtCashNextMaster.Text = "";
						goto IL_0973;
						IL_08eb:
						num2 = 119;
						if (!txtRet04.Text.Contains("تم شحن رصيد"))
						{
							goto IL_090c;
						}
						goto IL_0f93;
						IL_090c:
						num2 = 120;
						txtCashNextMaster.Text = lblNum4.Text;
						goto IL_0926;
						IL_0926:
						num2 = 121;
						BtnTransToNextMain_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_0937;
						IL_0937:
						num2 = 122;
						lblMain.Text = lblNum4.Text;
						goto IL_0951;
						IL_0951:
						num2 = 123;
						txtCashNextMaster.Text = "";
						goto IL_0973;
						IL_0973:
						num2 = 129;
						if (txtRet04.Text.Length > 0)
						{
							goto IL_0995;
						}
						goto IL_0be2;
						IL_0995:
						num2 = 130;
						if (!(!txtRet04.Text.Contains("تم شحن رصيد") & (Operators.CompareString(lblNum4.Text, lblMain.Text, TextCompare: false) == 0)))
						{
							goto IL_09e0;
						}
						goto IL_0f93;
						IL_09e0:
						num2 = 133;
						if (txtRet04.Text.Contains("تم شحن رصيد") & (Operators.CompareString(lblNum4.Text, lblMain.Text, TextCompare: false) == 0))
						{
							goto IL_0a24;
						}
						goto IL_0be2;
						IL_0a24:
						num2 = 134;
						num8 = 1;
						goto IL_0a2d;
						IL_0a2d:
						num2 = 135;
						if (!txtRet01.Text.Contains("تم شحن رصيد"))
						{
							goto IL_0a51;
						}
						goto IL_0abc;
						IL_0a51:
						num2 = 136;
						txtCashNextMaster.Text = lblNum1.Text;
						goto IL_0a6e;
						IL_0a6e:
						num2 = 137;
						BtnTransToNextMain_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_0a82;
						IL_0a82:
						num2 = 138;
						lblMain.Text = lblNum1.Text;
						goto IL_0a9f;
						IL_0a9f:
						num2 = 139;
						txtCashNextMaster.Text = "";
						goto IL_0be2;
						IL_0abc:
						num2 = 141;
						if (!txtRet02.Text.Contains("تم شحن رصيد"))
						{
							goto IL_0ae0;
						}
						goto IL_0b4b;
						IL_0ae0:
						num2 = 142;
						txtCashNextMaster.Text = lblNum2.Text;
						goto IL_0afd;
						IL_0afd:
						num2 = 143;
						BtnTransToNextMain_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_0b11;
						IL_0b11:
						num2 = 144;
						lblMain.Text = lblNum2.Text;
						goto IL_0b2e;
						IL_0b2e:
						num2 = 145;
						txtCashNextMaster.Text = "";
						goto IL_0be2;
						IL_0b4b:
						num2 = 147;
						if (!txtRet03.Text.Contains("تم شحن رصيد"))
						{
							goto IL_0b6f;
						}
						goto IL_0f93;
						IL_0b6f:
						num2 = 148;
						txtCashNextMaster.Text = lblNum3.Text;
						goto IL_0b8c;
						IL_0b8c:
						num2 = 149;
						BtnTransToNextMain_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_0ba0;
						IL_0ba0:
						num2 = 150;
						lblMain.Text = lblNum3.Text;
						goto IL_0bbd;
						IL_0bbd:
						num2 = 151;
						txtCashNextMaster.Text = "";
						goto IL_0be2;
						IL_0be2:
						num2 = 157;
						if (txtRet03.Text.Length > 0)
						{
							goto IL_0c04;
						}
						goto IL_0dc2;
						IL_0c04:
						num2 = 158;
						if (!(!txtRet03.Text.Contains("تم شحن رصيد") & (Operators.CompareString(lblNum3.Text, lblMain.Text, TextCompare: false) == 0)))
						{
							goto IL_0c4f;
						}
						goto IL_0f93;
						IL_0c4f:
						num2 = 161;
						if (txtRet03.Text.Contains("تم شحن رصيد") & (Operators.CompareString(lblNum3.Text, lblMain.Text, TextCompare: false) == 0))
						{
							goto IL_0c93;
						}
						goto IL_0dc2;
						IL_0c93:
						num2 = 162;
						num8 = 1;
						goto IL_0c9c;
						IL_0c9c:
						num2 = 163;
						if (!txtRet01.Text.Contains("تم شحن رصيد"))
						{
							goto IL_0cc0;
						}
						goto IL_0d2b;
						IL_0cc0:
						num2 = 164;
						txtCashNextMaster.Text = lblNum1.Text;
						goto IL_0cdd;
						IL_0cdd:
						num2 = 165;
						BtnTransToNextMain_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_0cf1;
						IL_0cf1:
						num2 = 166;
						lblMain.Text = lblNum1.Text;
						goto IL_0d0e;
						IL_0d0e:
						num2 = 167;
						txtCashNextMaster.Text = "";
						goto IL_0dc2;
						IL_0d2b:
						num2 = 169;
						if (!txtRet02.Text.Contains("تم شحن رصيد"))
						{
							goto IL_0d4f;
						}
						goto IL_0f93;
						IL_0d4f:
						num2 = 170;
						txtCashNextMaster.Text = lblNum2.Text;
						goto IL_0d6c;
						IL_0d6c:
						num2 = 171;
						BtnTransToNextMain_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_0d80;
						IL_0d80:
						num2 = 172;
						lblMain.Text = lblNum2.Text;
						goto IL_0d9d;
						IL_0d9d:
						num2 = 173;
						txtCashNextMaster.Text = "";
						goto IL_0dc2;
						IL_0dc2:
						num2 = 179;
						if (txtRet02.Text.Length > 0)
						{
							goto IL_0de4;
						}
						goto IL_0f13;
						IL_0de4:
						num2 = 180;
						if (!(!txtRet02.Text.Contains("تم شحن رصيد") & (Operators.CompareString(lblNum2.Text, lblMain.Text, TextCompare: false) == 0)))
						{
							goto IL_0e2f;
						}
						goto IL_0f93;
						IL_0e2f:
						num2 = 183;
						if (txtRet02.Text.Contains("تم شحن رصيد") & (Operators.CompareString(lblNum2.Text, lblMain.Text, TextCompare: false) == 0))
						{
							goto IL_0e73;
						}
						goto IL_0f13;
						IL_0e73:
						num2 = 184;
						num8 = 1;
						goto IL_0e7c;
						IL_0e7c:
						num2 = 185;
						if (!txtRet01.Text.Contains("تم شحن رصيد"))
						{
							goto IL_0ea0;
						}
						goto IL_0f93;
						IL_0ea0:
						num2 = 186;
						txtCashNextMaster.Text = lblNum1.Text;
						goto IL_0ebd;
						IL_0ebd:
						num2 = 187;
						BtnTransToNextMain_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_0ed1;
						IL_0ed1:
						num2 = 188;
						lblMain.Text = lblNum1.Text;
						goto IL_0eee;
						IL_0eee:
						num2 = 189;
						txtCashNextMaster.Text = "";
						goto IL_0f13;
						IL_0f13:
						num2 = 195;
						if (txtRet01.Text.Length > 0)
						{
							goto IL_0f32;
						}
						goto IL_0f7c;
						IL_0f32:
						num2 = 196;
						if (!(!txtRet01.Text.Contains("تم شحن رصيد") & (Operators.CompareString(lblNum1.Text, lblMain.Text, TextCompare: false) == 0)))
						{
							goto IL_0f7c;
						}
						goto IL_0f93;
						IL_0f7c:
						num2 = 200;
						if (num8 == 1)
						{
							goto IL_0359;
						}
						goto IL_0f93;
						IL_0f93:
						num2 = 202;
						btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
						goto IL_0fa7;
						IL_0fa7:
						num2 = 203;
						if (chkStop.Checked)
						{
							goto end_IL_0001_3;
						}
						goto IL_0fc0;
						end_IL_0001_2:
						break;
					}
					num2 = 209;
					lblProgress.BackColor = Color.LimeGreen;
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 5000;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetUssdOrderVV(string UssdBox)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string ussdCommand = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 583:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_000f;
						case 4:
							goto IL_0041;
						case 5:
							goto IL_005d;
						case 6:
							goto IL_008f;
						case 7:
							goto IL_00ab;
						case 8:
							goto IL_00dd;
						case 9:
							goto IL_00f9;
						case 10:
							goto IL_012c;
						case 11:
							goto IL_0149;
						case 12:
							goto IL_017c;
						case 13:
							goto IL_0199;
						case 14:
							goto IL_01cc;
						case 15:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 16:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_017c:
					num2 = 12;
					ApplyUssdCodesPCVVV(lblPort5, ussdCommand, txtRet05, lblNum5);
					goto IL_0199;
					IL_0199:
					num2 = 13;
					if (!((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked))
					{
						break;
					}
					goto IL_01cc;
					IL_0149:
					num2 = 11;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_017c;
					}
					goto IL_0199;
					IL_01cc:
					num2 = 14;
					ApplyUssdCodesPCVVV(lblPort6, ussdCommand, txtRet06, lblNum6);
					break;
					IL_000b:
					num2 = 2;
					ussdCommand = UssdBox;
					goto IL_000f;
					IL_000f:
					num2 = 3;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_0041;
					}
					goto IL_005d;
					IL_0041:
					num2 = 4;
					ApplyUssdCodesPCVVV(lblPort1, ussdCommand, txtRet01, lblNum1);
					goto IL_005d;
					IL_005d:
					num2 = 5;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_008f;
					}
					goto IL_00ab;
					IL_008f:
					num2 = 6;
					ApplyUssdCodesPCVVV(lblPort2, ussdCommand, txtRet02, lblNum2);
					goto IL_00ab;
					IL_00ab:
					num2 = 7;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_00dd;
					}
					goto IL_00f9;
					IL_00dd:
					num2 = 8;
					ApplyUssdCodesPCVVV(lblPort3, ussdCommand, txtRet03, lblNum3);
					goto IL_00f9;
					IL_00f9:
					num2 = 9;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_012c;
					}
					goto IL_0149;
					IL_012c:
					num2 = 10;
					ApplyUssdCodesPCVVV(lblPort4, ussdCommand, txtRet04, lblNum4);
					goto IL_0149;
					end_IL_0001_2:
					break;
				}
				num2 = 15;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 583;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodesPCVVV(Label Exxc, string UssdCommand, TextBox Eeret, Label Enumtxt)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						while (true)
						{
							IL_0052:
							string commandCode = encoding_mod.GetCommandCode(UssdCommand);
							serialPort.WriteLine(commandCode + "\r");
							Thread.Sleep(1000);
							Application.DoEvents();
							int num3 = 0;
							do
							{
								Thread.Sleep(500);
								if (chkStop.Checked)
								{
									break;
								}
								string text = serialPort.ReadExisting();
								if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
								{
									txtInfo.Text = text + "\r\n" + txtInfo.Text;
								}
								if (text.Contains("+CUSD: "))
								{
									int num4 = ((!text.Contains("+CUSD: 0")) ? text.IndexOf("+CUSD: 1") : text.IndexOf("+CUSD: 0"));
									string text2 = text.Substring(num4 + 9, text.Length - num4 - 9).Trim().Trim('o')
										.Trim('\r')
										.Trim('\r')
										.Trim();
									num4 = text2.IndexOf(",");
									string text3 = text2.Substring(0, num4).Trim().Trim('"')
										.Trim(',')
										.Trim('"');
									text3 = text3.Trim('"').Trim(',').Trim('"');
									string text4;
									if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text3);
										text4 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text4 = encoding_mod.Decode7Bit(text3);
									}
									Eeret.Text = text4 + "\r\n" + Eeret.Text;
									if (text4.Contains("جاري تنفيذ طلبك") | text4.Contains("فوا\u064b هذا العرض غير ساري علي نظام خطك"))
									{
										DisablePort(Exxc);
										Application.DoEvents();
										break;
									}
									if (text4.Contains("ervice is currently unavailabl"))
									{
										goto IL_0052;
									}
									Application.DoEvents();
								}
								if (text.Contains("unknown") | text.Contains("+CUSD: 2") | text.Contains("retry operation"))
								{
									goto IL_0052;
								}
								Application.DoEvents();
								num3++;
							}
							while (num3 <= 30);
							break;
						}
						break;
					case 813:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001_2;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 813;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnOCApply58_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		bool flag = default(bool);
		bool flag2 = default(bool);
		bool flag3 = default(bool);
		bool flag4 = default(bool);
		bool flag5 = default(bool);
		bool flag6 = default(bool);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				Stopwatch stopwatch;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 2020:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0018;
						case 5:
							goto IL_0029;
						case 7:
						case 8:
							goto IL_0043;
						case 9:
							goto IL_0063;
						case 11:
						case 12:
							goto IL_007a;
						case 13:
							goto IL_008e;
						case 14:
							goto IL_00a2;
						case 15:
							goto IL_00ac;
						case 16:
							goto IL_00bc;
						case 17:
							goto IL_00cc;
						case 18:
							goto IL_00dc;
						case 19:
							goto IL_00ec;
						case 20:
							goto IL_00fc;
						case 21:
							goto IL_010c;
						case 22:
						case 83:
							goto IL_0121;
						case 23:
							goto IL_014f;
						case 24:
							goto IL_0160;
						case 25:
							goto IL_0171;
						case 26:
							goto IL_0182;
						case 27:
							goto IL_0193;
						case 28:
							goto IL_01a4;
						case 29:
							goto IL_01b5;
						case 30:
						case 78:
							goto IL_01c0;
						case 31:
							goto IL_01c9;
						case 33:
							goto IL_0230;
						case 34:
							goto IL_0263;
						case 35:
						case 36:
							goto IL_0275;
						case 37:
							goto IL_02a8;
						case 38:
						case 39:
							goto IL_02ba;
						case 40:
							goto IL_02ed;
						case 41:
						case 42:
							goto IL_02ff;
						case 43:
							goto IL_0332;
						case 44:
						case 45:
							goto IL_0344;
						case 46:
							goto IL_0377;
						case 47:
						case 48:
							goto IL_0389;
						case 49:
							goto IL_03bc;
						case 50:
						case 51:
							goto IL_03ce;
						case 53:
							goto IL_03e7;
						case 54:
							goto IL_041a;
						case 55:
						case 56:
							goto IL_042c;
						case 57:
							goto IL_045f;
						case 58:
						case 59:
							goto IL_0471;
						case 60:
							goto IL_04a4;
						case 61:
						case 62:
							goto IL_04b6;
						case 63:
							goto IL_04e9;
						case 64:
						case 65:
							goto IL_04fb;
						case 66:
							goto IL_052e;
						case 67:
						case 68:
							goto IL_0540;
						case 69:
							goto IL_0573;
						case 70:
						case 71:
							goto IL_0585;
						case 73:
							goto IL_059b;
						case 74:
							goto IL_05b5;
						case 75:
							goto IL_05bf;
						case 76:
						case 77:
							goto IL_05ca;
						case 79:
							goto IL_05e1;
						case 32:
						case 52:
						case 72:
						case 80:
							goto IL_05eb;
						case 81:
							goto IL_05f4;
						case 82:
							goto IL_061f;
						case 84:
						case 85:
							goto IL_063d;
						case 86:
							goto IL_0647;
						case 87:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 6:
						case 10:
						case 88:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_061f:
					num2 = 82;
					if (!chkStop.Checked)
					{
						goto IL_0121;
					}
					goto IL_063d;
					IL_063d:
					num2 = 85;
					EnableCntl();
					goto IL_0647;
					IL_05f4:
					num2 = 81;
					if (Conversion.Val(txtLoopSSOCG.Text) < Conversion.Val(txtLoopFSOCG.Text))
					{
						goto IL_061f;
					}
					goto IL_063d;
					IL_0647:
					num2 = 86;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					num5 = 0;
					goto IL_0018;
					IL_0018:
					num2 = 4;
					if (MysqlConn.MainProgLic < 11)
					{
						goto IL_0029;
					}
					goto IL_0043;
					IL_0029:
					num2 = 5;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0043:
					num2 = 8;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0063;
					}
					goto IL_007a;
					IL_0063:
					num2 = 9;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_007a:
					num2 = 12;
					lblProgress.BackColor = Color.Red;
					goto IL_008e;
					IL_008e:
					num2 = 13;
					lblProgress.Text = "#58#";
					goto IL_00a2;
					IL_00a2:
					num2 = 14;
					DisableCntl();
					goto IL_00ac;
					IL_00ac:
					num2 = 15;
					flag = chkCh1.Checked;
					goto IL_00bc;
					IL_00bc:
					num2 = 16;
					flag2 = chkCh2.Checked;
					goto IL_00cc;
					IL_00cc:
					num2 = 17;
					flag3 = chkCh3.Checked;
					goto IL_00dc;
					IL_00dc:
					num2 = 18;
					flag4 = chkCh4.Checked;
					goto IL_00ec;
					IL_00ec:
					num2 = 19;
					flag5 = chkCh5.Checked;
					goto IL_00fc;
					IL_00fc:
					num2 = 20;
					flag6 = chkCh6.Checked;
					goto IL_010c;
					IL_010c:
					num2 = 21;
					txtLoopSSOCG.Text = "0";
					goto IL_0121;
					IL_0121:
					num2 = 22;
					txtLoopSSOCG.Text = Conversions.ToString(Conversion.Val(txtLoopSSOCG.Text) + 1.0);
					goto IL_014f;
					IL_014f:
					num2 = 23;
					chkCh1.Checked = flag;
					goto IL_0160;
					IL_0160:
					num2 = 24;
					chkCh2.Checked = flag2;
					goto IL_0171;
					IL_0171:
					num2 = 25;
					chkCh3.Checked = flag3;
					goto IL_0182;
					IL_0182:
					num2 = 26;
					chkCh4.Checked = flag4;
					goto IL_0193;
					IL_0193:
					num2 = 27;
					chkCh5.Checked = flag5;
					goto IL_01a4;
					IL_01a4:
					num2 = 28;
					chkCh6.Checked = flag6;
					goto IL_01b5;
					IL_01b5:
					num2 = 29;
					ReSetUssdOrder();
					goto IL_01c0;
					IL_01c0:
					num2 = 30;
					num5 = checked(num5 + 1);
					goto IL_01c9;
					IL_01c9:
					num2 = 31;
					if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						goto IL_0230;
					}
					goto IL_05eb;
					IL_0230:
					num2 = 33;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_0263;
					}
					goto IL_0275;
					IL_0263:
					num2 = 34;
					ApplyUssdOCGIFTS58(lblPort1);
					goto IL_0275;
					IL_0275:
					num2 = 36;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_02a8;
					}
					goto IL_02ba;
					IL_02a8:
					num2 = 37;
					ApplyUssdOCGIFTS58(lblPort2);
					goto IL_02ba;
					IL_02ba:
					num2 = 39;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_02ed;
					}
					goto IL_02ff;
					IL_02ed:
					num2 = 40;
					ApplyUssdOCGIFTS58(lblPort3);
					goto IL_02ff;
					IL_02ff:
					num2 = 42;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0332;
					}
					goto IL_0344;
					IL_0332:
					num2 = 43;
					ApplyUssdOCGIFTS58(lblPort4);
					goto IL_0344;
					IL_0344:
					num2 = 45;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0377;
					}
					goto IL_0389;
					IL_0377:
					num2 = 46;
					ApplyUssdOCGIFTS58(lblPort5);
					goto IL_0389;
					IL_0389:
					num2 = 48;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_03bc;
					}
					goto IL_03ce;
					IL_03bc:
					num2 = 49;
					ApplyUssdOCGIFTS58(lblPort6);
					goto IL_03ce;
					IL_03ce:
					num2 = 51;
					if (!chkStop.Checked)
					{
						goto IL_03e7;
					}
					goto IL_05eb;
					IL_03e7:
					num2 = 53;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_041a;
					}
					goto IL_042c;
					IL_041a:
					num2 = 54;
					ApplyUssdOCGIFTS58Ret(lblPort1);
					goto IL_042c;
					IL_042c:
					num2 = 56;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_045f;
					}
					goto IL_0471;
					IL_045f:
					num2 = 57;
					ApplyUssdOCGIFTS58Ret(lblPort2);
					goto IL_0471;
					IL_0471:
					num2 = 59;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_04a4;
					}
					goto IL_04b6;
					IL_04a4:
					num2 = 60;
					ApplyUssdOCGIFTS58Ret(lblPort3);
					goto IL_04b6;
					IL_04b6:
					num2 = 62;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_04e9;
					}
					goto IL_04fb;
					IL_04e9:
					num2 = 63;
					ApplyUssdOCGIFTS58Ret(lblPort4);
					goto IL_04fb;
					IL_04fb:
					num2 = 65;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_052e;
					}
					goto IL_0540;
					IL_052e:
					num2 = 66;
					ApplyUssdOCGIFTS58Ret(lblPort5);
					goto IL_0540;
					IL_0540:
					num2 = 68;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_0573;
					}
					goto IL_0585;
					IL_0573:
					num2 = 69;
					ApplyUssdOCGIFTS58Ret(lblPort6);
					goto IL_0585;
					IL_0585:
					num2 = 71;
					if (!chkStop.Checked)
					{
						goto IL_059b;
					}
					goto IL_05eb;
					IL_059b:
					num2 = 73;
					if (num5 == 2 || num5 == 5 || num5 == 8)
					{
						goto IL_05b5;
					}
					goto IL_05ca;
					IL_05b5:
					num2 = 74;
					ReSetUssdOrder();
					goto IL_05bf;
					IL_05bf:
					num2 = 75;
					Application.DoEvents();
					goto IL_05ca;
					IL_05ca:
					num2 = 77;
					if (num5 <= 10)
					{
						goto IL_01c0;
					}
					goto IL_05e1;
					IL_05e1:
					num2 = 79;
					Application.DoEvents();
					goto IL_05eb;
					IL_05eb:
					num2 = 80;
					Application.DoEvents();
					goto IL_05f4;
					end_IL_0001_2:
					break;
				}
				num2 = 87;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 2020;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnPrintstr_Click(object sender, EventArgs e)
	{
		double num = Conversion.Val(txtH.Text) / 2.0;
		string PrinterName = cmbPrinter.Text.Trim();
		openport(ref PrinterName);
		clearbuffer();
		PrinterName = "70";
		string LabelHeight = "25";
		string Speed = "6.0";
		string Density = Conversion.Val(txtHn.Text).ToString();
		string Sensor = "0";
		string Vertical = "3";
		string Offset = "0";
		setup(ref PrinterName, ref LabelHeight, ref Speed, ref Density, ref Sensor, ref Vertical, ref Offset);
		Offset = "DIRECTION 1";
		sendcommand(ref Offset);
		Offset = "ARIAL";
		Vertical = txtPrintStr.Text.ToString();
		windowsfont(40, 16, 50, 0, 0, 0, ref Offset, ref Vertical);
		Vertical = Strings.Format(40, "####");
		Offset = Strings.Format(80, "####");
		Sensor = "128";
		Density = Strings.Format(96, "####");
		Speed = "0";
		LabelHeight = "0";
		PrinterName = Strings.Format(Conversion.Val(txtBar_tk.Text), "0");
		string Wide = Strings.Format(Conversion.Val(txtBar_tn.Text), "0");
		string Code = txtPrintStr.Text.Trim();
		barcode(ref Vertical, ref Offset, ref Sensor, ref Density, ref Speed, ref LabelHeight, ref PrinterName, ref Wide, ref Code);
		Code = "1";
		Wide = "1";
		printlabel(ref Code, ref Wide);
		closeport();
	}

	private void SetUssdOrderVcashTraVXPVaryGiftOrangeCash_one(Label Exxc, string Etransnumberto, int EEvaltocharge)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						if (EEvaltocharge <= 0)
						{
							goto end_IL_0001;
						}
						AutoRes = 0;
						string text = serialPort.ReadExisting();
						string ussdCommandFull;
						string commandCode;
						if (text.Contains("+CUSD: "))
						{
							string text2 = text;
							int num3 = text.IndexOf("+CUSD: ");
							text2 = text.Substring(num3 + 10, text.Length - num3 - 10).Trim().Trim('o')
								.Trim('\r')
								.Trim('\r')
								.Trim();
							num3 = text2.IndexOf(",");
							string text3 = text2.Substring(0, num3).Trim().Trim('"')
								.Trim(',')
								.Trim('"');
							text3 = text3.Trim('"').Trim(',').Trim('"');
							if (text3.Length > 3)
							{
								string text4;
								if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
								{
									byte[] bytes = encoding_mod.StrToByteArray(text3);
									text4 = Encoding.BigEndianUnicode.GetString(bytes);
								}
								else
								{
									text4 = encoding_mod.Decode7Bit(text3);
								}
								OutBoxDrop(Exxc, text4);
								if (text4.Contains("تم شحن"))
								{
									ussdCommandFull = "9";
									commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
									serialPort.WriteLine(commandCode + "\r");
									AddToRemoteDB_TOPUP(GetNumberByPort(Exxc.Text), Etransnumberto, EEvaltocharge);
									double num4 = Conversion.Val(txtOCtopupDelay.Text);
									for (double num5 = 1.0; num5 <= num4; num5 += 1.0)
									{
										Thread.Sleep(250);
										Application.DoEvents();
										Thread.Sleep(250);
										Application.DoEvents();
										Thread.Sleep(250);
										Application.DoEvents();
										Thread.Sleep(250);
										Application.DoEvents();
									}
									DisablePort(Exxc);
									break;
								}
							}
						}
						int num6 = 0;
						num6++;
						ussdCommandFull = "#7115*31*" + txtOCPass.Text + "*2*" + Etransnumberto + "*" + Conversions.ToString(EEvaltocharge) + "*1*1#";
						commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(1000);
						Application.DoEvents();
						lblProgress.Text = "Read " + GetNumberByPort(Exxc.Text) + "(" + Conversions.ToString(num6) + ")";
						Application.DoEvents();
						int num7 = 0;
						do
						{
							Thread.Sleep(1000);
							text = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
							{
								txtInfo.Text = text + "\r\n" + txtInfo.Text;
							}
							if (text.Contains("0627064406310635064A062F0020062706440645062A0627062D0020063A064A063100200643062706410020"))
							{
								DisablePortdonnt(Exxc);
								OutBoxDrop(Exxc, "الرصيد المتاح غير كاف لإتمام المعاملة");
								Application.DoEvents();
								break;
							}
							if (text.Contains("+CUSD: "))
							{
								string text2 = text;
								int num3 = text.IndexOf("+CUSD: ");
								text2 = text.Substring(num3 + 10, text.Length - num3 - 10).Trim().Trim('o')
									.Trim('\r')
									.Trim('\r')
									.Trim();
								num3 = text2.IndexOf(",");
								string text3 = text2.Substring(0, num3).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								text3 = text3.Trim('"').Trim(',').Trim('"');
								if (text3.Length > 3)
								{
									string text4;
									if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
									{
										byte[] bytes = encoding_mod.StrToByteArray(text3);
										text4 = Encoding.BigEndianUnicode.GetString(bytes);
									}
									else
									{
										text4 = encoding_mod.Decode7Bit(text3);
									}
									OutBoxDrop(Exxc, text4);
									if (text4.Contains("تم شحن"))
									{
										ussdCommandFull = "9";
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										AddToRemoteDB_TOPUP(GetNumberByPort(Exxc.Text), Etransnumberto, EEvaltocharge);
										double num8 = Conversion.Val(txtOCtopupDelay.Text);
										for (double num9 = 1.0; num9 <= num8; num9 += 1.0)
										{
											Thread.Sleep(250);
											Application.DoEvents();
											Thread.Sleep(250);
											Application.DoEvents();
											Thread.Sleep(250);
											Application.DoEvents();
											Thread.Sleep(250);
											Application.DoEvents();
										}
										DisablePort(Exxc);
										break;
									}
									if (text4.Contains("لا يكفي لشحن") | text4.Contains("لرقم السري غير صحيح") | text4.Contains("ضمان تنفيذ طلبك بنجاح يمكنك اجراء عملية شحن اخرى بعد 5 دقائق"))
									{
										DisablePort(Exxc);
										break;
									}
									if (text4.Contains("لا يمكن"))
									{
										ussdCommandFull = "9";
										commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
										serialPort.WriteLine(commandCode + "\r");
										Thread.Sleep(500);
										break;
									}
								}
							}
							if (text.Contains("+CUSD: 5") | text.Contains("ERROR") | text.Contains("unknown") | text.Contains("retry operation"))
							{
								Application.DoEvents();
								break;
							}
							Application.DoEvents();
							num7++;
						}
						while (num7 <= 25);
						break;
					}
					case 1806:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001_2;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1806;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnOCTopupOne_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		int num6 = default(int);
		int num7 = default(int);
		bool flag = default(bool);
		bool flag2 = default(bool);
		bool flag3 = default(bool);
		bool flag4 = default(bool);
		bool flag5 = default(bool);
		bool flag6 = default(bool);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
						ProjectData.ClearProjectError();
						num3 = -2;
						goto IL_000b;
					case 4055:
						{
							num = num2;
							switch ((num3 <= -2) ? 1 : num3)
							{
							case 1:
								break;
							default:
								goto end_IL_0001;
							}
							int num4 = unchecked(num + 1);
							num = 0;
							switch (num4)
							{
							case 1:
								break;
							case 2:
								goto IL_000b;
							case 3:
								goto IL_000f;
							case 4:
								goto IL_0014;
							case 5:
								goto IL_0019;
							case 6:
								goto IL_002a;
							case 8:
							case 9:
								goto IL_0044;
							case 10:
								goto IL_0068;
							case 12:
							case 13:
								goto IL_007f;
							case 14:
								goto IL_00a0;
							case 16:
							case 17:
								goto IL_00b7;
							case 18:
								goto IL_00dc;
							case 20:
							case 21:
								goto IL_00f3;
							case 22:
								goto IL_0107;
							case 23:
								goto IL_011b;
							case 24:
								goto IL_0125;
							case 25:
								goto IL_012f;
							case 26:
								goto IL_013f;
							case 27:
								goto IL_014f;
							case 28:
								goto IL_015f;
							case 29:
								goto IL_016f;
							case 30:
								goto IL_017f;
							case 31:
								goto IL_018f;
							case 32:
								goto IL_01a3;
							case 33:
								goto IL_01b7;
							case 34:
								goto IL_01de;
							case 35:
								goto IL_01f2;
							case 36:
								goto IL_0216;
							case 37:
							case 38:
								goto IL_022c;
							case 39:
								goto IL_0240;
							case 40:
								goto IL_0264;
							case 41:
							case 42:
								goto IL_027a;
							case 43:
								goto IL_028e;
							case 44:
								goto IL_02b2;
							case 45:
							case 46:
								goto IL_02c8;
							case 47:
								goto IL_02dc;
							case 48:
								goto IL_0300;
							case 49:
							case 50:
								goto IL_0316;
							case 51:
								goto IL_032a;
							case 52:
								goto IL_034e;
							case 53:
							case 54:
								goto IL_0364;
							case 55:
								goto IL_0378;
							case 56:
								goto IL_039c;
							case 57:
							case 58:
							case 59:
							case 167:
								goto IL_03b5;
							case 60:
								goto IL_03e3;
							case 61:
								goto IL_03f4;
							case 62:
								goto IL_0405;
							case 63:
								goto IL_0416;
							case 64:
								goto IL_0427;
							case 65:
								goto IL_0438;
							case 66:
							case 162:
								goto IL_044a;
							case 67:
								goto IL_0451;
							case 69:
								goto IL_04b8;
							case 70:
								goto IL_04cc;
							case 71:
								goto IL_04fd;
							case 72:
								goto IL_050e;
							case 73:
								goto IL_0514;
							case 75:
								goto IL_0537;
							case 74:
							case 76:
							case 77:
								goto IL_0553;
							case 78:
								goto IL_058f;
							case 79:
								goto IL_05a2;
							case 80:
								goto IL_05b2;
							case 81:
								goto IL_05cf;
							case 82:
								goto IL_05e6;
							case 83:
							case 84:
								goto IL_05ed;
							case 85:
								goto IL_0601;
							case 86:
								goto IL_0632;
							case 87:
								goto IL_0643;
							case 88:
								goto IL_0649;
							case 90:
								goto IL_066c;
							case 89:
							case 91:
							case 92:
								goto IL_0688;
							case 93:
								goto IL_06c4;
							case 94:
								goto IL_06d7;
							case 95:
								goto IL_06e7;
							case 96:
								goto IL_0704;
							case 97:
								goto IL_071b;
							case 98:
							case 99:
								goto IL_0722;
							case 100:
								goto IL_0736;
							case 101:
								goto IL_0767;
							case 102:
								goto IL_0778;
							case 103:
								goto IL_077e;
							case 105:
								goto IL_07a1;
							case 104:
							case 106:
							case 107:
								goto IL_07bd;
							case 108:
								goto IL_07f9;
							case 109:
								goto IL_080c;
							case 110:
								goto IL_081c;
							case 111:
								goto IL_0839;
							case 112:
								goto IL_0850;
							case 113:
							case 114:
								goto IL_0857;
							case 115:
								goto IL_086b;
							case 116:
								goto IL_089c;
							case 117:
								goto IL_08ad;
							case 118:
								goto IL_08b3;
							case 120:
								goto IL_08d6;
							case 119:
							case 121:
							case 122:
								goto IL_08f2;
							case 123:
								goto IL_092e;
							case 124:
								goto IL_0941;
							case 125:
								goto IL_0951;
							case 126:
								goto IL_096e;
							case 127:
								goto IL_0985;
							case 128:
							case 129:
								goto IL_098c;
							case 130:
								goto IL_09a3;
							case 131:
								goto IL_09d7;
							case 132:
								goto IL_09eb;
							case 133:
								goto IL_09f4;
							case 135:
								goto IL_0a1a;
							case 134:
							case 136:
							case 137:
								goto IL_0a39;
							case 138:
								goto IL_0a78;
							case 139:
								goto IL_0a8e;
							case 140:
								goto IL_0aa1;
							case 141:
								goto IL_0ac1;
							case 142:
								goto IL_0adb;
							case 143:
							case 144:
								goto IL_0ae5;
							case 145:
								goto IL_0afc;
							case 146:
								goto IL_0b30;
							case 147:
								goto IL_0b44;
							case 148:
								goto IL_0b4d;
							case 150:
								goto IL_0b73;
							case 149:
							case 151:
							case 152:
								goto IL_0b92;
							case 153:
								goto IL_0bd1;
							case 154:
								goto IL_0be7;
							case 155:
								goto IL_0bfa;
							case 156:
								goto IL_0c1a;
							case 157:
								goto IL_0c34;
							case 158:
							case 159:
								goto IL_0c3e;
							case 161:
								goto IL_0c57;
							case 163:
								goto IL_0c6f;
							case 68:
							case 160:
							case 164:
								goto IL_0c7c;
							case 165:
								goto IL_0c88;
							case 166:
								goto IL_0cb6;
							case 168:
							case 169:
								goto IL_0cd7;
							case 170:
								goto IL_0ce4;
							case 171:
								goto end_IL_0001_2;
							default:
								goto end_IL_0001;
							case 7:
							case 11:
							case 15:
							case 19:
							case 172:
								goto end_IL_0001_3;
							}
							goto default;
						}
						IL_0cb6:
						num2 = 166;
						if (!chkStop.Checked)
						{
							goto IL_03b5;
						}
						goto IL_0cd7;
						IL_0cd7:
						num2 = 169;
						EnableCntl();
						goto IL_0ce4;
						IL_0c88:
						num2 = 165;
						if (Conversion.Val(txtLoopSSDOC.Text) < Conversion.Val(txtLoopFSDOC.Text))
						{
							goto IL_0cb6;
						}
						goto IL_0cd7;
						IL_0ce4:
						num2 = 170;
						lblProgress.BackColor = Color.LimeGreen;
						break;
						IL_000b:
						num2 = 2;
						num5 = 0;
						goto IL_000f;
						IL_000f:
						num2 = 3;
						num6 = 0;
						goto IL_0014;
						IL_0014:
						num2 = 4;
						num7 = 0;
						goto IL_0019;
						IL_0019:
						num2 = 5;
						if (MysqlConn.MainProgLic < 11)
						{
							goto IL_002a;
						}
						goto IL_0044;
						IL_002a:
						num2 = 6;
						lblProgress.Text = "Inactive function";
						goto end_IL_0001_3;
						IL_0044:
						num2 = 9;
						if (txtOCPass.Text.Trim().Length != 6)
						{
							goto IL_0068;
						}
						goto IL_007f;
						IL_0068:
						num2 = 10;
						Interaction.MsgBox("ادخل باسورد اورنج كاش");
						goto end_IL_0001_3;
						IL_007f:
						num2 = 13;
						if (lblPort1.Text.Trim().Length == 0)
						{
							goto IL_00a0;
						}
						goto IL_00b7;
						IL_00a0:
						num2 = 14;
						Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
						goto end_IL_0001_3;
						IL_00b7:
						num2 = 17;
						if (txtOCchargeNumOne.Text.Trim().Length != 11)
						{
							goto IL_00dc;
						}
						goto IL_00f3;
						IL_00dc:
						num2 = 18;
						Interaction.MsgBox("ادخل رقم الخط المراد الشحن له");
						goto end_IL_0001_3;
						IL_00f3:
						num2 = 21;
						lblProgress.BackColor = Color.Red;
						goto IL_0107;
						IL_0107:
						num2 = 22;
						lblProgress.Text = "شحن اورنج كاش";
						goto IL_011b;
						IL_011b:
						num2 = 23;
						DisableCntl();
						goto IL_0125;
						IL_0125:
						num2 = 24;
						ReSetUssdOrder();
						goto IL_012f;
						IL_012f:
						num2 = 25;
						flag = chkCh1.Checked;
						goto IL_013f;
						IL_013f:
						num2 = 26;
						flag2 = chkCh2.Checked;
						goto IL_014f;
						IL_014f:
						num2 = 27;
						flag3 = chkCh3.Checked;
						goto IL_015f;
						IL_015f:
						num2 = 28;
						flag4 = chkCh4.Checked;
						goto IL_016f;
						IL_016f:
						num2 = 29;
						flag5 = chkCh5.Checked;
						goto IL_017f;
						IL_017f:
						num2 = 30;
						flag6 = chkCh6.Checked;
						goto IL_018f;
						IL_018f:
						num2 = 31;
						txtLoopSSDOC.Text = "0";
						goto IL_01a3;
						IL_01a3:
						num2 = 32;
						lblProgress.BackColor = Color.Red;
						goto IL_01b7;
						IL_01b7:
						num2 = 33;
						if (Conversion.Val(txtOCTopValue.Text) > 0.0)
						{
							goto IL_01de;
						}
						goto IL_03b5;
						IL_01de:
						num2 = 34;
						if (chkCh1.Checked)
						{
							goto IL_01f2;
						}
						goto IL_022c;
						IL_01f2:
						num2 = 35;
						lblGiftV1.Text = Conversions.ToString(Conversion.Val(txtOCTopValue.Text));
						goto IL_0216;
						IL_0216:
						num2 = 36;
						lblGifts01.Text = "1";
						goto IL_022c;
						IL_022c:
						num2 = 38;
						if (chkCh2.Checked)
						{
							goto IL_0240;
						}
						goto IL_027a;
						IL_0240:
						num2 = 39;
						lblGiftV2.Text = Conversions.ToString(Conversion.Val(txtOCTopValue.Text));
						goto IL_0264;
						IL_0264:
						num2 = 40;
						lblGifts02.Text = "1";
						goto IL_027a;
						IL_027a:
						num2 = 42;
						if (chkCh3.Checked)
						{
							goto IL_028e;
						}
						goto IL_02c8;
						IL_028e:
						num2 = 43;
						lblGiftV3.Text = Conversions.ToString(Conversion.Val(txtOCTopValue.Text));
						goto IL_02b2;
						IL_02b2:
						num2 = 44;
						lblGifts03.Text = "1";
						goto IL_02c8;
						IL_02c8:
						num2 = 46;
						if (chkCh4.Checked)
						{
							goto IL_02dc;
						}
						goto IL_0316;
						IL_02dc:
						num2 = 47;
						lblGiftV4.Text = Conversions.ToString(Conversion.Val(txtOCTopValue.Text));
						goto IL_0300;
						IL_0300:
						num2 = 48;
						lblGifts04.Text = "1";
						goto IL_0316;
						IL_0316:
						num2 = 50;
						if (chkCh5.Checked)
						{
							goto IL_032a;
						}
						goto IL_0364;
						IL_032a:
						num2 = 51;
						lblGiftV5.Text = Conversions.ToString(Conversion.Val(txtOCTopValue.Text));
						goto IL_034e;
						IL_034e:
						num2 = 52;
						lblGifts05.Text = "1";
						goto IL_0364;
						IL_0364:
						num2 = 54;
						if (chkCh6.Checked)
						{
							goto IL_0378;
						}
						goto IL_03b5;
						IL_0378:
						num2 = 55;
						lblGiftV6.Text = Conversions.ToString(Conversion.Val(txtOCTopValue.Text));
						goto IL_039c;
						IL_039c:
						num2 = 56;
						lblGifts06.Text = "1";
						goto IL_03b5;
						IL_03b5:
						num2 = 59;
						txtLoopSSDOC.Text = Conversions.ToString(Conversion.Val(txtLoopSSDOC.Text) + 1.0);
						goto IL_03e3;
						IL_03e3:
						num2 = 60;
						chkCh1.Checked = flag;
						goto IL_03f4;
						IL_03f4:
						num2 = 61;
						chkCh2.Checked = flag2;
						goto IL_0405;
						IL_0405:
						num2 = 62;
						chkCh3.Checked = flag3;
						goto IL_0416;
						IL_0416:
						num2 = 63;
						chkCh4.Checked = flag4;
						goto IL_0427;
						IL_0427:
						num2 = 64;
						chkCh5.Checked = flag5;
						goto IL_0438;
						IL_0438:
						num2 = 65;
						chkCh6.Checked = flag6;
						goto IL_044a;
						IL_044a:
						num2 = 66;
						num5++;
						goto IL_0451;
						IL_0451:
						num2 = 67;
						if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
						{
							goto IL_04b8;
						}
						goto IL_0c7c;
						IL_04b8:
						num2 = 69;
						if (ckOCBalWithBack.Checked)
						{
							goto IL_04cc;
						}
						goto IL_0537;
						IL_04cc:
						num2 = 70;
						num7 = (int)Math.Round(Conversion.Fix(Conversion.Val(lblBal1.Text)) - Conversion.Val(txtOCTransferSub.Text));
						goto IL_04fd;
						IL_04fd:
						num2 = 71;
						if (num7 <= 0)
						{
							goto IL_050e;
						}
						goto IL_0514;
						IL_050e:
						num2 = 72;
						num7 = 0;
						goto IL_0514;
						IL_0514:
						num2 = 73;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV1.Text) + (double)num7);
						goto IL_0553;
						IL_0537:
						num2 = 75;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV1.Text));
						goto IL_0553;
						IL_0553:
						num2 = 77;
						if (unchecked(((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked) && num6 >= 2))
						{
							goto IL_058f;
						}
						goto IL_05ed;
						IL_058f:
						num2 = 78;
						if (unchecked(num5 == 5 || num5 == 15))
						{
							goto IL_05a2;
						}
						goto IL_05b2;
						IL_05a2:
						num2 = 79;
						ResetUssdCode(lblPort1);
						goto IL_05b2;
						IL_05b2:
						num2 = 80;
						SetUssdOrderVcashTraVXPVaryGiftOrangeCash_one(lblPort1, txtOCchargeNumOne.Text, num6);
						goto IL_05cf;
						IL_05cf:
						num2 = 81;
						if (!chkCh1.Checked)
						{
							goto IL_05e6;
						}
						goto IL_05ed;
						IL_05e6:
						num2 = 82;
						num5 = 0;
						goto IL_05ed;
						IL_05ed:
						num2 = 84;
						if (ckOCBalWithBack.Checked)
						{
							goto IL_0601;
						}
						goto IL_066c;
						IL_0601:
						num2 = 85;
						num7 = (int)Math.Round(Conversion.Fix(Conversion.Val(lblBal2.Text)) - Conversion.Val(txtOCTransferSub.Text));
						goto IL_0632;
						IL_0632:
						num2 = 86;
						if (num7 <= 0)
						{
							goto IL_0643;
						}
						goto IL_0649;
						IL_0643:
						num2 = 87;
						num7 = 0;
						goto IL_0649;
						IL_0649:
						num2 = 88;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV2.Text) + (double)num7);
						goto IL_0688;
						IL_066c:
						num2 = 90;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV2.Text));
						goto IL_0688;
						IL_0688:
						num2 = 92;
						if (unchecked(((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked) && num6 >= 2))
						{
							goto IL_06c4;
						}
						goto IL_0722;
						IL_06c4:
						num2 = 93;
						if (unchecked(num5 == 5 || num5 == 15))
						{
							goto IL_06d7;
						}
						goto IL_06e7;
						IL_06d7:
						num2 = 94;
						ResetUssdCode(lblPort2);
						goto IL_06e7;
						IL_06e7:
						num2 = 95;
						SetUssdOrderVcashTraVXPVaryGiftOrangeCash_one(lblPort2, txtOCchargeNumOne.Text, num6);
						goto IL_0704;
						IL_0704:
						num2 = 96;
						if (!chkCh2.Checked)
						{
							goto IL_071b;
						}
						goto IL_0722;
						IL_071b:
						num2 = 97;
						num5 = 0;
						goto IL_0722;
						IL_0722:
						num2 = 99;
						if (ckOCBalWithBack.Checked)
						{
							goto IL_0736;
						}
						goto IL_07a1;
						IL_0736:
						num2 = 100;
						num7 = (int)Math.Round(Conversion.Fix(Conversion.Val(lblBal3.Text)) - Conversion.Val(txtOCTransferSub.Text));
						goto IL_0767;
						IL_0767:
						num2 = 101;
						if (num7 <= 0)
						{
							goto IL_0778;
						}
						goto IL_077e;
						IL_0778:
						num2 = 102;
						num7 = 0;
						goto IL_077e;
						IL_077e:
						num2 = 103;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV3.Text) + (double)num7);
						goto IL_07bd;
						IL_07a1:
						num2 = 105;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV3.Text));
						goto IL_07bd;
						IL_07bd:
						num2 = 107;
						if (unchecked(((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked) && num6 >= 2))
						{
							goto IL_07f9;
						}
						goto IL_0857;
						IL_07f9:
						num2 = 108;
						if (unchecked(num5 == 5 || num5 == 15))
						{
							goto IL_080c;
						}
						goto IL_081c;
						IL_080c:
						num2 = 109;
						ResetUssdCode(lblPort3);
						goto IL_081c;
						IL_081c:
						num2 = 110;
						SetUssdOrderVcashTraVXPVaryGiftOrangeCash_one(lblPort3, txtOCchargeNumOne.Text, num6);
						goto IL_0839;
						IL_0839:
						num2 = 111;
						if (!chkCh3.Checked)
						{
							goto IL_0850;
						}
						goto IL_0857;
						IL_0850:
						num2 = 112;
						num5 = 0;
						goto IL_0857;
						IL_0857:
						num2 = 114;
						if (ckOCBalWithBack.Checked)
						{
							goto IL_086b;
						}
						goto IL_08d6;
						IL_086b:
						num2 = 115;
						num7 = (int)Math.Round(Conversion.Fix(Conversion.Val(lblBal4.Text)) - Conversion.Val(txtOCTransferSub.Text));
						goto IL_089c;
						IL_089c:
						num2 = 116;
						if (num7 <= 0)
						{
							goto IL_08ad;
						}
						goto IL_08b3;
						IL_08ad:
						num2 = 117;
						num7 = 0;
						goto IL_08b3;
						IL_08b3:
						num2 = 118;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV4.Text) + (double)num7);
						goto IL_08f2;
						IL_08d6:
						num2 = 120;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV4.Text));
						goto IL_08f2;
						IL_08f2:
						num2 = 122;
						if (unchecked(((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked) && num6 >= 2))
						{
							goto IL_092e;
						}
						goto IL_098c;
						IL_092e:
						num2 = 123;
						if (unchecked(num5 == 5 || num5 == 15))
						{
							goto IL_0941;
						}
						goto IL_0951;
						IL_0941:
						num2 = 124;
						ResetUssdCode(lblPort4);
						goto IL_0951;
						IL_0951:
						num2 = 125;
						SetUssdOrderVcashTraVXPVaryGiftOrangeCash_one(lblPort4, txtOCchargeNumOne.Text, num6);
						goto IL_096e;
						IL_096e:
						num2 = 126;
						if (!chkCh4.Checked)
						{
							goto IL_0985;
						}
						goto IL_098c;
						IL_0985:
						num2 = 127;
						num5 = 0;
						goto IL_098c;
						IL_098c:
						num2 = 129;
						if (ckOCBalWithBack.Checked)
						{
							goto IL_09a3;
						}
						goto IL_0a1a;
						IL_09a3:
						num2 = 130;
						num7 = (int)Math.Round(Conversion.Fix(Conversion.Val(lblBal5.Text)) - Conversion.Val(txtOCTransferSub.Text));
						goto IL_09d7;
						IL_09d7:
						num2 = 131;
						if (num7 <= 0)
						{
							goto IL_09eb;
						}
						goto IL_09f4;
						IL_09eb:
						num2 = 132;
						num7 = 0;
						goto IL_09f4;
						IL_09f4:
						num2 = 133;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV5.Text) + (double)num7);
						goto IL_0a39;
						IL_0a1a:
						num2 = 135;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV5.Text));
						goto IL_0a39;
						IL_0a39:
						num2 = 137;
						if (unchecked(((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked) && num6 >= 2))
						{
							goto IL_0a78;
						}
						goto IL_0ae5;
						IL_0a78:
						num2 = 138;
						if (unchecked(num5 == 5 || num5 == 15))
						{
							goto IL_0a8e;
						}
						goto IL_0aa1;
						IL_0a8e:
						num2 = 139;
						ResetUssdCode(lblPort5);
						goto IL_0aa1;
						IL_0aa1:
						num2 = 140;
						SetUssdOrderVcashTraVXPVaryGiftOrangeCash_one(lblPort5, txtOCchargeNumOne.Text, num6);
						goto IL_0ac1;
						IL_0ac1:
						num2 = 141;
						if (!chkCh5.Checked)
						{
							goto IL_0adb;
						}
						goto IL_0ae5;
						IL_0adb:
						num2 = 142;
						num5 = 0;
						goto IL_0ae5;
						IL_0ae5:
						num2 = 144;
						if (ckOCBalWithBack.Checked)
						{
							goto IL_0afc;
						}
						goto IL_0b73;
						IL_0afc:
						num2 = 145;
						num7 = (int)Math.Round(Conversion.Fix(Conversion.Val(lblBal6.Text)) - Conversion.Val(txtOCTransferSub.Text));
						goto IL_0b30;
						IL_0b30:
						num2 = 146;
						if (num7 <= 0)
						{
							goto IL_0b44;
						}
						goto IL_0b4d;
						IL_0b44:
						num2 = 147;
						num7 = 0;
						goto IL_0b4d;
						IL_0b4d:
						num2 = 148;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV6.Text) + (double)num7);
						goto IL_0b92;
						IL_0b73:
						num2 = 150;
						num6 = (int)Math.Round(Conversion.Val(lblGiftV6.Text));
						goto IL_0b92;
						IL_0b92:
						num2 = 152;
						if (unchecked(((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked) && num6 >= 2))
						{
							goto IL_0bd1;
						}
						goto IL_0c3e;
						IL_0bd1:
						num2 = 153;
						if (unchecked(num5 == 5 || num5 == 15))
						{
							goto IL_0be7;
						}
						goto IL_0bfa;
						IL_0be7:
						num2 = 154;
						ResetUssdCode(lblPort6);
						goto IL_0bfa;
						IL_0bfa:
						num2 = 155;
						SetUssdOrderVcashTraVXPVaryGiftOrangeCash_one(lblPort6, txtOCchargeNumOne.Text, num6);
						goto IL_0c1a;
						IL_0c1a:
						num2 = 156;
						if (!chkCh6.Checked)
						{
							goto IL_0c34;
						}
						goto IL_0c3e;
						IL_0c34:
						num2 = 157;
						num5 = 0;
						goto IL_0c3e;
						IL_0c3e:
						num2 = 159;
						if (!chkStop.Checked)
						{
							goto IL_0c57;
						}
						goto IL_0c7c;
						IL_0c57:
						num2 = 161;
						if (num5 <= 6)
						{
							goto IL_044a;
						}
						goto IL_0c6f;
						IL_0c6f:
						num2 = 163;
						Application.DoEvents();
						goto IL_0c7c;
						IL_0c7c:
						num2 = 164;
						Application.DoEvents();
						goto IL_0c88;
						end_IL_0001_2:
						break;
					}
					num2 = 171;
					lblProgress.Text = "OK";
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 4055;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnOCMAuto_Click(object sender, EventArgs e)
	{
		int num = 2000;
		int num2 = 0;
		int num3 = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (txtOCPass.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد اورنج كاش");
			return;
		}
		if (txtOCPassMaster.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد اورنج ماستر");
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Conversion.Val(txtOCMValue.Text) < 5.0)
		{
			Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
			return;
		}
		if ((Operators.CompareString(lblOCMMain.Text, lblNum1.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum2.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum3.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum4.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum5.Text, TextCompare: false) != 0) & (Operators.CompareString(lblOCMMain.Text, lblNum6.Text, TextCompare: false) != 0))
		{
			Interaction.MsgBox("مشكلة بالاساسى");
			return;
		}
		Application.DoEvents();
		lblGifts01.Text = "0";
		lblGifts02.Text = "0";
		lblGifts03.Text = "0";
		lblGifts04.Text = "0";
		lblGifts05.Text = "0";
		lblGifts06.Text = "0";
		lblGiftV1.Text = "0";
		lblGiftV2.Text = "0";
		lblGiftV3.Text = "0";
		lblGiftV4.Text = "0";
		lblGiftV5.Text = "0";
		lblGiftV6.Text = "0";
		if (chkStop.Checked)
		{
			return;
		}
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		lblProgress.Text = "Orange Input ";
		Application.DoEvents();
		ArrangOClinesMaster();
		btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		btnUssdReset_Click(RuntimeHelpers.GetObjectValue(sender), e);
		bool flag = chkCh1.Checked;
		bool flag2 = chkCh2.Checked;
		bool flag3 = chkCh3.Checked;
		bool flag4 = chkCh4.Checked;
		bool flag5 = chkCh5.Checked;
		bool flag6 = chkCh6.Checked;
		while (true)
		{
			lblProgress.BackColor = Color.Red;
			chkCh2.Checked = flag2;
			chkCh3.Checked = flag3;
			chkCh4.Checked = flag4;
			chkCh5.Checked = flag5;
			chkCh6.Checked = flag6;
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if (!(!chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
			{
				if (chkCh2.Checked)
				{
					ApplyUssdCodeOC_Mex_Master2(lblPort1, lblNum2.Text, 1, Conversion.Val(txtOCMValue.Text), chkCh2);
					Thread.Sleep(1000);
				}
				if (chkStop.Checked)
				{
					break;
				}
				if (chkCh3.Checked)
				{
					ApplyUssdCodeOC_Mex_Master2(lblPort1, lblNum3.Text, 1, Conversion.Val(txtOCMValue.Text), chkCh3);
					Thread.Sleep(1000);
				}
				if (chkStop.Checked)
				{
					break;
				}
				if (chkCh4.Checked)
				{
					ApplyUssdCodeOC_Mex_Master2(lblPort1, lblNum4.Text, 1, Conversion.Val(txtOCMValue.Text), chkCh4);
					Thread.Sleep(1000);
				}
				if (chkStop.Checked)
				{
					break;
				}
				if (chkCh5.Checked)
				{
					ApplyUssdCodeOC_Mex_Master2(lblPort1, lblNum5.Text, 1, Conversion.Val(txtOCMValue.Text), chkCh5);
					Thread.Sleep(1000);
				}
				if (chkStop.Checked)
				{
					break;
				}
				if (chkCh6.Checked)
				{
					ApplyUssdCodeOC_Mex_Master2(lblPort1, lblNum6.Text, 1, Conversion.Val(txtOCMValue.Text), chkCh6);
				}
				if (!(!chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
				{
				}
			}
			num2 = 0;
			chkCh2.Checked = flag2;
			chkCh3.Checked = flag3;
			chkCh4.Checked = flag4;
			chkCh5.Checked = flag5;
			chkCh6.Checked = flag6;
			if (chkStop.Checked)
			{
				break;
			}
			if (!(!chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
			{
				AcceptMasterOcash();
				if (!chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
				{
				}
				flag2 = ((flag2 & !txtRet02.Text.Contains("تم الايداع بنجاح")) ? true : false);
				flag3 = ((flag3 & !txtRet03.Text.Contains("تم الايداع بنجاح")) ? true : false);
				flag4 = ((flag4 & !txtRet04.Text.Contains("تم الايداع بنجاح")) ? true : false);
				flag5 = ((flag5 & !txtRet05.Text.Contains("تم الايداع بنجاح")) ? true : false);
				flag6 = ((flag6 & !txtRet06.Text.Contains("تم الايداع بنجاح")) ? true : false);
				if (num < 9000 && !(!flag2 && !flag3 && !flag4 && !flag5 && !flag6))
				{
					num = checked(num + 3000);
					continue;
				}
			}
			Application.DoEvents();
			num2 = checked(num2 + 1);
			break;
		}
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void AcceptMasterOcash()
	{
		ReSetUssdOrder();
		if (chkCh2.Checked)
		{
			ApplyUssdCodeOC_Mex_Accept(lblPort2);
			Application.DoEvents();
		}
		if (chkStop.Checked)
		{
			return;
		}
		if (chkCh3.Checked)
		{
			ApplyUssdCodeOC_Mex_Accept(lblPort3);
			Application.DoEvents();
		}
		if (chkStop.Checked)
		{
			return;
		}
		if (chkCh4.Checked)
		{
			ApplyUssdCodeOC_Mex_Accept(lblPort4);
			Application.DoEvents();
		}
		if (!chkStop.Checked)
		{
			if (chkCh5.Checked)
			{
				ApplyUssdCodeOC_Mex_Accept(lblPort5);
				Application.DoEvents();
			}
			if (!chkStop.Checked && chkCh6.Checked)
			{
				ApplyUssdCodeOC_Mex_Accept(lblPort6);
				Application.DoEvents();
			}
		}
	}

	private void txtRet01_TextChanged(object sender, EventArgs e)
	{
	}

	private void btnAutoVCnormECOne_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Conversion.Val(txtMonyMnEC.Text) < 1.0)
		{
			Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
			return;
		}
		if (txtPassEC.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد الكاش");
			return;
		}
		if (lblMainEC.Text.Trim().Length != 11)
		{
			Interaction.MsgBox("حدد الرقم الاساسى");
			return;
		}
		if (txtCashNextMasterEC.Text.Trim().Length != 11)
		{
			Interaction.MsgBox("حدد الرقم الاساسى التالى");
			return;
		}
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		ArrangVClinesEC();
		chkCh1.Checked = true;
		chkCh2.Checked = false;
		chkCh3.Checked = false;
		chkCh4.Checked = false;
		chkCh5.Checked = false;
		chkCh6.Checked = false;
		lblProgress.BackColor = Color.Red;
		num = checked(num + 1);
		if (!chkStop.Checked && !(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
		{
			lblProgress.Text = " ES Cash ";
			ApplyUssdCodeEC_Mex(lblPort1, txtCashNextMasterEC.Text.Trim(), Conversion.Val(txtMonyMnEC.Text), TempCheck, TempCheck);
			Application.DoEvents();
		}
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btnVodaCashFreeTransfer_Click(object sender, EventArgs e)
	{
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "Apply In Voda Free Fees";
		DisableCntl();
		ApplyUssdCodeTOport("*9*777#");
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void ApplyUssdCodeTOport(string Ussdstr)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string ussdCommand = default(string);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1340:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0010;
						case 4:
						case 34:
							goto IL_0015;
						case 5:
							goto IL_001b;
						case 7:
							goto IL_0081;
						case 8:
							goto IL_00b3;
						case 9:
							goto IL_00d0;
						case 10:
							goto IL_0103;
						case 11:
							goto IL_0121;
						case 12:
							goto IL_0154;
						case 13:
							goto IL_0172;
						case 14:
							goto IL_01a5;
						case 15:
							goto IL_01c3;
						case 16:
							goto IL_01f6;
						case 17:
							goto IL_0214;
						case 18:
							goto IL_0247;
						case 19:
							goto IL_0265;
						case 20:
							goto IL_0273;
						case 21:
							goto IL_02a6;
						case 22:
							goto IL_02ca;
						case 23:
							goto IL_02fd;
						case 24:
							goto IL_0321;
						case 25:
							goto IL_0354;
						case 26:
							goto IL_0378;
						case 27:
							goto IL_03ab;
						case 28:
							goto IL_03cf;
						case 29:
							goto IL_0402;
						case 30:
							goto IL_0426;
						case 31:
							goto IL_0459;
						case 32:
							goto IL_047d;
						case 33:
							goto IL_0486;
						default:
							goto end_IL_0001;
						case 6:
						case 35:
							goto end_IL_0001_2;
						}
						goto default;
					}
					IL_0459:
					num2 = 31;
					ApplyUssdCodesPCJetGet(lblPort6, ussdCommand, txtRet06, lblNum6, chkCh6);
					goto IL_047d;
					IL_047d:
					num2 = 32;
					Application.DoEvents();
					goto IL_0486;
					IL_0426:
					num2 = 30;
					if ((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_0459;
					}
					goto IL_047d;
					IL_0486:
					num2 = 33;
					if (num5 <= 5)
					{
						goto IL_0015;
					}
					goto end_IL_0001_2;
					IL_000b:
					num2 = 2;
					ussdCommand = Ussdstr;
					goto IL_0010;
					IL_0010:
					num2 = 3;
					num5 = 0;
					goto IL_0015;
					IL_0015:
					num2 = 4;
					num5 = checked(num5 + 1);
					goto IL_001b;
					IL_001b:
					num2 = 5;
					if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
					{
						goto end_IL_0001_2;
					}
					goto IL_0081;
					IL_0081:
					num2 = 7;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_00b3;
					}
					goto IL_00d0;
					IL_00b3:
					num2 = 8;
					ApplyUssdCodesPCJetSet(lblPort1, ussdCommand, txtRet01, lblNum1);
					goto IL_00d0;
					IL_00d0:
					num2 = 9;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_0103;
					}
					goto IL_0121;
					IL_0103:
					num2 = 10;
					ApplyUssdCodesPCJetSet(lblPort2, ussdCommand, txtRet02, lblNum2);
					goto IL_0121;
					IL_0121:
					num2 = 11;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_0154;
					}
					goto IL_0172;
					IL_0154:
					num2 = 12;
					ApplyUssdCodesPCJetSet(lblPort3, ussdCommand, txtRet03, lblNum3);
					goto IL_0172;
					IL_0172:
					num2 = 13;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_01a5;
					}
					goto IL_01c3;
					IL_01a5:
					num2 = 14;
					ApplyUssdCodesPCJetSet(lblPort4, ussdCommand, txtRet04, lblNum4);
					goto IL_01c3;
					IL_01c3:
					num2 = 15;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_01f6;
					}
					goto IL_0214;
					IL_01f6:
					num2 = 16;
					ApplyUssdCodesPCJetSet(lblPort5, ussdCommand, txtRet05, lblNum5);
					goto IL_0214;
					IL_0214:
					num2 = 17;
					if ((Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_0247;
					}
					goto IL_0265;
					IL_0247:
					num2 = 18;
					ApplyUssdCodesPCJetSet(lblPort6, ussdCommand, txtRet06, lblNum6);
					goto IL_0265;
					IL_0265:
					num2 = 19;
					Thread.Sleep(500);
					goto IL_0273;
					IL_0273:
					num2 = 20;
					if ((Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_02a6;
					}
					goto IL_02ca;
					IL_02a6:
					num2 = 21;
					ApplyUssdCodesPCJetGet(lblPort1, ussdCommand, txtRet01, lblNum1, chkCh1);
					goto IL_02ca;
					IL_02ca:
					num2 = 22;
					if ((Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_02fd;
					}
					goto IL_0321;
					IL_02fd:
					num2 = 23;
					ApplyUssdCodesPCJetGet(lblPort2, ussdCommand, txtRet02, lblNum2, chkCh2);
					goto IL_0321;
					IL_0321:
					num2 = 24;
					if ((Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_0354;
					}
					goto IL_0378;
					IL_0354:
					num2 = 25;
					ApplyUssdCodesPCJetGet(lblPort3, ussdCommand, txtRet03, lblNum3, chkCh3);
					goto IL_0378;
					IL_0378:
					num2 = 26;
					if ((Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_03ab;
					}
					goto IL_03cf;
					IL_03ab:
					num2 = 27;
					ApplyUssdCodesPCJetGet(lblPort4, ussdCommand, txtRet04, lblNum4, chkCh4);
					goto IL_03cf;
					IL_03cf:
					num2 = 28;
					if ((Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0402;
					}
					goto IL_0426;
					IL_0402:
					num2 = 29;
					ApplyUssdCodesPCJetGet(lblPort5, ussdCommand, txtRet05, lblNum5, chkCh5);
					goto IL_0426;
					end_IL_0001:
					break;
				}
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1340;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_2:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodesPCJetSet(Label Exxc, string UssdCommand, TextBox Eeret, Label Enumtxt)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					if (Exxc.ForeColor == Color.White)
					{
						goto end_IL_0001;
					}
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					string commandCode = encoding_mod.GetCommandCode(UssdCommand);
					serialPort.WriteLine(commandCode + "\r");
					break;
				}
				case 135:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001_2;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				break;
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 135;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdCodesPCJetGet(Label Exxc, string UssdCommand, TextBox Eeret, Label Enumtxt, CheckBox Eck)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Exxc.ForeColor == Color.White)
						{
							goto end_IL_0001;
						}
						serialPort = new SerialPort();
						serialPort.PortName = Exxc.Text;
						if (!serialPort.IsOpen)
						{
							serialPort.Open();
						}
						string commandCode = encoding_mod.GetCommandCode(UssdCommand);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(250);
						Application.DoEvents();
						int num3 = 0;
						do
						{
							Thread.Sleep(250);
							int num4 = 1;
							string text = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
							{
								txtInfo.Text = text + "\r\n" + txtInfo.Text;
							}
							if (text.Contains("+CUSD: "))
							{
								int num5 = text.IndexOf("+CUSD: ");
								string text2 = text.Substring(num5 + 10, text.Length - num5 - 10).Trim().Trim('o')
									.Trim('\r')
									.Trim('\r')
									.Trim()
									.Trim(',');
								num5 = text2.IndexOf(",");
								string text3 = text2.Substring(0, num5).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
								{
									byte[] bytes = encoding_mod.StrToByteArray(text3);
									commandCode = Encoding.BigEndianUnicode.GetString(bytes);
								}
								else
								{
									commandCode = encoding_mod.Decode7Bit(text3);
								}
								Eeret.Text = commandCode + "\r\n" + Eeret.Text;
								Eck.Checked = false;
								if (commandCode.Contains("عفوا هذا الرقم غير مشترك في خدمه فودافون كاش"))
								{
									Eeret.ForeColor = Color.LightGray;
								}
								else if (commandCode.Contains("حول من علي المحفظة  ب100 جنية واكسب 5"))
								{
									Eeret.ForeColor = Color.PaleVioletRed;
								}
								else if (commandCode.Contains("اودع ب100 جنية واكسب 20 جنية كاش باك هدية"))
								{
									Eeret.ForeColor = Color.Red;
								}
								else if (commandCode.Contains("You are currently not eligible for any offers") | commandCode.Contains("ا يوجد عروض متاحه في الوقت الحالي"))
								{
									Eeret.ForeColor = Color.White;
								}
								else if (commandCode.Contains("حول  150 جنية من علي المحفظة واكسب 100 وحدة هدي"))
								{
									Eeret.ForeColor = Color.Orange;
								}
								else if (commandCode.Contains("اودع ب200 جنية واكسب 150 وحدة هدية"))
								{
									Eeret.ForeColor = Color.Pink;
								}
								else
								{
									Application.DoEvents();
								}
								break;
							}
							if (text.Contains("retry operation"))
							{
								Eeret.Text = text + "\r\n" + Eeret.Text;
								Application.DoEvents();
								break;
							}
							num3++;
						}
						while (num3 <= 20);
						break;
					}
					case 869:
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001_2;
						}
						break;
					}
					serialPort.Close();
					serialPort.Dispose();
					serialPort = null;
					Application.DoEvents();
					break;
				}
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 869;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnOCFreeTransfer_Click(object sender, EventArgs e)
	{
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "Apply In Orange Free Fees";
		DisableCntl();
		ApplyUssdCodeTOport("#770#");
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btnClearOCsms_Click(object sender, EventArgs e)
	{
		lstOCNumberssms.Items.Clear();
		lblOCDonesms.Text = "0";
	}

	private void ApplyUssdOCGIFTS58(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string commandCode = default(string);
		string ussdCommandFull = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 214:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0014;
						case 4:
							goto IL_0024;
						case 5:
							goto IL_0036;
						case 6:
							goto IL_0040;
						case 7:
							goto IL_0049;
						case 8:
							goto IL_0053;
						case 9:
							goto IL_0068;
						case 10:
							goto IL_0073;
						case 11:
							goto IL_007e;
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0068:
					num2 = 9;
					serialPort.Close();
					goto IL_0073;
					IL_0073:
					num2 = 10;
					serialPort.Dispose();
					goto IL_007e;
					IL_0053:
					num2 = 8;
					serialPort.WriteLine(commandCode + "\r");
					goto IL_0068;
					IL_007e:
					num2 = 11;
					serialPort = null;
					break;
					IL_000b:
					num2 = 2;
					serialPort = new SerialPort();
					goto IL_0014;
					IL_0014:
					num2 = 3;
					serialPort.PortName = Exxc.Text;
					goto IL_0024;
					IL_0024:
					num2 = 4;
					if (!serialPort.IsOpen)
					{
						goto IL_0036;
					}
					goto IL_0040;
					IL_0036:
					num2 = 5;
					serialPort.Open();
					goto IL_0040;
					IL_0040:
					num2 = 6;
					ussdCommandFull = "#58#";
					goto IL_0049;
					IL_0049:
					num2 = 7;
					commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					goto IL_0053;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 214;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string ApplyUssdOCGIFTS58Ret(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num3 = default(int);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					num3 = 0;
					double num4 = 0.0;
					do
					{
						Application.DoEvents();
						Thread.Sleep(500);
						string text = serialPort.ReadExisting();
						if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
						{
							txtInfo.Text = text + "\r\n" + txtInfo.Text;
						}
						if (text.Contains("+CUSD:"))
						{
							int num5 = ((!text.Contains("+CUSD: 0")) ? text.IndexOf("+CUSD: 1") : text.IndexOf("+CUSD: 0"));
							string text2 = checked(text.Substring(num5 + 9, text.Length - num5 - 9)).Trim().Trim('o').Trim('\r')
								.Trim('\r')
								.Trim();
							num5 = text2.IndexOf(",");
							string text3 = text2.Substring(0, num5).Trim().Trim('"')
								.Trim(',')
								.Trim('"');
							text3 = text3.Trim('"').Trim(',').Trim('"');
							string text4;
							if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
							{
								byte[] bytes = encoding_mod.StrToByteArray(text3);
								text4 = Encoding.BigEndianUnicode.GetString(bytes);
							}
							else
							{
								text4 = encoding_mod.Decode7Bit(text3);
							}
							OutBoxDrop(Exxc, text4);
							if (text4.Contains("مبروك, ستصلك رسالة") | text4.Contains("Congrats, you will receive a "))
							{
								Thread.Sleep(1000);
								Application.DoEvents();
								break;
							}
							if (text4.Contains("لا يمكننا تنفيذ طلبك الا\u0651"))
							{
								DisablePort(Exxc);
								Application.DoEvents();
								break;
							}
							if (text4.Contains("لا يمكن تنفيذ طلبك") | text4.Contains("Sorry, you request cannot be processed"))
							{
								DisablePort(Exxc);
								Application.DoEvents();
								break;
							}
							if (text4.Contains("عفوا\u0651 لا يمكننا استكمال طلبك الأن, برجاء المحاولة مرة") | text4.Contains("م نتلقى اختيارك في المدة المحددة"))
							{
								Application.DoEvents();
								break;
							}
							Application.DoEvents();
						}
						if (text.Contains("unknown") | text.Contains("+CUSD: 2") | text.Contains("retry operation"))
						{
							break;
						}
						Application.DoEvents();
						num4 += 1.0;
					}
					while (num4 <= 10.0);
					break;
				}
				case 854:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				result = Conversions.ToString(num3);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 854;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void btnSendSmsToNumber_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					int num5;
					switch (try0001_dispatch)
					{
					default:
						ProjectData.ClearProjectError();
						num3 = -2;
						goto IL_000b;
					case 3480:
						{
							num = num2;
							switch ((num3 <= -2) ? 1 : num3)
							{
							case 1:
								break;
							default:
								goto end_IL_0001;
							}
							int num4 = unchecked(num + 1);
							num = 0;
							switch (num4)
							{
							case 1:
								break;
							case 2:
								goto IL_000b;
							case 3:
								goto IL_000f;
							case 4:
								goto IL_0020;
							case 6:
							case 7:
								goto IL_003a;
							case 8:
								goto IL_005a;
							case 10:
							case 11:
								goto IL_0074;
							case 12:
								goto IL_0093;
							case 14:
							case 15:
								goto IL_00ae;
							case 16:
								goto IL_00fb;
							case 18:
							case 19:
								goto IL_0116;
							case 20:
								goto IL_012a;
							case 21:
								goto IL_013e;
							case 22:
								goto IL_0148;
							case 25:
								goto IL_0174;
							case 26:
								goto IL_0192;
							case 27:
								goto IL_01b0;
							case 28:
								goto IL_01ce;
							case 29:
								goto IL_01d7;
							case 30:
								goto IL_01e5;
							case 23:
							case 24:
							case 32:
							case 33:
								goto IL_025b;
							case 31:
							case 34:
							case 35:
								goto IL_02bc;
							case 36:
							case 88:
								goto IL_02d1;
							case 37:
								goto IL_02e5;
							case 38:
								goto IL_02f9;
							case 39:
								goto IL_0327;
							case 41:
								goto IL_038e;
							case 42:
								goto IL_03c4;
							case 43:
								goto IL_03f2;
							case 44:
								goto IL_0423;
							case 45:
								goto IL_0473;
							case 46:
							case 47:
							case 48:
								goto IL_04df;
							case 49:
								goto IL_0515;
							case 50:
								goto IL_0543;
							case 51:
								goto IL_0574;
							case 52:
								goto IL_05c4;
							case 53:
							case 54:
							case 55:
								goto IL_0630;
							case 56:
								goto IL_0666;
							case 57:
								goto IL_0694;
							case 58:
								goto IL_06c5;
							case 59:
								goto IL_0715;
							case 60:
							case 61:
							case 62:
								goto IL_0781;
							case 63:
								goto IL_07b7;
							case 64:
								goto IL_07e5;
							case 65:
								goto IL_0816;
							case 66:
								goto IL_0866;
							case 67:
							case 68:
							case 69:
								goto IL_08d2;
							case 70:
								goto IL_0908;
							case 71:
								goto IL_0936;
							case 72:
								goto IL_0967;
							case 73:
								goto IL_09b7;
							case 74:
							case 75:
							case 76:
								goto IL_0a23;
							case 77:
								goto IL_0a59;
							case 78:
								goto IL_0a87;
							case 79:
								goto IL_0ab8;
							case 80:
								goto IL_0b08;
							case 81:
							case 82:
							case 83:
								goto IL_0b74;
							case 85:
								goto IL_0b8a;
							case 86:
								goto IL_0b93;
							case 87:
								goto IL_0bbe;
							case 40:
							case 84:
							case 89:
							case 90:
								goto IL_0bdd;
							case 91:
								goto IL_0be7;
							case 92:
								goto end_IL_0001_2;
							default:
								goto end_IL_0001;
							case 5:
							case 9:
							case 13:
							case 17:
							case 93:
								goto end_IL_0001_3;
							}
							goto default;
						}
						IL_0bbe:
						num2 = 87;
						if (!chkStop.Checked)
						{
							goto IL_02d1;
						}
						goto IL_0bdd;
						IL_0bdd:
						num2 = 90;
						EnableCntl();
						goto IL_0be7;
						IL_0b93:
						num2 = 86;
						if (Conversion.Val(txtLoopSsms.Text) < Conversion.Val(txtLoopFsms.Text))
						{
							goto IL_0bbe;
						}
						goto IL_0bdd;
						IL_0be7:
						num2 = 91;
						lblProgress.BackColor = Color.LimeGreen;
						break;
						IL_000b:
						num2 = 2;
						num5 = 0;
						goto IL_000f;
						IL_000f:
						num2 = 3;
						if (MysqlConn.MainProgLic < 11)
						{
							goto IL_0020;
						}
						goto IL_003a;
						IL_0020:
						num2 = 4;
						lblProgress.Text = "Inactive function";
						goto end_IL_0001_3;
						IL_003a:
						num2 = 7;
						if (lblPort1.Text.Trim().Length == 0)
						{
							goto IL_005a;
						}
						goto IL_0074;
						IL_005a:
						num2 = 8;
						lblProgress.Text = "No numbers found";
						goto end_IL_0001_3;
						IL_0074:
						num2 = 11;
						if (txtSMStothisnumber.Text.Length <= 2)
						{
							goto IL_0093;
						}
						goto IL_00ae;
						IL_0093:
						num2 = 12;
						lblProgress.Text = "Please input send number";
						goto end_IL_0001_3;
						IL_00ae:
						num2 = 15;
						if ((Conversion.Val(lblCountPresms.Text) <= 0.0) | (Conversion.Val(lblCountPresms.Text) <= Conversion.Val(lblOCDonesms.Text)))
						{
							goto IL_00fb;
						}
						goto IL_0116;
						IL_00fb:
						num2 = 16;
						lblProgress.Text = "Please add codes";
						goto end_IL_0001_3;
						IL_0116:
						num2 = 19;
						lblProgress.BackColor = Color.Red;
						goto IL_012a;
						IL_012a:
						num2 = 20;
						lblProgress.Text = "SMS";
						goto IL_013e;
						IL_013e:
						num2 = 21;
						DisableCntl();
						goto IL_0148;
						IL_0148:
						num2 = 22;
						if (Conversion.Val(txtSmsT_H.Text) > 0.0)
						{
							goto IL_025b;
						}
						goto IL_02bc;
						IL_025b:
						num2 = 24;
						if (!((Conversion.Val(txtSmsT_H.Text) == 0.0) & (Conversion.Val(txtSmsT_M.Text) == 0.0) & (Conversion.Val(txtSmsT_S.Text) == 0.0)))
						{
							goto IL_0174;
						}
						goto IL_02bc;
						IL_0174:
						num2 = 25;
						txtSmsT_HR.Text = Conversions.ToString(DateAndTime.Hour(DateAndTime.Now));
						goto IL_0192;
						IL_0192:
						num2 = 26;
						txtSmsT_MR.Text = Conversions.ToString(DateAndTime.Minute(DateAndTime.Now));
						goto IL_01b0;
						IL_01b0:
						num2 = 27;
						txtSmsT_SR.Text = Conversions.ToString(DateAndTime.Second(DateAndTime.Now));
						goto IL_01ce;
						IL_01ce:
						num2 = 28;
						Application.DoEvents();
						goto IL_01d7;
						IL_01d7:
						num2 = 29;
						Thread.Sleep(200);
						goto IL_01e5;
						IL_01e5:
						num2 = 30;
						if (!((Conversion.Val(txtSmsT_H.Text) == Conversion.Val(txtSmsT_HR.Text)) & (Conversion.Val(txtSmsT_M.Text) == Conversion.Val(txtSmsT_MR.Text)) & (Conversion.Val(txtSmsT_S.Text) == Conversion.Val(txtSmsT_SR.Text))))
						{
							goto IL_025b;
						}
						goto IL_02bc;
						IL_02bc:
						num2 = 35;
						txtLoopSsms.Text = "0";
						goto IL_02d1;
						IL_02d1:
						num2 = 36;
						lblProgress.BackColor = Color.Red;
						goto IL_02e5;
						IL_02e5:
						num2 = 37;
						lblProgress.Text = "SMS";
						goto IL_02f9;
						IL_02f9:
						num2 = 38;
						txtLoopSsms.Text = Conversions.ToString(Conversion.Val(txtLoopSsms.Text) + 1.0);
						goto IL_0327;
						IL_0327:
						num2 = 39;
						if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
						{
							goto IL_038e;
						}
						goto IL_0bdd;
						IL_038e:
						num2 = 41;
						if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
						{
							goto IL_03c4;
						}
						goto IL_04df;
						IL_03c4:
						num2 = 42;
						lblOCDonesms.Text = Conversions.ToString(Conversion.Val(lblOCDonesms.Text) + 1.0);
						goto IL_03f2;
						IL_03f2:
						num2 = 43;
						if (Conversion.Val(lblCountPresms.Text) >= Conversion.Val(lblOCDonesms.Text))
						{
							goto IL_0423;
						}
						goto IL_04df;
						IL_0423:
						num2 = 44;
						SendSmsToThisNumber(lblPort1, lblNum1.Text, Conversions.ToString(lstOCNumberssms.Items[(int)Math.Round(Conversion.Val(lblOCDonesms.Text) - 1.0)]));
						goto IL_0473;
						IL_0473:
						num2 = 45;
						txtRet01.Text = Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject("Sent ", lstOCNumberssms.Items[(int)Math.Round(Conversion.Val(lblOCDonesms.Text) - 1.0)]), "\r\n"), txtRet01.Text));
						goto IL_04df;
						IL_04df:
						num2 = 48;
						if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
						{
							goto IL_0515;
						}
						goto IL_0630;
						IL_0515:
						num2 = 49;
						lblOCDonesms.Text = Conversions.ToString(Conversion.Val(lblOCDonesms.Text) + 1.0);
						goto IL_0543;
						IL_0543:
						num2 = 50;
						if (Conversion.Val(lblCountPresms.Text) >= Conversion.Val(lblOCDonesms.Text))
						{
							goto IL_0574;
						}
						goto IL_0630;
						IL_0574:
						num2 = 51;
						SendSmsToThisNumber(lblPort2, lblNum2.Text, Conversions.ToString(lstOCNumberssms.Items[(int)Math.Round(Conversion.Val(lblOCDonesms.Text) - 1.0)]));
						goto IL_05c4;
						IL_05c4:
						num2 = 52;
						txtRet02.Text = Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject("Sent ", lstOCNumberssms.Items[(int)Math.Round(Conversion.Val(lblOCDonesms.Text) - 1.0)]), "\r\n"), txtRet02.Text));
						goto IL_0630;
						IL_0630:
						num2 = 55;
						if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
						{
							goto IL_0666;
						}
						goto IL_0781;
						IL_0666:
						num2 = 56;
						lblOCDonesms.Text = Conversions.ToString(Conversion.Val(lblOCDonesms.Text) + 1.0);
						goto IL_0694;
						IL_0694:
						num2 = 57;
						if (Conversion.Val(lblCountPresms.Text) >= Conversion.Val(lblOCDonesms.Text))
						{
							goto IL_06c5;
						}
						goto IL_0781;
						IL_06c5:
						num2 = 58;
						SendSmsToThisNumber(lblPort3, lblNum3.Text, Conversions.ToString(lstOCNumberssms.Items[(int)Math.Round(Conversion.Val(lblOCDonesms.Text) - 1.0)]));
						goto IL_0715;
						IL_0715:
						num2 = 59;
						txtRet03.Text = Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject("Sent ", lstOCNumberssms.Items[(int)Math.Round(Conversion.Val(lblOCDonesms.Text) - 1.0)]), "\r\n"), txtRet03.Text));
						goto IL_0781;
						IL_0781:
						num2 = 62;
						if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
						{
							goto IL_07b7;
						}
						goto IL_08d2;
						IL_07b7:
						num2 = 63;
						lblOCDonesms.Text = Conversions.ToString(Conversion.Val(lblOCDonesms.Text) + 1.0);
						goto IL_07e5;
						IL_07e5:
						num2 = 64;
						if (Conversion.Val(lblCountPresms.Text) >= Conversion.Val(lblOCDonesms.Text))
						{
							goto IL_0816;
						}
						goto IL_08d2;
						IL_0816:
						num2 = 65;
						SendSmsToThisNumber(lblPort4, lblNum4.Text, Conversions.ToString(lstOCNumberssms.Items[(int)Math.Round(Conversion.Val(lblOCDonesms.Text) - 1.0)]));
						goto IL_0866;
						IL_0866:
						num2 = 66;
						txtRet04.Text = Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject("Sent ", lstOCNumberssms.Items[(int)Math.Round(Conversion.Val(lblOCDonesms.Text) - 1.0)]), "\r\n"), txtRet04.Text));
						goto IL_08d2;
						IL_08d2:
						num2 = 69;
						if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
						{
							goto IL_0908;
						}
						goto IL_0a23;
						IL_0908:
						num2 = 70;
						lblOCDonesms.Text = Conversions.ToString(Conversion.Val(lblOCDonesms.Text) + 1.0);
						goto IL_0936;
						IL_0936:
						num2 = 71;
						if (Conversion.Val(lblCountPresms.Text) >= Conversion.Val(lblOCDonesms.Text))
						{
							goto IL_0967;
						}
						goto IL_0a23;
						IL_0967:
						num2 = 72;
						SendSmsToThisNumber(lblPort5, lblNum5.Text, Conversions.ToString(lstOCNumberssms.Items[(int)Math.Round(Conversion.Val(lblOCDonesms.Text) - 1.0)]));
						goto IL_09b7;
						IL_09b7:
						num2 = 73;
						txtRet05.Text = Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject("Sent ", lstOCNumberssms.Items[(int)Math.Round(Conversion.Val(lblOCDonesms.Text) - 1.0)]), "\r\n"), txtRet05.Text));
						goto IL_0a23;
						IL_0a23:
						num2 = 76;
						if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
						{
							goto IL_0a59;
						}
						goto IL_0b74;
						IL_0a59:
						num2 = 77;
						lblOCDonesms.Text = Conversions.ToString(Conversion.Val(lblOCDonesms.Text) + 1.0);
						goto IL_0a87;
						IL_0a87:
						num2 = 78;
						if (Conversion.Val(lblCountPresms.Text) >= Conversion.Val(lblOCDonesms.Text))
						{
							goto IL_0ab8;
						}
						goto IL_0b74;
						IL_0ab8:
						num2 = 79;
						SendSmsToThisNumber(lblPort6, lblNum6.Text, Conversions.ToString(lstOCNumberssms.Items[(int)Math.Round(Conversion.Val(lblOCDonesms.Text) - 1.0)]));
						goto IL_0b08;
						IL_0b08:
						num2 = 80;
						txtRet06.Text = Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject("Sent ", lstOCNumberssms.Items[(int)Math.Round(Conversion.Val(lblOCDonesms.Text) - 1.0)]), "\r\n"), txtRet06.Text));
						goto IL_0b74;
						IL_0b74:
						num2 = 83;
						if (!chkStop.Checked)
						{
							goto IL_0b8a;
						}
						goto IL_0bdd;
						IL_0b8a:
						num2 = 85;
						Application.DoEvents();
						goto IL_0b93;
						end_IL_0001_2:
						break;
					}
					num2 = 92;
					lblProgress.Text = "OK All Sent";
					break;
				}
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 3480;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SetThisNumberToValedPeriod()
	{
		lblProgress.Text = "OK ";
		lblProgress.BackColor = Color.Red;
		Application.DoEvents();
		if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
		{
			SendSmsToReActivate(lblPort1, lblNum1.Text, "3131");
		}
		if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
		{
			SendSmsToReActivate(lblPort2, lblNum2.Text, "3131");
		}
		if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
		{
			SendSmsToReActivate(lblPort3, lblNum3.Text, "3131");
		}
		if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
		{
			SendSmsToReActivate(lblPort4, lblNum4.Text, "3131");
		}
		if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
		{
			SendSmsToReActivate(lblPort5, lblNum5.Text, "3131");
		}
		if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
		{
			SendSmsToReActivate(lblPort6, lblNum6.Text, "3131");
		}
		if (MysqlConn.MainProgLic == 100)
		{
			if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0)
			{
				SendSmsToReActivate(lblPort1, lblNum1.Text, "2656");
			}
			if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0)
			{
				SendSmsToReActivate(lblPort2, lblNum2.Text, "2656");
			}
			if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0)
			{
				SendSmsToReActivate(lblPort3, lblNum3.Text, "2656");
			}
			if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0)
			{
				SendSmsToReActivate(lblPort4, lblNum4.Text, "2656");
			}
			if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0)
			{
				SendSmsToReActivate(lblPort5, lblNum5.Text, "2656");
			}
			if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0)
			{
				SendSmsToReActivate(lblPort6, lblNum6.Text, "2656");
			}
		}
		lblProgress.Text = "OK ";
		lblProgress.BackColor = Color.LimeGreen;
		Application.DoEvents();
	}

	private void SendSmsToReActivate(Label Exxc, string ExNum, string EEsendto)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string text = default(string);
		int num5 = default(int);
		string userData = default(string);
		int num7 = default(int);
		string text2 = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				int num6;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 930:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0014;
						case 4:
							goto IL_0019;
						case 5:
							goto IL_0022;
						case 6:
							goto IL_0032;
						case 7:
							goto IL_0044;
						case 8:
							goto IL_004e;
						case 9:
							goto IL_009c;
						case 10:
							goto IL_00e2;
						case 11:
							goto IL_00eb;
						case 12:
							goto IL_0102;
						case 13:
							goto IL_0167;
						case 14:
							goto IL_017e;
						case 15:
							goto IL_018c;
						case 16:
							goto IL_0195;
						case 17:
							goto IL_01a3;
						case 18:
							goto IL_01ba;
						case 19:
							goto IL_01c8;
						case 20:
							goto IL_01d1;
						case 21:
							goto IL_01e3;
						case 22:
							goto IL_01e9;
						case 23:
							goto IL_01f7;
						case 24:
							goto IL_0202;
						case 25:
							goto IL_0216;
						case 28:
							goto IL_0233;
						case 29:
							goto IL_0247;
						case 32:
							goto IL_0261;
						case 33:
							goto IL_0275;
						case 27:
						case 31:
						case 35:
						case 36:
							goto IL_028d;
						case 37:
							goto IL_0296;
						case 38:
							goto IL_02b6;
						case 26:
						case 30:
						case 34:
						case 39:
							goto IL_02c9;
						case 40:
							goto IL_02d4;
						case 41:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 42:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_01ba:
					num2 = 18;
					Thread.Sleep(300);
					goto IL_01c8;
					IL_01c8:
					num2 = 19;
					Application.DoEvents();
					goto IL_01d1;
					IL_01a3:
					num2 = 17;
					serialPort.WriteLine(text + "\u001a");
					goto IL_01ba;
					IL_01d1:
					num2 = 20;
					num5 = checked(num5 + 1);
					goto IL_01da;
					IL_000b:
					num2 = 2;
					serialPort = new SerialPort();
					goto IL_0014;
					IL_0014:
					num2 = 3;
					num6 = 0;
					goto IL_0019;
					IL_0019:
					num2 = 4;
					DataCodingSchem = 0;
					goto IL_0022;
					IL_0022:
					num2 = 5;
					serialPort.PortName = Exxc.Text;
					goto IL_0032;
					IL_0032:
					num2 = 6;
					if (!serialPort.IsOpen)
					{
						goto IL_0044;
					}
					goto IL_004e;
					IL_0044:
					num2 = 7;
					serialPort.Open();
					goto IL_004e;
					IL_004e:
					num2 = 8;
					userData = ExNum.Substring(8, 2) + ExNum.Substring(3, 2) + ExNum.Substring(7, 2) + "0" + ExNum.Substring(5, 2) + ExNum.Substring(1, 2);
					goto IL_009c;
					IL_009c:
					num2 = 9;
					PDUCodes = GetPDU(GetSmsCenter(ExNum), EEsendto, (MTUssd.SMS.Encoder.SMS.ENUM_TP_DCS)checked((int)Math.Round(Conversion.Val(DataCodingSchem))), (MTUssd.SMS.Encoder.SMS.ENUM_TP_VALID_PERIOD)checked((int)Math.Round(Conversion.Val(MTUssd.SMS.Encoder.SMS.ENUM_TP_VALID_PERIOD.Maximum))), 0, StatusReport: false, userData);
					goto IL_00e2;
					IL_00e2:
					num2 = 10;
					Application.DoEvents();
					goto IL_00eb;
					IL_00eb:
					num2 = 11;
					num7 = checked(PDUCodes.Length - 1);
					num5 = 0;
					goto IL_01da;
					IL_01da:
					if (num5 <= num7)
					{
						goto IL_0102;
					}
					goto IL_01e3;
					IL_01e3:
					num2 = 21;
					num5 = 0;
					goto IL_01e9;
					IL_01e9:
					num2 = 22;
					Thread.Sleep(500);
					goto IL_01f7;
					IL_01f7:
					num2 = 23;
					text2 = serialPort.ReadExisting();
					goto IL_0202;
					IL_0202:
					num2 = 24;
					if (text2.Contains("+CMS ERROR: 500"))
					{
						goto IL_0216;
					}
					goto IL_0233;
					IL_0216:
					num2 = 25;
					OutBoxDropCon(Exxc.Text, "Error");
					goto IL_02c9;
					IL_0233:
					num2 = 28;
					if (text2.Contains("+CMGS: "))
					{
						goto IL_0247;
					}
					goto IL_0261;
					IL_0247:
					num2 = 29;
					OutBoxDropCon(Exxc.Text, "OK");
					goto IL_02c9;
					IL_0261:
					num2 = 32;
					if (text2.Contains("OK"))
					{
						goto IL_0275;
					}
					goto IL_028d;
					IL_0275:
					num2 = 33;
					OutBoxDropCon(Exxc.Text, "OK");
					goto IL_02c9;
					IL_028d:
					num2 = 36;
					Application.DoEvents();
					goto IL_0296;
					IL_0296:
					num2 = 37;
					lblProgress.Text = "Waiting " + num5;
					goto IL_02b6;
					IL_02b6:
					num2 = 38;
					num5 = checked(num5 + 1);
					if (num5 <= 30)
					{
						goto IL_01e9;
					}
					goto IL_02c9;
					IL_02c9:
					num2 = 39;
					serialPort.Close();
					goto IL_02d4;
					IL_02d4:
					num2 = 40;
					serialPort.Dispose();
					break;
					IL_0102:
					num2 = 12;
					text = "AT+CMGS=" + ((double)PDUCodes[num5].Length - Conversion.Val("&H" + Strings.Mid(PDUCodes[num5], 1, 2)) * 2.0 - 2.0) / 2.0;
					goto IL_0167;
					IL_0167:
					num2 = 13;
					serialPort.WriteLine(text + "\r");
					goto IL_017e;
					IL_017e:
					num2 = 14;
					Thread.Sleep(300);
					goto IL_018c;
					IL_018c:
					num2 = 15;
					Application.DoEvents();
					goto IL_0195;
					IL_0195:
					num2 = 16;
					text = PDUCodes[num5];
					goto IL_01a3;
					end_IL_0001_2:
					break;
				}
				num2 = 41;
				serialPort = null;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 930;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void SendSmsToThisNumber(Label Exxc, string ExNum, string SmsTextToSend)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string text = default(string);
		int num5 = default(int);
		int num7 = default(int);
		string text2 = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				int num6;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 856:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0014;
						case 4:
							goto IL_0019;
						case 5:
							goto IL_0022;
						case 6:
							goto IL_0032;
						case 7:
							goto IL_0044;
						case 8:
							goto IL_004e;
						case 9:
							goto IL_009c;
						case 10:
							goto IL_00a5;
						case 11:
							goto IL_00bc;
						case 12:
							goto IL_0121;
						case 13:
							goto IL_0138;
						case 14:
							goto IL_0146;
						case 15:
							goto IL_014f;
						case 16:
							goto IL_015d;
						case 17:
							goto IL_0174;
						case 18:
							goto IL_0182;
						case 19:
							goto IL_018b;
						case 20:
							goto IL_019d;
						case 21:
							goto IL_01a3;
						case 22:
							goto IL_01b1;
						case 23:
							goto IL_01bc;
						case 24:
							goto IL_01d0;
						case 27:
							goto IL_01ed;
						case 28:
							goto IL_0201;
						case 31:
							goto IL_021b;
						case 32:
							goto IL_022f;
						case 26:
						case 30:
						case 34:
						case 35:
							goto IL_0247;
						case 36:
							goto IL_0250;
						case 37:
							goto IL_0270;
						case 25:
						case 29:
						case 33:
						case 38:
							goto IL_0283;
						case 39:
							goto IL_028e;
						case 40:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 41:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0174:
					num2 = 17;
					Thread.Sleep(300);
					goto IL_0182;
					IL_0182:
					num2 = 18;
					Application.DoEvents();
					goto IL_018b;
					IL_015d:
					num2 = 16;
					serialPort.WriteLine(text + "\u001a");
					goto IL_0174;
					IL_018b:
					num2 = 19;
					num5 = checked(num5 + 1);
					goto IL_0194;
					IL_000b:
					num2 = 2;
					serialPort = new SerialPort();
					goto IL_0014;
					IL_0014:
					num2 = 3;
					num6 = 0;
					goto IL_0019;
					IL_0019:
					num2 = 4;
					DataCodingSchem = 0;
					goto IL_0022;
					IL_0022:
					num2 = 5;
					serialPort.PortName = Exxc.Text;
					goto IL_0032;
					IL_0032:
					num2 = 6;
					if (!serialPort.IsOpen)
					{
						goto IL_0044;
					}
					goto IL_004e;
					IL_0044:
					num2 = 7;
					serialPort.Open();
					goto IL_004e;
					IL_004e:
					num2 = 8;
					PDUCodes = GetPDU(GetSmsCenter(ExNum), txtSMStothisnumber.Text, (MTUssd.SMS.Encoder.SMS.ENUM_TP_DCS)checked((int)Math.Round(Conversion.Val(DataCodingSchem))), (MTUssd.SMS.Encoder.SMS.ENUM_TP_VALID_PERIOD)checked((int)Math.Round(Conversion.Val(MTUssd.SMS.Encoder.SMS.ENUM_TP_VALID_PERIOD.Maximum))), 0, StatusReport: false, SmsTextToSend);
					goto IL_009c;
					IL_009c:
					num2 = 9;
					Application.DoEvents();
					goto IL_00a5;
					IL_00a5:
					num2 = 10;
					num7 = checked(PDUCodes.Length - 1);
					num5 = 0;
					goto IL_0194;
					IL_0194:
					if (num5 <= num7)
					{
						goto IL_00bc;
					}
					goto IL_019d;
					IL_019d:
					num2 = 20;
					num5 = 0;
					goto IL_01a3;
					IL_01a3:
					num2 = 21;
					Thread.Sleep(500);
					goto IL_01b1;
					IL_01b1:
					num2 = 22;
					text2 = serialPort.ReadExisting();
					goto IL_01bc;
					IL_01bc:
					num2 = 23;
					if (text2.Contains("+CMS ERROR: 500"))
					{
						goto IL_01d0;
					}
					goto IL_01ed;
					IL_01d0:
					num2 = 24;
					OutBoxDropCon(Exxc.Text, "Error");
					goto IL_0283;
					IL_01ed:
					num2 = 27;
					if (text2.Contains("+CMGS: "))
					{
						goto IL_0201;
					}
					goto IL_021b;
					IL_0201:
					num2 = 28;
					OutBoxDropCon(Exxc.Text, "OK");
					goto IL_0283;
					IL_021b:
					num2 = 31;
					if (text2.Contains("OK"))
					{
						goto IL_022f;
					}
					goto IL_0247;
					IL_022f:
					num2 = 32;
					OutBoxDropCon(Exxc.Text, "OK");
					goto IL_0283;
					IL_0247:
					num2 = 35;
					Application.DoEvents();
					goto IL_0250;
					IL_0250:
					num2 = 36;
					lblProgress.Text = "Waiting " + num5;
					goto IL_0270;
					IL_0270:
					num2 = 37;
					num5 = checked(num5 + 1);
					if (num5 <= 30)
					{
						goto IL_01a3;
					}
					goto IL_0283;
					IL_0283:
					num2 = 38;
					serialPort.Close();
					goto IL_028e;
					IL_028e:
					num2 = 39;
					serialPort.Dispose();
					break;
					IL_00bc:
					num2 = 11;
					text = "AT+CMGS=" + ((double)PDUCodes[num5].Length - Conversion.Val("&H" + Strings.Mid(PDUCodes[num5], 1, 2)) * 2.0 - 2.0) / 2.0;
					goto IL_0121;
					IL_0121:
					num2 = 12;
					serialPort.WriteLine(text + "\r");
					goto IL_0138;
					IL_0138:
					num2 = 13;
					Thread.Sleep(300);
					goto IL_0146;
					IL_0146:
					num2 = 14;
					Application.DoEvents();
					goto IL_014f;
					IL_014f:
					num2 = 15;
					text = PDUCodes[num5];
					goto IL_015d;
					end_IL_0001_2:
					break;
				}
				num2 = 40;
				serialPort = null;
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 856;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btnSaveASqry_Click(object sender, EventArgs e)
	{
		string text = "";
		string text2 = "X_" + DateAndTime.Today.Month + "_" + DateAndTime.Today.Day;
		if (Strings.Len(text2) > 2)
		{
			text = OpensaveAs(text2);
			if (Operators.CompareString(text, "", TextCompare: false) != 0)
			{
				lblSavePath.Text = text.Trim('s').Trim('l').Trim('x')
					.Trim('.');
			}
		}
	}

	private void btnExport2qry_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						string text = "";
						double num3 = 0.0;
						double num4 = 0.0;
						double num5 = 1.0;
						if (lblSavePath.Text.Length > 1)
						{
							Cursor = Cursors.WaitCursor;
							object objectValue = RuntimeHelpers.GetObjectValue(Interaction.CreateObject("EXCEL.APPLICATION"));
							object objectValue2 = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(NewLateBinding.LateGet(objectValue, null, "Workbooks", new object[0], null, null, null), null, "Open", new object[1] { Application.StartupPath + "\\reports\\xyz2.xls" }, null, null, null));
							NewLateBinding.LateSet(objectValue, null, "DisplayAlerts", new object[1] { false }, null, null);
							object objectValue3 = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(objectValue2, null, "Worksheets", new object[1] { "Sheet1" }, null, null, null));
							for (num3 = 0.0; !(num3 > (double)(lstWebQry.Items.Count - 1)); num3 += 1.0)
							{
								NewLateBinding.LateSetComplex(NewLateBinding.LateGet(objectValue3, null, "Range", new object[1] { "A" + num5 }, null, null, null), null, "Value", new object[1] { lstWebQry.Items[(int)Math.Round(num3)] }, null, null, OptimisticSet: false, RValueBase: true);
								num5 += 1.0;
							}
							if (num5 > 1.0)
							{
								NewLateBinding.LateCall(objectValue2, null, "SaveAs", new object[1] { lblSavePath.Text + "_" + lstWebQry.Items.Count + ".xls" }, null, null, null, IgnoreReturn: true);
							}
							else
							{
								Interaction.MsgBox("لا توجد اى ارقام ", MsgBoxStyle.Critical);
							}
							NewLateBinding.LateCall(objectValue2, null, "Close", new object[0], null, null, null, IgnoreReturn: true);
							releaseObject(RuntimeHelpers.GetObjectValue(objectValue));
							releaseObject(RuntimeHelpers.GetObjectValue(objectValue2));
							releaseObject(RuntimeHelpers.GetObjectValue(objectValue3));
							objectValue = null;
							Cursor = Cursors.Default;
							if (num5 > 3.0)
							{
								Interaction.MsgBox("تم تصدير جميع الارقام بنجاح", MsgBoxStyle.Information);
							}
						}
						goto end_IL_0001;
					}
					case 677:
						num = -1;
						switch (num2)
						{
						case 2:
							Cursor = Cursors.Default;
							Interaction.MsgBox("حدث خطء", MsgBoxStyle.Critical);
							goto end_IL_0001;
						}
						break;
					}
				}
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 677;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void AddBoxToLstPre(string EER)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 201:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_000f;
						case 5:
							goto IL_0026;
						case 6:
							goto IL_0035;
						case 8:
							goto IL_0046;
						case 7:
						case 9:
							goto IL_005b;
						case 10:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
						case 11:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0035:
					num2 = 6;
					if (num5 < 0)
					{
						goto IL_0046;
					}
					goto IL_005b;
					IL_0046:
					num2 = 8;
					lstOCNumbers.Items.Add(EER);
					goto IL_005b;
					IL_0026:
					num2 = 5;
					num5 = lstOCNumbers.FindString(EER);
					goto IL_0035;
					IL_005b:
					num2 = 9;
					lblCountPre.Text = Conversions.ToString(lstOCNumbers.Items.Count);
					break;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_000f;
					IL_000f:
					num2 = 3;
					if (EER.Length != 11)
					{
						goto end_IL_0001_3;
					}
					goto IL_0026;
					end_IL_0001_2:
					break;
				}
				num2 = 10;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 201;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void txtOCNumber_KeyPress(object sender, KeyPressEventArgs e)
	{
		int num = 0;
		if (Strings.Asc(e.KeyChar) == 42)
		{
			if (Operators.CompareString(lblNum1.Text, lblOCMMain.Text, TextCompare: false) != 0)
			{
				AddBoxToLstPre(lblNum1.Text.Trim());
			}
			if (Operators.CompareString(lblNum2.Text, lblOCMMain.Text, TextCompare: false) != 0)
			{
				AddBoxToLstPre(lblNum2.Text.Trim());
			}
			if (Operators.CompareString(lblNum3.Text, lblOCMMain.Text, TextCompare: false) != 0)
			{
				AddBoxToLstPre(lblNum3.Text.Trim());
			}
			if (Operators.CompareString(lblNum4.Text, lblOCMMain.Text, TextCompare: false) != 0)
			{
				AddBoxToLstPre(lblNum4.Text.Trim());
			}
			if (Operators.CompareString(lblNum5.Text, lblOCMMain.Text, TextCompare: false) != 0)
			{
				AddBoxToLstPre(lblNum5.Text.Trim());
			}
			if (Operators.CompareString(lblNum6.Text, lblOCMMain.Text, TextCompare: false) != 0)
			{
				AddBoxToLstPre(lblNum6.Text.Trim());
			}
		}
		checked
		{
			if (Strings.Asc(e.KeyChar) == 13)
			{
				if (txtOCNumber.Text.Trim().Length == 11)
				{
					if (VerifyMasterNumber(txtOCNumber.Text) | !ckVerifyNumber.Checked)
					{
						AddBoxToLstPre(txtOCNumber.Text.Trim());
						txtOCNumber.Text = "";
					}
					else
					{
						Interaction.MsgBox("هذا الرقم غير موجود بالنظام\r\nتاكد انه رقمك", MsgBoxStyle.Critical);
					}
				}
				if (txtOCNumber.Text.Trim().Length <= 4)
				{
					objDataTabletemp = objData.QueryDatabase("SELECT mobnum FROM vcnums where   enums = " + Conversions.ToString(Conversion.Val(txtOCNumber.Text)));
					if (objDataTabletemp.Rows.Count >= 1)
					{
						int num2 = objDataTabletemp.Rows.Count - 1;
						for (num = 0; num <= num2; num++)
						{
							AddBoxToLstPre(Conversions.ToString(objDataTabletemp.Rows[num]["mobnum"]));
						}
					}
				}
			}
			if (Strings.Asc(e.KeyChar) != 8 && ((Strings.Asc(e.KeyChar) < 48) | (Strings.Asc(e.KeyChar) > 57)))
			{
				e.KeyChar = '\0';
			}
		}
	}

	private void btnClearOC_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 83:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 4:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_000b:
					num2 = 2;
					lstOCNumbers.Items.Clear();
					break;
					end_IL_0001_2:
					break;
				}
				num2 = 3;
				lblCountPre.Text = "0";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 83;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void btn2G_Click(object sender, EventArgs e)
	{
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		if (Operators.CompareString(lblPort1.Text.Trim(), "", TextCompare: false) != 0)
		{
			lblProgress.Text = "2G Network ... " + lblPort1.Text;
			Application.DoEvents();
			SetThisModenTo2F(lblPort1);
			RestartModem(lblPort1.Text);
		}
		if (Operators.CompareString(lblPort2.Text.Trim(), "", TextCompare: false) != 0)
		{
			lblProgress.Text = "2G Network ... " + lblPort2.Text;
			Application.DoEvents();
			SetThisModenTo2F(lblPort2);
			RestartModem(lblPort2.Text);
		}
		if (Operators.CompareString(lblPort3.Text.Trim(), "", TextCompare: false) != 0)
		{
			lblProgress.Text = "2G Network ... " + lblPort3.Text;
			Application.DoEvents();
			SetThisModenTo2F(lblPort3);
			RestartModem(lblPort3.Text);
		}
		if (Operators.CompareString(lblPort4.Text.Trim(), "", TextCompare: false) != 0)
		{
			lblProgress.Text = "2G Network ... " + lblPort4.Text;
			Application.DoEvents();
			SetThisModenTo2F(lblPort4);
			RestartModem(lblPort4.Text);
		}
		if (Operators.CompareString(lblPort5.Text.Trim(), "", TextCompare: false) != 0)
		{
			lblProgress.Text = "2G Network ... " + lblPort5.Text;
			Application.DoEvents();
			SetThisModenTo2F(lblPort5);
			RestartModem(lblPort5.Text);
		}
		if (Operators.CompareString(lblPort6.Text.Trim(), "", TextCompare: false) != 0)
		{
			lblProgress.Text = "2G Network ... " + lblPort6.Text;
			Application.DoEvents();
			SetThisModenTo2F(lblPort6);
			RestartModem(lblPort6.Text);
		}
		EnableCntl();
		lblProgress.Text = "OK";
		lblProgress.BackColor = Color.LimeGreen;
		Application.DoEvents();
	}

	private void btnwebQry_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		int num = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				checked
				{
					switch (try0001_dispatch)
					{
					default:
					{
						ProjectData.ClearProjectError();
						num2 = 2;
						if (Operators.CompareString(MysqlConn.RD_name, "NO", TextCompare: false) == 0)
						{
							goto end_IL_0001;
						}
						string text = "";
						if (txtWebQryOperator.Text.Length < 3)
						{
							goto end_IL_0001;
						}
						btnwebQry.Enabled = false;
						if (Operators.CompareString(txtWebQrySign.Text, "ADD", TextCompare: false) != 0)
						{
							text = text + " and websign = '" + txtWebQrySign.Text + "' ";
						}
						if (Operators.CompareString(txtWebQryDay.Text, "", TextCompare: false) != 0)
						{
							text = text + " and eday =  " + Conversions.ToString(Conversion.Val(txtWebQryDay.Text)) + "  ";
						}
						if (Operators.CompareString(txtWebQryMonth.Text, "", TextCompare: false) != 0)
						{
							text = text + " and emonth =  " + Conversions.ToString(Conversion.Val(txtWebQryMonth.Text)) + "  ";
						}
						objDataTabletemp = objDataRemote.QueryDatabase("SELECT mob_number  FROM " + MysqlConn.RD_name + "_nums where Operator  = '" + txtWebQryOperator.Text + "' " + text);
						if (objDataTabletemp.Rows.Count > 0)
						{
							lblQryCount.Text = Conversions.ToString(objDataTabletemp.Rows.Count);
							Application.DoEvents();
							double num3 = objDataTabletemp.Rows.Count - 1;
							for (double num4 = 0.0; num4 <= num3; num4 += 1.0)
							{
								lstWebQry.Items.Add(RuntimeHelpers.GetObjectValue(objDataTabletemp.Rows[(int)Math.Round(num4)]["mob_number"]));
								lbladdedtoQry.Text = Conversions.ToString(num4 + 1.0);
								Application.DoEvents();
							}
						}
						btnwebQry.Enabled = true;
						goto end_IL_0001;
					}
					case 636:
						num = -1;
						switch (num2)
						{
						case 2:
							txtInfo.Text = "Check Internet\r\n" + txtInfo.Text;
							btnwebQry.Enabled = true;
							goto end_IL_0001;
						}
						break;
					}
				}
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 636;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void txtWebQrySign_TextChanged(object sender, EventArgs e)
	{
		if (Operators.CompareString(txtWebQrySign.Text, "DEL", TextCompare: false) == 0)
		{
			txtWebQrySign.BackColor = Color.Red;
		}
		else if (Operators.CompareString(txtWebQrySign.Text, "ADD", TextCompare: false) == 0)
		{
			txtWebQrySign.BackColor = Color.Lime;
		}
		else
		{
			txtWebQrySign.BackColor = Color.White;
		}
	}

	private void txtOCchargeNum1_DoubleClick(object sender, EventArgs e)
	{
		if (txtOCchargeNum2.Text.Length <= 1)
		{
			txtOCchargeNum2.Text = txtOCchargeNum1.Text;
			txtOCchargeNum3.Text = txtOCchargeNum1.Text;
			txtOCchargeNum4.Text = txtOCchargeNum1.Text;
			txtOCchargeNum5.Text = txtOCchargeNum1.Text;
			txtOCchargeNum6.Text = txtOCchargeNum1.Text;
		}
	}

	private void txtWebSign_TextChanged(object sender, EventArgs e)
	{
		if (Operators.CompareString(txtWebSign.Text, "DEL", TextCompare: false) == 0)
		{
			txtWebSign.BackColor = Color.Red;
		}
		else if (Operators.CompareString(txtWebSign.Text, "ADD", TextCompare: false) == 0)
		{
			txtWebSign.BackColor = Color.Lime;
		}
		else
		{
			txtWebSign.BackColor = Color.White;
		}
	}

	private void btnAutoES_Seres_Click(object sender, EventArgs e)
	{
		int num = 0;
		int num2 = 0;
		if (MysqlConn.MainProgLic < 6)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (txtPassEC.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد الكاش");
			return;
		}
		if (Conversion.Val(txtMonyMnEC.Text) < 1.0)
		{
			Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
			return;
		}
		if ((txtCashNextMasterEC.Text.Trim().Length != 11) & ckUseNextMain.Checked)
		{
			Interaction.MsgBox("حدد رقم كاش لسحب الرصيد علية - الاساسى التالى");
			return;
		}
		if ((Operators.CompareString(lblMainEC.Text, lblNum1.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMainEC.Text, lblNum2.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMainEC.Text, lblNum3.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMainEC.Text, lblNum4.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMainEC.Text, lblNum5.Text, TextCompare: false) != 0) & (Operators.CompareString(lblMainEC.Text, lblNum6.Text, TextCompare: false) != 0))
		{
			Interaction.MsgBox("مشكلة بالاساسى");
			chkStop.Checked = true;
			return;
		}
		num = 0;
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		if (Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh1.Checked = false;
		}
		if (Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh2.Checked = false;
		}
		if (Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh3.Checked = false;
		}
		if (Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh4.Checked = false;
		}
		if (Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh5.Checked = false;
		}
		if (Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0)
		{
			chkCh6.Checked = false;
		}
		lblGifts01.Text = "0";
		lblGifts02.Text = "0";
		lblGifts03.Text = "0";
		lblGifts04.Text = "0";
		lblGifts05.Text = "0";
		lblGifts06.Text = "0";
		lblGiftV1.Text = "0";
		lblGiftV2.Text = "0";
		lblGiftV3.Text = "0";
		lblGiftV4.Text = "0";
		lblGiftV5.Text = "0";
		lblGiftV6.Text = "0";
		if (chkStop.Checked)
		{
			return;
		}
		Application.DoEvents();
		ArrangVClinesEC();
		Application.DoEvents();
		btnDeSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		chkCh1.Checked = true;
		do
		{
			num = checked(num + 1);
			if (chkStop.Checked)
			{
				break;
			}
			lblProgress.BackColor = Color.Red;
			lblProgress.Text = "Transfer";
			if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
			{
				ApplyUssdCodeEC_Mex(lblPort1, lblNum2.Text.Trim(), Conversion.Val(txtMonyMnEC.Text), chkCh1, chkCh2);
				Application.DoEvents();
				if (!chkCh1.Checked)
				{
					txtMonyMnEC.Text = Conversions.ToString(Conversion.Val(txtMonyMnEC.Text) - Conversion.Val(txtESSub.Text) + Conversion.Val(txtESAdd.Text));
				}
				if (Conversion.Val(txtMonyMnEC.Text) < 1.0)
				{
					break;
				}
				Application.DoEvents();
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
			{
				ApplyUssdCodeEC_Mex(lblPort2, lblNum3.Text.Trim(), Conversion.Val(txtMonyMnEC.Text), chkCh2, chkCh3);
				Application.DoEvents();
				if (!chkCh2.Checked)
				{
					txtMonyMnEC.Text = Conversions.ToString(Conversion.Val(txtMonyMnEC.Text) - Conversion.Val(txtESSub.Text) + Conversion.Val(txtESAdd.Text));
				}
				if (Conversion.Val(txtMonyMnEC.Text) < 1.0)
				{
					break;
				}
				Application.DoEvents();
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
			{
				ApplyUssdCodeEC_Mex(lblPort3, lblNum4.Text.Trim(), Conversion.Val(txtMonyMnEC.Text), chkCh3, chkCh4);
				Application.DoEvents();
				if (!chkCh3.Checked)
				{
					txtMonyMnEC.Text = Conversions.ToString(Conversion.Val(txtMonyMnEC.Text) - Conversion.Val(txtESSub.Text) + Conversion.Val(txtESAdd.Text));
				}
				if (Conversion.Val(txtMonyMnEC.Text) < 1.0)
				{
					break;
				}
				Application.DoEvents();
			}
			if (chkStop.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) == 0) & chkCh3.Checked & ckUseNextMain.Checked)
			{
				ApplyUssdCodeEC_Mex(lblPort3, txtCashNextMasterEC.Text.Trim(), Conversion.Val(txtMonyMnEC.Text), chkCh3, TempCheck);
				Application.DoEvents();
				if (!chkCh3.Checked)
				{
					txtMonyMnEC.Text = Conversions.ToString(Conversion.Val(txtMonyMnEC.Text) - Conversion.Val(txtESSub.Text) + Conversion.Val(txtESAdd.Text));
				}
				if (Conversion.Val(txtMonyMnEC.Text) < 1.0)
				{
					break;
				}
				Application.DoEvents();
			}
			if ((!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) || chkStop.Checked)
			{
				break;
			}
			Application.DoEvents();
			if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
			{
				ApplyUssdCodeEC_Mex(lblPort4, lblNum5.Text.Trim(), Conversion.Val(txtMonyMnEC.Text), chkCh4, chkCh5);
				Application.DoEvents();
				if (!chkCh4.Checked)
				{
					txtMonyMnEC.Text = Conversions.ToString(Conversion.Val(txtMonyMnEC.Text) - Conversion.Val(txtESSub.Text) + Conversion.Val(txtESAdd.Text));
				}
				if (Conversion.Val(txtMonyMnEC.Text) < 1.0)
				{
					break;
				}
				Application.DoEvents();
			}
			if (chkStop.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) == 0) & chkCh4.Checked & ckUseNextMain.Checked)
			{
				ApplyUssdCodeEC_Mex(lblPort4, txtCashNextMasterEC.Text.Trim(), Conversion.Val(txtMonyMnEC.Text), chkCh4, TempCheck);
				Application.DoEvents();
				if (!chkCh4.Checked)
				{
					txtMonyMnEC.Text = Conversions.ToString(Conversion.Val(txtMonyMnEC.Text) - Conversion.Val(txtESSub.Text) + Conversion.Val(txtESAdd.Text));
				}
				if (Conversion.Val(txtMonyMnEC.Text) < 1.0)
				{
					break;
				}
				Application.DoEvents();
			}
			if ((!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) || chkStop.Checked)
			{
				break;
			}
			Application.DoEvents();
			if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
			{
				ApplyUssdCodeEC_Mex(lblPort5, lblNum6.Text.Trim(), Conversion.Val(txtMonyMnEC.Text), chkCh5, chkCh6);
				Application.DoEvents();
				if (!chkCh5.Checked)
				{
					txtMonyMnEC.Text = Conversions.ToString(Conversion.Val(txtMonyMnEC.Text) - Conversion.Val(txtESSub.Text) + Conversion.Val(txtESAdd.Text));
				}
				if (Conversion.Val(txtMonyMnEC.Text) < 1.0)
				{
					break;
				}
				Application.DoEvents();
			}
			if (chkStop.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) == 0) & chkCh5.Checked & ckUseNextMain.Checked)
			{
				ApplyUssdCodeEC_Mex(lblPort5, txtCashNextMasterEC.Text.Trim(), Conversion.Val(txtMonyMnEC.Text), chkCh5, TempCheck);
				Application.DoEvents();
				if (!chkCh5.Checked)
				{
					txtMonyMnEC.Text = Conversions.ToString(Conversion.Val(txtMonyMnEC.Text) - Conversion.Val(txtESSub.Text) + Conversion.Val(txtESAdd.Text));
				}
				if (Conversion.Val(txtMonyMnEC.Text) < 1.0)
				{
					break;
				}
				Application.DoEvents();
			}
			if ((Operators.CompareString(txtCashNextMasterEC.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked & ckUseNextMain.Checked)
			{
				ApplyUssdCodeEC_Mex(lblPort6, txtCashNextMasterEC.Text.Trim(), Conversion.Val(txtMonyMnEC.Text), chkCh6, TempCheck);
				Application.DoEvents();
				if (!chkCh6.Checked)
				{
					txtMonyMnEC.Text = Conversions.ToString(Conversion.Val(txtMonyMnEC.Text) - Conversion.Val(txtESSub.Text) + Conversion.Val(txtESAdd.Text));
				}
				if (Conversion.Val(txtMonyMnEC.Text) < 1.0)
				{
					break;
				}
				Application.DoEvents();
			}
		}
		while (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) && num <= 60);
		Application.DoEvents();
		btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		Application.DoEvents();
		Application.DoEvents();
		if (chkStop.Checked)
		{
			return;
		}
		if (ckUseNextMain.Checked)
		{
			lblMain.Text = txtCashNextMaster.Text;
			txtCashNextMaster.Text = "";
			goto IL_10df;
		}
		if (Operators.CompareString(lblNum6.Text, "", TextCompare: false) != 0)
		{
			lblMain.Text = lblNum6.Text;
		}
		else if (Operators.CompareString(lblNum5.Text, "", TextCompare: false) != 0)
		{
			lblMain.Text = lblNum5.Text;
		}
		else if (Operators.CompareString(lblNum4.Text, "", TextCompare: false) != 0)
		{
			lblMain.Text = lblNum4.Text;
		}
		else if (Operators.CompareString(lblNum3.Text, "", TextCompare: false) != 0)
		{
			lblMain.Text = lblNum3.Text;
		}
		else
		{
			if (Operators.CompareString(lblNum2.Text, "", TextCompare: false) == 0)
			{
				goto IL_10df;
			}
			lblMain.Text = lblNum2.Text;
		}
		goto IL_10e5;
		IL_10e5:
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
		return;
		IL_10df:
		Application.DoEvents();
		goto IL_10e5;
	}

	private void btnECRun777111_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		bool flag = default(bool);
		bool flag2 = default(bool);
		bool flag3 = default(bool);
		bool flag4 = default(bool);
		bool flag5 = default(bool);
		bool flag6 = default(bool);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 2000:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_000f;
						case 4:
							goto IL_0020;
						case 6:
						case 7:
							goto IL_003a;
						case 8:
							goto IL_005a;
						case 10:
						case 11:
							goto IL_0070;
						case 12:
							goto IL_0084;
						case 13:
							goto IL_0098;
						case 14:
							goto IL_00a2;
						case 15:
							goto IL_00b2;
						case 16:
							goto IL_00c2;
						case 17:
							goto IL_00d2;
						case 18:
							goto IL_00e2;
						case 19:
							goto IL_00f2;
						case 20:
							goto IL_0102;
						case 21:
						case 82:
							goto IL_0117;
						case 22:
							goto IL_0145;
						case 23:
							goto IL_0156;
						case 24:
							goto IL_0167;
						case 25:
							goto IL_0178;
						case 26:
							goto IL_0189;
						case 27:
							goto IL_019a;
						case 28:
							goto IL_01ab;
						case 29:
						case 77:
							goto IL_01b6;
						case 30:
							goto IL_01bd;
						case 32:
							goto IL_0224;
						case 33:
							goto IL_0257;
						case 34:
						case 35:
							goto IL_0269;
						case 36:
							goto IL_029c;
						case 37:
						case 38:
							goto IL_02ae;
						case 39:
							goto IL_02e1;
						case 40:
						case 41:
							goto IL_02f3;
						case 42:
							goto IL_0326;
						case 43:
						case 44:
							goto IL_0338;
						case 45:
							goto IL_036b;
						case 46:
						case 47:
							goto IL_037d;
						case 48:
							goto IL_03b0;
						case 49:
						case 50:
							goto IL_03c2;
						case 52:
							goto IL_03db;
						case 53:
							goto IL_040e;
						case 54:
						case 55:
							goto IL_0420;
						case 56:
							goto IL_0453;
						case 57:
						case 58:
							goto IL_0465;
						case 59:
							goto IL_0498;
						case 60:
						case 61:
							goto IL_04aa;
						case 62:
							goto IL_04dd;
						case 63:
						case 64:
							goto IL_04ef;
						case 65:
							goto IL_0522;
						case 66:
						case 67:
							goto IL_0534;
						case 68:
							goto IL_0567;
						case 69:
						case 70:
							goto IL_0579;
						case 72:
							goto IL_058f;
						case 73:
							goto IL_05a6;
						case 74:
							goto IL_05b0;
						case 75:
						case 76:
							goto IL_05bb;
						case 78:
							goto IL_05d1;
						case 31:
						case 51:
						case 71:
						case 79:
							goto IL_05db;
						case 80:
							goto IL_05e4;
						case 81:
							goto IL_060f;
						case 83:
						case 84:
							goto IL_062d;
						case 85:
							goto IL_0637;
						case 86:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
						case 9:
						case 87:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_060f:
					num2 = 81;
					if (!chkStop.Checked)
					{
						goto IL_0117;
					}
					goto IL_062d;
					IL_062d:
					num2 = 84;
					EnableCntl();
					goto IL_0637;
					IL_05e4:
					num2 = 80;
					if (Conversion.Val(txtLoopSSOCG.Text) < Conversion.Val(txtLoopFSOCG.Text))
					{
						goto IL_060f;
					}
					goto IL_062d;
					IL_0637:
					num2 = 85;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_000f;
					IL_000f:
					num2 = 3;
					if (MysqlConn.MainProgLic < 11)
					{
						goto IL_0020;
					}
					goto IL_003a;
					IL_0020:
					num2 = 4;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_003a:
					num2 = 7;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_005a;
					}
					goto IL_0070;
					IL_005a:
					num2 = 8;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_0070:
					num2 = 11;
					lblProgress.BackColor = Color.Red;
					goto IL_0084;
					IL_0084:
					num2 = 12;
					lblProgress.Text = "*777*111#";
					goto IL_0098;
					IL_0098:
					num2 = 13;
					DisableCntl();
					goto IL_00a2;
					IL_00a2:
					num2 = 14;
					flag = chkCh1.Checked;
					goto IL_00b2;
					IL_00b2:
					num2 = 15;
					flag2 = chkCh2.Checked;
					goto IL_00c2;
					IL_00c2:
					num2 = 16;
					flag3 = chkCh3.Checked;
					goto IL_00d2;
					IL_00d2:
					num2 = 17;
					flag4 = chkCh4.Checked;
					goto IL_00e2;
					IL_00e2:
					num2 = 18;
					flag5 = chkCh5.Checked;
					goto IL_00f2;
					IL_00f2:
					num2 = 19;
					flag6 = chkCh6.Checked;
					goto IL_0102;
					IL_0102:
					num2 = 20;
					txtLoopSSOCG.Text = "0";
					goto IL_0117;
					IL_0117:
					num2 = 21;
					txtLoopSSOCG.Text = Conversions.ToString(Conversion.Val(txtLoopSSOCG.Text) + 1.0);
					goto IL_0145;
					IL_0145:
					num2 = 22;
					chkCh1.Checked = flag;
					goto IL_0156;
					IL_0156:
					num2 = 23;
					chkCh2.Checked = flag2;
					goto IL_0167;
					IL_0167:
					num2 = 24;
					chkCh3.Checked = flag3;
					goto IL_0178;
					IL_0178:
					num2 = 25;
					chkCh4.Checked = flag4;
					goto IL_0189;
					IL_0189:
					num2 = 26;
					chkCh5.Checked = flag5;
					goto IL_019a;
					IL_019a:
					num2 = 27;
					chkCh6.Checked = flag6;
					goto IL_01ab;
					IL_01ab:
					num2 = 28;
					ReSetUssdOrder();
					goto IL_01b6;
					IL_01b6:
					num2 = 29;
					num5 = checked(num5 + 1);
					goto IL_01bd;
					IL_01bd:
					num2 = 30;
					if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						goto IL_0224;
					}
					goto IL_05db;
					IL_0224:
					num2 = 32;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_0257;
					}
					goto IL_0269;
					IL_0257:
					num2 = 33;
					ApplyUssdOCGIFT777111(lblPort1);
					goto IL_0269;
					IL_0269:
					num2 = 35;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_029c;
					}
					goto IL_02ae;
					IL_029c:
					num2 = 36;
					ApplyUssdOCGIFT777111(lblPort2);
					goto IL_02ae;
					IL_02ae:
					num2 = 38;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_02e1;
					}
					goto IL_02f3;
					IL_02e1:
					num2 = 39;
					ApplyUssdOCGIFT777111(lblPort3);
					goto IL_02f3;
					IL_02f3:
					num2 = 41;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0326;
					}
					goto IL_0338;
					IL_0326:
					num2 = 42;
					ApplyUssdOCGIFT777111(lblPort4);
					goto IL_0338;
					IL_0338:
					num2 = 44;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_036b;
					}
					goto IL_037d;
					IL_036b:
					num2 = 45;
					ApplyUssdOCGIFT777111(lblPort5);
					goto IL_037d;
					IL_037d:
					num2 = 47;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_03b0;
					}
					goto IL_03c2;
					IL_03b0:
					num2 = 48;
					ApplyUssdOCGIFT777111(lblPort6);
					goto IL_03c2;
					IL_03c2:
					num2 = 50;
					if (!chkStop.Checked)
					{
						goto IL_03db;
					}
					goto IL_05db;
					IL_03db:
					num2 = 52;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_040e;
					}
					goto IL_0420;
					IL_040e:
					num2 = 53;
					ApplyUssdOCGIFTS777111Ret(lblPort1);
					goto IL_0420;
					IL_0420:
					num2 = 55;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_0453;
					}
					goto IL_0465;
					IL_0453:
					num2 = 56;
					ApplyUssdOCGIFTS777111Ret(lblPort2);
					goto IL_0465;
					IL_0465:
					num2 = 58;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_0498;
					}
					goto IL_04aa;
					IL_0498:
					num2 = 59;
					ApplyUssdOCGIFTS777111Ret(lblPort3);
					goto IL_04aa;
					IL_04aa:
					num2 = 61;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_04dd;
					}
					goto IL_04ef;
					IL_04dd:
					num2 = 62;
					ApplyUssdOCGIFTS777111Ret(lblPort4);
					goto IL_04ef;
					IL_04ef:
					num2 = 64;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0522;
					}
					goto IL_0534;
					IL_0522:
					num2 = 65;
					ApplyUssdOCGIFTS777111Ret(lblPort5);
					goto IL_0534;
					IL_0534:
					num2 = 67;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_0567;
					}
					goto IL_0579;
					IL_0567:
					num2 = 68;
					ApplyUssdOCGIFTS777111Ret(lblPort6);
					goto IL_0579;
					IL_0579:
					num2 = 70;
					if (!chkStop.Checked)
					{
						goto IL_058f;
					}
					goto IL_05db;
					IL_058f:
					num2 = 72;
					if (num5 == 2 || num5 == 5 || num5 == 8)
					{
						goto IL_05a6;
					}
					goto IL_05bb;
					IL_05a6:
					num2 = 73;
					ReSetUssdOrder();
					goto IL_05b0;
					IL_05b0:
					num2 = 74;
					Application.DoEvents();
					goto IL_05bb;
					IL_05bb:
					num2 = 76;
					if (num5 <= 10)
					{
						goto IL_01b6;
					}
					goto IL_05d1;
					IL_05d1:
					num2 = 78;
					Application.DoEvents();
					goto IL_05db;
					IL_05db:
					num2 = 79;
					Application.DoEvents();
					goto IL_05e4;
					end_IL_0001_2:
					break;
				}
				num2 = 86;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 2000;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdOCGIFT777111(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string commandCode = default(string);
		string ussdCommandFull = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 214:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0014;
						case 4:
							goto IL_0024;
						case 5:
							goto IL_0036;
						case 6:
							goto IL_0040;
						case 7:
							goto IL_0049;
						case 8:
							goto IL_0053;
						case 9:
							goto IL_0068;
						case 10:
							goto IL_0073;
						case 11:
							goto IL_007e;
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0068:
					num2 = 9;
					serialPort.Close();
					goto IL_0073;
					IL_0073:
					num2 = 10;
					serialPort.Dispose();
					goto IL_007e;
					IL_0053:
					num2 = 8;
					serialPort.WriteLine(commandCode + "\r");
					goto IL_0068;
					IL_007e:
					num2 = 11;
					serialPort = null;
					break;
					IL_000b:
					num2 = 2;
					serialPort = new SerialPort();
					goto IL_0014;
					IL_0014:
					num2 = 3;
					serialPort.PortName = Exxc.Text;
					goto IL_0024;
					IL_0024:
					num2 = 4;
					if (!serialPort.IsOpen)
					{
						goto IL_0036;
					}
					goto IL_0040;
					IL_0036:
					num2 = 5;
					serialPort.Open();
					goto IL_0040;
					IL_0040:
					num2 = 6;
					ussdCommandFull = "*777*111#";
					goto IL_0049;
					IL_0049:
					num2 = 7;
					commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					goto IL_0053;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 214;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string ApplyUssdOCGIFTS777111Ret(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num3 = default(int);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					num3 = 0;
					while (true)
					{
						double num4 = 0.0;
						while (true)
						{
							Application.DoEvents();
							Thread.Sleep(500);
							string text = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
							{
								txtInfo.Text = text + "\r\n" + txtInfo.Text;
							}
							if (text.Contains("+CUSD:"))
							{
								int num5 = ((!text.Contains("+CUSD: 0")) ? text.IndexOf("+CUSD: 1") : text.IndexOf("+CUSD: 0"));
								string text2 = checked(text.Substring(num5 + 9, text.Length - num5 - 9)).Trim().Trim('o').Trim('\r')
									.Trim('\r')
									.Trim();
								num5 = text2.IndexOf(",");
								string text3 = text2.Substring(0, num5).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								text3 = text3.Trim('"').Trim(',').Trim('"');
								string text4;
								if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
								{
									byte[] bytes = encoding_mod.StrToByteArray(text3);
									text4 = Encoding.BigEndianUnicode.GetString(bytes);
								}
								else
								{
									text4 = encoding_mod.Decode7Bit(text3);
								}
								OutBoxDrop(Exxc, text4);
								if (text4.Contains("1: 100% كاش باك"))
								{
									break;
								}
								if (text4.Contains("2: 100% كاش باك"))
								{
									goto IL_027b;
								}
								if (text4.Contains("1: N/A"))
								{
									goto IL_02c6;
								}
								if (text4.Contains("عفوا لا يوجد لديك عروض"))
								{
									DisablePort(Exxc);
									Application.DoEvents();
									goto end_IL_0001;
								}
								if (text4.Contains("عفوا لقد حدث خطأ"))
								{
									DisablePort(Exxc);
									Application.DoEvents();
									goto end_IL_0001;
								}
								if (text4.Contains("جاري تنفيذ طلبكم"))
								{
									DisablePort(Exxc);
									Application.DoEvents();
									goto end_IL_0001;
								}
								if (text4.Contains("REQUESTED APPLICATION UNAVAILABLE"))
								{
									Application.DoEvents();
									goto end_IL_0001;
								}
								if (text4.Contains("عفوا\u0651 لا يمكننا استكمال طلبك الأن, برجاء المحاولة مرة") | text4.Contains("م نتلقى اختيارك في المدة المحددة"))
								{
									Application.DoEvents();
									goto end_IL_0001;
								}
								Application.DoEvents();
							}
							if (text.Contains("unknown") | text.Contains("+CUSD: 2") | text.Contains("retry operation"))
							{
								goto end_IL_0001;
							}
							Application.DoEvents();
							num4 += 1.0;
							if (!(num4 <= 10.0))
							{
								goto end_IL_0001;
							}
						}
						string ussdCommandFull = "1";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(500);
						Application.DoEvents();
						continue;
						IL_027b:
						ussdCommandFull = "2";
						commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(500);
						Application.DoEvents();
						continue;
						IL_02c6:
						ussdCommandFull = "1";
						commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(500);
						Application.DoEvents();
					}
				case 1080:
					{
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001_2;
						}
						break;
					}
					end_IL_0001:
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				result = Conversions.ToString(num3);
				break;
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1080;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void btnECConvertTocash_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (txtPassEC.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد الكاش");
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "Convert to cash EC";
		DisableCntl();
		bool flag = chkCh1.Checked;
		bool flag2 = chkCh2.Checked;
		bool flag3 = chkCh3.Checked;
		bool flag4 = chkCh4.Checked;
		bool flag5 = chkCh5.Checked;
		bool flag6 = chkCh6.Checked;
		txtLoopSSOCG.Text = "0";
		do
		{
			txtLoopSSOCG.Text = Conversions.ToString(Conversion.Val(txtLoopSSOCG.Text) + 1.0);
			chkCh1.Checked = flag;
			chkCh2.Checked = flag2;
			chkCh3.Checked = flag3;
			chkCh4.Checked = flag4;
			chkCh5.Checked = flag5;
			chkCh6.Checked = flag6;
			ReSetUssdOrder();
			while (true)
			{
				num = checked(num + 1);
				if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
				{
					break;
				}
				if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
				{
					ApplyUssdECConvertTocash(lblPort1);
				}
				if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
				{
					ApplyUssdECConvertTocash(lblPort2);
				}
				if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
				{
					ApplyUssdECConvertTocash(lblPort3);
				}
				if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
				{
					ApplyUssdECConvertTocash(lblPort4);
				}
				if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
				{
					ApplyUssdECConvertTocash(lblPort5);
				}
				if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
				{
					ApplyUssdECConvertTocash(lblPort6);
				}
				if (chkStop.Checked)
				{
					break;
				}
				if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
				{
					ApplyUssdECConvertTocashRet(lblPort1);
				}
				if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
				{
					ApplyUssdECConvertTocashRet(lblPort2);
				}
				if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
				{
					ApplyUssdECConvertTocashRet(lblPort3);
				}
				if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
				{
					ApplyUssdECConvertTocashRet(lblPort4);
				}
				if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
				{
					ApplyUssdECConvertTocashRet(lblPort5);
				}
				if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
				{
					ApplyUssdECConvertTocashRet(lblPort6);
				}
				if (chkStop.Checked)
				{
					break;
				}
				if (num == 2 || num == 5 || num == 8)
				{
					ReSetUssdOrder();
					Application.DoEvents();
				}
				if (num <= 10)
				{
					continue;
				}
				Application.DoEvents();
				break;
			}
			Application.DoEvents();
		}
		while (Conversion.Val(txtLoopSSOCG.Text) < Conversion.Val(txtLoopFSOCG.Text) && !chkStop.Checked);
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void ApplyUssdECConvertTocash(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string commandCode = default(string);
		string ussdCommandFull = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 240:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0014;
						case 4:
							goto IL_0024;
						case 5:
							goto IL_0036;
						case 6:
							goto IL_0040;
						case 7:
							goto IL_0063;
						case 8:
							goto IL_006d;
						case 9:
							goto IL_0082;
						case 10:
							goto IL_008d;
						case 11:
							goto IL_0098;
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0082:
					num2 = 9;
					serialPort.Close();
					goto IL_008d;
					IL_008d:
					num2 = 10;
					serialPort.Dispose();
					goto IL_0098;
					IL_006d:
					num2 = 8;
					serialPort.WriteLine(commandCode + "\r");
					goto IL_0082;
					IL_0098:
					num2 = 11;
					serialPort = null;
					break;
					IL_000b:
					num2 = 2;
					serialPort = new SerialPort();
					goto IL_0014;
					IL_0014:
					num2 = 3;
					serialPort.PortName = Exxc.Text;
					goto IL_0024;
					IL_0024:
					num2 = 4;
					if (!serialPort.IsOpen)
					{
						goto IL_0036;
					}
					goto IL_0040;
					IL_0036:
					num2 = 5;
					serialPort.Open();
					goto IL_0040;
					IL_0040:
					num2 = 6;
					ussdCommandFull = "*777*6*50*" + txtPassEC.Text.Trim() + "*1#";
					goto IL_0063;
					IL_0063:
					num2 = 7;
					commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					goto IL_006d;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 240;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string ApplyUssdECConvertTocashRet(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num3 = default(int);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					num3 = 0;
					double num4 = 0.0;
					do
					{
						Application.DoEvents();
						Thread.Sleep(500);
						string text = serialPort.ReadExisting();
						if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
						{
							txtInfo.Text = text + "\r\n" + txtInfo.Text;
						}
						if (text.Contains("+CUSD:"))
						{
							int num5 = ((!text.Contains("+CUSD: 0")) ? text.IndexOf("+CUSD: 1") : text.IndexOf("+CUSD: 0"));
							string text2 = checked(text.Substring(num5 + 9, text.Length - num5 - 9)).Trim().Trim('o').Trim('\r')
								.Trim('\r')
								.Trim();
							num5 = text2.IndexOf(",");
							string text3 = text2.Substring(0, num5).Trim().Trim('"')
								.Trim(',')
								.Trim('"');
							text3 = text3.Trim('"').Trim(',').Trim('"');
							string text4;
							if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
							{
								byte[] bytes = encoding_mod.StrToByteArray(text3);
								text4 = Encoding.BigEndianUnicode.GetString(bytes);
							}
							else
							{
								text4 = encoding_mod.Decode7Bit(text3);
							}
							OutBoxDrop(Exxc, text4);
							if (text4.Contains("رصيد المحفظة غير كافي"))
							{
								DisablePort(Exxc);
								Application.DoEvents();
								break;
							}
							if (text4.Contains("تم شراء كارت ائتمان بنجاح"))
							{
								DisablePort(Exxc);
								Application.DoEvents();
								break;
							}
							if (text4.Contains("عفوا\u0651 لا يمكننا استكمال طلبك الأن, برجاء المحاولة مرة") | text4.Contains("م نتلقى اختيارك في المدة المحددة"))
							{
								Application.DoEvents();
								break;
							}
							Application.DoEvents();
						}
						if (text.Contains("unknown") | text.Contains("+CUSD: 2") | text.Contains("retry operation"))
						{
							break;
						}
						Application.DoEvents();
						num4 += 1.0;
					}
					while (num4 <= 10.0);
					break;
				}
				case 787:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				result = Conversions.ToString(num3);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 787;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void btnVodaAuto3652_Click(object sender, EventArgs e)
	{
		if (ck365_901.Checked)
		{
			btn365_901_Click(RuntimeHelpers.GetObjectValue(sender), e);
		}
		if (chkStop.Checked)
		{
			return;
		}
		if (ck365_T.Checked)
		{
			Application.DoEvents();
			btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
			chkTransGift.Checked = false;
			if (ck365_T2.Checked)
			{
				txtCashNextMaster.Text = lblMain.Text;
				chkGetgift.Checked = false;
				ckUseNextMain.Checked = true;
			}
			BtnAutoVC_Seres_Click(RuntimeHelpers.GetObjectValue(sender), e);
		}
		if (chkStop.Checked)
		{
			return;
		}
		if (ck365_90.Checked)
		{
			Application.DoEvents();
			btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
			if (!ck365_T2.Checked)
			{
				chkCh6.Checked = false;
				if (lblNum6.Text.Length != 11)
				{
					chkCh5.Checked = false;
				}
				if (lblNum5.Text.Length != 11)
				{
					chkCh4.Checked = false;
				}
				if (lblNum4.Text.Length != 11)
				{
					chkCh3.Checked = false;
				}
				if (lblNum3.Text.Length != 11)
				{
					chkCh2.Checked = false;
				}
			}
			btn365_90_Click(RuntimeHelpers.GetObjectValue(sender), e);
		}
		if (ck365_T2.Checked)
		{
			Application.DoEvents();
			btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
			txtCashNextMaster.Text = "";
			ckUseNextMain.Checked = false;
			chkTransGift.Checked = false;
			chkGetgift.Checked = true;
			BtnAutoVC_Seres_Click(RuntimeHelpers.GetObjectValue(sender), e);
		}
		if (chkStop.Checked)
		{
			return;
		}
		if (ck365_902.Checked)
		{
			Application.DoEvents();
			btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
			btn365_9093_Click(RuntimeHelpers.GetObjectValue(sender), e);
		}
		if (chkStop.Checked || !ck365_toup.Checked)
		{
			return;
		}
		Application.DoEvents();
		btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		if (ck365_T.Checked)
		{
			chkCh6.Checked = false;
			if (lblNum6.Text.Length != 11)
			{
				chkCh5.Checked = false;
			}
			if (lblNum5.Text.Length != 11)
			{
				chkCh4.Checked = false;
			}
			if (lblNum4.Text.Length != 11)
			{
				chkCh3.Checked = false;
			}
			if (lblNum3.Text.Length != 11)
			{
				chkCh2.Checked = false;
			}
		}
		btnTransGiftAutoSpValAll_Click(RuntimeHelpers.GetObjectValue(sender), e);
	}

	private void btn365_901_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				Stopwatch stopwatch;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1958:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0018;
						case 5:
							goto IL_0029;
						case 7:
						case 8:
							goto IL_0043;
						case 9:
							goto IL_0063;
						case 11:
						case 12:
							goto IL_007a;
						case 13:
							goto IL_008e;
						case 14:
							goto IL_00a2;
						case 15:
							goto IL_00ac;
						case 16:
						case 64:
							goto IL_00b7;
						case 17:
							goto IL_00c0;
						case 19:
							goto IL_0127;
						case 20:
							goto IL_015a;
						case 21:
						case 22:
							goto IL_016c;
						case 23:
							goto IL_019f;
						case 24:
						case 25:
							goto IL_01b1;
						case 26:
							goto IL_01e4;
						case 27:
						case 28:
							goto IL_01f6;
						case 29:
							goto IL_0229;
						case 30:
						case 31:
							goto IL_023b;
						case 32:
							goto IL_026e;
						case 33:
						case 34:
							goto IL_0280;
						case 35:
							goto IL_02b3;
						case 36:
						case 37:
							goto IL_02c5;
						case 39:
							goto IL_02de;
						case 40:
							goto IL_0311;
						case 41:
						case 42:
							goto IL_0323;
						case 43:
							goto IL_0356;
						case 44:
						case 45:
							goto IL_0368;
						case 46:
							goto IL_039b;
						case 47:
						case 48:
							goto IL_03ad;
						case 49:
							goto IL_03e0;
						case 50:
						case 51:
							goto IL_03f2;
						case 52:
							goto IL_0425;
						case 53:
						case 54:
							goto IL_0437;
						case 55:
							goto IL_046a;
						case 56:
						case 57:
							goto IL_047c;
						case 59:
							goto IL_0492;
						case 60:
							goto IL_04ac;
						case 61:
							goto IL_04b6;
						case 62:
						case 63:
							goto IL_04c1;
						case 65:
							goto IL_04d8;
						case 18:
						case 38:
						case 58:
						case 66:
							goto IL_04e2;
						case 67:
							goto IL_04eb;
						case 68:
							goto IL_0509;
						case 69:
							goto IL_051d;
						case 70:
							goto IL_053b;
						case 71:
							goto IL_054f;
						case 72:
							goto IL_056d;
						case 73:
							goto IL_0581;
						case 74:
							goto IL_059f;
						case 75:
							goto IL_05b3;
						case 76:
							goto IL_05d1;
						case 77:
							goto IL_05e5;
						case 78:
							goto IL_0603;
						case 79:
							goto IL_0617;
						case 80:
							goto IL_0621;
						case 81:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 6:
						case 10:
						case 82:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0603:
					num2 = 78;
					txtRet06.ForeColor = Color.Red;
					goto IL_0617;
					IL_0617:
					num2 = 79;
					EnableCntl();
					goto IL_0621;
					IL_05e5:
					num2 = 77;
					if (txtRet06.Text.Contains("افتح محفظة"))
					{
						goto IL_0603;
					}
					goto IL_0617;
					IL_0621:
					num2 = 80;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					num5 = 0;
					goto IL_0018;
					IL_0018:
					num2 = 4;
					if (MysqlConn.MainProgLic < 11)
					{
						goto IL_0029;
					}
					goto IL_0043;
					IL_0029:
					num2 = 5;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0043:
					num2 = 8;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0063;
					}
					goto IL_007a;
					IL_0063:
					num2 = 9;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_007a:
					num2 = 12;
					lblProgress.BackColor = Color.Red;
					goto IL_008e;
					IL_008e:
					num2 = 13;
					lblProgress.Text = "*365*90*1#";
					goto IL_00a2;
					IL_00a2:
					num2 = 14;
					DisableCntl();
					goto IL_00ac;
					IL_00ac:
					num2 = 15;
					ReSetUssdOrder();
					goto IL_00b7;
					IL_00b7:
					num2 = 16;
					num5 = checked(num5 + 1);
					goto IL_00c0;
					IL_00c0:
					num2 = 17;
					if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						goto IL_0127;
					}
					goto IL_04e2;
					IL_0127:
					num2 = 19;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_015a;
					}
					goto IL_016c;
					IL_015a:
					num2 = 20;
					ApplyUssdVCGIFTS365(lblPort1);
					goto IL_016c;
					IL_016c:
					num2 = 22;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_019f;
					}
					goto IL_01b1;
					IL_019f:
					num2 = 23;
					ApplyUssdVCGIFTS365(lblPort2);
					goto IL_01b1;
					IL_01b1:
					num2 = 25;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_01e4;
					}
					goto IL_01f6;
					IL_01e4:
					num2 = 26;
					ApplyUssdVCGIFTS365(lblPort3);
					goto IL_01f6;
					IL_01f6:
					num2 = 28;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0229;
					}
					goto IL_023b;
					IL_0229:
					num2 = 29;
					ApplyUssdVCGIFTS365(lblPort4);
					goto IL_023b;
					IL_023b:
					num2 = 31;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_026e;
					}
					goto IL_0280;
					IL_026e:
					num2 = 32;
					ApplyUssdVCGIFTS365(lblPort5);
					goto IL_0280;
					IL_0280:
					num2 = 34;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_02b3;
					}
					goto IL_02c5;
					IL_02b3:
					num2 = 35;
					ApplyUssdVCGIFTS365(lblPort6);
					goto IL_02c5;
					IL_02c5:
					num2 = 37;
					if (!chkStop.Checked)
					{
						goto IL_02de;
					}
					goto IL_04e2;
					IL_02de:
					num2 = 39;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_0311;
					}
					goto IL_0323;
					IL_0311:
					num2 = 40;
					ApplyUssdVCGIFTS365Ret(lblPort1);
					goto IL_0323;
					IL_0323:
					num2 = 42;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_0356;
					}
					goto IL_0368;
					IL_0356:
					num2 = 43;
					ApplyUssdVCGIFTS365Ret(lblPort2);
					goto IL_0368;
					IL_0368:
					num2 = 45;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_039b;
					}
					goto IL_03ad;
					IL_039b:
					num2 = 46;
					ApplyUssdVCGIFTS365Ret(lblPort3);
					goto IL_03ad;
					IL_03ad:
					num2 = 48;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_03e0;
					}
					goto IL_03f2;
					IL_03e0:
					num2 = 49;
					ApplyUssdVCGIFTS365Ret(lblPort4);
					goto IL_03f2;
					IL_03f2:
					num2 = 51;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0425;
					}
					goto IL_0437;
					IL_0425:
					num2 = 52;
					ApplyUssdVCGIFTS365Ret(lblPort5);
					goto IL_0437;
					IL_0437:
					num2 = 54;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_046a;
					}
					goto IL_047c;
					IL_046a:
					num2 = 55;
					ApplyUssdVCGIFTS365Ret(lblPort6);
					goto IL_047c;
					IL_047c:
					num2 = 57;
					if (!chkStop.Checked)
					{
						goto IL_0492;
					}
					goto IL_04e2;
					IL_0492:
					num2 = 59;
					if (num5 == 2 || num5 == 5 || num5 == 8)
					{
						goto IL_04ac;
					}
					goto IL_04c1;
					IL_04ac:
					num2 = 60;
					ReSetUssdOrder();
					goto IL_04b6;
					IL_04b6:
					num2 = 61;
					Application.DoEvents();
					goto IL_04c1;
					IL_04c1:
					num2 = 63;
					if (num5 <= 10)
					{
						goto IL_00b7;
					}
					goto IL_04d8;
					IL_04d8:
					num2 = 65;
					Application.DoEvents();
					goto IL_04e2;
					IL_04e2:
					num2 = 66;
					Application.DoEvents();
					goto IL_04eb;
					IL_04eb:
					num2 = 67;
					if (txtRet01.Text.Contains("افتح محفظة"))
					{
						goto IL_0509;
					}
					goto IL_051d;
					IL_0509:
					num2 = 68;
					txtRet01.ForeColor = Color.Red;
					goto IL_051d;
					IL_051d:
					num2 = 69;
					if (txtRet02.Text.Contains("افتح محفظة"))
					{
						goto IL_053b;
					}
					goto IL_054f;
					IL_053b:
					num2 = 70;
					txtRet02.ForeColor = Color.Red;
					goto IL_054f;
					IL_054f:
					num2 = 71;
					if (txtRet03.Text.Contains("افتح محفظة"))
					{
						goto IL_056d;
					}
					goto IL_0581;
					IL_056d:
					num2 = 72;
					txtRet03.ForeColor = Color.Red;
					goto IL_0581;
					IL_0581:
					num2 = 73;
					if (txtRet04.Text.Contains("افتح محفظة"))
					{
						goto IL_059f;
					}
					goto IL_05b3;
					IL_059f:
					num2 = 74;
					txtRet04.ForeColor = Color.Red;
					goto IL_05b3;
					IL_05b3:
					num2 = 75;
					if (txtRet05.Text.Contains("افتح محفظة"))
					{
						goto IL_05d1;
					}
					goto IL_05e5;
					IL_05d1:
					num2 = 76;
					txtRet05.ForeColor = Color.Red;
					goto IL_05e5;
					end_IL_0001_2:
					break;
				}
				num2 = 81;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1958;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdVCGIFTS365(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string commandCode = default(string);
		string ussdCommandFull = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 214:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0014;
						case 4:
							goto IL_0024;
						case 5:
							goto IL_0036;
						case 6:
							goto IL_0040;
						case 7:
							goto IL_0049;
						case 8:
							goto IL_0053;
						case 9:
							goto IL_0068;
						case 10:
							goto IL_0073;
						case 11:
							goto IL_007e;
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0068:
					num2 = 9;
					serialPort.Close();
					goto IL_0073;
					IL_0073:
					num2 = 10;
					serialPort.Dispose();
					goto IL_007e;
					IL_0053:
					num2 = 8;
					serialPort.WriteLine(commandCode + "\r");
					goto IL_0068;
					IL_007e:
					num2 = 11;
					serialPort = null;
					break;
					IL_000b:
					num2 = 2;
					serialPort = new SerialPort();
					goto IL_0014;
					IL_0014:
					num2 = 3;
					serialPort.PortName = Exxc.Text;
					goto IL_0024;
					IL_0024:
					num2 = 4;
					if (!serialPort.IsOpen)
					{
						goto IL_0036;
					}
					goto IL_0040;
					IL_0036:
					num2 = 5;
					serialPort.Open();
					goto IL_0040;
					IL_0040:
					num2 = 6;
					ussdCommandFull = "*365*90*1#";
					goto IL_0049;
					IL_0049:
					num2 = 7;
					commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					goto IL_0053;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 214;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string ApplyUssdVCGIFTS365Ret(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num3 = default(int);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					num3 = 0;
					Thread.Sleep(250);
					double num4 = 0.0;
					do
					{
						Application.DoEvents();
						Thread.Sleep(250);
						string text = serialPort.ReadExisting();
						if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
						{
							txtInfo.Text = text + "\r\n" + txtInfo.Text;
						}
						if (text.Contains("+CUSD:"))
						{
							int num5 = ((!text.Contains("+CUSD: 0")) ? text.IndexOf("+CUSD: 1") : text.IndexOf("+CUSD: 0"));
							string text2 = checked(text.Substring(num5 + 9, text.Length - num5 - 9)).Trim().Trim('o').Trim('\r')
								.Trim('\r')
								.Trim();
							num5 = text2.IndexOf(",");
							string text3 = text2.Substring(0, num5).Trim().Trim('"')
								.Trim(',')
								.Trim('"');
							text3 = text3.Trim('"').Trim(',').Trim('"');
							string text4;
							if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
							{
								byte[] bytes = encoding_mod.StrToByteArray(text3);
								text4 = Encoding.BigEndianUnicode.GetString(bytes);
							}
							else
							{
								text4 = encoding_mod.Decode7Bit(text3);
							}
							OutBoxDrop(Exxc, text4);
							if (text4.Contains("ممكن تكسب"))
							{
								DisablePort(Exxc);
								Application.DoEvents();
								break;
							}
							if (text4.Contains("فتح محفظة"))
							{
								DisablePort(Exxc);
								Application.DoEvents();
								break;
							}
							if (text4.Contains("عميلنا العزيز ،لا يوجد عروض أخري من فودافون كاش"))
							{
								DisablePort(Exxc);
								Application.DoEvents();
								break;
							}
							if (text4.Contains("Please try again later"))
							{
								Application.DoEvents();
								break;
							}
							if (text4.Contains("عفوا\u064b هذا العرض غير ساري علي نظام خطك"))
							{
								DisablePort(Exxc);
								Application.DoEvents();
								break;
							}
							if (text4.Contains("عفوا\u0651 لا يمكننا استكمال طلبك الأن, برجاء المحاولة مرة") | text4.Contains("م نتلقى اختيارك في المدة المحددة"))
							{
								Application.DoEvents();
								break;
							}
							Application.DoEvents();
						}
						if (text.Contains("unknown") | text.Contains("+CUSD: 2") | text.Contains("retry operation"))
						{
							break;
						}
						Application.DoEvents();
						num4 += 1.0;
					}
					while (num4 <= 20.0);
					break;
				}
				case 904:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				result = Conversions.ToString(num3);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 904;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void btn365_90_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				Stopwatch stopwatch;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 2105:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0018;
						case 5:
							goto IL_0029;
						case 7:
						case 8:
							goto IL_0043;
						case 9:
							goto IL_0063;
						case 11:
						case 12:
							goto IL_007a;
						case 13:
							goto IL_008e;
						case 14:
							goto IL_00a2;
						case 15:
							goto IL_00ac;
						case 16:
						case 76:
							goto IL_00b7;
						case 17:
							goto IL_00c0;
						case 19:
							goto IL_0127;
						case 20:
							goto IL_015a;
						case 21:
						case 22:
							goto IL_016c;
						case 23:
							goto IL_019f;
						case 24:
						case 25:
							goto IL_01b1;
						case 26:
							goto IL_01e4;
						case 27:
						case 28:
							goto IL_01f6;
						case 29:
							goto IL_0229;
						case 30:
						case 31:
							goto IL_023b;
						case 32:
							goto IL_026e;
						case 33:
						case 34:
							goto IL_0280;
						case 35:
							goto IL_02b3;
						case 36:
						case 37:
							goto IL_02c5;
						case 39:
							goto IL_02de;
						case 40:
							goto IL_0311;
						case 41:
						case 42:
							goto IL_0323;
						case 43:
							goto IL_0356;
						case 44:
						case 45:
							goto IL_0368;
						case 46:
							goto IL_039b;
						case 47:
						case 48:
							goto IL_03ad;
						case 49:
							goto IL_03e0;
						case 50:
						case 51:
							goto IL_03f2;
						case 52:
							goto IL_0425;
						case 53:
						case 54:
							goto IL_0437;
						case 55:
							goto IL_046a;
						case 56:
						case 57:
							goto IL_047c;
						case 59:
							goto IL_0495;
						case 60:
							goto IL_04af;
						case 61:
							goto IL_04b9;
						case 62:
						case 63:
							goto IL_04c4;
						case 64:
							goto IL_04fe;
						case 65:
							goto IL_050e;
						case 66:
							goto IL_0548;
						case 67:
							goto IL_0558;
						case 68:
							goto IL_0592;
						case 69:
							goto IL_05a2;
						case 70:
							goto IL_05dc;
						case 71:
							goto IL_05ec;
						case 72:
							goto IL_0626;
						case 73:
							goto IL_0636;
						case 74:
							goto IL_0670;
						case 75:
							goto IL_0680;
						case 77:
							goto IL_0697;
						case 18:
						case 38:
						case 58:
						case 78:
							goto IL_06a1;
						case 79:
							goto IL_06aa;
						case 80:
							goto IL_06b4;
						case 81:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 6:
						case 10:
						case 82:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_06a1:
					num2 = 78;
					Application.DoEvents();
					goto IL_06aa;
					IL_06aa:
					num2 = 79;
					EnableCntl();
					goto IL_06b4;
					IL_0697:
					num2 = 77;
					Application.DoEvents();
					goto IL_06a1;
					IL_06b4:
					num2 = 80;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					num5 = 0;
					goto IL_0018;
					IL_0018:
					num2 = 4;
					if (MysqlConn.MainProgLic < 11)
					{
						goto IL_0029;
					}
					goto IL_0043;
					IL_0029:
					num2 = 5;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0043:
					num2 = 8;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0063;
					}
					goto IL_007a;
					IL_0063:
					num2 = 9;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_007a:
					num2 = 12;
					lblProgress.BackColor = Color.Red;
					goto IL_008e;
					IL_008e:
					num2 = 13;
					lblProgress.Text = "*365*90#";
					goto IL_00a2;
					IL_00a2:
					num2 = 14;
					DisableCntl();
					goto IL_00ac;
					IL_00ac:
					num2 = 15;
					ReSetUssdOrder();
					goto IL_00b7;
					IL_00b7:
					num2 = 16;
					num5 = checked(num5 + 1);
					goto IL_00c0;
					IL_00c0:
					num2 = 17;
					if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						goto IL_0127;
					}
					goto IL_06a1;
					IL_0127:
					num2 = 19;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_015a;
					}
					goto IL_016c;
					IL_015a:
					num2 = 20;
					ApplyUssdVCGIFTS365_get(lblPort1);
					goto IL_016c;
					IL_016c:
					num2 = 22;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_019f;
					}
					goto IL_01b1;
					IL_019f:
					num2 = 23;
					ApplyUssdVCGIFTS365_get(lblPort2);
					goto IL_01b1;
					IL_01b1:
					num2 = 25;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_01e4;
					}
					goto IL_01f6;
					IL_01e4:
					num2 = 26;
					ApplyUssdVCGIFTS365_get(lblPort3);
					goto IL_01f6;
					IL_01f6:
					num2 = 28;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0229;
					}
					goto IL_023b;
					IL_0229:
					num2 = 29;
					ApplyUssdVCGIFTS365_get(lblPort4);
					goto IL_023b;
					IL_023b:
					num2 = 31;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_026e;
					}
					goto IL_0280;
					IL_026e:
					num2 = 32;
					ApplyUssdVCGIFTS365_get(lblPort5);
					goto IL_0280;
					IL_0280:
					num2 = 34;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_02b3;
					}
					goto IL_02c5;
					IL_02b3:
					num2 = 35;
					ApplyUssdVCGIFTS365_get(lblPort6);
					goto IL_02c5;
					IL_02c5:
					num2 = 37;
					if (!chkStop.Checked)
					{
						goto IL_02de;
					}
					goto IL_06a1;
					IL_02de:
					num2 = 39;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_0311;
					}
					goto IL_0323;
					IL_0311:
					num2 = 40;
					ApplyUssdVCGIFTS365_getRet(lblPort1);
					goto IL_0323;
					IL_0323:
					num2 = 42;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_0356;
					}
					goto IL_0368;
					IL_0356:
					num2 = 43;
					ApplyUssdVCGIFTS365_getRet(lblPort2);
					goto IL_0368;
					IL_0368:
					num2 = 45;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_039b;
					}
					goto IL_03ad;
					IL_039b:
					num2 = 46;
					ApplyUssdVCGIFTS365_getRet(lblPort3);
					goto IL_03ad;
					IL_03ad:
					num2 = 48;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_03e0;
					}
					goto IL_03f2;
					IL_03e0:
					num2 = 49;
					ApplyUssdVCGIFTS365_getRet(lblPort4);
					goto IL_03f2;
					IL_03f2:
					num2 = 51;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0425;
					}
					goto IL_0437;
					IL_0425:
					num2 = 52;
					ApplyUssdVCGIFTS365_getRet(lblPort5);
					goto IL_0437;
					IL_0437:
					num2 = 54;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_046a;
					}
					goto IL_047c;
					IL_046a:
					num2 = 55;
					ApplyUssdVCGIFTS365_getRet(lblPort6);
					goto IL_047c;
					IL_047c:
					num2 = 57;
					if (!chkStop.Checked)
					{
						goto IL_0495;
					}
					goto IL_06a1;
					IL_0495:
					num2 = 59;
					if (num5 == 2 || num5 == 5 || num5 == 8)
					{
						goto IL_04af;
					}
					goto IL_04c4;
					IL_04af:
					num2 = 60;
					ReSetUssdOrder();
					goto IL_04b9;
					IL_04b9:
					num2 = 61;
					Application.DoEvents();
					goto IL_04c4;
					IL_04c4:
					num2 = 63;
					if (!txtRet01.Text.Contains("جاري تنفيذ طلبك") & !txtRet01.Text.Contains("العرض غير ساري"))
					{
						goto IL_04fe;
					}
					goto IL_050e;
					IL_04fe:
					num2 = 64;
					chkCh1.Checked = true;
					goto IL_050e;
					IL_050e:
					num2 = 65;
					if (!txtRet02.Text.Contains("جاري تنفيذ طلبك") & !txtRet02.Text.Contains("العرض غير ساري"))
					{
						goto IL_0548;
					}
					goto IL_0558;
					IL_0548:
					num2 = 66;
					chkCh2.Checked = true;
					goto IL_0558;
					IL_0558:
					num2 = 67;
					if (!txtRet03.Text.Contains("جاري تنفيذ طلبك") & !txtRet03.Text.Contains("العرض غير ساري"))
					{
						goto IL_0592;
					}
					goto IL_05a2;
					IL_0592:
					num2 = 68;
					chkCh3.Checked = true;
					goto IL_05a2;
					IL_05a2:
					num2 = 69;
					if (!txtRet04.Text.Contains("جاري تنفيذ طلبك") & !txtRet04.Text.Contains("العرض غير ساري"))
					{
						goto IL_05dc;
					}
					goto IL_05ec;
					IL_05dc:
					num2 = 70;
					chkCh4.Checked = true;
					goto IL_05ec;
					IL_05ec:
					num2 = 71;
					if (!txtRet05.Text.Contains("جاري تنفيذ طلبك") & !txtRet05.Text.Contains("العرض غير ساري"))
					{
						goto IL_0626;
					}
					goto IL_0636;
					IL_0626:
					num2 = 72;
					chkCh5.Checked = true;
					goto IL_0636;
					IL_0636:
					num2 = 73;
					if (!txtRet06.Text.Contains("جاري تنفيذ طلبك") & !txtRet06.Text.Contains("العرض غير ساري"))
					{
						goto IL_0670;
					}
					goto IL_0680;
					IL_0670:
					num2 = 74;
					chkCh6.Checked = true;
					goto IL_0680;
					IL_0680:
					num2 = 75;
					if (num5 <= 10)
					{
						goto IL_00b7;
					}
					goto IL_0697;
					end_IL_0001_2:
					break;
				}
				num2 = 81;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 2105;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdVCGIFTS365_get(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string commandCode = default(string);
		string ussdCommandFull = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 214:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0014;
						case 4:
							goto IL_0024;
						case 5:
							goto IL_0036;
						case 6:
							goto IL_0040;
						case 7:
							goto IL_0049;
						case 8:
							goto IL_0053;
						case 9:
							goto IL_0068;
						case 10:
							goto IL_0073;
						case 11:
							goto IL_007e;
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0068:
					num2 = 9;
					serialPort.Close();
					goto IL_0073;
					IL_0073:
					num2 = 10;
					serialPort.Dispose();
					goto IL_007e;
					IL_0053:
					num2 = 8;
					serialPort.WriteLine(commandCode + "\r");
					goto IL_0068;
					IL_007e:
					num2 = 11;
					serialPort = null;
					break;
					IL_000b:
					num2 = 2;
					serialPort = new SerialPort();
					goto IL_0014;
					IL_0014:
					num2 = 3;
					serialPort.PortName = Exxc.Text;
					goto IL_0024;
					IL_0024:
					num2 = 4;
					if (!serialPort.IsOpen)
					{
						goto IL_0036;
					}
					goto IL_0040;
					IL_0036:
					num2 = 5;
					serialPort.Open();
					goto IL_0040;
					IL_0040:
					num2 = 6;
					ussdCommandFull = "*365*90#";
					goto IL_0049;
					IL_0049:
					num2 = 7;
					commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					goto IL_0053;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 214;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdVCGIFTS365_get_93(Label Exxc, string EEcommand)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string commandCode = default(string);
		string ussdCommandFull = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 210:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0014;
						case 4:
							goto IL_0024;
						case 5:
							goto IL_0036;
						case 6:
							goto IL_0040;
						case 7:
							goto IL_0045;
						case 8:
							goto IL_004f;
						case 9:
							goto IL_0064;
						case 10:
							goto IL_006f;
						case 11:
							goto IL_007a;
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0064:
					num2 = 9;
					serialPort.Close();
					goto IL_006f;
					IL_006f:
					num2 = 10;
					serialPort.Dispose();
					goto IL_007a;
					IL_004f:
					num2 = 8;
					serialPort.WriteLine(commandCode + "\r");
					goto IL_0064;
					IL_007a:
					num2 = 11;
					serialPort = null;
					break;
					IL_000b:
					num2 = 2;
					serialPort = new SerialPort();
					goto IL_0014;
					IL_0014:
					num2 = 3;
					serialPort.PortName = Exxc.Text;
					goto IL_0024;
					IL_0024:
					num2 = 4;
					if (!serialPort.IsOpen)
					{
						goto IL_0036;
					}
					goto IL_0040;
					IL_0036:
					num2 = 5;
					serialPort.Open();
					goto IL_0040;
					IL_0040:
					num2 = 6;
					ussdCommandFull = EEcommand;
					goto IL_0045;
					IL_0045:
					num2 = 7;
					commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					goto IL_004f;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 210;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string ApplyUssdVCGIFTS365_getRet(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num3 = default(int);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
				{
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					num3 = 0;
					Thread.Sleep(250);
					double num4 = 0.0;
					do
					{
						Application.DoEvents();
						Thread.Sleep(250);
						string text = serialPort.ReadExisting();
						if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
						{
							txtInfo.Text = text + "\r\n" + txtInfo.Text;
						}
						if (text.Contains("+CUSD:"))
						{
							int num5 = ((!text.Contains("+CUSD: 0")) ? text.IndexOf("+CUSD: 1") : text.IndexOf("+CUSD: 0"));
							string text2 = checked(text.Substring(num5 + 9, text.Length - num5 - 9)).Trim().Trim('o').Trim('\r')
								.Trim('\r')
								.Trim();
							num5 = text2.IndexOf(",");
							string text3 = text2.Substring(0, num5).Trim().Trim('"')
								.Trim(',')
								.Trim('"');
							text3 = text3.Trim('"').Trim(',').Trim('"');
							string text4;
							if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
							{
								byte[] bytes = encoding_mod.StrToByteArray(text3);
								text4 = Encoding.BigEndianUnicode.GetString(bytes);
							}
							else
							{
								text4 = encoding_mod.Decode7Bit(text3);
							}
							OutBoxDrop(Exxc, text4);
							if (text4.Contains("جاري تنفيذ طلبك") | text4.Contains("عفوا\u064b هذا العرض غير ساري علي نظام") | text4.Contains("عميلنا العزيز ،لا يوجد عروض أخري من فودافون كاش"))
							{
								DisablePort(Exxc);
								Application.DoEvents();
								break;
							}
							if (text4.Contains("عفوا\u0651 لا يمكننا استكمال طلبك الأن, برجاء المحاولة مرة") | text4.Contains("م نتلقى اختيارك في المدة المحددة"))
							{
								Application.DoEvents();
								break;
							}
							if (text4.Contains("Please try again later"))
							{
								Application.DoEvents();
								break;
							}
							Application.DoEvents();
						}
						if (text.Contains("unknown") | text.Contains("+CUSD: 2") | text.Contains("retry operation"))
						{
							break;
						}
						Application.DoEvents();
						num4 += 1.0;
					}
					while (num4 <= 20.0);
					break;
				}
				case 813:
					num = -1;
					switch (num2)
					{
					case 2:
						break;
					default:
						goto end_IL_0001;
					}
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				result = Conversions.ToString(num3);
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 813;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void txtNumberToAddinRobot_TextChanged(object sender, EventArgs e)
	{
	}

	private void tabOCGifts_Click(object sender, EventArgs e)
	{
	}

	private void lblOCMMain_TextChanged(object sender, EventArgs e)
	{
	}

	private void txtOCNextMain_TextChanged(object sender, EventArgs e)
	{
	}

	private void btnDoOfferWithdraw_Click(object sender, EventArgs e)
	{
		if ((txtDoOfferWithdraw1.Text.Length != 11) | (txtDoOfferWithdraw2.Text.Length != 11))
		{
			Interaction.MsgBox("enter numbers to tansfer to");
			return;
		}
		Application.DoEvents();
		lblProgress.BackColor = Color.Red;
		if (chkStop.Checked)
		{
			return;
		}
		chkCh1.Checked = true;
		txtLoopFSDOCPAYSr.Text = "1";
		ckOCSub.Checked = false;
		lblOCMain.Text = lblNum1.Text;
		txtOCNextMain.Text = lblNum1.Text;
		btnOCSeries_Click(RuntimeHelpers.GetObjectValue(sender), e);
		if (chkStop.Checked || chkStop.Checked)
		{
			return;
		}
		btnSA_Click(RuntimeHelpers.GetObjectValue(sender), e);
		btnOCGetBal_Click(RuntimeHelpers.GetObjectValue(sender), e);
		if (!chkStop.Checked)
		{
			txtOCTransferSub.Text = "1";
			btnUp_Click(RuntimeHelpers.GetObjectValue(sender), e);
			txtOCTransferAll.Text = txtDoOfferWithdraw1.Text;
			btnOCTransferAll_Click(RuntimeHelpers.GetObjectValue(sender), e);
			if (!chkStop.Checked)
			{
				btnSADwn_Click(RuntimeHelpers.GetObjectValue(sender), e);
				txtOCTransferAll.Text = txtDoOfferWithdraw2.Text;
				btnOCTransferAll_Click(RuntimeHelpers.GetObjectValue(sender), e);
				lblProgress.Text = "DONE";
				lblProgress.BackColor = Color.LimeGreen;
			}
		}
	}

	private void gboxLock_Enter(object sender, EventArgs e)
	{
	}

	private void btnTayerPullAllBalsMony_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (txtTayerNextMain.Text.Trim().Length != 11)
		{
			Interaction.MsgBox("حدد رقم كاش لسحب الرصيد علية - الاساسى التالى");
			return;
		}
		if (txtTayerPass.Text.Trim().Length != 4)
		{
			Interaction.MsgBox("ادخل باسورد الطاير");
			txtTayerPass.Focus();
			return;
		}
		if (Conversion.Val(txtTayerValue.Text) <= 0.0)
		{
			Interaction.MsgBox("input value");
			return;
		}
		do
		{
			num = checked(num + 1);
			if (chkStop.Checked)
			{
				break;
			}
			lblProgress.Text = "سحب طاير ";
			if (chkCh1.Checked)
			{
				ApplyUssdCodeTayer_Mex(lblPort1, txtTayerNextMain.Text, cknull, 1, Conversion.Val(txtTayerValue.Text));
				Application.DoEvents();
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if (chkCh2.Checked)
			{
				ApplyUssdCodeTayer_Mex(lblPort2, txtTayerNextMain.Text, cknull, 1, Conversion.Val(txtTayerValue.Text));
				Application.DoEvents();
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if (chkCh3.Checked)
			{
				ApplyUssdCodeTayer_Mex(lblPort3, txtTayerNextMain.Text, cknull, 1, Conversion.Val(txtTayerValue.Text));
				Application.DoEvents();
			}
			if ((!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) || chkStop.Checked)
			{
				break;
			}
			Application.DoEvents();
			if (chkCh4.Checked)
			{
				ApplyUssdCodeTayer_Mex(lblPort4, txtTayerNextMain.Text, cknull, 1, Conversion.Val(txtTayerValue.Text));
				Application.DoEvents();
			}
			if ((!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) || chkStop.Checked)
			{
				break;
			}
			Application.DoEvents();
			if (chkCh5.Checked)
			{
				ApplyUssdCodeTayer_Mex(lblPort5, txtTayerNextMain.Text, cknull, 1, Conversion.Val(txtTayerValue.Text));
				Application.DoEvents();
			}
			if (chkCh6.Checked)
			{
				ApplyUssdCodeTayer_Mex(lblPort6, txtTayerNextMain.Text, cknull, 1, Conversion.Val(txtTayerValue.Text));
				Application.DoEvents();
			}
		}
		while (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked) && num <= 60);
		Application.DoEvents();
		if (chbeep.Checked)
		{
			EEmosemove = false;
			while (!EEmosemove)
			{
				Interaction.Beep();
				Application.DoEvents();
			}
		}
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btn365_9093_Click(object sender, EventArgs e)
	{
		Stopwatch stopwatch = new Stopwatch();
		int num = 0;
		bool flag = chkCh1.Checked;
		bool flag2 = chkCh2.Checked;
		bool flag3 = chkCh3.Checked;
		bool flag4 = chkCh4.Checked;
		bool flag5 = chkCh5.Checked;
		bool flag6 = chkCh6.Checked;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		lblProgress.BackColor = Color.Red;
		lblProgress.Text = "*365*90-93#";
		DisableCntl();
		ReSetUssdOrder();
		if (flag)
		{
			txtRet01.Text.Replace("العرض غير ساري", "");
		}
		if (flag2)
		{
			txtRet02.Text.Replace("العرض غير ساري", "");
		}
		if (flag3)
		{
			txtRet03.Text.Replace("العرض غير ساري", "");
		}
		if (flag4)
		{
			txtRet04.Text.Replace("العرض غير ساري", "");
		}
		if (flag5)
		{
			txtRet05.Text.Replace("العرض غير ساري", "");
		}
		if (flag6)
		{
			txtRet06.Text.Replace("العرض غير ساري", "");
		}
		while (true)
		{
			num = checked(num + 1);
			if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
			{
				if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
				{
					ApplyUssdVCGIFTS365_get_93(lblPort1, "*365*90#");
				}
				if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
				{
					ApplyUssdVCGIFTS365_get_93(lblPort2, "*365*90#");
				}
				if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
				{
					ApplyUssdVCGIFTS365_get_93(lblPort3, "*365*90#");
				}
				if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
				{
					ApplyUssdVCGIFTS365_get_93(lblPort4, "*365*90#");
				}
				if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
				{
					ApplyUssdVCGIFTS365_get_93(lblPort5, "*365*90#");
				}
				if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
				{
					ApplyUssdVCGIFTS365_get_93(lblPort6, "*365*90#");
				}
				if (chkStop.Checked)
				{
					break;
				}
				if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
				{
					ApplyUssdVCGIFTS365_getRet(lblPort1);
				}
				if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
				{
					ApplyUssdVCGIFTS365_getRet(lblPort2);
				}
				if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
				{
					ApplyUssdVCGIFTS365_getRet(lblPort3);
				}
				if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
				{
					ApplyUssdVCGIFTS365_getRet(lblPort4);
				}
				if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
				{
					ApplyUssdVCGIFTS365_getRet(lblPort5);
				}
				if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
				{
					ApplyUssdVCGIFTS365_getRet(lblPort6);
				}
				if (chkStop.Checked)
				{
					break;
				}
				if (num == 2 || num == 5 || num == 8)
				{
					ReSetUssdOrder();
					Application.DoEvents();
				}
				if (flag & !txtRet01.Text.Contains("جاري تنفيذ طلبك") & !txtRet01.Text.Contains("العرض غير ساري"))
				{
					chkCh1.Checked = true;
				}
				if (flag2 & !txtRet02.Text.Contains("جاري تنفيذ طلبك") & !txtRet02.Text.Contains("العرض غير ساري"))
				{
					chkCh2.Checked = true;
				}
				if (flag3 & !txtRet03.Text.Contains("جاري تنفيذ طلبك") & !txtRet03.Text.Contains("العرض غير ساري"))
				{
					chkCh3.Checked = true;
				}
				if (flag4 & !txtRet04.Text.Contains("جاري تنفيذ طلبك") & !txtRet04.Text.Contains("العرض غير ساري"))
				{
					chkCh4.Checked = true;
				}
				if (flag5 & !txtRet05.Text.Contains("جاري تنفيذ طلبك") & !txtRet05.Text.Contains("العرض غير ساري"))
				{
					chkCh5.Checked = true;
				}
				if (flag6 & !txtRet06.Text.Contains("جاري تنفيذ طلبك") & !txtRet06.Text.Contains("العرض غير ساري"))
				{
					chkCh6.Checked = true;
				}
				if (num <= 10)
				{
					continue;
				}
				Application.DoEvents();
			}
			chkCh1.Checked = flag;
			chkCh2.Checked = flag2;
			chkCh3.Checked = flag3;
			chkCh4.Checked = flag4;
			chkCh5.Checked = flag5;
			chkCh6.Checked = flag6;
			if (flag & !txtRet01.Text.Contains("جاري تنفيذ طلبك"))
			{
				chkCh1.Checked = true;
			}
			if (flag2 & !txtRet02.Text.Contains("جاري تنفيذ طلبك"))
			{
				chkCh2.Checked = true;
			}
			if (flag3 & !txtRet03.Text.Contains("جاري تنفيذ طلبك"))
			{
				chkCh3.Checked = true;
			}
			if (flag4 & !txtRet04.Text.Contains("جاري تنفيذ طلبك"))
			{
				chkCh4.Checked = true;
			}
			if (flag5 & !txtRet05.Text.Contains("جاري تنفيذ طلبك"))
			{
				chkCh5.Checked = true;
			}
			if (flag6 & !txtRet06.Text.Contains("جاري تنفيذ طلبك"))
			{
				chkCh6.Checked = true;
			}
			if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
			{
				break;
			}
			if (flag)
			{
				txtRet01.Text.Replace("العرض غير ساري", "");
			}
			if (flag2)
			{
				txtRet02.Text.Replace("العرض غير ساري", "");
			}
			if (flag3)
			{
				txtRet03.Text.Replace("العرض غير ساري", "");
			}
			if (flag4)
			{
				txtRet04.Text.Replace("العرض غير ساري", "");
			}
			if (flag5)
			{
				txtRet05.Text.Replace("العرض غير ساري", "");
			}
			if (flag6)
			{
				txtRet06.Text.Replace("العرض غير ساري", "");
			}
			while (true)
			{
				num = checked(num + 1);
				if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
				{
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						ApplyUssdVCGIFTS365_get_93(lblPort1, "*365*91#");
					}
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						ApplyUssdVCGIFTS365_get_93(lblPort2, "*365*91#");
					}
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						ApplyUssdVCGIFTS365_get_93(lblPort3, "*365*91#");
					}
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						ApplyUssdVCGIFTS365_get_93(lblPort4, "*365*91#");
					}
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						ApplyUssdVCGIFTS365_get_93(lblPort5, "*365*91#");
					}
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						ApplyUssdVCGIFTS365_get_93(lblPort6, "*365*91#");
					}
					if (chkStop.Checked)
					{
						break;
					}
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						ApplyUssdVCGIFTS365_getRet(lblPort1);
					}
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						ApplyUssdVCGIFTS365_getRet(lblPort2);
					}
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						ApplyUssdVCGIFTS365_getRet(lblPort3);
					}
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						ApplyUssdVCGIFTS365_getRet(lblPort4);
					}
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						ApplyUssdVCGIFTS365_getRet(lblPort5);
					}
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						ApplyUssdVCGIFTS365_getRet(lblPort6);
					}
					if (chkStop.Checked)
					{
						break;
					}
					if (num == 2 || num == 5 || num == 8)
					{
						ReSetUssdOrder();
						Application.DoEvents();
					}
					if (flag & !txtRet01.Text.Contains("جاري تنفيذ طلبك") & !txtRet01.Text.Contains("العرض غير ساري"))
					{
						chkCh1.Checked = true;
					}
					if (flag2 & !txtRet02.Text.Contains("جاري تنفيذ طلبك") & !txtRet02.Text.Contains("العرض غير ساري"))
					{
						chkCh2.Checked = true;
					}
					if (flag3 & !txtRet03.Text.Contains("جاري تنفيذ طلبك") & !txtRet03.Text.Contains("العرض غير ساري"))
					{
						chkCh3.Checked = true;
					}
					if (flag4 & !txtRet04.Text.Contains("جاري تنفيذ طلبك") & !txtRet04.Text.Contains("العرض غير ساري"))
					{
						chkCh4.Checked = true;
					}
					if (flag5 & !txtRet05.Text.Contains("جاري تنفيذ طلبك") & !txtRet05.Text.Contains("العرض غير ساري"))
					{
						chkCh5.Checked = true;
					}
					if (flag6 & !txtRet06.Text.Contains("جاري تنفيذ طلبك") & !txtRet06.Text.Contains("العرض غير ساري"))
					{
						chkCh6.Checked = true;
					}
					if (num <= 10)
					{
						continue;
					}
					Application.DoEvents();
				}
				if (flag & !txtRet01.Text.Contains("جاري تنفيذ طلبك"))
				{
					chkCh1.Checked = true;
				}
				if (flag2 & !txtRet02.Text.Contains("جاري تنفيذ طلبك"))
				{
					chkCh2.Checked = true;
				}
				if (flag3 & !txtRet03.Text.Contains("جاري تنفيذ طلبك"))
				{
					chkCh3.Checked = true;
				}
				if (flag4 & !txtRet04.Text.Contains("جاري تنفيذ طلبك"))
				{
					chkCh4.Checked = true;
				}
				if (flag5 & !txtRet05.Text.Contains("جاري تنفيذ طلبك"))
				{
					chkCh5.Checked = true;
				}
				if (flag6 & !txtRet06.Text.Contains("جاري تنفيذ طلبك"))
				{
					chkCh6.Checked = true;
				}
				if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
				{
					break;
				}
				if (flag)
				{
					txtRet01.Text.Replace("العرض غير ساري", "");
				}
				if (flag2)
				{
					txtRet02.Text.Replace("العرض غير ساري", "");
				}
				if (flag3)
				{
					txtRet03.Text.Replace("العرض غير ساري", "");
				}
				if (flag4)
				{
					txtRet04.Text.Replace("العرض غير ساري", "");
				}
				if (flag5)
				{
					txtRet05.Text.Replace("العرض غير ساري", "");
				}
				if (flag6)
				{
					txtRet06.Text.Replace("العرض غير ساري", "");
				}
				while (true)
				{
					num = checked(num + 1);
					if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
						{
							ApplyUssdVCGIFTS365_get_93(lblPort1, "*365*92#");
						}
						if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
						{
							ApplyUssdVCGIFTS365_get_93(lblPort2, "*365*92#");
						}
						if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
						{
							ApplyUssdVCGIFTS365_get_93(lblPort3, "*365*92#");
						}
						if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
						{
							ApplyUssdVCGIFTS365_get_93(lblPort4, "*365*92#");
						}
						if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
						{
							ApplyUssdVCGIFTS365_get_93(lblPort5, "*365*92#");
						}
						if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
						{
							ApplyUssdVCGIFTS365_get_93(lblPort6, "*365*92#");
						}
						if (chkStop.Checked)
						{
							break;
						}
						if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
						{
							ApplyUssdVCGIFTS365_getRet(lblPort1);
						}
						if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
						{
							ApplyUssdVCGIFTS365_getRet(lblPort2);
						}
						if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
						{
							ApplyUssdVCGIFTS365_getRet(lblPort3);
						}
						if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
						{
							ApplyUssdVCGIFTS365_getRet(lblPort4);
						}
						if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
						{
							ApplyUssdVCGIFTS365_getRet(lblPort5);
						}
						if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
						{
							ApplyUssdVCGIFTS365_getRet(lblPort6);
						}
						if (chkStop.Checked)
						{
							break;
						}
						if (num == 2 || num == 5 || num == 8)
						{
							ReSetUssdOrder();
							Application.DoEvents();
						}
						if (flag & !txtRet01.Text.Contains("جاري تنفيذ طلبك") & !txtRet01.Text.Contains("العرض غير ساري"))
						{
							chkCh1.Checked = true;
						}
						if (flag2 & !txtRet02.Text.Contains("جاري تنفيذ طلبك") & !txtRet02.Text.Contains("العرض غير ساري"))
						{
							chkCh2.Checked = true;
						}
						if (flag3 & !txtRet03.Text.Contains("جاري تنفيذ طلبك") & !txtRet03.Text.Contains("العرض غير ساري"))
						{
							chkCh3.Checked = true;
						}
						if (flag4 & !txtRet04.Text.Contains("جاري تنفيذ طلبك") & !txtRet04.Text.Contains("العرض غير ساري"))
						{
							chkCh4.Checked = true;
						}
						if (flag5 & !txtRet05.Text.Contains("جاري تنفيذ طلبك") & !txtRet05.Text.Contains("العرض غير ساري"))
						{
							chkCh5.Checked = true;
						}
						if (flag6 & !txtRet06.Text.Contains("جاري تنفيذ طلبك") & !txtRet06.Text.Contains("العرض غير ساري"))
						{
							chkCh6.Checked = true;
						}
						if (num <= 10)
						{
							continue;
						}
						Application.DoEvents();
					}
					if (flag & !txtRet01.Text.Contains("جاري تنفيذ طلبك"))
					{
						chkCh1.Checked = true;
					}
					if (flag2 & !txtRet02.Text.Contains("جاري تنفيذ طلبك"))
					{
						chkCh2.Checked = true;
					}
					if (flag3 & !txtRet03.Text.Contains("جاري تنفيذ طلبك"))
					{
						chkCh3.Checked = true;
					}
					if (flag4 & !txtRet04.Text.Contains("جاري تنفيذ طلبك"))
					{
						chkCh4.Checked = true;
					}
					if (flag5 & !txtRet05.Text.Contains("جاري تنفيذ طلبك"))
					{
						chkCh5.Checked = true;
					}
					if (flag6 & !txtRet06.Text.Contains("جاري تنفيذ طلبك"))
					{
						chkCh6.Checked = true;
					}
					if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
					{
						break;
					}
					if (flag)
					{
						txtRet01.Text.Replace("العرض غير ساري", "");
					}
					if (flag2)
					{
						txtRet02.Text.Replace("العرض غير ساري", "");
					}
					if (flag3)
					{
						txtRet03.Text.Replace("العرض غير ساري", "");
					}
					if (flag4)
					{
						txtRet04.Text.Replace("العرض غير ساري", "");
					}
					if (flag5)
					{
						txtRet05.Text.Replace("العرض غير ساري", "");
					}
					if (flag6)
					{
						txtRet06.Text.Replace("العرض غير ساري", "");
					}
					while (true)
					{
						num = checked(num + 1);
						if (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
						{
							break;
						}
						if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
						{
							ApplyUssdVCGIFTS365_get_93(lblPort1, "*365*93#");
						}
						if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
						{
							ApplyUssdVCGIFTS365_get_93(lblPort2, "*365*93#");
						}
						if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
						{
							ApplyUssdVCGIFTS365_get_93(lblPort3, "*365*93#");
						}
						if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
						{
							ApplyUssdVCGIFTS365_get_93(lblPort4, "*365*93#");
						}
						if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
						{
							ApplyUssdVCGIFTS365_get_93(lblPort5, "*365*93#");
						}
						if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
						{
							ApplyUssdVCGIFTS365_get_93(lblPort6, "*365*93#");
						}
						if (chkStop.Checked)
						{
							break;
						}
						if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
						{
							ApplyUssdVCGIFTS365_getRet(lblPort1);
						}
						if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
						{
							ApplyUssdVCGIFTS365_getRet(lblPort2);
						}
						if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
						{
							ApplyUssdVCGIFTS365_getRet(lblPort3);
						}
						if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
						{
							ApplyUssdVCGIFTS365_getRet(lblPort4);
						}
						if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
						{
							ApplyUssdVCGIFTS365_getRet(lblPort5);
						}
						if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
						{
							ApplyUssdVCGIFTS365_getRet(lblPort6);
						}
						if (chkStop.Checked)
						{
							break;
						}
						if (num == 2 || num == 5 || num == 8)
						{
							ReSetUssdOrder();
							Application.DoEvents();
						}
						if (flag & !txtRet01.Text.Contains("جاري تنفيذ طلبك") & !txtRet01.Text.Contains("العرض غير ساري"))
						{
							chkCh1.Checked = true;
						}
						if (flag2 & !txtRet02.Text.Contains("جاري تنفيذ طلبك") & !txtRet02.Text.Contains("العرض غير ساري"))
						{
							chkCh2.Checked = true;
						}
						if (flag3 & !txtRet03.Text.Contains("جاري تنفيذ طلبك") & !txtRet03.Text.Contains("العرض غير ساري"))
						{
							chkCh3.Checked = true;
						}
						if (flag4 & !txtRet04.Text.Contains("جاري تنفيذ طلبك") & !txtRet04.Text.Contains("العرض غير ساري"))
						{
							chkCh4.Checked = true;
						}
						if (flag5 & !txtRet05.Text.Contains("جاري تنفيذ طلبك") & !txtRet05.Text.Contains("العرض غير ساري"))
						{
							chkCh5.Checked = true;
						}
						if (flag6 & !txtRet06.Text.Contains("جاري تنفيذ طلبك") & !txtRet06.Text.Contains("العرض غير ساري"))
						{
							chkCh6.Checked = true;
						}
						if (num <= 10)
						{
							continue;
						}
						Application.DoEvents();
						break;
					}
					break;
				}
				break;
			}
			break;
		}
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btnFromMainToAll_Click(object sender, EventArgs e)
	{
		int num = 0;
		if (MysqlConn.MainProgLic < 11)
		{
			lblProgress.Text = "Inactive function";
			return;
		}
		if (lblPort1.Text.Trim().Length == 0)
		{
			Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
			return;
		}
		if (Conversion.Val(txtMonyMnEC.Text) < 1.0)
		{
			Interaction.MsgBox("حدد مبلغ للتحويل من فضلك");
			return;
		}
		if (txtPassEC.Text.Trim().Length != 6)
		{
			Interaction.MsgBox("ادخل باسورد الكاش");
			return;
		}
		if (lblMainEC.Text.Trim().Length != 11)
		{
			Interaction.MsgBox("حدد الرقم الاساسى");
			return;
		}
		lblProgress.BackColor = Color.Red;
		DisableCntl();
		ArrangVClinesEC();
		while (true)
		{
			lblProgress.BackColor = Color.Red;
			num = checked(num + 1);
			if (chkStop.Checked || (!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
			{
				break;
			}
			lblProgress.Text = " ES Cash All ";
			if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked & chkCh1.Checked)
			{
				ApplyUssdCodeEC_Mex(lblPort1, lblNum2.Text.Trim(), Conversion.Val(txtMonyMnEC.Text), TempCheck, chkCh2);
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked & chkCh1.Checked)
			{
				ApplyUssdCodeEC_Mex(lblPort1, lblNum3.Text.Trim(), Conversion.Val(txtMonyMnEC.Text), TempCheck, chkCh3);
			}
			Application.DoEvents();
			if (chkStop.Checked)
			{
				break;
			}
			if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked & chkCh1.Checked)
			{
				ApplyUssdCodeEC_Mex(lblPort1, lblNum4.Text.Trim(), Conversion.Val(txtMonyMnEC.Text), TempCheck, chkCh4);
				Application.DoEvents();
			}
			if (chkStop.Checked)
			{
				break;
			}
			Application.DoEvents();
			if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked & chkCh1.Checked)
			{
				ApplyUssdCodeEC_Mex(lblPort1, lblNum5.Text.Trim(), Conversion.Val(txtMonyMnEC.Text), TempCheck, chkCh5);
				Application.DoEvents();
			}
			if (chkStop.Checked)
			{
				break;
			}
			Application.DoEvents();
			if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked & chkCh1.Checked)
			{
				ApplyUssdCodeEC_Mex(lblPort1, lblNum6.Text.Trim(), Conversion.Val(txtMonyMnEC.Text), TempCheck, chkCh6);
				Application.DoEvents();
			}
			if (!chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked)
			{
				break;
			}
			if (num <= 5)
			{
				continue;
			}
			Application.DoEvents();
			break;
		}
		Application.DoEvents();
		EnableCntl();
		lblProgress.BackColor = Color.LimeGreen;
		lblProgress.Text = "OK";
	}

	private void btngboxSmsAdd_Click(object sender, EventArgs e)
	{
		checked
		{
			int num = (int)Math.Round(Conversion.Val(txtGboxSub.Text.Substring(0, 1)));
			int num2 = Strings.Asc(txtGboxSub.Text.Substring(1, 1));
			int num3 = num;
			for (int i = num3; i <= 9; i++)
			{
				int num4 = num2;
				for (int j = num4; j <= 122; j++)
				{
					AddBoxToLstPreSMS(txtGboxMain.Text + i + Conversions.ToString(Strings.Chr(j)));
					txtGboxSub.Text = i + Conversions.ToString(Strings.Chr(j));
					Application.DoEvents();
					if (Conversion.Val(lblCountPresms.Text) >= Conversion.Val(txtGboxQty.Text))
					{
						break;
					}
				}
				num2 = 97;
				if (Conversion.Val(lblCountPresms.Text) >= Conversion.Val(txtGboxQty.Text))
				{
					break;
				}
			}
			Application.DoEvents();
		}
	}

	private void txtOCNumbersms_TextChanged(object sender, EventArgs e)
	{
	}

	private void btnCashKing_Click(object sender, EventArgs e)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				Stopwatch stopwatch;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 1958:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0013;
						case 4:
							goto IL_0018;
						case 5:
							goto IL_0029;
						case 7:
						case 8:
							goto IL_0043;
						case 9:
							goto IL_0063;
						case 11:
						case 12:
							goto IL_007a;
						case 13:
							goto IL_008e;
						case 14:
							goto IL_00a2;
						case 15:
							goto IL_00ac;
						case 16:
						case 64:
							goto IL_00b7;
						case 17:
							goto IL_00c0;
						case 19:
							goto IL_0127;
						case 20:
							goto IL_015a;
						case 21:
						case 22:
							goto IL_016c;
						case 23:
							goto IL_019f;
						case 24:
						case 25:
							goto IL_01b1;
						case 26:
							goto IL_01e4;
						case 27:
						case 28:
							goto IL_01f6;
						case 29:
							goto IL_0229;
						case 30:
						case 31:
							goto IL_023b;
						case 32:
							goto IL_026e;
						case 33:
						case 34:
							goto IL_0280;
						case 35:
							goto IL_02b3;
						case 36:
						case 37:
							goto IL_02c5;
						case 39:
							goto IL_02de;
						case 40:
							goto IL_0311;
						case 41:
						case 42:
							goto IL_0323;
						case 43:
							goto IL_0356;
						case 44:
						case 45:
							goto IL_0368;
						case 46:
							goto IL_039b;
						case 47:
						case 48:
							goto IL_03ad;
						case 49:
							goto IL_03e0;
						case 50:
						case 51:
							goto IL_03f2;
						case 52:
							goto IL_0425;
						case 53:
						case 54:
							goto IL_0437;
						case 55:
							goto IL_046a;
						case 56:
						case 57:
							goto IL_047c;
						case 59:
							goto IL_0492;
						case 60:
							goto IL_04ac;
						case 61:
							goto IL_04b6;
						case 62:
						case 63:
							goto IL_04c1;
						case 65:
							goto IL_04d8;
						case 18:
						case 38:
						case 58:
						case 66:
							goto IL_04e2;
						case 67:
							goto IL_04eb;
						case 68:
							goto IL_0509;
						case 69:
							goto IL_051d;
						case 70:
							goto IL_053b;
						case 71:
							goto IL_054f;
						case 72:
							goto IL_056d;
						case 73:
							goto IL_0581;
						case 74:
							goto IL_059f;
						case 75:
							goto IL_05b3;
						case 76:
							goto IL_05d1;
						case 77:
							goto IL_05e5;
						case 78:
							goto IL_0603;
						case 79:
							goto IL_0617;
						case 80:
							goto IL_0621;
						case 81:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 6:
						case 10:
						case 82:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0603:
					num2 = 78;
					txtRet06.ForeColor = Color.PaleVioletRed;
					goto IL_0617;
					IL_0617:
					num2 = 79;
					EnableCntl();
					goto IL_0621;
					IL_05e5:
					num2 = 77;
					if (txtRet06.Text.Contains("فاضلك"))
					{
						goto IL_0603;
					}
					goto IL_0617;
					IL_0621:
					num2 = 80;
					lblProgress.BackColor = Color.LimeGreen;
					break;
					IL_000b:
					num2 = 2;
					stopwatch = new Stopwatch();
					goto IL_0013;
					IL_0013:
					num2 = 3;
					num5 = 0;
					goto IL_0018;
					IL_0018:
					num2 = 4;
					if (MysqlConn.MainProgLic < 11)
					{
						goto IL_0029;
					}
					goto IL_0043;
					IL_0029:
					num2 = 5;
					lblProgress.Text = "Inactive function";
					goto end_IL_0001_3;
					IL_0043:
					num2 = 8;
					if (lblPort1.Text.Trim().Length == 0)
					{
						goto IL_0063;
					}
					goto IL_007a;
					IL_0063:
					num2 = 9;
					Interaction.MsgBox("قم بقراءة المنافذ والخطوط اولا");
					goto end_IL_0001_3;
					IL_007a:
					num2 = 12;
					lblProgress.BackColor = Color.Red;
					goto IL_008e;
					IL_008e:
					num2 = 13;
					lblProgress.Text = "*9*35#";
					goto IL_00a2;
					IL_00a2:
					num2 = 14;
					DisableCntl();
					goto IL_00ac;
					IL_00ac:
					num2 = 15;
					ReSetUssdOrder();
					goto IL_00b7;
					IL_00b7:
					num2 = 16;
					num5 = checked(num5 + 1);
					goto IL_00c0;
					IL_00c0:
					num2 = 17;
					if (!(!chkCh1.Checked & !chkCh2.Checked & !chkCh3.Checked & !chkCh4.Checked & !chkCh5.Checked & !chkCh6.Checked))
					{
						goto IL_0127;
					}
					goto IL_04e2;
					IL_0127:
					num2 = 19;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_015a;
					}
					goto IL_016c;
					IL_015a:
					num2 = 20;
					ApplyUssdVCGIFTS365King(lblPort1);
					goto IL_016c;
					IL_016c:
					num2 = 22;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_019f;
					}
					goto IL_01b1;
					IL_019f:
					num2 = 23;
					ApplyUssdVCGIFTS365King(lblPort2);
					goto IL_01b1;
					IL_01b1:
					num2 = 25;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_01e4;
					}
					goto IL_01f6;
					IL_01e4:
					num2 = 26;
					ApplyUssdVCGIFTS365King(lblPort3);
					goto IL_01f6;
					IL_01f6:
					num2 = 28;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_0229;
					}
					goto IL_023b;
					IL_0229:
					num2 = 29;
					ApplyUssdVCGIFTS365King(lblPort4);
					goto IL_023b;
					IL_023b:
					num2 = 31;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_026e;
					}
					goto IL_0280;
					IL_026e:
					num2 = 32;
					ApplyUssdVCGIFTS365King(lblPort5);
					goto IL_0280;
					IL_0280:
					num2 = 34;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_02b3;
					}
					goto IL_02c5;
					IL_02b3:
					num2 = 35;
					ApplyUssdVCGIFTS365King(lblPort6);
					goto IL_02c5;
					IL_02c5:
					num2 = 37;
					if (!chkStop.Checked)
					{
						goto IL_02de;
					}
					goto IL_04e2;
					IL_02de:
					num2 = 39;
					if ((Operators.CompareString(lblNum1.Text.Trim(), "", TextCompare: false) != 0) & chkCh1.Checked)
					{
						goto IL_0311;
					}
					goto IL_0323;
					IL_0311:
					num2 = 40;
					ApplyUssdVCGIFTS365RetKing(lblPort1);
					goto IL_0323;
					IL_0323:
					num2 = 42;
					if ((Operators.CompareString(lblNum2.Text.Trim(), "", TextCompare: false) != 0) & chkCh2.Checked)
					{
						goto IL_0356;
					}
					goto IL_0368;
					IL_0356:
					num2 = 43;
					ApplyUssdVCGIFTS365RetKing(lblPort2);
					goto IL_0368;
					IL_0368:
					num2 = 45;
					if ((Operators.CompareString(lblNum3.Text.Trim(), "", TextCompare: false) != 0) & chkCh3.Checked)
					{
						goto IL_039b;
					}
					goto IL_03ad;
					IL_039b:
					num2 = 46;
					ApplyUssdVCGIFTS365RetKing(lblPort3);
					goto IL_03ad;
					IL_03ad:
					num2 = 48;
					if ((Operators.CompareString(lblNum4.Text.Trim(), "", TextCompare: false) != 0) & chkCh4.Checked)
					{
						goto IL_03e0;
					}
					goto IL_03f2;
					IL_03e0:
					num2 = 49;
					ApplyUssdVCGIFTS365RetKing(lblPort4);
					goto IL_03f2;
					IL_03f2:
					num2 = 51;
					if ((Operators.CompareString(lblNum5.Text.Trim(), "", TextCompare: false) != 0) & chkCh5.Checked)
					{
						goto IL_0425;
					}
					goto IL_0437;
					IL_0425:
					num2 = 52;
					ApplyUssdVCGIFTS365RetKing(lblPort5);
					goto IL_0437;
					IL_0437:
					num2 = 54;
					if ((Operators.CompareString(lblNum6.Text.Trim(), "", TextCompare: false) != 0) & chkCh6.Checked)
					{
						goto IL_046a;
					}
					goto IL_047c;
					IL_046a:
					num2 = 55;
					ApplyUssdVCGIFTS365RetKing(lblPort6);
					goto IL_047c;
					IL_047c:
					num2 = 57;
					if (!chkStop.Checked)
					{
						goto IL_0492;
					}
					goto IL_04e2;
					IL_0492:
					num2 = 59;
					if (num5 == 2 || num5 == 5 || num5 == 8)
					{
						goto IL_04ac;
					}
					goto IL_04c1;
					IL_04ac:
					num2 = 60;
					ReSetUssdOrder();
					goto IL_04b6;
					IL_04b6:
					num2 = 61;
					Application.DoEvents();
					goto IL_04c1;
					IL_04c1:
					num2 = 63;
					if (num5 <= 10)
					{
						goto IL_00b7;
					}
					goto IL_04d8;
					IL_04d8:
					num2 = 65;
					Application.DoEvents();
					goto IL_04e2;
					IL_04e2:
					num2 = 66;
					Application.DoEvents();
					goto IL_04eb;
					IL_04eb:
					num2 = 67;
					if (txtRet01.Text.Contains("فاضلك"))
					{
						goto IL_0509;
					}
					goto IL_051d;
					IL_0509:
					num2 = 68;
					txtRet01.ForeColor = Color.PaleVioletRed;
					goto IL_051d;
					IL_051d:
					num2 = 69;
					if (txtRet02.Text.Contains("فاضلك"))
					{
						goto IL_053b;
					}
					goto IL_054f;
					IL_053b:
					num2 = 70;
					txtRet02.ForeColor = Color.PaleVioletRed;
					goto IL_054f;
					IL_054f:
					num2 = 71;
					if (txtRet03.Text.Contains("فاضلك"))
					{
						goto IL_056d;
					}
					goto IL_0581;
					IL_056d:
					num2 = 72;
					txtRet03.ForeColor = Color.PaleVioletRed;
					goto IL_0581;
					IL_0581:
					num2 = 73;
					if (txtRet04.Text.Contains("فاضلك"))
					{
						goto IL_059f;
					}
					goto IL_05b3;
					IL_059f:
					num2 = 74;
					txtRet04.ForeColor = Color.PaleVioletRed;
					goto IL_05b3;
					IL_05b3:
					num2 = 75;
					if (txtRet05.Text.Contains("فاضلك"))
					{
						goto IL_05d1;
					}
					goto IL_05e5;
					IL_05d1:
					num2 = 76;
					txtRet05.ForeColor = Color.PaleVioletRed;
					goto IL_05e5;
					end_IL_0001_2:
					break;
				}
				num2 = 81;
				lblProgress.Text = "OK";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 1958;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private void ApplyUssdVCGIFTS365King(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		string commandCode = default(string);
		string ussdCommandFull = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 214:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0014;
						case 4:
							goto IL_0024;
						case 5:
							goto IL_0036;
						case 6:
							goto IL_0040;
						case 7:
							goto IL_0049;
						case 8:
							goto IL_0053;
						case 9:
							goto IL_0068;
						case 10:
							goto IL_0073;
						case 11:
							goto IL_007e;
						case 12:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 13:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_0068:
					num2 = 9;
					serialPort.Close();
					goto IL_0073;
					IL_0073:
					num2 = 10;
					serialPort.Dispose();
					goto IL_007e;
					IL_0053:
					num2 = 8;
					serialPort.WriteLine(commandCode + "\r");
					goto IL_0068;
					IL_007e:
					num2 = 11;
					serialPort = null;
					break;
					IL_000b:
					num2 = 2;
					serialPort = new SerialPort();
					goto IL_0014;
					IL_0014:
					num2 = 3;
					serialPort.PortName = Exxc.Text;
					goto IL_0024;
					IL_0024:
					num2 = 4;
					if (!serialPort.IsOpen)
					{
						goto IL_0036;
					}
					goto IL_0040;
					IL_0036:
					num2 = 5;
					serialPort.Open();
					goto IL_0040;
					IL_0040:
					num2 = 6;
					ussdCommandFull = "*9*35#";
					goto IL_0049;
					IL_0049:
					num2 = 7;
					commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
					goto IL_0053;
					end_IL_0001_2:
					break;
				}
				num2 = 12;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 214;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string ApplyUssdVCGIFTS365RetKing(Label Exxc)
	{
		int try0001_dispatch = -1;
		int num2 = default(int);
		SerialPort serialPort = default(SerialPort);
		int num3 = default(int);
		int num = default(int);
		string result;
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num2 = 2;
					serialPort = new SerialPort();
					serialPort.PortName = Exxc.Text;
					if (!serialPort.IsOpen)
					{
						serialPort.Open();
					}
					num3 = 0;
					Thread.Sleep(250);
					while (true)
					{
						double num4 = 0.0;
						while (true)
						{
							Application.DoEvents();
							Thread.Sleep(250);
							string text = serialPort.ReadExisting();
							if ((Conversion.Val(txt205.Text) == 205.0) & (Strings.Len(text) >= 2))
							{
								txtInfo.Text = text + "\r\n" + txtInfo.Text;
							}
							if (text.Contains("+CUSD:"))
							{
								int num5 = ((!text.Contains("+CUSD: 0")) ? text.IndexOf("+CUSD: 1") : text.IndexOf("+CUSD: 0"));
								string text2 = checked(text.Substring(num5 + 9, text.Length - num5 - 9)).Trim().Trim('o').Trim('\r')
									.Trim('\r')
									.Trim();
								num5 = text2.IndexOf(",");
								string text3 = text2.Substring(0, num5).Trim().Trim('"')
									.Trim(',')
									.Trim('"');
								text3 = text3.Trim('"').Trim(',').Trim('"');
								string text4;
								if (Operators.CompareString(text3.Substring(0, 1), "0", TextCompare: false) == 0)
								{
									byte[] bytes = encoding_mod.StrToByteArray(text3);
									text4 = Encoding.BigEndianUnicode.GetString(bytes);
								}
								else
								{
									text4 = encoding_mod.Decode7Bit(text3);
								}
								OutBoxDrop(Exxc, text4);
								if (text4.Contains("الأرقام اللي بعتلها الشهر"))
								{
									break;
								}
								if (text4.Contains("Please try again later"))
								{
									Application.DoEvents();
									goto end_IL_0001;
								}
								if (text4.Contains("العرض غير متاح") | text4.Contains("فاضلك"))
								{
									DisablePort(Exxc);
									Application.DoEvents();
									goto end_IL_0001;
								}
								if (text4.Contains("عفوا\u0651 لا يمكننا استكمال طلبك الأن, برجاء المحاولة مرة") | text4.Contains("م نتلقى اختيارك في المدة المحددة"))
								{
									Application.DoEvents();
									goto end_IL_0001;
								}
								Application.DoEvents();
							}
							if (text.Contains("unknown") | text.Contains("+CUSD: 2") | text.Contains("retry operation"))
							{
								goto end_IL_0001;
							}
							Application.DoEvents();
							num4 += 1.0;
							if (!(num4 <= 20.0))
							{
								goto end_IL_0001;
							}
						}
						string ussdCommandFull = "1";
						string commandCode = encoding_mod.GetCommandCode(ussdCommandFull);
						serialPort.WriteLine(commandCode + "\r");
						Thread.Sleep(1000);
						Application.DoEvents();
					}
				case 878:
					{
						num = -1;
						switch (num2)
						{
						case 2:
							break;
						default:
							goto end_IL_0001_2;
						}
						break;
					}
					end_IL_0001:
					break;
				}
				serialPort.Close();
				serialPort.Dispose();
				serialPort = null;
				Application.DoEvents();
				result = Conversions.ToString(num3);
				break;
				end_IL_0001_2:;
			}
			catch (object obj) when (obj is Exception && num2 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 878;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private void btnPrintOUT_Click(object sender, EventArgs e)
	{
		string text = " ";
		string text2 = " ";
		if (txtPrintOut1.Text.Length > 1)
		{
			text = txtPrintOut1.Text;
		}
		if (txtPrintOut2.Text.Length > 1)
		{
			text2 = txtPrintOut2.Text;
		}
		if (ck2x1.Checked)
		{
			if ((text.Length > 1) | (text2.Length > 1))
			{
				lblProgress.Text = "printing";
				Application.DoEvents();
				CreatPrintCodeDIVTSPLDLL(text2, text);
				lblProgress.Text = "OK";
			}
			else
			{
				lblProgress.Text = "NO Data to print";
			}
			return;
		}
		if (text.Length > 1)
		{
			lblProgress.Text = "printing";
			Application.DoEvents();
			CreatPrintCodeDIVTSPLDLL_2in1(text);
			lblProgress.Text = "OK";
		}
		if (text2.Length > 1)
		{
			lblProgress.Text = "printing";
			Application.DoEvents();
			CreatPrintCodeDIVTSPLDLL_2in1(text2);
			lblProgress.Text = "OK";
		}
	}

	private void Label74_DoubleClick(object sender, EventArgs e)
	{
		txtOCchargeNum1.Text = lblNum1.Text;
		txtOCchargeNum2.Text = lblNum2.Text;
		txtOCchargeNum3.Text = lblNum3.Text;
		txtOCchargeNum4.Text = lblNum4.Text;
		txtOCchargeNum5.Text = lblNum5.Text;
		txtOCchargeNum6.Text = lblNum6.Text;
	}

	private void txtOCNumbersms_KeyPress(object sender, KeyPressEventArgs e)
	{
		int num = 0;
		if (Strings.Asc(e.KeyChar) != 13)
		{
			return;
		}
		if (txtOCNumbersms.Text.Trim().Length > 3)
		{
			AddBoxToLstPreSMS(txtOCNumbersms.Text.Trim());
			txtOCNumbersms.Text = "";
		}
		if (txtOCNumbersms.Text.Trim().Length > 3)
		{
			return;
		}
		objDataTabletemp = objData.QueryDatabase("SELECT mobnum FROM vcnums where enums = " + Conversions.ToString(Conversion.Val(txtOCNumbersms.Text)));
		checked
		{
			if (objDataTabletemp.Rows.Count >= 1)
			{
				int num2 = objDataTabletemp.Rows.Count - 1;
				for (num = 0; num <= num2; num++)
				{
					AddBoxToLstPreSMS(Conversions.ToString(objDataTabletemp.Rows[num]["mobnum"]));
				}
			}
		}
	}

	private void AddBoxToLstPreSMS(string EER)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		int num5 = default(int);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 189:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_000f;
						case 4:
							goto IL_001e;
						case 6:
							goto IL_002f;
						case 5:
						case 7:
							goto IL_0044;
						case 8:
							goto IL_0067;
						case 9:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 10:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_002f:
					num2 = 6;
					lstOCNumberssms.Items.Add(EER);
					goto IL_0044;
					IL_0044:
					num2 = 7;
					lblCountPresms.Text = Conversions.ToString(lstOCNumberssms.Items.Count);
					goto IL_0067;
					IL_001e:
					num2 = 4;
					if (num5 < 0)
					{
						goto IL_002f;
					}
					goto IL_0044;
					IL_0067:
					num2 = 8;
					lblOCDonesms.Text = "0";
					break;
					IL_000b:
					num2 = 2;
					num5 = 0;
					goto IL_000f;
					IL_000f:
					num2 = 3;
					num5 = lstOCNumberssms.FindString(EER);
					goto IL_001e;
					end_IL_0001_2:
					break;
				}
				num2 = 9;
				Application.DoEvents();
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 189;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	private string GetSmsCenter(string EEnum)
	{
		int try0001_dispatch = -1;
		int num3 = default(int);
		int num = default(int);
		int num2 = default(int);
		string result = default(string);
		string left = default(string);
		while (true)
		{
			try
			{
				/*Note: ILSpy has introduced the following switch to emulate a goto from catch-block to try-block*/;
				switch (try0001_dispatch)
				{
				default:
					ProjectData.ClearProjectError();
					num3 = -2;
					goto IL_000b;
				case 175:
					{
						num = num2;
						switch ((num3 <= -2) ? 1 : num3)
						{
						case 1:
							break;
						default:
							goto end_IL_0001;
						}
						int num4 = num + 1;
						num = 0;
						switch (num4)
						{
						case 1:
							break;
						case 2:
							goto IL_000b;
						case 3:
							goto IL_0017;
						case 4:
							goto IL_002f;
						case 6:
							goto IL_003c;
						case 7:
							goto IL_0054;
						case 9:
							goto end_IL_0001_2;
						default:
							goto end_IL_0001;
						case 5:
						case 8:
						case 10:
						case 11:
							goto end_IL_0001_3;
						}
						goto default;
					}
					IL_002f:
					num2 = 4;
					result = "+20105996500";
					goto end_IL_0001_3;
					IL_003c:
					num2 = 6;
					if (Operators.CompareString(left, "012", TextCompare: false) != 0)
					{
						break;
					}
					goto IL_0054;
					IL_0017:
					num2 = 3;
					if (Operators.CompareString(left, "010", TextCompare: false) == 0)
					{
						goto IL_002f;
					}
					goto IL_003c;
					IL_0054:
					num2 = 7;
					result = "+20122000020";
					goto end_IL_0001_3;
					IL_000b:
					num2 = 2;
					left = EEnum.Substring(0, 3);
					goto IL_0017;
					end_IL_0001_2:
					break;
				}
				num2 = 9;
				result = "+20112008000";
				break;
				end_IL_0001:;
			}
			catch (object obj) when (obj is Exception && num3 != 0 && num == 0)
			{
				ProjectData.SetProjectError((Exception)obj);
				try0001_dispatch = 175;
				continue;
			}
			throw ProjectData.CreateProjectError(-2146828237);
			continue;
			end_IL_0001_3:
			break;
		}
		if (num != 0)
		{
			ProjectData.ClearProjectError();
		}
		return result;
	}

	private string[] GetPDU(string ServiceCenterNumber, string DestNumber, MTUssd.SMS.Encoder.SMS.ENUM_TP_DCS DataCodingScheme, MTUssd.SMS.Encoder.SMS.ENUM_TP_VALID_PERIOD ValidPeriod, int MsgReference, bool StatusReport, string UserData)
	{
		SMSObject = new MTUssd.SMS.Encoder.SMS();
		object sMSObject = SMSObject;
		NewLateBinding.LateSet(sMSObject, null, "ServiceCenterNumber", new object[1] { ServiceCenterNumber }, null, null);
		if (StatusReport)
		{
			NewLateBinding.LateSet(sMSObject, null, "TP_Status_Report_Request", new object[1] { MTUssd.SMS.Encoder.SMS.ENUM_TP_SRI.Request_SMS_Report }, null, null);
		}
		else
		{
			NewLateBinding.LateSet(sMSObject, null, "TP_Status_Report_Request", new object[1] { MTUssd.SMS.Encoder.SMS.ENUM_TP_SRI.No_SMS_Report }, null, null);
		}
		NewLateBinding.LateSet(sMSObject, null, "TP_Destination_Address", new object[1] { DestNumber }, null, null);
		NewLateBinding.LateSet(sMSObject, null, "TP_Data_Coding_Scheme", new object[1] { DataCodingScheme }, null, null);
		NewLateBinding.LateSet(sMSObject, null, "TP_Message_Reference", new object[1] { 0 }, null, null);
		NewLateBinding.LateSet(sMSObject, null, "TP_Validity_Period", new object[1] { ValidPeriod }, null, null);
		NewLateBinding.LateSet(sMSObject, null, "TP_User_Data", new object[1] { UserData }, null, null);
		sMSObject = null;
		int num = default(int);
		return (num != 0) ? ((string[])NewLateBinding.LateGet(SMSObject, null, "GetEMSPDUCode", new object[0], null, null, null)) : new string[1] { Conversions.ToString(NewLateBinding.LateGet(SMSObject, null, "GetSMSPDUCode", new object[0], null, null, null)) };
	}

	private void txtNumberToAddinRobot_KeyPress(object sender, KeyPressEventArgs e)
	{
		if (Strings.Asc(e.KeyChar) == 13)
		{
			if (txtNumberToAddinRobot.Text.Length != 11)
			{
				txtInfo.Text = "Enter ADD in sign and number here then Enter\r\n" + txtInfo.Text;
				txtInfo.Text = "To Add number\r\n" + txtInfo.Text;
				txtInfo.Text = "--------------------\r\n" + txtInfo.Text;
				txtInfo.Text = "Enter DEL in sign and number here then Enter\r\n" + txtInfo.Text;
				txtInfo.Text = "To Delete number\r\n" + txtInfo.Text;
				txtInfo.Text = "--------------------\r\n" + txtInfo.Text;
			}
			else if ((Operators.CompareString(txtWebQrySign.Text, "ADD", TextCompare: false) != 0) & (Operators.CompareString(txtWebQrySign.Text, "DEL", TextCompare: false) != 0))
			{
				txtInfo.Text = "Enter ADD in sign and number here then Enter\r\n" + txtInfo.Text;
				txtInfo.Text = "To Add number\r\n" + txtInfo.Text;
				txtInfo.Text = "--------------------\r\n" + txtInfo.Text;
				txtInfo.Text = "Enter DEL in sign and number here then Enter\r\n" + txtInfo.Text;
				txtInfo.Text = "To Delete number\r\n" + txtInfo.Text;
				txtInfo.Text = "--------------------\r\n" + txtInfo.Text;
			}
			else if (Operators.CompareString(txtWebQrySign.Text, "ADD", TextCompare: false) == 0)
			{
				AddNumberToRobot(txtNumberToAddinRobot.Text);
				txtRet01.Text = txtNumberToAddinRobot.Text + " Added\r\n" + txtRet01.Text;
				txtNumberToAddinRobot.Text = "";
			}
			else if (Operators.CompareString(txtWebQrySign.Text, "DEL", TextCompare: false) == 0)
			{
				objDataRemote.DatabaseCommand("DELETE FROM  " + MysqlConn.RD_name + "_nums where mob_number = '" + txtNumberToAddinRobot.Text + "'");
				txtNumberToAddinRobot.Text = "";
				txtRet01.Text = txtNumberToAddinRobot.Text + " Deleted\r\n" + txtRet01.Text;
			}
		}
	}
}
